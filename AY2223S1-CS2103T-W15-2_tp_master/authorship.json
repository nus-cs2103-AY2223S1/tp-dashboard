[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W15-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W15-2/tp/actions)","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W15-2/tp/branch/master/graph/badge.svg?token\u003dH2G32SVMDR)](https://codecov.io/gh/AY2223S1-CS2103T-W15-2/tp)","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"![Ui](docs/images/GUI.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"# REal-Time","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"REal-Time is a desktop application for managing your client viewings and scheduling your meetings.","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"Interface (GUI).","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"* For the detailed documentation of this project,","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"see the **[REal-Time Website](https://ay2223s1-cs2103t-w15-2.github.io/tp/)**.","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"**Acknowledgements**","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"jeromehjj":14,"-":1,"Gavzzz":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"mainClassName \u003d \u0027seedu.realtime.Main\u0027","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"ama-chi"},"content":"    String javaFxVersion \u003d \u002718.0.1\u0027","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"    archiveFileName \u003d \u0027REal-Time.jar\u0027","lastModifiedDate":"2022-11-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"run {","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jeromehjj":4,"ama-chi":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"### Jerome Hoo Jun Jie","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"\u003cimg src\u003d\"images/jeromehjj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"[[github](http://github.com/jeromehjj)]","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"[[portfolio](team/jeromehjj.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"* Role: Developer","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"* Responsibilities: Deliverables and Deadlines, Scheduling and Tracking","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"### Isaac Li Haoyang","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"\u003cimg src\u003d\"images/isaaclhy00.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"[[github](http://github.com/isaaclhy00)]","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"[[portfolio](team/isaaclhy00.md)]","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"* Role: Developer","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"* Responsibilities: _To be determined_","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"### Nguyen Minh Hoang","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"\u003cimg src\u003d\"images/hoang227.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"[[github](http://github.com/hoang227)]","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"[[portfolio](team/hoang227.md)]","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"* Responsibilities: Deliverables, Testing and Documentation","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"ama-chi"},"content":"### Amadeus Chi Song yi","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"ama-chi"},"content":"\u003cimg src\u003d\"images/ama-chi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"ama-chi"},"content":"[[github](http://github.com/ama-chi)]","lastModifiedDate":"2022-10-01"},{"lineNumber":48,"author":{"gitId":"ama-chi"},"content":"[[portfolio](team/ama-chi.md)]","lastModifiedDate":"2022-10-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"ama-chi"},"content":"* Responsibilities: _To be determined_","lastModifiedDate":"2022-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"### Gavin Cho","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Gavzzz"},"content":"\u003cimg src\u003d\"images/gavzzz.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"Gavzzz"},"content":"[[github](http://github.com/gavzzz)]","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"Gavzzz"},"content":"[[portfolio](team/gavzzz.md)]","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Gavzzz"},"content":"* Responsibilities: UI, Deliverables, Testing and Documentation","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"jeromehjj":6,"hoang227":5,"ama-chi":5,"Isaaclhy00":6,"-":34,"Gavzzz":5}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.\u003c","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your testes. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your org (that contains the fork) to CodeCov.","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Wait for the next run of CI in your fork (or push a dummy commit to it to trigger CI) to confirm CI is able to upload generated coverage data to CodeCov. If CodeCov is not set up correctly, the CI run will fail with an error message that mentions CodeCov.","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3) in that page reflects the coverage of your project.","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/se-edu/realTime-level3/tree/master/src/main/java/seedu/address/MainApp.java).","lastModifiedDate":"2022-11-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"hoang227":1,"-":79}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"The *Sequence Diagram* below shows how the components interact with each other for","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"the scenario where the user issues the command `delC 1`.","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"`interface` mentioned in the previous point.","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2022-11-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"jeromehjj"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`,","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"jeromehjj"},"content":"`PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"jeromehjj"},"content":"`UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"jeromehjj"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"jeromehjj"},"content":"that are in the `src/main/resources/view` folder. For example, the layout","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"jeromehjj"},"content":"of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"jeromehjj"},"content":"is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"jeromehjj"},"content":"* depends on some classes in the `Model` component, as it displays `Client` object residing in the `Model`.","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2022-11-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"1. When `Logic` is called upon to execute a command, it uses the `RealTimeParser` class to parse the user command.","lastModifiedDate":"2022-11-05"},{"lineNumber":108,"author":{"gitId":"jeromehjj"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddClientCommand`)","lastModifiedDate":"2022-11-06"},{"lineNumber":109,"author":{"gitId":"jeromehjj"},"content":"which is executed by the `LogicManager`.","lastModifiedDate":"2022-11-06"},{"lineNumber":110,"author":{"gitId":"jeromehjj"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"jeromehjj"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2022-11-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"jeromehjj"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delC 1\")` API call.","lastModifiedDate":"2022-11-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"jeromehjj"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for","lastModifiedDate":"2022-11-06"},{"lineNumber":118,"author":{"gitId":"jeromehjj"},"content":"`DeleteClientCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline","lastModifiedDate":"2022-11-06"},{"lineNumber":119,"author":{"gitId":"jeromehjj"},"content":"reaches the end of diagram.","lastModifiedDate":"2022-11-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"jeromehjj"},"content":"* When called upon to parse a user command, the `RealTimeParser` class creates an","lastModifiedDate":"2022-11-06"},{"lineNumber":128,"author":{"gitId":"jeromehjj"},"content":"`XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddClientCommandParser`) which uses the","lastModifiedDate":"2022-11-06"},{"lineNumber":129,"author":{"gitId":"jeromehjj"},"content":"other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddClientCommand`) which the","lastModifiedDate":"2022-11-06"},{"lineNumber":130,"author":{"gitId":"jeromehjj"},"content":"`RealTimeParser` returns back as a `Command` object.","lastModifiedDate":"2022-11-06"},{"lineNumber":131,"author":{"gitId":"jeromehjj"},"content":"* All `XYZCommandParser` classes (e.g., `AddClientCommandParser`, `DeleteOfferCommandParser`, ...) inherit from","lastModifiedDate":"2022-11-06"},{"lineNumber":132,"author":{"gitId":"jeromehjj"},"content":"the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2022-11-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2022-11-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"jeromehjj"},"content":"* stores the data in RealTime i.e., all `Client`, `Offer`, `Listing` and `Meeting` objects (which are contained in a","lastModifiedDate":"2022-11-06"},{"lineNumber":143,"author":{"gitId":"jeromehjj"},"content":"`UniqueClientList`, `UniqueOfferList`, `UniqueListingList` and `UniqueMeetingList` object respectively).","lastModifiedDate":"2022-11-06"},{"lineNumber":144,"author":{"gitId":"jeromehjj"},"content":"* stores the currently \u0027selected\u0027 `Client`, `Offer`, `Listing` and `Meeting` objects (e.g., results of a search query)","lastModifiedDate":"2022-11-06"},{"lineNumber":145,"author":{"gitId":"jeromehjj"},"content":"as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cClient\u003e`,","lastModifiedDate":"2022-11-06"},{"lineNumber":146,"author":{"gitId":"jeromehjj"},"content":"`ObservableList\u003cOffer\u003e`, `ObservableList\u003cListing\u003e` and `ObservableList\u003cMeeting\u003e` that can be \u0027observed\u0027 e.g. the UI","lastModifiedDate":"2022-11-06"},{"lineNumber":147,"author":{"gitId":"jeromehjj"},"content":"can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-11-06"},{"lineNumber":148,"author":{"gitId":"jeromehjj"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a","lastModifiedDate":"2022-11-06"},{"lineNumber":149,"author":{"gitId":"jeromehjj"},"content":"`ReadOnlyUserPref` objects.","lastModifiedDate":"2022-11-06"},{"lineNumber":150,"author":{"gitId":"jeromehjj"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain,","lastModifiedDate":"2022-11-06"},{"lineNumber":151,"author":{"gitId":"jeromehjj"},"content":"they should make sense on their own without depending on other components)","lastModifiedDate":"2022-11-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"hoang227"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `RealTime`, which `Person` references. This allows `RealTime` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2022-11-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"jeromehjj"},"content":"* can save both RealTime data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-11-06"},{"lineNumber":168,"author":{"gitId":"hoang227"},"content":"* inherits from both `RealTimeStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-11-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"hoang227"},"content":"Classes used by multiple components are in the `seedu.realtime.commons` package.","lastModifiedDate":"2022-11-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"hoang227"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedRealTime`. It extends `RealTime` with an undo/redo history, stored internally as an `RealTimeStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2022-11-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"hoang227"},"content":"* `VersionedRealTime#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2022-11-05"},{"lineNumber":188,"author":{"gitId":"hoang227"},"content":"* `VersionedRealTime#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2022-11-05"},{"lineNumber":189,"author":{"gitId":"hoang227"},"content":"* `VersionedRealTime#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2022-11-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"hoang227"},"content":"These operations are exposed in the `Model` interface as `Model#commitRealTime()`, `Model#undoRealTime()` and `Model#redoRealTime()` respectively.","lastModifiedDate":"2022-11-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"hoang227"},"content":"Step 1. The user launches the application for the first time. The `VersionedRealTime` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2022-11-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"hoang227"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitRealTime()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `realTimeStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2022-11-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"hoang227"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitRealTime()`, causing another modified address book state to be saved into the `realTimeStateList`.","lastModifiedDate":"2022-11-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"hoang227"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitRealTime()`, so the address book state will not be saved into the `realTimeStateList`.","lastModifiedDate":"2022-11-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"hoang227"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoRealTime()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2022-11-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"hoang227"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial RealTime state, then there are no previous RealTime states to restore. The `undo` command uses `Model#canUndoRealTime()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2022-11-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"hoang227"},"content":"The `redo` command does the opposite — it calls `Model#redoRealTime()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2022-11-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"hoang227"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `realTimeStateList.size() - 1`, pointing to the latest address book state, then there are no undone realTime states to restore. The `redo` command uses `Model#canRedoRealTime()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2022-11-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"hoang227"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitRealTime()`, `Model#undoRealTime()` or `Model#redoRealTime()`. Thus, the `realTimeStateList` remains unchanged.","lastModifiedDate":"2022-11-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"hoang227"},"content":"Step 6. The user executes `clear`, which calls `Model#commitRealTime()`. Since the `currentStatePointer` is not pointing at the end of the `realTimeStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2022-11-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"hoang227"},"content":"### \\[Implemented\\] Add Client feature","lastModifiedDate":"2022-11-07"},{"lineNumber":262,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":263,"author":{"gitId":"hoang227"},"content":"#### Client","lastModifiedDate":"2022-11-07"},{"lineNumber":264,"author":{"gitId":"hoang227"},"content":"REal-Time manages **_Clients_** of the user.","lastModifiedDate":"2022-11-07"},{"lineNumber":265,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":266,"author":{"gitId":"hoang227"},"content":"#### Implementation","lastModifiedDate":"2022-11-07"},{"lineNumber":267,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":268,"author":{"gitId":"hoang227"},"content":"To add an `Client` object, the `AddClientCommand` must be executed. This stores the `Client` object into the","lastModifiedDate":"2022-11-07"},{"lineNumber":269,"author":{"gitId":"hoang227"},"content":"`UniqueClientList`. Following the command execution pathway, the implementation of adding clients uses the exposed","lastModifiedDate":"2022-11-07"},{"lineNumber":270,"author":{"gitId":"hoang227"},"content":"`Model#addClient(Client)` method in the `Model` API.","lastModifiedDate":"2022-11-07"},{"lineNumber":271,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":272,"author":{"gitId":"hoang227"},"content":"The `AddClientCommand` is parsed by the `AddClientCommandParser`.","lastModifiedDate":"2022-11-07"},{"lineNumber":273,"author":{"gitId":"hoang227"},"content":"`AddClientCommandParser#parse()` parses the user input to return a `AddClientCommand` object that will be executed.","lastModifiedDate":"2022-11-07"},{"lineNumber":274,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":275,"author":{"gitId":"hoang227"},"content":"Given below is an example usage scenario and how the add clients mechanism behaves at each step.","lastModifiedDate":"2022-11-07"},{"lineNumber":276,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":277,"author":{"gitId":"hoang227"},"content":"Step 1. The user opens up the `REal-Time` application for the first time and observes that there are some sample data","lastModifiedDate":"2022-11-07"},{"lineNumber":278,"author":{"gitId":"hoang227"},"content":"in the `UniqueClientList`.","lastModifiedDate":"2022-11-07"},{"lineNumber":279,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":280,"author":{"gitId":"hoang227"},"content":"Step 2. The user keys in the command word for adding a client, `addC`, followed by the compulsory parameters needed to","lastModifiedDate":"2022-11-07"},{"lineNumber":281,"author":{"gitId":"hoang227"},"content":"add a client, namely the `Name` component prefixed by `n/`, `Phone number` component prefixed by `p/`, the `Email address`","lastModifiedDate":"2022-11-07"},{"lineNumber":282,"author":{"gitId":"hoang227"},"content":"component prefixed by `e/`, the `Address` component prefixed by `a/` and the optional `Tag` component prefixed by","lastModifiedDate":"2022-11-07"},{"lineNumber":283,"author":{"gitId":"hoang227"},"content":"`t/`. In this scenario, the user keys in `addC n/John Doe p/12345678 e/john@gmail.com a/123 John Avenue t/friend t/ neighbor`","lastModifiedDate":"2022-11-07"},{"lineNumber":284,"author":{"gitId":"hoang227"},"content":"into the command box which will execute the `AddClientCommandParser` to check through the arguments and ensure that the compulsory fields are","lastModifiedDate":"2022-11-07"},{"lineNumber":285,"author":{"gitId":"hoang227"},"content":"present. It will then create the `Name`, `Phone`, `Email`, `Address` and `Tag` objects needed to instantiate an `Client` object. The","lastModifiedDate":"2022-11-07"},{"lineNumber":286,"author":{"gitId":"hoang227"},"content":"parser returns a `AddClientCommand` object with the `Client` object ready to be added into `Model`","lastModifiedDate":"2022-11-07"},{"lineNumber":287,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":288,"author":{"gitId":"hoang227"},"content":"Step 3. The `AddClientCommand` calls the `Model#addClient(Client)` to add the client and its relevant attributes.","lastModifiedDate":"2022-11-07"},{"lineNumber":289,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":290,"author":{"gitId":"hoang227"},"content":"Step 4. Depending on whether the `UniqueClientList` already contains data or is an empty list, the added Client will","lastModifiedDate":"2022-11-07"},{"lineNumber":291,"author":{"gitId":"hoang227"},"content":"be sorted automatically by the `ListingId` in lexicographical order. This is done using the `Collections#sort()` method","lastModifiedDate":"2022-11-07"},{"lineNumber":292,"author":{"gitId":"hoang227"},"content":"and implementing a natural order by implementing the `Comparable` interface and overriding the `Comparable#compareTo()`","lastModifiedDate":"2022-11-07"},{"lineNumber":293,"author":{"gitId":"hoang227"},"content":"method.","lastModifiedDate":"2022-11-07"},{"lineNumber":294,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":295,"author":{"gitId":"hoang227"},"content":"The sequence diagram below shows the add client process.","lastModifiedDate":"2022-11-07"},{"lineNumber":296,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":297,"author":{"gitId":"hoang227"},"content":"![addClientSequenceDiagram](images/AddClientSequenceDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":298,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":299,"author":{"gitId":"hoang227"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for","lastModifiedDate":"2022-11-07"},{"lineNumber":300,"author":{"gitId":"hoang227"},"content":"`AddClientCommandParser` and `RealTimeParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline","lastModifiedDate":"2022-11-07"},{"lineNumber":301,"author":{"gitId":"hoang227"},"content":"reaches the end of diagram.","lastModifiedDate":"2022-11-07"},{"lineNumber":302,"author":{"gitId":"hoang227"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":303,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":304,"author":{"gitId":"hoang227"},"content":"#### Design considerations","lastModifiedDate":"2022-11-07"},{"lineNumber":305,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":306,"author":{"gitId":"hoang227"},"content":"**Aspect: Client-Listing interaction**","lastModifiedDate":"2022-11-07"},{"lineNumber":307,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":308,"author":{"gitId":"hoang227"},"content":"* **Alternative 1 (current choice):** Separate Listings and Client objects","lastModifiedDate":"2022-11-07"},{"lineNumber":309,"author":{"gitId":"hoang227"},"content":"    * Pros: Easier to maintain as they are separate objects, less dependency between each other","lastModifiedDate":"2022-11-07"},{"lineNumber":310,"author":{"gitId":"hoang227"},"content":"    * Cons: No reference between the `Client` and `Listing` objects","lastModifiedDate":"2022-11-07"},{"lineNumber":311,"author":{"gitId":"hoang227"},"content":"* **Alternative 2:** Allow Clients to have a Listing attribute instead","lastModifiedDate":"2022-11-07"},{"lineNumber":312,"author":{"gitId":"hoang227"},"content":"    * Pros: Easier to reference between `Client` and `Listing`","lastModifiedDate":"2022-11-07"},{"lineNumber":313,"author":{"gitId":"hoang227"},"content":"    * Cons: Large dependency between the two.","lastModifiedDate":"2022-11-07"},{"lineNumber":314,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":315,"author":{"gitId":"hoang227"},"content":"### \\[Implemented\\] Delete Client feature","lastModifiedDate":"2022-11-07"},{"lineNumber":316,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":317,"author":{"gitId":"hoang227"},"content":"The Delete Client feature allows users to delete the specified `Client` in the `UniqueClientList`.","lastModifiedDate":"2022-11-07"},{"lineNumber":318,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":319,"author":{"gitId":"hoang227"},"content":"#### Implementation","lastModifiedDate":"2022-11-07"},{"lineNumber":320,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":321,"author":{"gitId":"hoang227"},"content":"To delete an `Client` object, the `DeleteClientCommand` must be executed. The `DeleteClientCommand` extends the `Command`","lastModifiedDate":"2022-11-07"},{"lineNumber":322,"author":{"gitId":"hoang227"},"content":"class.","lastModifiedDate":"2022-11-07"},{"lineNumber":323,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":324,"author":{"gitId":"hoang227"},"content":"The `DeleteClientCommand` is parsed by the `DeleteClientCommandParser`. `DeleteClientCommandParser#parse()` parses the user","lastModifiedDate":"2022-11-07"},{"lineNumber":325,"author":{"gitId":"hoang227"},"content":"input to return a `DeleteClientCommand` that will be executed.","lastModifiedDate":"2022-11-07"},{"lineNumber":326,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":327,"author":{"gitId":"hoang227"},"content":"Given below is an example usage scenario and how the delete client mechanism behaves at each step.","lastModifiedDate":"2022-11-07"},{"lineNumber":328,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":329,"author":{"gitId":"hoang227"},"content":"Step 1. The user enters `delL 1` in the command box.  This calls the `LogicManager#execute()` method which calls the","lastModifiedDate":"2022-11-07"},{"lineNumber":330,"author":{"gitId":"hoang227"},"content":"`RealTimeParser#parse` method to be executed and will determine that the command is a `DeleteClientCommand` after parsing.","lastModifiedDate":"2022-11-07"},{"lineNumber":331,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":332,"author":{"gitId":"hoang227"},"content":"Step 2. A `DeleteClientCommandParser` object is instantiated with the necessary arguments. It will return a","lastModifiedDate":"2022-11-07"},{"lineNumber":333,"author":{"gitId":"hoang227"},"content":"`DeleteClientCommand` object with the specified `Index`.","lastModifiedDate":"2022-11-07"},{"lineNumber":334,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":335,"author":{"gitId":"hoang227"},"content":"Step 3. The `DeleteClientCommand#execute()` method is called which calls the `Model#deleteClient(Client)` method to delete","lastModifiedDate":"2022-11-07"},{"lineNumber":336,"author":{"gitId":"hoang227"},"content":"the Client at the specified `Index` in `Model`.","lastModifiedDate":"2022-11-07"},{"lineNumber":337,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":338,"author":{"gitId":"hoang227"},"content":"The sequence diagram below shows the delete client process.","lastModifiedDate":"2022-11-07"},{"lineNumber":339,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":340,"author":{"gitId":"hoang227"},"content":"![deleteClientSequenceDiagram](images/DeleteClientSequenceDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":341,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":342,"author":{"gitId":"hoang227"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for","lastModifiedDate":"2022-11-07"},{"lineNumber":343,"author":{"gitId":"hoang227"},"content":"`DeleteClientCommandParser` and `DeleteClientCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline","lastModifiedDate":"2022-11-07"},{"lineNumber":344,"author":{"gitId":"hoang227"},"content":"reaches the end of diagram.","lastModifiedDate":"2022-11-07"},{"lineNumber":345,"author":{"gitId":"hoang227"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":346,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":347,"author":{"gitId":"hoang227"},"content":"#### Design considerations","lastModifiedDate":"2022-11-07"},{"lineNumber":348,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":349,"author":{"gitId":"hoang227"},"content":"**Aspect: Using index specific or attribute specific deletion**","lastModifiedDate":"2022-11-07"},{"lineNumber":350,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":351,"author":{"gitId":"hoang227"},"content":"* **Alternative 1 (current choice):** Index specific","lastModifiedDate":"2022-11-07"},{"lineNumber":352,"author":{"gitId":"hoang227"},"content":"    * Pros: Easier implementation and more suited for fast-typing","lastModifiedDate":"2022-11-07"},{"lineNumber":353,"author":{"gitId":"hoang227"},"content":"    * Cons: Might accidentally delete the wrong `Client` if `Index` is mistyped","lastModifiedDate":"2022-11-07"},{"lineNumber":354,"author":{"gitId":"hoang227"},"content":"* **Alternative 2:** Attribute specific","lastModifiedDate":"2022-11-07"},{"lineNumber":355,"author":{"gitId":"hoang227"},"content":"    * Pros: User does not have to find for specific `Index`","lastModifiedDate":"2022-11-07"},{"lineNumber":356,"author":{"gitId":"hoang227"},"content":"    * Cons: Many `Client` objects might share same attribute such as `Address` and `Phone Number`","lastModifiedDate":"2022-11-07"},{"lineNumber":357,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":358,"author":{"gitId":"hoang227"},"content":"### \\[Implemented\\] Edit Client feature","lastModifiedDate":"2022-11-07"},{"lineNumber":359,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":360,"author":{"gitId":"hoang227"},"content":"The Edit Client feature allows users to edit any attribute of an `Client` in the `UniqueClientList`.","lastModifiedDate":"2022-11-07"},{"lineNumber":361,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":362,"author":{"gitId":"hoang227"},"content":"#### Implementation","lastModifiedDate":"2022-11-07"},{"lineNumber":363,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":364,"author":{"gitId":"hoang227"},"content":"To edit an `Client`, the `EditClientCommand` is executed. The `EditClientCommand` extends the `Command` class.","lastModifiedDate":"2022-11-07"},{"lineNumber":365,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":366,"author":{"gitId":"hoang227"},"content":"The `EditClientCommand` is parsed by the `EditClientCommandParser`. `EditClientCommandParser#parse()` parses the user input","lastModifiedDate":"2022-11-07"},{"lineNumber":367,"author":{"gitId":"hoang227"},"content":"to return a `EditClientCommand` that will be executed.","lastModifiedDate":"2022-11-07"},{"lineNumber":368,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":369,"author":{"gitId":"hoang227"},"content":"Given below is an example usage scenario and how the edit client mechanism behaves at each step.","lastModifiedDate":"2022-11-07"},{"lineNumber":370,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":371,"author":{"gitId":"hoang227"},"content":"Step 1. The user enters `editC 1 n/Jane Doe p/87654321 a/123 Jane Lane` in the command box. This calls the `LogicManager#execute()`","lastModifiedDate":"2022-11-07"},{"lineNumber":372,"author":{"gitId":"hoang227"},"content":"method which calls the `RealTimeParser#parse` method to be executed and will determine that the command is a","lastModifiedDate":"2022-11-07"},{"lineNumber":373,"author":{"gitId":"hoang227"},"content":"`EditClientCommand` after parsing.","lastModifiedDate":"2022-11-07"},{"lineNumber":374,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":375,"author":{"gitId":"hoang227"},"content":"Step 2. An `EditClientCommandParser` object is instantiated with the necessary arguments. It returns a `EditClientCommand`","lastModifiedDate":"2022-11-07"},{"lineNumber":376,"author":{"gitId":"hoang227"},"content":"with the `Index` and `EditClientDescriptor` as parameters. The `EditClientDescriptor` contains the edited information that","lastModifiedDate":"2022-11-07"},{"lineNumber":377,"author":{"gitId":"hoang227"},"content":"the edited `Client` is supposed to be updated to. In this scenario, we are changing the `Name`, `Phone` and `Address` attribute","lastModifiedDate":"2022-11-07"},{"lineNumber":378,"author":{"gitId":"hoang227"},"content":"of the `Client`. The `EditClientDescriptor` is then updated through the `setName()`, `setName()` and `setAddress()` methods by","lastModifiedDate":"2022-11-07"},{"lineNumber":379,"author":{"gitId":"hoang227"},"content":"the `EditClientDescriptor`.","lastModifiedDate":"2022-11-07"},{"lineNumber":380,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":381,"author":{"gitId":"hoang227"},"content":"Step 3. The `EditClientCommand#execute()` method is called which creates the edited `Client` using the `createEditedClient`","lastModifiedDate":"2022-11-07"},{"lineNumber":382,"author":{"gitId":"hoang227"},"content":"method which takes in the `Client` to be edited and the `EditClientDescriptor` that was created from the previous step.","lastModifiedDate":"2022-11-07"},{"lineNumber":383,"author":{"gitId":"hoang227"},"content":"The edited `Client` is then checked if it is a duplicate or already exists in the `UniqueClientList` through the","lastModifiedDate":"2022-11-07"},{"lineNumber":384,"author":{"gitId":"hoang227"},"content":"`Client#isSameClient()` and `Model#hasClient()` methods.","lastModifiedDate":"2022-11-07"},{"lineNumber":385,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":386,"author":{"gitId":"hoang227"},"content":"An `Client` is the same if it contains the exact same `Name`.","lastModifiedDate":"2022-11-07"},{"lineNumber":387,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":388,"author":{"gitId":"hoang227"},"content":"Step 4. The `Model#setClient(Client)` method is called to replace the target `Client` at the specified `Index` from earlier.","lastModifiedDate":"2022-11-07"},{"lineNumber":389,"author":{"gitId":"hoang227"},"content":"The `Model#updateFilteredClientList()` is called to update the `UniqueClientList`.","lastModifiedDate":"2022-11-07"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"jeromehjj"},"content":"### \\[Implemented\\] Add Offer feature","lastModifiedDate":"2022-11-06"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"jeromehjj"},"content":"#### Offers","lastModifiedDate":"2022-11-06"},{"lineNumber":394,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":395,"author":{"gitId":"hoang227"},"content":"REal-Time manages **_Offers_** made by Clients that are interested when bidding for Listings.","lastModifiedDate":"2022-11-07"},{"lineNumber":396,"author":{"gitId":"jeromehjj"},"content":"#### Implementation","lastModifiedDate":"2022-11-05"},{"lineNumber":397,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":398,"author":{"gitId":"jeromehjj"},"content":"To add an `Offer` object, the `AddOfferCommand` must be executed. This stores the `Offer` object into the","lastModifiedDate":"2022-11-06"},{"lineNumber":399,"author":{"gitId":"hoang227"},"content":"`UniqueOfferList`. Following the command execution pathway, the implementation of adding clients uses the exposed","lastModifiedDate":"2022-11-07"},{"lineNumber":400,"author":{"gitId":"jeromehjj"},"content":"`Model#addOffer(Offer)` method in the `Model` API.","lastModifiedDate":"2022-11-06"},{"lineNumber":401,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":402,"author":{"gitId":"jeromehjj"},"content":"The `AddOfferCommand` is parsed by the `AddOfferCommandParser`.","lastModifiedDate":"2022-11-06"},{"lineNumber":403,"author":{"gitId":"jeromehjj"},"content":"`AddOfferCommandParser#parse()` parses the user input to return a `AddOfferCommand` object that will be executed.","lastModifiedDate":"2022-11-06"},{"lineNumber":404,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":405,"author":{"gitId":"hoang227"},"content":"Given below is an example usage scenario and how the add clients mechanism behaves at each step.","lastModifiedDate":"2022-11-07"},{"lineNumber":406,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":407,"author":{"gitId":"jeromehjj"},"content":"Step 1. The user opens up the `REal-Time` application for the first time and observes that there are some sample data","lastModifiedDate":"2022-11-06"},{"lineNumber":408,"author":{"gitId":"jeromehjj"},"content":"in the `UniqueOfferList`.","lastModifiedDate":"2022-11-06"},{"lineNumber":409,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":410,"author":{"gitId":"hoang227"},"content":"Step 2. The user keys in the command word for adding a client, `addO`, followed by the compulsory parameters needed to","lastModifiedDate":"2022-11-07"},{"lineNumber":411,"author":{"gitId":"hoang227"},"content":"add a client, namely the `Name` component prefixed by `n/`, `Price` component prefixed by `o/` and the `ListingId`","lastModifiedDate":"2022-11-07"},{"lineNumber":412,"author":{"gitId":"jeromehjj"},"content":"component prefixed by `l/`. In this scenario, the user keys in `addO n/John Doe l/BEDOK_SOUTH o/600000` into the command box","lastModifiedDate":"2022-11-06"},{"lineNumber":413,"author":{"gitId":"jeromehjj"},"content":"which will execute the `AddOfferCommandParser` to check through the arguments and ensure that the compulsory fields are","lastModifiedDate":"2022-11-06"},{"lineNumber":414,"author":{"gitId":"jeromehjj"},"content":"present. It will then create the `Price`, `ListingId` and `Name` objects needed to instantiate an `Offer` object. The","lastModifiedDate":"2022-11-06"},{"lineNumber":415,"author":{"gitId":"jeromehjj"},"content":"parser returns a `AddOfferCommand` object with the `Offer` object ready to be added into `Model`","lastModifiedDate":"2022-11-06"},{"lineNumber":416,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":417,"author":{"gitId":"hoang227"},"content":"Step 3. The `AddOfferCommand` calls the `Model#addOffer(Offer)` to add the client and its relevant attributes.","lastModifiedDate":"2022-11-07"},{"lineNumber":418,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":419,"author":{"gitId":"jeromehjj"},"content":"Step 4. Depending on whether the `UniqueOfferList` already contains data or is an empty list, the added Offer will","lastModifiedDate":"2022-11-06"},{"lineNumber":420,"author":{"gitId":"jeromehjj"},"content":"be sorted automatically by the `ListingId` in lexicographical order. This is done using the `Collections#sort()` method","lastModifiedDate":"2022-11-06"},{"lineNumber":421,"author":{"gitId":"jeromehjj"},"content":"and implementing a natural order by implementing the `Comparable` interface and overriding the `Comparable#compareTo()`","lastModifiedDate":"2022-11-06"},{"lineNumber":422,"author":{"gitId":"jeromehjj"},"content":"method.","lastModifiedDate":"2022-11-06"},{"lineNumber":423,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":424,"author":{"gitId":"hoang227"},"content":"The sequence diagram below shows the add client process.","lastModifiedDate":"2022-11-07"},{"lineNumber":425,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":426,"author":{"gitId":"jeromehjj"},"content":"![addOfferSequenceDiagram](images/AddOfferSequenceDiagram.png)","lastModifiedDate":"2022-11-06"},{"lineNumber":427,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":428,"author":{"gitId":"jeromehjj"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for","lastModifiedDate":"2022-11-06"},{"lineNumber":429,"author":{"gitId":"jeromehjj"},"content":"`AddOfferCommandParser` and `RealTimeParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline","lastModifiedDate":"2022-11-06"},{"lineNumber":430,"author":{"gitId":"jeromehjj"},"content":"reaches the end of diagram.","lastModifiedDate":"2022-11-06"},{"lineNumber":431,"author":{"gitId":"jeromehjj"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":432,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":433,"author":{"gitId":"jeromehjj"},"content":"#### Design considerations","lastModifiedDate":"2022-11-06"},{"lineNumber":434,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":435,"author":{"gitId":"jeromehjj"},"content":"**Aspect: Client-Offer interaction**","lastModifiedDate":"2022-11-06"},{"lineNumber":436,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":437,"author":{"gitId":"hoang227"},"content":"* **Alternative 1 (current choice):** Separate Offers and Client objects","lastModifiedDate":"2022-11-07"},{"lineNumber":438,"author":{"gitId":"hoang227"},"content":"  * Pros: Easier to maintain as they are separate objects, less dependency between each other","lastModifiedDate":"2022-11-07"},{"lineNumber":439,"author":{"gitId":"jeromehjj"},"content":"  * Cons: No reference between the `Client` and `Offer` objects","lastModifiedDate":"2022-11-06"},{"lineNumber":440,"author":{"gitId":"jeromehjj"},"content":"* **Alternative 2:** Allow Clients to have an Offer attribute instead","lastModifiedDate":"2022-11-06"},{"lineNumber":441,"author":{"gitId":"jeromehjj"},"content":"  * Pros: Easier to reference between `Client` and `Offer`","lastModifiedDate":"2022-11-06"},{"lineNumber":442,"author":{"gitId":"jeromehjj"},"content":"  * Cons: Large dependency between the two.","lastModifiedDate":"2022-11-06"},{"lineNumber":443,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":444,"author":{"gitId":"jeromehjj"},"content":"### \\[Implemented\\] Delete Offer feature","lastModifiedDate":"2022-11-06"},{"lineNumber":445,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":446,"author":{"gitId":"jeromehjj"},"content":"The Delete Offer feature allows users to delete the specified `Offer` in the `UniqueOfferList`.","lastModifiedDate":"2022-11-06"},{"lineNumber":447,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":448,"author":{"gitId":"jeromehjj"},"content":"#### Implementation","lastModifiedDate":"2022-11-06"},{"lineNumber":449,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":450,"author":{"gitId":"jeromehjj"},"content":"To delete an `Offer` object, the `DeleteOfferCommand` must be executed. The `DeleteOfferCommand` extends the `Command`","lastModifiedDate":"2022-11-06"},{"lineNumber":451,"author":{"gitId":"jeromehjj"},"content":"class.","lastModifiedDate":"2022-11-06"},{"lineNumber":452,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":453,"author":{"gitId":"jeromehjj"},"content":"The `DeleteOfferCommand` is parsed by the `DeleteOfferCommandParser`. `DeleteOfferCommandParser#parse()` parses the user","lastModifiedDate":"2022-11-06"},{"lineNumber":454,"author":{"gitId":"jeromehjj"},"content":"input to return a `DeleteOfferCommand` that will be executed.","lastModifiedDate":"2022-11-06"},{"lineNumber":455,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":456,"author":{"gitId":"jeromehjj"},"content":"Given below is an example usage scenario and how the delete offer mechanism behaves at each step.","lastModifiedDate":"2022-11-06"},{"lineNumber":457,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":458,"author":{"gitId":"jeromehjj"},"content":"Step 1. The user enters `delO 1` in the command box.  This calls the `LogicManager#execute()` method which calls the","lastModifiedDate":"2022-11-06"},{"lineNumber":459,"author":{"gitId":"jeromehjj"},"content":"`RealTimeParser#parse` method to be executed and will determine that the command is a `DeleteOfferCommand` after parsing.","lastModifiedDate":"2022-11-06"},{"lineNumber":460,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":461,"author":{"gitId":"jeromehjj"},"content":"Step 2. A `DeleteOfferCommandParser` object is instantiated with the necessary arguments. It will return a","lastModifiedDate":"2022-11-06"},{"lineNumber":462,"author":{"gitId":"jeromehjj"},"content":"`DeleteOfferCommand` object with the specified `Index`.","lastModifiedDate":"2022-11-06"},{"lineNumber":463,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":464,"author":{"gitId":"jeromehjj"},"content":"Step 3. The `DeleteOfferCommand#execute()` method is called which calls the `Model#deleteOffer(Offer)` method to delete","lastModifiedDate":"2022-11-06"},{"lineNumber":465,"author":{"gitId":"jeromehjj"},"content":"the Offer at the specified `Index` in `Model`.","lastModifiedDate":"2022-11-06"},{"lineNumber":466,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":467,"author":{"gitId":"jeromehjj"},"content":"The sequence diagram below shows the delete offer process.","lastModifiedDate":"2022-11-06"},{"lineNumber":468,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":469,"author":{"gitId":"jeromehjj"},"content":"![deleteOfferSequenceDiagram](images/DeleteOfferSequenceDiagram.png)","lastModifiedDate":"2022-11-06"},{"lineNumber":470,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":471,"author":{"gitId":"jeromehjj"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for","lastModifiedDate":"2022-11-06"},{"lineNumber":472,"author":{"gitId":"jeromehjj"},"content":"`DeleteOfferCommandParser` and `DeleteOfferCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline","lastModifiedDate":"2022-11-06"},{"lineNumber":473,"author":{"gitId":"jeromehjj"},"content":"reaches the end of diagram.","lastModifiedDate":"2022-11-06"},{"lineNumber":474,"author":{"gitId":"jeromehjj"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":475,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":476,"author":{"gitId":"jeromehjj"},"content":"#### Design considerations","lastModifiedDate":"2022-11-05"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"jeromehjj"},"content":"**Aspect: Using index specific or attribute specific deletion**","lastModifiedDate":"2022-11-06"},{"lineNumber":479,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":480,"author":{"gitId":"jeromehjj"},"content":"* **Alternative 1 (current choice):** Index specific","lastModifiedDate":"2022-11-06"},{"lineNumber":481,"author":{"gitId":"jeromehjj"},"content":"    * Pros: Easier implementation and more suited for fast-typing","lastModifiedDate":"2022-11-06"},{"lineNumber":482,"author":{"gitId":"jeromehjj"},"content":"    * Cons: Might accidentally delete the wrong `Offer` if `Index` is mistyped","lastModifiedDate":"2022-11-06"},{"lineNumber":483,"author":{"gitId":"jeromehjj"},"content":"* **Alternative 2:** Attribute specific","lastModifiedDate":"2022-11-06"},{"lineNumber":484,"author":{"gitId":"jeromehjj"},"content":"    * Pros: User does not have to find for specific `Index`","lastModifiedDate":"2022-11-06"},{"lineNumber":485,"author":{"gitId":"jeromehjj"},"content":"    * Cons: Many `Offer` objects might share same attribute such as `ListingId` and `Price`","lastModifiedDate":"2022-11-06"},{"lineNumber":486,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":487,"author":{"gitId":"jeromehjj"},"content":"### \\[Implemented\\] Edit Offer feature","lastModifiedDate":"2022-11-06"},{"lineNumber":488,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":489,"author":{"gitId":"jeromehjj"},"content":"The Edit Offer feature allows users to edit any attribute of an `Offer` in the `UniqueOfferList`.","lastModifiedDate":"2022-11-06"},{"lineNumber":490,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":491,"author":{"gitId":"jeromehjj"},"content":"#### Implementation","lastModifiedDate":"2022-11-06"},{"lineNumber":492,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":493,"author":{"gitId":"jeromehjj"},"content":"To edit an `Offer`, the `EditOfferCommand` is executed. The `EditOfferCommand` extends the `Command` class.","lastModifiedDate":"2022-11-06"},{"lineNumber":494,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":495,"author":{"gitId":"jeromehjj"},"content":"The `EditOfferCommand` is parsed by the `EditOfferCommandParser`. `EditOfferCommandParser#parse()` parses the user input","lastModifiedDate":"2022-11-06"},{"lineNumber":496,"author":{"gitId":"jeromehjj"},"content":"to return a `EditOfferCommand` that will be executed.","lastModifiedDate":"2022-11-06"},{"lineNumber":497,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":498,"author":{"gitId":"jeromehjj"},"content":"Given below is an example usage scenario and how the edit offer mechanism behaves at each step.","lastModifiedDate":"2022-11-06"},{"lineNumber":499,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":500,"author":{"gitId":"jeromehjj"},"content":"Step 1. The user enters `editO 1 l/Bukit_timah_rd o/1000000` in the command box. This calls the `LogicManager#execute()`","lastModifiedDate":"2022-11-06"},{"lineNumber":501,"author":{"gitId":"jeromehjj"},"content":"method which calls the `RealTimeParser#parse` method to be executed and will determine that the command is a","lastModifiedDate":"2022-11-06"},{"lineNumber":502,"author":{"gitId":"jeromehjj"},"content":"`EditOfferCommand` after parsing.","lastModifiedDate":"2022-11-06"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"jeromehjj"},"content":"Step 2. An `EditOfferCommandParser` object is instantiated with the necessary arguments. It returns a `EditOfferCommand`","lastModifiedDate":"2022-11-06"},{"lineNumber":505,"author":{"gitId":"jeromehjj"},"content":"with the `Index` and `EditOfferDescriptor` as parameters. The `EditOfferDescriptor` contains the edited information that","lastModifiedDate":"2022-11-06"},{"lineNumber":506,"author":{"gitId":"jeromehjj"},"content":"the edited `Offer` is supposed to be updated to. In this scenario, we are changing the `listingId` and `Price` attribute","lastModifiedDate":"2022-11-06"},{"lineNumber":507,"author":{"gitId":"jeromehjj"},"content":"of the `Offer`. The `EditOfferDescriptor` is then updated through the `setListing()` and `setOfferPrice()` methods by","lastModifiedDate":"2022-11-06"},{"lineNumber":508,"author":{"gitId":"jeromehjj"},"content":"the `EditOfferDescriptor`.","lastModifiedDate":"2022-11-06"},{"lineNumber":509,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":510,"author":{"gitId":"jeromehjj"},"content":"Step 3. The `EditOfferCommand#execute()` method is called which creates the edited `Offer` using the `createEditedOffer`","lastModifiedDate":"2022-11-06"},{"lineNumber":511,"author":{"gitId":"jeromehjj"},"content":"method which takes in the `Offer` to be edited and the `EditOfferDescriptor` that was created from the previous step.","lastModifiedDate":"2022-11-06"},{"lineNumber":512,"author":{"gitId":"jeromehjj"},"content":"The edited `Offer` is then checked if it is a duplicate or already exists in the `UniqueOfferList` through the","lastModifiedDate":"2022-11-06"},{"lineNumber":513,"author":{"gitId":"jeromehjj"},"content":"`Offer#isSameOffer()` and `Model#hasOffer()` methods.","lastModifiedDate":"2022-11-06"},{"lineNumber":514,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":515,"author":{"gitId":"jeromehjj"},"content":"An `Offer` is the same if it contains the exact same `Name`, `Price` and `ListingId`.","lastModifiedDate":"2022-11-06"},{"lineNumber":516,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":517,"author":{"gitId":"jeromehjj"},"content":"Step 4. The `Model#setOffer(Offer)` method is called to replace the target `Offer` at the specified `Index` from earlier.","lastModifiedDate":"2022-11-06"},{"lineNumber":518,"author":{"gitId":"jeromehjj"},"content":"The `Model#updateFilteredOfferList()` is called to update the `UniqueOfferList`.","lastModifiedDate":"2022-11-06"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":521,"author":{"gitId":"hoang227"},"content":"### \\[Implemented\\] Add Listing feature","lastModifiedDate":"2022-11-07"},{"lineNumber":522,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":523,"author":{"gitId":"hoang227"},"content":"#### Listing","lastModifiedDate":"2022-11-07"},{"lineNumber":524,"author":{"gitId":"hoang227"},"content":"REal-Time manages **_Listings_** owned by Clients.","lastModifiedDate":"2022-11-07"},{"lineNumber":525,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":526,"author":{"gitId":"hoang227"},"content":"#### Implementation","lastModifiedDate":"2022-11-07"},{"lineNumber":527,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":528,"author":{"gitId":"hoang227"},"content":"To add an `Listing` object, the `AddListingCommand` must be executed. This stores the `Listing` object into the","lastModifiedDate":"2022-11-07"},{"lineNumber":529,"author":{"gitId":"hoang227"},"content":"`UniqueListingList`. Following the command execution pathway, the implementation of adding listings uses the exposed","lastModifiedDate":"2022-11-07"},{"lineNumber":530,"author":{"gitId":"hoang227"},"content":"`Model#addListing(Listing)` method in the `Model` API.","lastModifiedDate":"2022-11-07"},{"lineNumber":531,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":532,"author":{"gitId":"hoang227"},"content":"The `AddListingCommand` is parsed by the `AddListingCommandParser`.","lastModifiedDate":"2022-11-07"},{"lineNumber":533,"author":{"gitId":"hoang227"},"content":"`AddListingCommandParser#parse()` parses the user input to return a `AddListingCommand` object that will be executed.","lastModifiedDate":"2022-11-07"},{"lineNumber":534,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":535,"author":{"gitId":"hoang227"},"content":"Given below is an example usage scenario and how the add listings mechanism behaves at each step.","lastModifiedDate":"2022-11-07"},{"lineNumber":536,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":537,"author":{"gitId":"hoang227"},"content":"Step 1. The user opens up the `REal-Time` application for the first time and observes that there are some sample data","lastModifiedDate":"2022-11-07"},{"lineNumber":538,"author":{"gitId":"hoang227"},"content":"in the `UniqueListingList`.","lastModifiedDate":"2022-11-07"},{"lineNumber":539,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":540,"author":{"gitId":"hoang227"},"content":"Step 2. The user keys in the command word for adding a listing, `addL`, followed by the compulsory parameters needed to","lastModifiedDate":"2022-11-07"},{"lineNumber":541,"author":{"gitId":"hoang227"},"content":"add a listing, namely the `ListingId` component prefixed by `l/`, `Address` component prefixed by `a/`, the `Owner name`","lastModifiedDate":"2022-11-07"},{"lineNumber":542,"author":{"gitId":"hoang227"},"content":"component prefixed by `n/` and `Asking price` component prefixed by `ap/`. In this scenario, the user keys in","lastModifiedDate":"2022-11-07"},{"lineNumber":543,"author":{"gitId":"hoang227"},"content":"`addL l/007 a/100 Charming avenue n/John Doe ap/800000` into the command box","lastModifiedDate":"2022-11-07"},{"lineNumber":544,"author":{"gitId":"hoang227"},"content":"which will execute the `AddListingCommandParser` to check through the arguments and ensure that the compulsory fields are","lastModifiedDate":"2022-11-07"},{"lineNumber":545,"author":{"gitId":"hoang227"},"content":"present. It will then create the `ListingId`, `Address`, `Name` and `Price` objects needed to instantiate an `Listing` object. The","lastModifiedDate":"2022-11-07"},{"lineNumber":546,"author":{"gitId":"hoang227"},"content":"parser returns a `AddListingCommand` object with the `Listing` object ready to be added into `Model`","lastModifiedDate":"2022-11-07"},{"lineNumber":547,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":548,"author":{"gitId":"hoang227"},"content":"Step 3. The `AddListingCommand` calls the `Model#addListing(Listing)` to add the listing and its relevant attributes.","lastModifiedDate":"2022-11-07"},{"lineNumber":549,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":550,"author":{"gitId":"hoang227"},"content":"Step 4. Depending on whether the `UniqueListingList` already contains data or is an empty list, the added Listing will","lastModifiedDate":"2022-11-07"},{"lineNumber":551,"author":{"gitId":"hoang227"},"content":"be sorted automatically by the `ListingId` in lexicographical order. This is done using the `Collections#sort()` method","lastModifiedDate":"2022-11-07"},{"lineNumber":552,"author":{"gitId":"hoang227"},"content":"and implementing a natural order by implementing the `Comparable` interface and overriding the `Comparable#compareTo()`","lastModifiedDate":"2022-11-07"},{"lineNumber":553,"author":{"gitId":"hoang227"},"content":"method.","lastModifiedDate":"2022-11-07"},{"lineNumber":554,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":555,"author":{"gitId":"hoang227"},"content":"The sequence diagram below shows the add listing process.","lastModifiedDate":"2022-11-07"},{"lineNumber":556,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":557,"author":{"gitId":"hoang227"},"content":"![addListingSequenceDiagram](images/AddListingSequenceDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":558,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":559,"author":{"gitId":"hoang227"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for","lastModifiedDate":"2022-11-07"},{"lineNumber":560,"author":{"gitId":"hoang227"},"content":"`AddListingCommandParser` and `RealTimeParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline","lastModifiedDate":"2022-11-07"},{"lineNumber":561,"author":{"gitId":"hoang227"},"content":"reaches the end of diagram.","lastModifiedDate":"2022-11-07"},{"lineNumber":562,"author":{"gitId":"hoang227"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":563,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":564,"author":{"gitId":"hoang227"},"content":"#### Design considerations","lastModifiedDate":"2022-11-07"},{"lineNumber":565,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":566,"author":{"gitId":"hoang227"},"content":"**Aspect: Listing-Offer interaction**","lastModifiedDate":"2022-11-07"},{"lineNumber":567,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":568,"author":{"gitId":"hoang227"},"content":"* **Alternative 1 (current choice):** Separate Listing and Offer objects","lastModifiedDate":"2022-11-07"},{"lineNumber":569,"author":{"gitId":"hoang227"},"content":"    * Pros: Easier to maintain as they are separate objects, less dependency between each other","lastModifiedDate":"2022-11-07"},{"lineNumber":570,"author":{"gitId":"hoang227"},"content":"    * Cons: `Offer` references the `ListingId` instead of `Listing` objects.","lastModifiedDate":"2022-11-07"},{"lineNumber":571,"author":{"gitId":"hoang227"},"content":"* **Alternative 2:** Allow Offers to have a Listing attribute instead","lastModifiedDate":"2022-11-07"},{"lineNumber":572,"author":{"gitId":"hoang227"},"content":"    * Pros: Easier to reference between `Offer` and `Listing`","lastModifiedDate":"2022-11-07"},{"lineNumber":573,"author":{"gitId":"hoang227"},"content":"    * Cons: Large dependency between the two.","lastModifiedDate":"2022-11-07"},{"lineNumber":574,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":575,"author":{"gitId":"hoang227"},"content":"### \\[Implemented\\] Delete Listing feature","lastModifiedDate":"2022-11-07"},{"lineNumber":576,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":577,"author":{"gitId":"hoang227"},"content":"The Delete Listing feature allows users to delete the specified `Listing` in the `UniqueListingList`.","lastModifiedDate":"2022-11-07"},{"lineNumber":578,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":579,"author":{"gitId":"hoang227"},"content":"#### Implementation","lastModifiedDate":"2022-11-07"},{"lineNumber":580,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":581,"author":{"gitId":"hoang227"},"content":"To delete an `Listing` object, the `DeleteListingCommand` must be executed. The `DeleteListingCommand` extends the `Command`","lastModifiedDate":"2022-11-07"},{"lineNumber":582,"author":{"gitId":"hoang227"},"content":"class.","lastModifiedDate":"2022-11-07"},{"lineNumber":583,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":584,"author":{"gitId":"hoang227"},"content":"The `DeleteListingCommand` is parsed by the `DeleteListingCommandParser`. `DeleteListingCommandParser#parse()` parses the user","lastModifiedDate":"2022-11-07"},{"lineNumber":585,"author":{"gitId":"hoang227"},"content":"input to return a `DeleteListingCommand` that will be executed.","lastModifiedDate":"2022-11-07"},{"lineNumber":586,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":587,"author":{"gitId":"hoang227"},"content":"Given below is an example usage scenario and how the delete listing mechanism behaves at each step.","lastModifiedDate":"2022-11-07"},{"lineNumber":588,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":589,"author":{"gitId":"hoang227"},"content":"Step 1. The user enters `delL 1` in the command box.  This calls the `LogicManager#execute()` method which calls the","lastModifiedDate":"2022-11-07"},{"lineNumber":590,"author":{"gitId":"hoang227"},"content":"`RealTimeParser#parse` method to be executed and will determine that the command is a `DeleteListingCommand` after parsing.","lastModifiedDate":"2022-11-07"},{"lineNumber":591,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":592,"author":{"gitId":"hoang227"},"content":"Step 2. A `DeleteListingCommandParser` object is instantiated with the necessary arguments. It will return a","lastModifiedDate":"2022-11-07"},{"lineNumber":593,"author":{"gitId":"hoang227"},"content":"`DeleteListingCommand` object with the specified `Index`.","lastModifiedDate":"2022-11-07"},{"lineNumber":594,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":595,"author":{"gitId":"hoang227"},"content":"Step 3. The `DeleteListingCommand#execute()` method is called which calls the `Model#deleteListing(Listing)` method to delete","lastModifiedDate":"2022-11-07"},{"lineNumber":596,"author":{"gitId":"hoang227"},"content":"the Listing at the specified `Index` in `Model`.","lastModifiedDate":"2022-11-07"},{"lineNumber":597,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":598,"author":{"gitId":"hoang227"},"content":"The sequence diagram below shows the delete listing process.","lastModifiedDate":"2022-11-07"},{"lineNumber":599,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":600,"author":{"gitId":"hoang227"},"content":"![deleteListingSequenceDiagram](images/DeleteListingSequenceDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":601,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":602,"author":{"gitId":"hoang227"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for","lastModifiedDate":"2022-11-07"},{"lineNumber":603,"author":{"gitId":"hoang227"},"content":"`DeleteListingCommandParser` and `DeleteListingCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline","lastModifiedDate":"2022-11-07"},{"lineNumber":604,"author":{"gitId":"hoang227"},"content":"reaches the end of diagram.","lastModifiedDate":"2022-11-07"},{"lineNumber":605,"author":{"gitId":"hoang227"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":606,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":607,"author":{"gitId":"hoang227"},"content":"#### Design considerations","lastModifiedDate":"2022-11-07"},{"lineNumber":608,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":609,"author":{"gitId":"hoang227"},"content":"**Aspect: Using index specific or attribute specific deletion**","lastModifiedDate":"2022-11-07"},{"lineNumber":610,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":611,"author":{"gitId":"hoang227"},"content":"* **Alternative 1 (current choice):** Index specific","lastModifiedDate":"2022-11-07"},{"lineNumber":612,"author":{"gitId":"hoang227"},"content":"    * Pros: Easier implementation and more suited for fast-typing","lastModifiedDate":"2022-11-07"},{"lineNumber":613,"author":{"gitId":"hoang227"},"content":"    * Cons: Might accidentally delete the wrong `Listing` if `Index` is mistyped","lastModifiedDate":"2022-11-07"},{"lineNumber":614,"author":{"gitId":"hoang227"},"content":"* **Alternative 2:** Attribute specific","lastModifiedDate":"2022-11-07"},{"lineNumber":615,"author":{"gitId":"hoang227"},"content":"    * Pros: User does not have to find for specific `Index`","lastModifiedDate":"2022-11-07"},{"lineNumber":616,"author":{"gitId":"hoang227"},"content":"    * Cons: Many `Listing` objects might share same attribute such as `Asking Price` and `Owner`.","lastModifiedDate":"2022-11-07"},{"lineNumber":617,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":618,"author":{"gitId":"hoang227"},"content":"### \\[Implemented\\] Edit Listing feature","lastModifiedDate":"2022-11-07"},{"lineNumber":619,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":620,"author":{"gitId":"hoang227"},"content":"The Edit Listing feature allows users to edit any attribute of an `Listing` in the `UniqueListingList`.","lastModifiedDate":"2022-11-07"},{"lineNumber":621,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":622,"author":{"gitId":"hoang227"},"content":"#### Implementation","lastModifiedDate":"2022-11-07"},{"lineNumber":623,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":624,"author":{"gitId":"hoang227"},"content":"To edit an `Listing`, the `EditListingCommand` is executed. The `EditListingCommand` extends the `Command` class.","lastModifiedDate":"2022-11-07"},{"lineNumber":625,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":626,"author":{"gitId":"hoang227"},"content":"The `EditListingCommand` is parsed by the `EditListingCommandParser`. `EditListingCommandParser#parse()` parses the user input","lastModifiedDate":"2022-11-07"},{"lineNumber":627,"author":{"gitId":"hoang227"},"content":"to return a `EditListingCommand` that will be executed.","lastModifiedDate":"2022-11-07"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":629,"author":{"gitId":"hoang227"},"content":"Given below is an example usage scenario and how the edit listing mechanism behaves at each step.","lastModifiedDate":"2022-11-07"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":631,"author":{"gitId":"hoang227"},"content":"Step 1. The user enters `editL 1 l/Bukit_timah_rd ap/1000000` in the command box. This calls the `LogicManager#execute()`","lastModifiedDate":"2022-11-07"},{"lineNumber":632,"author":{"gitId":"hoang227"},"content":"method which calls the `RealTimeParser#parse` method to be executed and will determine that the command is a","lastModifiedDate":"2022-11-07"},{"lineNumber":633,"author":{"gitId":"hoang227"},"content":"`EditListingCommand` after parsing.","lastModifiedDate":"2022-11-07"},{"lineNumber":634,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":635,"author":{"gitId":"hoang227"},"content":"Step 2. An `EditListingCommandParser` object is instantiated with the necessary arguments. It returns a `EditListingCommand`","lastModifiedDate":"2022-11-07"},{"lineNumber":636,"author":{"gitId":"hoang227"},"content":"with the `Index` and `EditListingDescriptor` as parameters. The `EditListingDescriptor` contains the edited information that","lastModifiedDate":"2022-11-07"},{"lineNumber":637,"author":{"gitId":"hoang227"},"content":"the edited `Listing` is supposed to be updated to. In this scenario, we are changing the `listingId` and `Price` attribute","lastModifiedDate":"2022-11-07"},{"lineNumber":638,"author":{"gitId":"hoang227"},"content":"of the `Listing`. The `EditListingDescriptor` is then updated through the `setListing()` and `setListingPrice()` methods by","lastModifiedDate":"2022-11-07"},{"lineNumber":639,"author":{"gitId":"hoang227"},"content":"the `EditListingDescriptor`.","lastModifiedDate":"2022-11-07"},{"lineNumber":640,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":641,"author":{"gitId":"hoang227"},"content":"Step 3. The `EditListingCommand#execute()` method is called which creates the edited `Listing` using the `createEditedListing`","lastModifiedDate":"2022-11-07"},{"lineNumber":642,"author":{"gitId":"hoang227"},"content":"method which takes in the `Listing` to be edited and the `EditListingDescriptor` that was created from the previous step.","lastModifiedDate":"2022-11-07"},{"lineNumber":643,"author":{"gitId":"hoang227"},"content":"The edited `Listing` is then checked if it is a duplicate or already exists in the `UniqueListingList` through the","lastModifiedDate":"2022-11-07"},{"lineNumber":644,"author":{"gitId":"hoang227"},"content":"`Listing#isSameListing()` and `Model#hasListing()` methods.","lastModifiedDate":"2022-11-07"},{"lineNumber":645,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":646,"author":{"gitId":"hoang227"},"content":"An `Listing` is the same if it contains the exact same `Listing Id` and `Address`.","lastModifiedDate":"2022-11-07"},{"lineNumber":647,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":648,"author":{"gitId":"hoang227"},"content":"Step 4. The `Model#setListing(Listing)` method is called to replace the target `Listing` at the specified `Index` from earlier.","lastModifiedDate":"2022-11-07"},{"lineNumber":649,"author":{"gitId":"hoang227"},"content":"The `Model#updateFilteredListingList()` is called to update the `UniqueListingList`.","lastModifiedDate":"2022-11-07"},{"lineNumber":650,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":651,"author":{"gitId":"hoang227"},"content":"### \\[Implemented\\] Add Meeting feature","lastModifiedDate":"2022-11-07"},{"lineNumber":652,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":653,"author":{"gitId":"hoang227"},"content":"#### Meeting","lastModifiedDate":"2022-11-07"},{"lineNumber":654,"author":{"gitId":"hoang227"},"content":"REal-Time manages **_Meetings_** with Clients.","lastModifiedDate":"2022-11-07"},{"lineNumber":655,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":656,"author":{"gitId":"hoang227"},"content":"#### Implementation","lastModifiedDate":"2022-11-07"},{"lineNumber":657,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":658,"author":{"gitId":"hoang227"},"content":"To add an `Meeting` object, the `AddMeetingCommand` must be executed. This stores the `Meeting` object into the","lastModifiedDate":"2022-11-07"},{"lineNumber":659,"author":{"gitId":"hoang227"},"content":"`UniqueMeetingList`. Following the command execution pathway, the implementation of adding listings uses the exposed","lastModifiedDate":"2022-11-07"},{"lineNumber":660,"author":{"gitId":"hoang227"},"content":"`Model#addMeeting(Meeting)` method in the `Model` API.","lastModifiedDate":"2022-11-07"},{"lineNumber":661,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":662,"author":{"gitId":"hoang227"},"content":"The `AddMeetingCommand` is parsed by the `AddMeetingCommandParser`.","lastModifiedDate":"2022-11-07"},{"lineNumber":663,"author":{"gitId":"hoang227"},"content":"`AddMeetingCommandParser#parse()` parses the user input to return a `AddMeetingCommand` object that will be executed.","lastModifiedDate":"2022-11-07"},{"lineNumber":664,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":665,"author":{"gitId":"hoang227"},"content":"Given below is an example usage scenario and how the add listings mechanism behaves at each step.","lastModifiedDate":"2022-11-07"},{"lineNumber":666,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":667,"author":{"gitId":"hoang227"},"content":"Step 1. The user opens up the `REal-Time` application for the first time and observes that there are some sample data","lastModifiedDate":"2022-11-07"},{"lineNumber":668,"author":{"gitId":"hoang227"},"content":"in the `UniqueMeetingList`.","lastModifiedDate":"2022-11-07"},{"lineNumber":669,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":670,"author":{"gitId":"hoang227"},"content":"Step 2. The user keys in the command word for adding a listing, `addM`, followed by the compulsory parameters needed to","lastModifiedDate":"2022-11-07"},{"lineNumber":671,"author":{"gitId":"hoang227"},"content":"add a listing, namely the `ListingId` component prefixed by `l/`, `Name` component prefixed by `n/`and the `Date and Time`","lastModifiedDate":"2022-11-07"},{"lineNumber":672,"author":{"gitId":"hoang227"},"content":"component prefixed by `d/`. In this scenario, the user keys in","lastModifiedDate":"2022-11-07"},{"lineNumber":673,"author":{"gitId":"hoang227"},"content":"`addM l/007 n/John Doe d/2022-10-20 12:00` into the command box","lastModifiedDate":"2022-11-07"},{"lineNumber":674,"author":{"gitId":"hoang227"},"content":"which will execute the `AddMeetingCommandParser` to check through the arguments and ensure that the compulsory fields are","lastModifiedDate":"2022-11-07"},{"lineNumber":675,"author":{"gitId":"hoang227"},"content":"present. It will then create the `ListingId`, `Name` and `LocalDateTime` objects needed to instantiate an `Meeting` object. The","lastModifiedDate":"2022-11-07"},{"lineNumber":676,"author":{"gitId":"hoang227"},"content":"parser returns a `AddMeetingCommand` object with the `Meeting` object ready to be added into `Model`","lastModifiedDate":"2022-11-07"},{"lineNumber":677,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":678,"author":{"gitId":"hoang227"},"content":"Step 3. The `AddMeetingCommand` calls the `Model#addMeeting(Meeting)` to add the listing and its relevant attributes.","lastModifiedDate":"2022-11-07"},{"lineNumber":679,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":680,"author":{"gitId":"hoang227"},"content":"Step 4. Depending on whether the `UniqueMeetingList` already contains data or is an empty list, the added Meeting will","lastModifiedDate":"2022-11-07"},{"lineNumber":681,"author":{"gitId":"hoang227"},"content":"be sorted automatically by the `LocalDateTime` in lexicographical order. This is done using the `Collections#sort()` method","lastModifiedDate":"2022-11-07"},{"lineNumber":682,"author":{"gitId":"hoang227"},"content":"and implementing a natural order by implementing the `Comparable` interface and overriding the `Comparable#compareTo()`","lastModifiedDate":"2022-11-07"},{"lineNumber":683,"author":{"gitId":"hoang227"},"content":"method.","lastModifiedDate":"2022-11-07"},{"lineNumber":684,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":685,"author":{"gitId":"hoang227"},"content":"The sequence diagram below shows the add listing process.","lastModifiedDate":"2022-11-07"},{"lineNumber":686,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":687,"author":{"gitId":"hoang227"},"content":"![addMeetingSequenceDiagram](images/AddMeetingSequenceDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":688,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":689,"author":{"gitId":"hoang227"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for","lastModifiedDate":"2022-11-07"},{"lineNumber":690,"author":{"gitId":"hoang227"},"content":"`AddMeetingCommandParser` and `RealTimeParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline","lastModifiedDate":"2022-11-07"},{"lineNumber":691,"author":{"gitId":"hoang227"},"content":"reaches the end of diagram.","lastModifiedDate":"2022-11-07"},{"lineNumber":692,"author":{"gitId":"hoang227"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":693,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":694,"author":{"gitId":"hoang227"},"content":"#### Design considerations","lastModifiedDate":"2022-11-07"},{"lineNumber":695,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":696,"author":{"gitId":"hoang227"},"content":"**Aspect: Meeting-Listing interaction**","lastModifiedDate":"2022-11-07"},{"lineNumber":697,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":698,"author":{"gitId":"hoang227"},"content":"* **Alternative 1 (current choice):** Separate Meeting and Listing objects","lastModifiedDate":"2022-11-07"},{"lineNumber":699,"author":{"gitId":"hoang227"},"content":"  * Pros: Easier to maintain as they are separate objects, less dependency between each other","lastModifiedDate":"2022-11-07"},{"lineNumber":700,"author":{"gitId":"hoang227"},"content":"  * Cons: `Offer` references the `ListingId` instead of `Listing` objects.","lastModifiedDate":"2022-11-07"},{"lineNumber":701,"author":{"gitId":"hoang227"},"content":"* **Alternative 2:** Allow Offers to have a Listing attribute instead","lastModifiedDate":"2022-11-07"},{"lineNumber":702,"author":{"gitId":"hoang227"},"content":"  * Pros: Easier to reference between `Listing` and `Meeting`","lastModifiedDate":"2022-11-07"},{"lineNumber":703,"author":{"gitId":"hoang227"},"content":"  * Cons: Large dependency between the two.","lastModifiedDate":"2022-11-07"},{"lineNumber":704,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":705,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":706,"author":{"gitId":"hoang227"},"content":"### \\[Implemented\\] Delete Meeting feature","lastModifiedDate":"2022-11-07"},{"lineNumber":707,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":708,"author":{"gitId":"hoang227"},"content":"The Delete Meeting feature allows users to delete the specified `Meeting` in the `UniqueMeetingList`.","lastModifiedDate":"2022-11-07"},{"lineNumber":709,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":710,"author":{"gitId":"hoang227"},"content":"#### Implementation","lastModifiedDate":"2022-11-07"},{"lineNumber":711,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":712,"author":{"gitId":"hoang227"},"content":"To delete an `Meeting` object, the `DeleteMeetingCommand` must be executed. The `DeleteMeetingCommand` extends the `Command`","lastModifiedDate":"2022-11-07"},{"lineNumber":713,"author":{"gitId":"hoang227"},"content":"class.","lastModifiedDate":"2022-11-07"},{"lineNumber":714,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":715,"author":{"gitId":"hoang227"},"content":"The `DeleteMeetingCommand` is parsed by the `DeleteMeetingCommandParser`. `DeleteMeetingCommandParser#parse()` parses the user","lastModifiedDate":"2022-11-07"},{"lineNumber":716,"author":{"gitId":"hoang227"},"content":"input to return a `DeleteMeetingCommand` that will be executed.","lastModifiedDate":"2022-11-07"},{"lineNumber":717,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":718,"author":{"gitId":"hoang227"},"content":"Given below is an example usage scenario and how the delete listing mechanism behaves at each step.","lastModifiedDate":"2022-11-07"},{"lineNumber":719,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":720,"author":{"gitId":"hoang227"},"content":"Step 1. The user enters `delM 1` in the command box.  This calls the `LogicManager#execute()` method which calls the","lastModifiedDate":"2022-11-07"},{"lineNumber":721,"author":{"gitId":"hoang227"},"content":"`RealTimeParser#parse` method to be executed and will determine that the command is a `DeleteMeetingCommand` after parsing.","lastModifiedDate":"2022-11-07"},{"lineNumber":722,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":723,"author":{"gitId":"hoang227"},"content":"Step 2. A `DeleteMeetingCommandParser` object is instantiated with the necessary arguments. It will return a","lastModifiedDate":"2022-11-07"},{"lineNumber":724,"author":{"gitId":"hoang227"},"content":"`DeleteMeetingCommand` object with the specified `Index`.","lastModifiedDate":"2022-11-07"},{"lineNumber":725,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":726,"author":{"gitId":"hoang227"},"content":"Step 3. The `DeleteMeetingCommand#execute()` method is called which calls the `Model#deleteMeeting(Meeting)` method to delete","lastModifiedDate":"2022-11-07"},{"lineNumber":727,"author":{"gitId":"hoang227"},"content":"the Meeting at the specified `Index` in `Model`.","lastModifiedDate":"2022-11-07"},{"lineNumber":728,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":729,"author":{"gitId":"hoang227"},"content":"The sequence diagram below shows the delete listing process.","lastModifiedDate":"2022-11-07"},{"lineNumber":730,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":731,"author":{"gitId":"hoang227"},"content":"![deleteMeetingSequenceDiagram](images/DeleteMeetingSequenceDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":732,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":733,"author":{"gitId":"hoang227"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for","lastModifiedDate":"2022-11-07"},{"lineNumber":734,"author":{"gitId":"hoang227"},"content":"`DeleteMeetingCommandParser` and `DeleteMeetingCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline","lastModifiedDate":"2022-11-07"},{"lineNumber":735,"author":{"gitId":"hoang227"},"content":"reaches the end of diagram.","lastModifiedDate":"2022-11-07"},{"lineNumber":736,"author":{"gitId":"hoang227"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":737,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":738,"author":{"gitId":"hoang227"},"content":"#### Design considerations","lastModifiedDate":"2022-11-07"},{"lineNumber":739,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":740,"author":{"gitId":"hoang227"},"content":"**Aspect: Using index specific or attribute specific deletion**","lastModifiedDate":"2022-11-07"},{"lineNumber":741,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":742,"author":{"gitId":"hoang227"},"content":"* **Alternative 1 (current choice):** Index specific","lastModifiedDate":"2022-11-07"},{"lineNumber":743,"author":{"gitId":"hoang227"},"content":"  * Pros: Easier implementation and more suited for fast-typing","lastModifiedDate":"2022-11-07"},{"lineNumber":744,"author":{"gitId":"hoang227"},"content":"  * Cons: Might accidentally delete the wrong `Meeting` if `Index` is mistyped","lastModifiedDate":"2022-11-07"},{"lineNumber":745,"author":{"gitId":"hoang227"},"content":"* **Alternative 2:** Attribute specific","lastModifiedDate":"2022-11-07"},{"lineNumber":746,"author":{"gitId":"hoang227"},"content":"  * Pros: User does not have to find for specific `Index`","lastModifiedDate":"2022-11-07"},{"lineNumber":747,"author":{"gitId":"hoang227"},"content":"  * Cons: Many `Meeting` objects might share same attribute such as `Listing Id` and `Name`.","lastModifiedDate":"2022-11-07"},{"lineNumber":748,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":749,"author":{"gitId":"hoang227"},"content":"### \\[Implemented\\] Edit Meeting feature","lastModifiedDate":"2022-11-07"},{"lineNumber":750,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":751,"author":{"gitId":"hoang227"},"content":"The Edit Meeting feature allows users to edit any attribute of an `Meeting` in the `UniqueMeetingList`.","lastModifiedDate":"2022-11-07"},{"lineNumber":752,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":753,"author":{"gitId":"hoang227"},"content":"#### Implementation","lastModifiedDate":"2022-11-07"},{"lineNumber":754,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":755,"author":{"gitId":"hoang227"},"content":"To edit an `Meeting`, the `EditMeetingCommand` is executed. The `EditMeetingCommand` extends the `Command` class.","lastModifiedDate":"2022-11-07"},{"lineNumber":756,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":757,"author":{"gitId":"hoang227"},"content":"The `EditMeetingCommand` is parsed by the `EditMeetingCommandParser`. `EditMeetingCommandParser#parse()` parses the user input","lastModifiedDate":"2022-11-07"},{"lineNumber":758,"author":{"gitId":"hoang227"},"content":"to return a `EditMeetingCommand` that will be executed.","lastModifiedDate":"2022-11-07"},{"lineNumber":759,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":760,"author":{"gitId":"hoang227"},"content":"Given below is an example usage scenario and how the edit listing mechanism behaves at each step.","lastModifiedDate":"2022-11-07"},{"lineNumber":761,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":762,"author":{"gitId":"hoang227"},"content":"Step 1. The user enters `editM 1 l/Bukit_timah_rd d/2022-10-20 23:59` in the command box. This calls the `LogicManager#execute()`","lastModifiedDate":"2022-11-07"},{"lineNumber":763,"author":{"gitId":"hoang227"},"content":"method which calls the `RealTimeParser#parse` method to be executed and will determine that the command is a","lastModifiedDate":"2022-11-07"},{"lineNumber":764,"author":{"gitId":"hoang227"},"content":"`EditMeetingCommand` after parsing.","lastModifiedDate":"2022-11-07"},{"lineNumber":765,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":766,"author":{"gitId":"hoang227"},"content":"Step 2. An `EditMeetingCommandParser` object is instantiated with the necessary arguments. It returns a `EditMeetingCommand`","lastModifiedDate":"2022-11-07"},{"lineNumber":767,"author":{"gitId":"hoang227"},"content":"with the `Index` and `EditMeetingDescriptor` as parameters. The `EditMeetingDescriptor` contains the edited information that","lastModifiedDate":"2022-11-07"},{"lineNumber":768,"author":{"gitId":"hoang227"},"content":"the edited `Meeting` is supposed to be updated to. In this scenario, we are changing the `listingId` and `Time` attribute","lastModifiedDate":"2022-11-07"},{"lineNumber":769,"author":{"gitId":"hoang227"},"content":"of the `Meeting`. The `EditMeetingDescriptor` is then updated through the `setMeeting()` and `setMeetingPrice()` methods by","lastModifiedDate":"2022-11-07"},{"lineNumber":770,"author":{"gitId":"hoang227"},"content":"the `EditMeetingDescriptor`.","lastModifiedDate":"2022-11-07"},{"lineNumber":771,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":772,"author":{"gitId":"hoang227"},"content":"Step 3. The `EditMeetingCommand#execute()` method is called which creates the edited `Meeting` using the `createEditedMeeting`","lastModifiedDate":"2022-11-07"},{"lineNumber":773,"author":{"gitId":"hoang227"},"content":"method which takes in the `Meeting` to be edited and the `EditMeetingDescriptor` that was created from the previous step.","lastModifiedDate":"2022-11-07"},{"lineNumber":774,"author":{"gitId":"hoang227"},"content":"The edited `Meeting` is then checked if it is a duplicate or already exists in the `UniqueMeetingList` through the","lastModifiedDate":"2022-11-07"},{"lineNumber":775,"author":{"gitId":"hoang227"},"content":"`Meeting#isSameMeeting()` and `Model#hasMeeting()` methods.","lastModifiedDate":"2022-11-07"},{"lineNumber":776,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":777,"author":{"gitId":"hoang227"},"content":"An `Meeting` is the same if it contains the exact same `LocalDateTime`.","lastModifiedDate":"2022-11-07"},{"lineNumber":778,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":779,"author":{"gitId":"hoang227"},"content":"Step 4. The `Model#setMeeting(Meeting)` method is called to replace the target `Meeting` at the specified `Index` from earlier.","lastModifiedDate":"2022-11-07"},{"lineNumber":780,"author":{"gitId":"hoang227"},"content":"The `Model#updateFilteredMeetingList()` is called to update the `UniqueMeetingList`.","lastModifiedDate":"2022-11-07"},{"lineNumber":781,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":782,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":783,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":784,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":785,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":787,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":788,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":789,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":790,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":791,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":792,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":798,"author":{"gitId":"ama-chi"},"content":"**Target user profile**: Real Estate Agents","lastModifiedDate":"2022-10-04"},{"lineNumber":799,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":800,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":801,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":802,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":803,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":804,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":805,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":806,"author":{"gitId":"ama-chi"},"content":"**Value propositions**:","lastModifiedDate":"2022-10-04"},{"lineNumber":807,"author":{"gitId":"ama-chi"},"content":"* manage clients faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-10-04"},{"lineNumber":808,"author":{"gitId":"ama-chi"},"content":"* Real-Estate agents with many clients may struggle to juggle their viewings and manage meetings.","lastModifiedDate":"2022-10-04"},{"lineNumber":809,"author":{"gitId":"ama-chi"},"content":"* Track properties to their owners as well as potential buyers","lastModifiedDate":"2022-10-04"},{"lineNumber":810,"author":{"gitId":"ama-chi"},"content":"* Centralised place to store client information, what they are looking for","lastModifiedDate":"2022-10-04"},{"lineNumber":811,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":812,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":814,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":815,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":816,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":817,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​            | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":818,"author":{"gitId":"hoang227"},"content":"|----------|--------------------------------------------|-------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-11-07"},{"lineNumber":819,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions  | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":820,"author":{"gitId":"jeromehjj"},"content":"| `* * *`  | user                                       | add a new client        | see all my clients in one list                                         |","lastModifiedDate":"2022-10-20"},{"lineNumber":821,"author":{"gitId":"hoang227"},"content":"| `* * *`  | user                                       | add a new listing       | see all my listings in one list                                        |","lastModifiedDate":"2022-11-07"},{"lineNumber":822,"author":{"gitId":"jeromehjj"},"content":"| `* * *`  | user                                       | add my client\u0027s offer   | track all my clients\u0027 current offers                                   |","lastModifiedDate":"2022-10-20"},{"lineNumber":823,"author":{"gitId":"hoang227"},"content":"| `* * *`  | user                                       | add my client\u0027s meeting | track all my meetings with clients                                     |","lastModifiedDate":"2022-11-07"},{"lineNumber":824,"author":{"gitId":"jeromehjj"},"content":"| `* * *`  | user                                       | delete a client         | remove entries that I no longer need                                   |","lastModifiedDate":"2022-10-20"},{"lineNumber":825,"author":{"gitId":"hoang227"},"content":"| `* * *`  | user                                       | delete a listing        | remove entries that I no longer need                                   |","lastModifiedDate":"2022-11-07"},{"lineNumber":826,"author":{"gitId":"hoang227"},"content":"| `* * *`  | user                                       | delete an offer         | remove entries that I no longer need                                   |","lastModifiedDate":"2022-11-07"},{"lineNumber":827,"author":{"gitId":"hoang227"},"content":"| `* * *`  | user                                       | delete a meeeting       | remove entries that I no longer need                                   |","lastModifiedDate":"2022-11-07"},{"lineNumber":828,"author":{"gitId":"jeromehjj"},"content":"| `* * *`  | user                                       | find a client by name   | locate details of persons without having to go through the entire list |","lastModifiedDate":"2022-10-20"},{"lineNumber":829,"author":{"gitId":"hoang227"},"content":"| `* * *`  | user                                       | edit an client          | update any changes to a client\u0027s details                               |","lastModifiedDate":"2022-11-07"},{"lineNumber":830,"author":{"gitId":"hoang227"},"content":"| `* * *`  | user                                       | edit an listing         | update any changes to a listing\u0027s details                              |","lastModifiedDate":"2022-11-07"},{"lineNumber":831,"author":{"gitId":"jeromehjj"},"content":"| `* * *`  | user                                       | edit an offer           | update any changes to a client\u0027s offer                                 |","lastModifiedDate":"2022-11-05"},{"lineNumber":832,"author":{"gitId":"hoang227"},"content":"| `* * *`  | user                                       | edit an meeting         | update any changes to a client\u0027s meeting                               |","lastModifiedDate":"2022-11-07"},{"lineNumber":833,"author":{"gitId":"hoang227"},"content":"| `*`      | user with many clients in the address book | sort client by name     | locate a person easily                                                 |","lastModifiedDate":"2022-11-07"},{"lineNumber":834,"author":{"gitId":"ama-chi"},"content":"| `*`      | user                                       | save my data            | store my data for future use                                           |","lastModifiedDate":"2022-10-04"},{"lineNumber":835,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":836,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":837,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":838,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":839,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":840,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":841,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":842,"author":{"gitId":"hoang227"},"content":"(For all use cases below, the **System** is the `RealTime` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-11-05"},{"lineNumber":843,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":844,"author":{"gitId":"jeromehjj"},"content":"**Use case: UC01 - Reorder the list**","lastModifiedDate":"2022-10-20"},{"lineNumber":845,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":846,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-10-04"},{"lineNumber":847,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":848,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2022-10-04"},{"lineNumber":849,"author":{"gitId":"hoang227"},"content":"2.  RealTime shows a list of persons","lastModifiedDate":"2022-11-05"},{"lineNumber":850,"author":{"gitId":"ama-chi"},"content":"3.  User requests to switch a specific person in the list with another","lastModifiedDate":"2022-10-04"},{"lineNumber":851,"author":{"gitId":"hoang227"},"content":"4.  RealTime swaps their index","lastModifiedDate":"2022-11-05"},{"lineNumber":852,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":853,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-10-04"},{"lineNumber":854,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":855,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-10-04"},{"lineNumber":856,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":857,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-10-04"},{"lineNumber":858,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":859,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-10-04"},{"lineNumber":860,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":861,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-10-04"},{"lineNumber":862,"author":{"gitId":"hoang227"},"content":"    * 3a1. RealTime shows an error message.","lastModifiedDate":"2022-11-05"},{"lineNumber":863,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":864,"author":{"gitId":"ama-chi"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-10-04"},{"lineNumber":865,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":866,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":867,"author":{"gitId":"jeromehjj"},"content":"**Use case: UC02 - Delete a person**","lastModifiedDate":"2022-10-20"},{"lineNumber":868,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":869,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":870,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":871,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":872,"author":{"gitId":"hoang227"},"content":"2.  RealTime shows a list of persons","lastModifiedDate":"2022-11-05"},{"lineNumber":873,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":874,"author":{"gitId":"hoang227"},"content":"4.  RealTime deletes the person","lastModifiedDate":"2022-11-05"},{"lineNumber":875,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":876,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":877,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":878,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":879,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":880,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":881,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":882,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":883,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":884,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":885,"author":{"gitId":"hoang227"},"content":"    * 3a1. RealTime shows an error message.","lastModifiedDate":"2022-11-05"},{"lineNumber":886,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":887,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":888,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":889,"author":{"gitId":"jeromehjj"},"content":"**Use case: UC03 - Add an offer**","lastModifiedDate":"2022-10-20"},{"lineNumber":890,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":891,"author":{"gitId":"jeromehjj"},"content":"**MSS**","lastModifiedDate":"2022-10-20"},{"lineNumber":892,"author":{"gitId":"jeromehjj"},"content":"1. User requests to add an offer.","lastModifiedDate":"2022-10-20"},{"lineNumber":893,"author":{"gitId":"hoang227"},"content":"2. RealTime adds the offer.","lastModifiedDate":"2022-11-05"},{"lineNumber":894,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":895,"author":{"gitId":"jeromehjj"},"content":"    Use case ends.","lastModifiedDate":"2022-10-20"},{"lineNumber":896,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":897,"author":{"gitId":"jeromehjj"},"content":"**Extensions**","lastModifiedDate":"2022-10-20"},{"lineNumber":898,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":899,"author":{"gitId":"jeromehjj"},"content":"* 1a. User enters invalid input","lastModifiedDate":"2022-10-20"},{"lineNumber":900,"author":{"gitId":"hoang227"},"content":"  * 1a1. RealTime shows an error message.","lastModifiedDate":"2022-11-05"},{"lineNumber":901,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":902,"author":{"gitId":"jeromehjj"},"content":"    Use case resumes at Step 1.","lastModifiedDate":"2022-11-05"},{"lineNumber":903,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":904,"author":{"gitId":"jeromehjj"},"content":"**Use case: UC04 - Edit an offer**","lastModifiedDate":"2022-11-05"},{"lineNumber":905,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":906,"author":{"gitId":"jeromehjj"},"content":"**MSS**","lastModifiedDate":"2022-11-05"},{"lineNumber":907,"author":{"gitId":"jeromehjj"},"content":"1. User requests to edit an offer.","lastModifiedDate":"2022-11-05"},{"lineNumber":908,"author":{"gitId":"jeromehjj"},"content":"2. REal-Time edits the offer.","lastModifiedDate":"2022-11-05"},{"lineNumber":909,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":910,"author":{"gitId":"jeromehjj"},"content":"    Use case ends.","lastModifiedDate":"2022-11-05"},{"lineNumber":911,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":912,"author":{"gitId":"jeromehjj"},"content":"**Extensions**","lastModifiedDate":"2022-11-05"},{"lineNumber":913,"author":{"gitId":"jeromehjj"},"content":"* 1a. User enters invalid input","lastModifiedDate":"2022-11-05"},{"lineNumber":914,"author":{"gitId":"jeromehjj"},"content":"  * 1a1. REal-Time shows an error message.","lastModifiedDate":"2022-11-05"},{"lineNumber":915,"author":{"gitId":"jeromehjj"},"content":"    Use case resumes at Step 1.","lastModifiedDate":"2022-10-20"},{"lineNumber":916,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":917,"author":{"gitId":"jeromehjj"},"content":"**Use case: UC05 - Delete an offer**","lastModifiedDate":"2022-11-05"},{"lineNumber":918,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":919,"author":{"gitId":"jeromehjj"},"content":"**MSS**","lastModifiedDate":"2022-11-05"},{"lineNumber":920,"author":{"gitId":"jeromehjj"},"content":"1. User requests to delete an offer.","lastModifiedDate":"2022-11-05"},{"lineNumber":921,"author":{"gitId":"jeromehjj"},"content":"2. REal-Time deletes the offer.","lastModifiedDate":"2022-11-05"},{"lineNumber":922,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":923,"author":{"gitId":"jeromehjj"},"content":"    Use case ends.","lastModifiedDate":"2022-11-05"},{"lineNumber":924,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":925,"author":{"gitId":"jeromehjj"},"content":"**Extensions**","lastModifiedDate":"2022-11-05"},{"lineNumber":926,"author":{"gitId":"jeromehjj"},"content":"* 1a. User enters invalid input","lastModifiedDate":"2022-11-05"},{"lineNumber":927,"author":{"gitId":"jeromehjj"},"content":"  * 1a1. REal-Time shows an error message.","lastModifiedDate":"2022-11-05"},{"lineNumber":928,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":929,"author":{"gitId":"jeromehjj"},"content":"    Use case resumes at Step 1","lastModifiedDate":"2022-11-05"},{"lineNumber":930,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":931,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":932,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":933,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":934,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":935,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":936,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":937,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":938,"author":{"gitId":"ama-chi"},"content":"4. Application should start in under a few seconds.","lastModifiedDate":"2022-10-04"},{"lineNumber":939,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":940,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":941,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":942,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":943,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":944,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":945,"author":{"gitId":"jeromehjj"},"content":"* **Client**: A person that is interested in purchasing or selling a property","lastModifiedDate":"2022-11-06"},{"lineNumber":946,"author":{"gitId":"jeromehjj"},"content":"* **Offer**: A price that the purchaser is willing to pay for a property","lastModifiedDate":"2022-11-06"},{"lineNumber":947,"author":{"gitId":"jeromehjj"},"content":"* **Listing**: A property that is being advertised","lastModifiedDate":"2022-11-06"},{"lineNumber":948,"author":{"gitId":"jeromehjj"},"content":"* **Meeting**: A scheduled appointment between the Real-Estate agent and client","lastModifiedDate":"2022-11-06"},{"lineNumber":949,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":950,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":951,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":952,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":953,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":954,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":955,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":956,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":957,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":958,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":959,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":960,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":961,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":962,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":963,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":964,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":965,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":966,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":967,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":968,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":969,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":970,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":971,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":972,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":973,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":974,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":975,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":976,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":977,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":978,"author":{"gitId":"Isaaclhy00"},"content":"### Adding a Listing","lastModifiedDate":"2022-10-21"},{"lineNumber":979,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":980,"author":{"gitId":"Isaaclhy00"},"content":"1. Adding a listings","lastModifiedDate":"2022-10-21"},{"lineNumber":981,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":982,"author":{"gitId":"Isaaclhy00"},"content":"    1. Prerequisites: The owner of the Listing must already be added as a Person.","lastModifiedDate":"2022-10-21"},{"lineNumber":983,"author":{"gitId":"Isaaclhy00"},"content":"    2. Test case: `listing id/001 a/100 Charming Avenue n/Alex Yeoh ap/100000`\u003cbr\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":984,"author":{"gitId":"Isaaclhy00"},"content":"       Expected: First a new Listing is created. Its id will be the contents after the \u0027id/\u0027 prefix.","lastModifiedDate":"2022-10-21"},{"lineNumber":985,"author":{"gitId":"Isaaclhy00"},"content":"                 Its Address will be the contents after the \u0027a/\u0027 prefix. Its owner\u0027s name","lastModifiedDate":"2022-10-21"},{"lineNumber":986,"author":{"gitId":"Isaaclhy00"},"content":"                 will be the contents after the \u0027n/\u0027 prefix. And the asking price of the Listing","lastModifiedDate":"2022-10-21"},{"lineNumber":987,"author":{"gitId":"Isaaclhy00"},"content":"                 will be the contents after the \u0027ap/\u0027 prefix.","lastModifiedDate":"2022-10-21"},{"lineNumber":988,"author":{"gitId":"Isaaclhy00"},"content":"                 Details of the new listing will be shown in the status message.","lastModifiedDate":"2022-10-21"},{"lineNumber":989,"author":{"gitId":"Isaaclhy00"},"content":"    3. Other incorrect delete commands to try: `listing id/... ap/.. n.. a/..`, `listing`, `...` \u003cbr\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":990,"author":{"gitId":"Isaaclhy00"},"content":"        Expected: Error message to warn incorrect input format.","lastModifiedDate":"2022-10-21"},{"lineNumber":991,"author":{"gitId":"Isaaclhy00"},"content":"2. _{ more test cases …​ }_","lastModifiedDate":"2022-10-21"},{"lineNumber":992,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":993,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":994,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":995,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":996,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":997,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":998,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":999,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":1004,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":1007,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1010,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":1017,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":1018,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":1019,"author":{"gitId":"Gavzzz"},"content":"### Deleting a client","lastModifiedDate":"2022-10-21"},{"lineNumber":1020,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":1021,"author":{"gitId":"Gavzzz"},"content":"1. Deleting a person while all client are being shown","lastModifiedDate":"2022-10-21"},{"lineNumber":1022,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":1023,"author":{"gitId":"Gavzzz"},"content":"   1. Prerequisites: List all client using the `list` command. Multiple client in the list.","lastModifiedDate":"2022-10-21"},{"lineNumber":1024,"author":{"gitId":"Isaaclhy00"},"content":"   2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":1025,"author":{"gitId":"jeromehjj"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2022-11-05"},{"lineNumber":1026,"author":{"gitId":"jeromehjj"},"content":"Timestamp in the status bar is updated.","lastModifiedDate":"2022-11-05"},{"lineNumber":1027,"author":{"gitId":"Isaaclhy00"},"content":"   3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":1028,"author":{"gitId":"Gavzzz"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-10-21"},{"lineNumber":1029,"author":{"gitId":"Isaaclhy00"},"content":"   4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":1030,"author":{"gitId":"Gavzzz"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2022-10-21"},{"lineNumber":1031,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":1032,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":1033,"author":{"gitId":"jeromehjj"},"content":"### Adding an Offer","lastModifiedDate":"2022-11-06"},{"lineNumber":1034,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":1035,"author":{"gitId":"jeromehjj"},"content":"1. Adding an offer while all offers are being shown","lastModifiedDate":"2022-11-06"},{"lineNumber":1036,"author":{"gitId":"jeromehjj"},"content":"   1. Prerequisites: The Offer being added must not exist in the current list.","lastModifiedDate":"2022-11-06"},{"lineNumber":1037,"author":{"gitId":"jeromehjj"},"content":"   2. Test case: `addO n/John Doe l/BEDOK_SOUTH o/700000`","lastModifiedDate":"2022-11-06"},{"lineNumber":1038,"author":{"gitId":"jeromehjj"},"content":"   ","lastModifiedDate":"2022-11-06"},{"lineNumber":1039,"author":{"gitId":"jeromehjj"},"content":"      Expected: An Offer with name John Doe, listing ID BEDOK_SOUTH and offer price of 700000 will be added to the list.","lastModifiedDate":"2022-11-06"},{"lineNumber":1040,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":1041,"author":{"gitId":"jeromehjj"},"content":"   3. Test case: `addO n/Jackson Ang l/CALIFORNIA o/-10000`","lastModifiedDate":"2022-11-06"},{"lineNumber":1042,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":1043,"author":{"gitId":"jeromehjj"},"content":"      Expected: No Offer will be added. Error message will appear in the response box.","lastModifiedDate":"2022-11-06"},{"lineNumber":1044,"author":{"gitId":"jeromehjj"},"content":"   4. Other incorrect commands to try: `addO n/Bruce Wayne l/YISHUN o/123p123`","lastModifiedDate":"2022-11-06"},{"lineNumber":1045,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":1046,"author":{"gitId":"jeromehjj"},"content":"### Deleting an Offer","lastModifiedDate":"2022-11-06"},{"lineNumber":1047,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":1048,"author":{"gitId":"jeromehjj"},"content":"1. Deleting an offer while all offers are being shown","lastModifiedDate":"2022-11-06"},{"lineNumber":1049,"author":{"gitId":"jeromehjj"},"content":"   1. Prerequisites: At least one Offer has to exist in the list.","lastModifiedDate":"2022-11-06"},{"lineNumber":1050,"author":{"gitId":"jeromehjj"},"content":"   2. Test case: `delO 1`","lastModifiedDate":"2022-11-06"},{"lineNumber":1051,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":1052,"author":{"gitId":"jeromehjj"},"content":"      Expected: First Offer is deleted from the list. Details of the deleted offer shown in the status message.","lastModifiedDate":"2022-11-06"},{"lineNumber":1053,"author":{"gitId":"jeromehjj"},"content":"   3. Test case: `delO 0`","lastModifiedDate":"2022-11-06"},{"lineNumber":1054,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":1055,"author":{"gitId":"jeromehjj"},"content":"      Expected: No Offer is deleted. Error details shown in the status message.","lastModifiedDate":"2022-11-06"},{"lineNumber":1056,"author":{"gitId":"jeromehjj"},"content":"   4. Other incorrect commands to try: `delO -1`, `delO a`","lastModifiedDate":"2022-11-06"},{"lineNumber":1057,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":1058,"author":{"gitId":"jeromehjj"},"content":"### Editing an Offer","lastModifiedDate":"2022-11-06"},{"lineNumber":1059,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":1060,"author":{"gitId":"jeromehjj"},"content":"1. Editing an offer while all offers are being shown","lastModifiedDate":"2022-11-06"},{"lineNumber":1061,"author":{"gitId":"jeromehjj"},"content":"   1. Prerequisites: At least one Offer must exist to be edited.","lastModifiedDate":"2022-11-06"},{"lineNumber":1062,"author":{"gitId":"jeromehjj"},"content":"   2. Test case: `editO 1 n/John Doe`\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":1063,"author":{"gitId":"jeromehjj"},"content":"      Expected: First Offer has the name changed to John Doe.","lastModifiedDate":"2022-11-06"},{"lineNumber":1064,"author":{"gitId":"jeromehjj"},"content":"   3. Test case: `editO 1 o/-1000`\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":1065,"author":{"gitId":"jeromehjj"},"content":"      Expected: No Offer is edited. Error details shown in the status message.","lastModifiedDate":"2022-11-06"},{"lineNumber":1066,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":1067,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1068,"author":{"gitId":"ama-chi"},"content":"### Adding a Meeting","lastModifiedDate":"2022-11-07"},{"lineNumber":1069,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1070,"author":{"gitId":"ama-chi"},"content":"1. Adding a meeting while all meeting are being shown","lastModifiedDate":"2022-11-07"},{"lineNumber":1071,"author":{"gitId":"ama-chi"},"content":"    1. Prerequisites: The Meeting being added must not exist in the current list.","lastModifiedDate":"2022-11-07"},{"lineNumber":1072,"author":{"gitId":"ama-chi"},"content":"    2. Test case: `addM n/John Doe l/BEDOK_SOUTH d/2022-10-12 23:59`","lastModifiedDate":"2022-11-07"},{"lineNumber":1073,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1074,"author":{"gitId":"ama-chi"},"content":"       Expected: A Meeting with name John Doe, listing ID BEDOK_SOUTH and dateTime 2022-10-12 23:59 will be added to the list.","lastModifiedDate":"2022-11-07"},{"lineNumber":1075,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1076,"author":{"gitId":"ama-chi"},"content":"    3. Test case: `addM n/Jackson Ang l/CALIFORNIA d/23:59 2022-12-3`","lastModifiedDate":"2022-11-07"},{"lineNumber":1077,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1078,"author":{"gitId":"ama-chi"},"content":"       Expected: No Meeting will be added. Error message will appear in the response box.","lastModifiedDate":"2022-11-07"},{"lineNumber":1079,"author":{"gitId":"ama-chi"},"content":"    4. Other incorrect commands to try: `addM n/Bruce Wayne l/YISHUN d/2022-100-100 27:20`","lastModifiedDate":"2022-11-07"},{"lineNumber":1080,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1081,"author":{"gitId":"ama-chi"},"content":"### Deleting a Meeting","lastModifiedDate":"2022-11-07"},{"lineNumber":1082,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1083,"author":{"gitId":"ama-chi"},"content":"1. Deleting a meeting while all meetings are being shown","lastModifiedDate":"2022-11-07"},{"lineNumber":1084,"author":{"gitId":"ama-chi"},"content":"    1. Prerequisites: At least one Meeting has to exist in the list.","lastModifiedDate":"2022-11-07"},{"lineNumber":1085,"author":{"gitId":"ama-chi"},"content":"    2. Test case: `delM 1`","lastModifiedDate":"2022-11-07"},{"lineNumber":1086,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1087,"author":{"gitId":"ama-chi"},"content":"       Expected: First Meeting is deleted from the list. Details of the deleted meeting shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":1088,"author":{"gitId":"ama-chi"},"content":"    3. Test case: `delM 0`","lastModifiedDate":"2022-11-07"},{"lineNumber":1089,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1090,"author":{"gitId":"ama-chi"},"content":"       Expected: No Meeting is deleted. Error details shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":1091,"author":{"gitId":"ama-chi"},"content":"    4. Other incorrect commands to try: `delM -1`, `delM a`","lastModifiedDate":"2022-11-07"},{"lineNumber":1092,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1093,"author":{"gitId":"ama-chi"},"content":"### Editing a Meeting","lastModifiedDate":"2022-11-07"},{"lineNumber":1094,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1095,"author":{"gitId":"ama-chi"},"content":"1. Editing a meeting while all meetings are being shown","lastModifiedDate":"2022-11-07"},{"lineNumber":1096,"author":{"gitId":"ama-chi"},"content":"    1. Prerequisites: At least one Meeting must exist to be edited.","lastModifiedDate":"2022-11-07"},{"lineNumber":1097,"author":{"gitId":"ama-chi"},"content":"    2. Test case: `editM 1 n/John Doe`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":1098,"author":{"gitId":"ama-chi"},"content":"       Expected: First Meeting has the name changed to John Doe.","lastModifiedDate":"2022-11-07"},{"lineNumber":1099,"author":{"gitId":"ama-chi"},"content":"    3. Test case: `editM 1 d/2023-30-20 12:00`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":1100,"author":{"gitId":"ama-chi"},"content":"       Expected: No Meeting is edited. Error details shown in the status message.","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"jeromehjj":247,"hoang227":435,"ama-chi":48,"Isaaclhy00":17,"-":344,"Gavzzz":9}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"   1. Run the `seedu.realtime.Main` and try a few commands.","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [RealTime’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"hoang227":2,"-":53}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"   e.g. `seedu.realtime.commons.StringUtilTest`","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"   e.g. `seedu.realtime.storage.StorageManagerTest`","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"   e.g. `seedu.realtime.logic.LogicManagerTest`","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"hoang227":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"# Introduction","lastModifiedDate":"2022-11-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"Welcome to the **REal-Time** User Guide!","lastModifiedDate":"2022-11-10"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"In this user guide, you will find everything you need to know about **REal-Time** in making your user","lastModifiedDate":"2022-11-10"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"experience easy and smooth.","lastModifiedDate":"2022-11-10"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"The **REal-Time** user guide provides you with **step-by-step** instructions from installing the application","lastModifiedDate":"2022-11-10"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"to teaching you our easy-to-use features!","lastModifiedDate":"2022-11-10"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"## About REal-Time","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"Tired of having to manage your client information and details through multiple spreadsheets, tracking through listings in another","lastModifiedDate":"2022-11-10"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"application and scheduling your important meetings with clients through a calendar app? Look no further, as **REal-Time**","lastModifiedDate":"2022-11-10"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"has got you covered!","lastModifiedDate":"2022-11-10"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"**REal-Time** is a desktop application for **Real-Estate agents** to **manage client information, schedule meetings,","lastModifiedDate":"2022-11-10"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"and track client offers and listings**, isn\u0027t that awesome?","lastModifiedDate":"2022-11-10"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"It is optimized for use via a _Command Line Interface_ ([CLI](#glossary)) while still having the added","lastModifiedDate":"2022-11-10"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"benefits of a _Graphical User Interface_ ([GUI](#glossary)).","lastModifiedDate":"2022-11-10"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"With just the usage of a standard keyboard, **REal-Time** can get all the necessary tasks","lastModifiedDate":"2022-11-10"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"done faster than traditional GUI apps!","lastModifiedDate":"2022-11-10"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"## Fun fact","lastModifiedDate":"2022-11-03"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"The **\"REa\"** in **REal-Time** stands for _Real-Estate agents_, which is the intended target user of our application!","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"## Using this guide","lastModifiedDate":"2022-11-03"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"Now that you have read the introduction and learnt about what our product does, get started in using **REal-Time** by","lastModifiedDate":"2022-11-10"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"following the guide provided in the [Quick Start](#quick-start) section. Otherwise,","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"* If you are still unsure of the commands used in REal-Time, the [Command Summary](#command-summary) is a good place to","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"start.","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"* The [Prefix Summary](#prefix-summary) and [Glossary](#glossary) are also great places to understand REal-Time","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"better.","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"* If you are a developer and would like to help improve our product, take a look at our [Developer Guide](https://ay2223s1-cs2103t-w15-2.github.io/tp/DeveloperGuide.html).","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"# Table of Contents","lastModifiedDate":"2022-11-03"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"{: .no_toc}","lastModifiedDate":"2022-11-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"# Quick start","lastModifiedDate":"2022-11-03"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"1. Ensure you have `Java 11` or above installed in your Computer. To install `Java 11`,","lastModifiedDate":"2022-11-03"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"click [here](https://www.oracle.com/sg/java/technologies/downloads/#java11) and download the appropriate file depending","lastModifiedDate":"2022-11-03"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"on your Operating System ([OS](#glossary)) (_e.g, Linux, Windows, macOS_).","lastModifiedDate":"2022-11-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"2. Download the latest `REal-Time.jar` file from [here](https://github.com/AY2223S1-CS2103T-W15-2/tp/releases). The","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"`REal-Time.jar` file is located in the \"Assets\" section as shown below.","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"![downloadRelease](./images/downloadRelease.png)","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for REal-Time. If you are unsure on how to create","lastModifiedDate":"2022-11-10"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"a new folder, click [here](https://www.computerhope.com/issues/ch000742.htm) to learn more.","lastModifiedDate":"2022-11-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"4. Double-click the file to start the app. The GUI similar to the one below should appear in a few seconds.","lastModifiedDate":"2022-11-03"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"5. Refer to the [Layout](#layout) if you are still unsure in navigating REal-Time\u0027s interface.","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"6. Type the command in the command box and press Enter to execute it. e.g. typing [**`help`**](#viewing-help--help) and","lastModifiedDate":"2022-11-10"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"   * [**`addO`**](#adding-an-offer-addo)`l/John street, block 123, #01-01 n/John Doe o/700000` : Adds an offer by `John Doe` to the list of offers.","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"   * [**`delC`**](#deleting-a-client--delc)`3` : Deletes the 3rd contact shown in the current list of clients.","lastModifiedDate":"2022-11-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"   * [**`clear`**](#clearing-all-entries--clear) : Deletes all clients, meetings, listings and offers.","lastModifiedDate":"2022-11-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"jeromehjj"},"content":"   * [**`exit`**](#exit-real-time--exit) : Exits the app.","lastModifiedDate":"2022-11-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"jeromehjj"},"content":"* We recommend you to read the [Command Format](#command-format) section before using REal-Time.","lastModifiedDate":"2022-11-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":87,"author":{"gitId":"jeromehjj"},"content":"7. Refer to the [Features](#features) below for more details of each command.","lastModifiedDate":"2022-11-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2022-11-07"},{"lineNumber":90,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":91,"author":{"gitId":"jeromehjj"},"content":"___","lastModifiedDate":"2022-11-05"},{"lineNumber":92,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":93,"author":{"gitId":"jeromehjj"},"content":"# Layout","lastModifiedDate":"2022-11-03"},{"lineNumber":94,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"![Layout](images/layout.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":96,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":97,"author":{"gitId":"jeromehjj"},"content":"`Command Box` - What you type will be shown here.\u003cbr\u003e","lastModifiedDate":"2022-11-10"},{"lineNumber":98,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":99,"author":{"gitId":"jeromehjj"},"content":"`Feedback Box` - REal-Time feedbacks to your commands will appear here.\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":100,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":101,"author":{"gitId":"jeromehjj"},"content":"`Client Box` - All [Clients](#glossary) in REal-Time will appear here.\u003cbr\u003e","lastModifiedDate":"2022-11-10"},{"lineNumber":102,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":103,"author":{"gitId":"jeromehjj"},"content":"`Offer Box` - All [Offers](#glossary) in REal-Time will appear here.\u003cbr\u003e","lastModifiedDate":"2022-11-10"},{"lineNumber":104,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":105,"author":{"gitId":"jeromehjj"},"content":"`Listing Box` - All [Listings](#glossary) in REal-Time will appear here.\u003cbr\u003e","lastModifiedDate":"2022-11-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"jeromehjj"},"content":"`Meeting Box` - All [Meetings](#glossary) in REal-Time will appear here.","lastModifiedDate":"2022-11-10"},{"lineNumber":108,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2022-11-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"# Command format","lastModifiedDate":"2022-11-07"},{"lineNumber":114,"author":{"gitId":"jeromehjj"},"content":"#### We highly recommend you to read this section before using REal-Time","lastModifiedDate":"2022-11-07"},{"lineNumber":115,"author":{"gitId":"jeromehjj"},"content":"REal-Time functions are based on commands that you enter. REal-Time has 4 main types","lastModifiedDate":"2022-11-07"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"of commands. let\u0027s learn how to write them!","lastModifiedDate":"2022-11-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"## 1. `add`","lastModifiedDate":"2022-11-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"This type of command includes `addC` `addO` `addL` `addM` and is used to add a new","lastModifiedDate":"2022-11-07"},{"lineNumber":121,"author":{"gitId":"jeromehjj"},"content":"entry into REal-Time.","lastModifiedDate":"2022-11-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2022-11-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"**Format:** `addC n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…`","lastModifiedDate":"2022-11-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"jeromehjj"},"content":"This command adds a client into REal-Time.\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"1. `addC` is the **Command Word**","lastModifiedDate":"2022-11-07"},{"lineNumber":129,"author":{"gitId":"jeromehjj"},"content":"2. `n/` `p/` `e/` `a/` are **Prefixes**. Prefixes help REal-Time distinguish between different inputs.","lastModifiedDate":"2022-11-07"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"3. `NAME` `PHONE_NUMBER` `EMAIL` `ADDRESS` are the **Data Field** that you can input. For example, `NAME` in `n/NAME` can be replaced with `n/John Doe`.","lastModifiedDate":"2022-11-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"Let\u0027s say you want to add a client named `John Doe`, his phone number","lastModifiedDate":"2022-11-07"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"is `12345678`, his email is `john@gmail.com` and his address is `123 John St`.\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"You can enter the following command:\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":136,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"addC n/John Doe p/12345678 e/john@gmail.com a/123 John St","lastModifiedDate":"2022-11-07"},{"lineNumber":138,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"**Note:**","lastModifiedDate":"2022-11-07"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"1. You may notice square brackets [] around some parameters. This indicates that the field is **optional**. For the","lastModifiedDate":"2022-11-07"},{"lineNumber":141,"author":{"gitId":"hoang227"},"content":"example above, the `t/TAG` parameter can be left empty if you do not wish to tag the client.","lastModifiedDate":"2022-11-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"hoang227"},"content":"2. You may also notice `…` after the `t/TAG` field. This indicates that you may enter this field as many times as you","lastModifiedDate":"2022-11-07"},{"lineNumber":144,"author":{"gitId":"hoang227"},"content":"want to (0 or more times). For example, if you want to tag `John Doe` as `Friend` and `Neighbor` you can add","lastModifiedDate":"2022-11-07"},{"lineNumber":145,"author":{"gitId":"hoang227"},"content":"`t/Friend t/Neighbor` to the command above.","lastModifiedDate":"2022-11-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":147,"author":{"gitId":"hoang227"},"content":"3. The order of every field does not matter. If the command specifies","lastModifiedDate":"2022-11-07"},{"lineNumber":148,"author":{"gitId":"hoang227"},"content":"`n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2022-11-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":150,"author":{"gitId":"hoang227"},"content":"4. If a field is expected only once in the command, but you specified it multiple times, only the last occurrence","lastModifiedDate":"2022-11-07"},{"lineNumber":151,"author":{"gitId":"hoang227"},"content":"will be taken. If you specify `n/John Dough n/John Doe`, only `n/John Doe` will be taken.","lastModifiedDate":"2022-11-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":154,"author":{"gitId":"hoang227"},"content":"## 2. `del`","lastModifiedDate":"2022-11-07"},{"lineNumber":155,"author":{"gitId":"hoang227"},"content":"This type of command includes `delC` `delO` `delL` `delM` and is used to delete a","lastModifiedDate":"2022-11-07"},{"lineNumber":156,"author":{"gitId":"jeromehjj"},"content":"current entry from REal-Time.","lastModifiedDate":"2022-11-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":158,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2022-11-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":160,"author":{"gitId":"hoang227"},"content":"**Format:** `delL INDEX`","lastModifiedDate":"2022-11-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":162,"author":{"gitId":"hoang227"},"content":"Let\u0027s say you want to delete the second listing from the `Listing Box`.\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":164,"author":{"gitId":"hoang227"},"content":"You can enter the following command:","lastModifiedDate":"2022-11-07"},{"lineNumber":165,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":166,"author":{"gitId":"hoang227"},"content":"delL 2","lastModifiedDate":"2022-11-07"},{"lineNumber":167,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":168,"author":{"gitId":"hoang227"},"content":"**Note:**","lastModifiedDate":"2022-11-07"},{"lineNumber":169,"author":{"gitId":"hoang227"},"content":"1. `INDEX` refers to the index number shown in each of the box. Below is an example:\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":170,"author":{"gitId":"hoang227"},"content":"![Index](images/OfferIndex.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":171,"author":{"gitId":"hoang227"},"content":"2. `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-11-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":173,"author":{"gitId":"hoang227"},"content":"## 3. `edit`","lastModifiedDate":"2022-11-07"},{"lineNumber":174,"author":{"gitId":"hoang227"},"content":"This type of command includes `editC` `editO` `editL` `editM` and is used to edit the details","lastModifiedDate":"2022-11-07"},{"lineNumber":175,"author":{"gitId":"jeromehjj"},"content":"of a current entry in REal-Time.","lastModifiedDate":"2022-11-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":177,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2022-11-07"},{"lineNumber":178,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":179,"author":{"gitId":"hoang227"},"content":"**Format:** `editO INDEX [n/NAME] [o/OFFER_PRICE] [l/LISTING_ID]`","lastModifiedDate":"2022-11-07"},{"lineNumber":180,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":181,"author":{"gitId":"hoang227"},"content":"Let\u0027s say there is an existing offer at `INDEX` 2 that `Betsy Crowler` made for `john_house` with offer price `100000`","lastModifiedDate":"2022-11-07"},{"lineNumber":182,"author":{"gitId":"hoang227"},"content":"but Betsy Crower just increased her offer price to `200000`, you also realised that you spelt her","lastModifiedDate":"2022-11-07"},{"lineNumber":183,"author":{"gitId":"hoang227"},"content":"name wrongly the first time you add this offer, and it is actualy `Besty Crower` and you want to update this","lastModifiedDate":"2022-11-07"},{"lineNumber":184,"author":{"gitId":"jeromehjj"},"content":"change in REal-Time.\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":185,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":186,"author":{"gitId":"hoang227"},"content":"You can enter the following command:\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":187,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":188,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":189,"author":{"gitId":"jeromehjj"},"content":"editO 2 n/Betsy Crower o/200000","lastModifiedDate":"2022-11-10"},{"lineNumber":190,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":191,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":192,"author":{"gitId":"hoang227"},"content":"## 4. `list`","lastModifiedDate":"2022-11-07"},{"lineNumber":193,"author":{"gitId":"hoang227"},"content":"This type of command includes `listC` `listL` and is used to list all the entries","lastModifiedDate":"2022-11-07"},{"lineNumber":194,"author":{"gitId":"jeromehjj"},"content":"of the specific type in REal-Time.","lastModifiedDate":"2022-11-07"},{"lineNumber":195,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":196,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2022-11-07"},{"lineNumber":197,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":198,"author":{"gitId":"hoang227"},"content":"**Format:** `listC`","lastModifiedDate":"2022-11-07"},{"lineNumber":199,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":200,"author":{"gitId":"jeromehjj"},"content":"Let\u0027s say you want to see all the clients in REal-Time.\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":201,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":202,"author":{"gitId":"hoang227"},"content":"You can enter the following command:","lastModifiedDate":"2022-11-07"},{"lineNumber":203,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":204,"author":{"gitId":"hoang227"},"content":"listC","lastModifiedDate":"2022-11-07"},{"lineNumber":205,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":206,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":207,"author":{"gitId":"hoang227"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-11-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"hoang227"},"content":"# Features","lastModifiedDate":"2022-11-07"},{"lineNumber":210,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":211,"author":{"gitId":"jeromehjj"},"content":"## Managing Clients","lastModifiedDate":"2022-11-03"},{"lineNumber":212,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":213,"author":{"gitId":"hoang227"},"content":"In this section, we provide you the basic steps needed to [add](#adding-a-client-addc), [delete](#deleting-a-client--delc),","lastModifiedDate":"2022-11-07"},{"lineNumber":214,"author":{"gitId":"hoang227"},"content":"[edit](#editing-a-client--editc), [find](#finding-clients-by-name-findc) and [list](#listing-clients-listc) clients.","lastModifiedDate":"2022-11-07"},{"lineNumber":215,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":216,"author":{"gitId":"hoang227"},"content":"**If this is not the section you are looking for**, click [here](#table-of-contents) to go back to the **Table of Contents**.","lastModifiedDate":"2022-11-07"},{"lineNumber":217,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":218,"author":{"gitId":"jeromehjj"},"content":"### Adding a client: `addC`","lastModifiedDate":"2022-11-03"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"jeromehjj"},"content":"\u003e Adds a client to REal-Time.","lastModifiedDate":"2022-11-07"},{"lineNumber":221,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":222,"author":{"gitId":"hoang227"},"content":"**Format:** `addC n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2022-11-07"},{"lineNumber":223,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":224,"author":{"gitId":"jeromehjj"},"content":"* `NAME` refers to the name of the client.\u003cbr\u003e","lastModifiedDate":"2022-11-10"},{"lineNumber":225,"author":{"gitId":"jeromehjj"},"content":"* `PHONE_NUMBER` refers to the phone number of the client\u003cbr\u003e","lastModifiedDate":"2022-11-10"},{"lineNumber":226,"author":{"gitId":"jeromehjj"},"content":"* `EMAIL` refers to the email address of the client.\u003cbr\u003e","lastModifiedDate":"2022-11-10"},{"lineNumber":227,"author":{"gitId":"jeromehjj"},"content":"* `ADDRESS` refers to the address of the client.\u003cbr\u003e","lastModifiedDate":"2022-11-10"},{"lineNumber":228,"author":{"gitId":"jeromehjj"},"content":"* `TAG` refers to the tags that you want to associate with the client.","lastModifiedDate":"2022-11-10"},{"lineNumber":229,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":230,"author":{"gitId":"hoang227"},"content":"**Example input:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":231,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":232,"author":{"gitId":"jeromehjj"},"content":"**_Success_**","lastModifiedDate":"2022-11-10"},{"lineNumber":233,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":234,"author":{"gitId":"hoang227"},"content":"addC n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01","lastModifiedDate":"2022-11-07"},{"lineNumber":235,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":236,"author":{"gitId":"Gavzzz"},"content":"![addClientSuccess](images/addclientjohndoe.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":237,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":238,"author":{"gitId":"jeromehjj"},"content":"```text","lastModifiedDate":"2022-11-10"},{"lineNumber":239,"author":{"gitId":"jeromehjj"},"content":"addC n/Betsy Crowe t/friend e/betsy@example.com a/Newgate Prison p/1234567 t/criminal","lastModifiedDate":"2022-11-10"},{"lineNumber":240,"author":{"gitId":"jeromehjj"},"content":"```","lastModifiedDate":"2022-11-10"},{"lineNumber":241,"author":{"gitId":"Gavzzz"},"content":"![addClientSuccess](images/addclientbetsy.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":242,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":243,"author":{"gitId":"jeromehjj"},"content":"**_Failure_**","lastModifiedDate":"2022-11-10"},{"lineNumber":244,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":245,"author":{"gitId":"jeromehjj"},"content":"* **Invalid client name:**","lastModifiedDate":"2022-11-10"},{"lineNumber":246,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":247,"author":{"gitId":"hoang227"},"content":"addC n/John D@e p/98765432 e/johnd@example.com a/John street, block 123, #01-01","lastModifiedDate":"2022-11-07"},{"lineNumber":248,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":249,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":250,"author":{"gitId":"Gavzzz"},"content":"![addClientFailure](images/invalidclientname.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":251,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":252,"author":{"gitId":"jeromehjj"},"content":"* **Missing fields:**","lastModifiedDate":"2022-11-10"},{"lineNumber":253,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":254,"author":{"gitId":"hoang227"},"content":"addC n/John Doe a/John street, block 123, #01-01","lastModifiedDate":"2022-11-07"},{"lineNumber":255,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":256,"author":{"gitId":"Gavzzz"},"content":"![addClientFailure](images/addclientmissing.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":257,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":258,"author":{"gitId":"hoang227"},"content":"**Expected Success Output:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":259,"author":{"gitId":"hoang227"},"content":"A new client is added to RealTime.\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":260,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":261,"author":{"gitId":"hoang227"},"content":"**Feedback Box:**","lastModifiedDate":"2022-11-07"},{"lineNumber":262,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":263,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":264,"author":{"gitId":"hoang227"},"content":"New client added: [details of the newly added client]","lastModifiedDate":"2022-11-07"},{"lineNumber":265,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":266,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":267,"author":{"gitId":"hoang227"},"content":"1. If you have any confusion of the notation, you can refer to the","lastModifiedDate":"2022-11-07"},{"lineNumber":268,"author":{"gitId":"jeromehjj"},"content":"   [Command Format](#command-format) section here.","lastModifiedDate":"2022-11-07"},{"lineNumber":269,"author":{"gitId":"hoang227"},"content":"2. If you are still unsure of the **prefixes**, click [here](#prefix-summary) to find out more.","lastModifiedDate":"2022-11-07"},{"lineNumber":270,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":271,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":272,"author":{"gitId":"hoang227"},"content":"Back to [Managing Clients](#managing-clients)","lastModifiedDate":"2022-11-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":274,"author":{"gitId":"hoang227"},"content":"___","lastModifiedDate":"2022-10-28"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":276,"author":{"gitId":"jeromehjj"},"content":"### Deleting a client : `delC`","lastModifiedDate":"2022-11-03"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"jeromehjj"},"content":"\u003e Deletes the client at the specified index in REal-Time.","lastModifiedDate":"2022-11-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"hoang227"},"content":"**Format** - `delC INDEX`","lastModifiedDate":"2022-11-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"hoang227"},"content":"**Example Input:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":284,"author":{"gitId":"jeromehjj"},"content":"**_Success_**","lastModifiedDate":"2022-11-10"},{"lineNumber":285,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":286,"author":{"gitId":"hoang227"},"content":"delC 1","lastModifiedDate":"2022-11-07"},{"lineNumber":287,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":288,"author":{"gitId":"Gavzzz"},"content":"![deleteClientSuccess](images/deleteclient.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":290,"author":{"gitId":"jeromehjj"},"content":"**_Failure_**","lastModifiedDate":"2022-11-10"},{"lineNumber":291,"author":{"gitId":"jeromehjj"},"content":"* **Invalid index:**","lastModifiedDate":"2022-11-10"},{"lineNumber":292,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":293,"author":{"gitId":"hoang227"},"content":"delC -1","lastModifiedDate":"2022-11-07"},{"lineNumber":294,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":295,"author":{"gitId":"Gavzzz"},"content":"![deleteClientFailure](images/invaliddelete.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":297,"author":{"gitId":"hoang227"},"content":"**Expected Success Output:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":298,"author":{"gitId":"jeromehjj"},"content":"The client at specified `INDEX` is deleted from REal-Time.\u003cbr\u003e","lastModifiedDate":"2022-11-10"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"hoang227"},"content":"**Feedback Box:**","lastModifiedDate":"2022-11-07"},{"lineNumber":301,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":302,"author":{"gitId":"hoang227"},"content":"Deleted Client: [details of the deleted client]","lastModifiedDate":"2022-11-07"},{"lineNumber":303,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":304,"author":{"gitId":"hoang227"},"content":"**Note:**","lastModifiedDate":"2022-11-07"},{"lineNumber":305,"author":{"gitId":"jeromehjj"},"content":"1. `listC` followed by `delC 2` deletes the 2nd client in the REal-Time.","lastModifiedDate":"2022-11-07"},{"lineNumber":306,"author":{"gitId":"hoang227"},"content":"2. `findC Betsy` followed by `delC 1` deletes the 1st client in the results of the `findC` command.","lastModifiedDate":"2022-11-07"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"hoang227"},"content":"1. If you have any confusion of the notation, you can refer to the","lastModifiedDate":"2022-11-07"},{"lineNumber":309,"author":{"gitId":"jeromehjj"},"content":"   [Command Format](#command-format) section here.","lastModifiedDate":"2022-11-07"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":311,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":312,"author":{"gitId":"hoang227"},"content":"Back to [Managing Clients](#managing-clients)","lastModifiedDate":"2022-11-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":314,"author":{"gitId":"hoang227"},"content":"___","lastModifiedDate":"2022-10-28"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"hoang227"},"content":"### Editing a client : `editC`","lastModifiedDate":"2022-11-07"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"jeromehjj"},"content":"\u003e Edits an existing client in REal-Time.","lastModifiedDate":"2022-11-07"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"hoang227"},"content":"**Format:** `editC INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2022-11-07"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"hoang227"},"content":"**Example input:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":323,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":324,"author":{"gitId":"jeromehjj"},"content":"**_Success_**","lastModifiedDate":"2022-11-10"},{"lineNumber":325,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":326,"author":{"gitId":"hoang227"},"content":"editC 1 p/91234567 e/johndoe@example.com","lastModifiedDate":"2022-11-07"},{"lineNumber":327,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":328,"author":{"gitId":"Gavzzz"},"content":"![editClientSuccess](images/editclient.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":329,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":330,"author":{"gitId":"jeromehjj"},"content":"```text","lastModifiedDate":"2022-11-10"},{"lineNumber":331,"author":{"gitId":"jeromehjj"},"content":"editC 2 n/Betsy Crower t/","lastModifiedDate":"2022-11-10"},{"lineNumber":332,"author":{"gitId":"jeromehjj"},"content":"```","lastModifiedDate":"2022-11-10"},{"lineNumber":333,"author":{"gitId":"Gavzzz"},"content":"![editClientSuccess](images/editbetsy.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":334,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":335,"author":{"gitId":"jeromehjj"},"content":"**_Failure_**","lastModifiedDate":"2022-11-10"},{"lineNumber":336,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":337,"author":{"gitId":"jeromehjj"},"content":"* **Invalid index:**","lastModifiedDate":"2022-11-10"},{"lineNumber":338,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":339,"author":{"gitId":"hoang227"},"content":"editC 0 p/12345678","lastModifiedDate":"2022-11-07"},{"lineNumber":340,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":341,"author":{"gitId":"Gavzzz"},"content":"![editClientFailure](images/invaliddeleteindex.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":342,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":343,"author":{"gitId":"jeromehjj"},"content":"* **Missing fields:**","lastModifiedDate":"2022-11-10"},{"lineNumber":344,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":345,"author":{"gitId":"hoang227"},"content":"editC 1","lastModifiedDate":"2022-11-07"},{"lineNumber":346,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":347,"author":{"gitId":"Gavzzz"},"content":"![editClientFailure](images/editmissingfield.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":348,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":349,"author":{"gitId":"hoang227"},"content":"**Expected Success Output:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":350,"author":{"gitId":"hoang227"},"content":"The client at the specified `INDEX` is edited according to the fields provided.\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":351,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":352,"author":{"gitId":"hoang227"},"content":"**Feedback Box:**","lastModifiedDate":"2022-11-07"},{"lineNumber":353,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":354,"author":{"gitId":"hoang227"},"content":"Edited Client: [newly updated details of client]","lastModifiedDate":"2022-11-07"},{"lineNumber":355,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":356,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":357,"author":{"gitId":"hoang227"},"content":"**Note:**","lastModifiedDate":"2022-11-07"},{"lineNumber":358,"author":{"gitId":"hoang227"},"content":"1. Edits the client at the specified `INDEX`. The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2022-11-07"},{"lineNumber":359,"author":{"gitId":"jeromehjj"},"content":"   The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-11-03"},{"lineNumber":360,"author":{"gitId":"hoang227"},"content":"2. At least one of the optional fields must be provided.","lastModifiedDate":"2022-11-07"},{"lineNumber":361,"author":{"gitId":"hoang227"},"content":"3. Existing values will be updated to the input values.","lastModifiedDate":"2022-11-07"},{"lineNumber":362,"author":{"gitId":"hoang227"},"content":"4. When editing tags, the existing tags of the client will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2022-11-07"},{"lineNumber":363,"author":{"gitId":"hoang227"},"content":"5. You can remove all the client’s tags by typing `t/` without","lastModifiedDate":"2022-11-07"},{"lineNumber":364,"author":{"gitId":"-"},"content":"   specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":366,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":367,"author":{"gitId":"hoang227"},"content":"**Help:**","lastModifiedDate":"2022-11-07"},{"lineNumber":368,"author":{"gitId":"hoang227"},"content":"1. If you have any confusion of the notation, you can refer to the","lastModifiedDate":"2022-11-07"},{"lineNumber":369,"author":{"gitId":"jeromehjj"},"content":"   [Command Format](#command-format) section here.","lastModifiedDate":"2022-11-07"},{"lineNumber":370,"author":{"gitId":"hoang227"},"content":"2. If you are still unsure of the **prefixes**, click [here](#prefix-summary) to find out more.","lastModifiedDate":"2022-11-07"},{"lineNumber":371,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":372,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":373,"author":{"gitId":"hoang227"},"content":"Back to [Managing Clients](#managing-clients)","lastModifiedDate":"2022-11-07"},{"lineNumber":374,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":375,"author":{"gitId":"hoang227"},"content":"___","lastModifiedDate":"2022-10-28"},{"lineNumber":376,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":377,"author":{"gitId":"jeromehjj"},"content":"### Finding clients by name: `findC`","lastModifiedDate":"2022-11-03"},{"lineNumber":378,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":379,"author":{"gitId":"jeromehjj"},"content":"Finds clients whose names contain any of the given keywords.","lastModifiedDate":"2022-11-03"},{"lineNumber":380,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":381,"author":{"gitId":"hoang227"},"content":"**Format:** `findC KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-11-07"},{"lineNumber":382,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":383,"author":{"gitId":"hoang227"},"content":"**Example Input:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":384,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":385,"author":{"gitId":"jeromehjj"},"content":"**_Success_**","lastModifiedDate":"2022-11-10"},{"lineNumber":386,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":387,"author":{"gitId":"hoang227"},"content":"findC John","lastModifiedDate":"2022-11-07"},{"lineNumber":388,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":389,"author":{"gitId":"Gavzzz"},"content":"![findClientSuccess](images/findclient.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":390,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":391,"author":{"gitId":"jeromehjj"},"content":"**_Failure_**","lastModifiedDate":"2022-11-10"},{"lineNumber":392,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":393,"author":{"gitId":"jeromehjj"},"content":"* **No keywords provided:**","lastModifiedDate":"2022-11-10"},{"lineNumber":394,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":395,"author":{"gitId":"hoang227"},"content":"findC","lastModifiedDate":"2022-11-07"},{"lineNumber":396,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":397,"author":{"gitId":"Gavzzz"},"content":"![findClientFailure](images/findclientinvalid.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":398,"author":{"gitId":"jeromehjj"},"content":"* The list of clients in the Client Box is updated to a list of all matches from the findC command.","lastModifiedDate":"2022-11-10"},{"lineNumber":399,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":400,"author":{"gitId":"hoang227"},"content":"**Feedback Box:**","lastModifiedDate":"2022-11-07"},{"lineNumber":401,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":402,"author":{"gitId":"hoang227"},"content":"[number of matches] clients listed!","lastModifiedDate":"2022-11-07"},{"lineNumber":403,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":404,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":405,"author":{"gitId":"jeromehjj"},"content":"![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2022-11-03"},{"lineNumber":406,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":407,"author":{"gitId":"hoang227"},"content":"**Note:**","lastModifiedDate":"2022-11-07"},{"lineNumber":408,"author":{"gitId":"hoang227"},"content":"1. The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2022-11-07"},{"lineNumber":409,"author":{"gitId":"hoang227"},"content":"2. The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2022-11-07"},{"lineNumber":410,"author":{"gitId":"hoang227"},"content":"3. Only the name is searched.","lastModifiedDate":"2022-11-07"},{"lineNumber":411,"author":{"gitId":"hoang227"},"content":"4. Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2022-11-07"},{"lineNumber":412,"author":{"gitId":"hoang227"},"content":"5. Clients matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-11-07"},{"lineNumber":413,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2022-11-07"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":415,"author":{"gitId":"hoang227"},"content":"**Help:**","lastModifiedDate":"2022-11-07"},{"lineNumber":416,"author":{"gitId":"hoang227"},"content":"1. If you have any confusion of the notation, you can refer to the","lastModifiedDate":"2022-11-07"},{"lineNumber":417,"author":{"gitId":"jeromehjj"},"content":"   [Command Format](#command-format) section here.","lastModifiedDate":"2022-11-07"},{"lineNumber":418,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":419,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":420,"author":{"gitId":"hoang227"},"content":"Back to [Managing Clients](#managing-clients)","lastModifiedDate":"2022-11-07"},{"lineNumber":421,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":422,"author":{"gitId":"jeromehjj"},"content":"___","lastModifiedDate":"2022-11-03"},{"lineNumber":423,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":424,"author":{"gitId":"jeromehjj"},"content":"### Listing Clients: `listC`","lastModifiedDate":"2022-11-03"},{"lineNumber":425,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":426,"author":{"gitId":"hoang227"},"content":"\u003e Shows the full list of clients.","lastModifiedDate":"2022-11-07"},{"lineNumber":427,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":428,"author":{"gitId":"hoang227"},"content":"**Format:** `listC`","lastModifiedDate":"2022-11-07"},{"lineNumber":429,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":430,"author":{"gitId":"hoang227"},"content":"**Expected Success Output:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":431,"author":{"gitId":"hoang227"},"content":"The full list of clients appears in the Client Box.\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":432,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":433,"author":{"gitId":"Gavzzz"},"content":"![listClientSuccess](images/listclient.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":434,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":435,"author":{"gitId":"hoang227"},"content":"**Feedback Box:**","lastModifiedDate":"2022-11-07"},{"lineNumber":436,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":437,"author":{"gitId":"hoang227"},"content":"Listed all clients","lastModifiedDate":"2022-11-07"},{"lineNumber":438,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":439,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":440,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":441,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":442,"author":{"gitId":"hoang227"},"content":"Back to [Managing Clients](#managing-clients)","lastModifiedDate":"2022-11-07"},{"lineNumber":443,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":444,"author":{"gitId":"jeromehjj"},"content":"___","lastModifiedDate":"2022-11-03"},{"lineNumber":445,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":446,"author":{"gitId":"jeromehjj"},"content":"## Managing Offers","lastModifiedDate":"2022-11-03"},{"lineNumber":447,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":448,"author":{"gitId":"jeromehjj"},"content":"In this section, we provide you the basic steps needed to [add](#adding-an-offer-addo), [delete](#deleting-an-offer--delo),","lastModifiedDate":"2022-11-03"},{"lineNumber":449,"author":{"gitId":"jeromehjj"},"content":"and [edit](#editing-an-offer--edito) offers.","lastModifiedDate":"2022-11-03"},{"lineNumber":450,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":451,"author":{"gitId":"jeromehjj"},"content":"**If this is not the section you are looking for**, click [here](#table-of-contents) to go back to the **Table of Contents**.","lastModifiedDate":"2022-11-03"},{"lineNumber":452,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":453,"author":{"gitId":"hoang227"},"content":"___","lastModifiedDate":"2022-10-28"},{"lineNumber":454,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":455,"author":{"gitId":"jeromehjj"},"content":"### Adding an offer: `addO`","lastModifiedDate":"2022-11-03"},{"lineNumber":456,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":457,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":458,"author":{"gitId":"jeromehjj"},"content":"\u003e Adds an offer to REal-Time.","lastModifiedDate":"2022-11-07"},{"lineNumber":459,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":460,"author":{"gitId":"hoang227"},"content":"**Format:** `addO l/LISTING_ID n/NAME o/OFFER_PRICE`","lastModifiedDate":"2022-11-07"},{"lineNumber":461,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":462,"author":{"gitId":"jeromehjj"},"content":"* `LISTING_ID` refers to the ListingId of the Listing that the offer has been made for.\u003cbr\u003e","lastModifiedDate":"2022-11-10"},{"lineNumber":463,"author":{"gitId":"jeromehjj"},"content":"* `NAME` refers to the name of the client making the offer.\u003cbr\u003e","lastModifiedDate":"2022-11-10"},{"lineNumber":464,"author":{"gitId":"jeromehjj"},"content":"* `OFFER_PRICE` refers to the offer price that has been made for the listing.","lastModifiedDate":"2022-11-10"},{"lineNumber":465,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":466,"author":{"gitId":"hoang227"},"content":"**Example Input:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":467,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":468,"author":{"gitId":"jeromehjj"},"content":"**_Success_**","lastModifiedDate":"2022-11-10"},{"lineNumber":469,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":470,"author":{"gitId":"hoang227"},"content":"addO l/BEDOK_NORTH_BLK123_12 n/John Doe o/2000000","lastModifiedDate":"2022-11-07"},{"lineNumber":471,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":472,"author":{"gitId":"jeromehjj"},"content":"![addOfferSuccess](images/AddOfferSuccess.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":473,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":474,"author":{"gitId":"jeromehjj"},"content":"**_Failure_**","lastModifiedDate":"2022-11-10"},{"lineNumber":475,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":476,"author":{"gitId":"jeromehjj"},"content":"* **Missing fields:**","lastModifiedDate":"2022-11-10"},{"lineNumber":477,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":478,"author":{"gitId":"jeromehjj"},"content":"addO l/BEDOK_NORTH_BLK123_12 n/John Doe","lastModifiedDate":"2022-11-07"},{"lineNumber":479,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":480,"author":{"gitId":"jeromehjj"},"content":"![addOfferFailure1](images/AddOfferFailure1.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":481,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":482,"author":{"gitId":"jeromehjj"},"content":"* **Invalid offer price:**","lastModifiedDate":"2022-11-10"},{"lineNumber":483,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":484,"author":{"gitId":"hoang227"},"content":"addO l/BEDOK_NORTH_BLK123_12 n/John Doe o/-1","lastModifiedDate":"2022-11-07"},{"lineNumber":485,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":486,"author":{"gitId":"jeromehjj"},"content":"![addOfferFailure2](images/AddOfferFailure2.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":487,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":488,"author":{"gitId":"hoang227"},"content":"**Expected Success Output:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":489,"author":{"gitId":"jeromehjj"},"content":"A new offer is added to REal-Time\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"hoang227"},"content":"**Feedback Box:**","lastModifiedDate":"2022-11-07"},{"lineNumber":492,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":493,"author":{"gitId":"hoang227"},"content":"New offer added: [offer details]","lastModifiedDate":"2022-11-07"},{"lineNumber":494,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"hoang227"},"content":"**Help:**","lastModifiedDate":"2022-11-07"},{"lineNumber":497,"author":{"gitId":"hoang227"},"content":"1. If you have any confusion of the notation, you can refer to the","lastModifiedDate":"2022-11-07"},{"lineNumber":498,"author":{"gitId":"jeromehjj"},"content":"   [Command Format](#command-format) section here.","lastModifiedDate":"2022-11-07"},{"lineNumber":499,"author":{"gitId":"hoang227"},"content":"2. If you are still unsure of the **prefixes**, click [here](#prefix-summary) to find out more.","lastModifiedDate":"2022-11-07"},{"lineNumber":500,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":501,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":502,"author":{"gitId":"hoang227"},"content":"Back to [Managing Offers](#managing-offers)","lastModifiedDate":"2022-11-07"},{"lineNumber":503,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":504,"author":{"gitId":"hoang227"},"content":"___","lastModifiedDate":"2022-11-07"},{"lineNumber":505,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":506,"author":{"gitId":"hoang227"},"content":"### Deleting an offer : `delO`","lastModifiedDate":"2022-11-07"},{"lineNumber":507,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":508,"author":{"gitId":"jeromehjj"},"content":"\u003e Deletes the specified offer in REal-Time.","lastModifiedDate":"2022-11-07"},{"lineNumber":509,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":510,"author":{"gitId":"hoang227"},"content":"**Format** - `delO INDEX`","lastModifiedDate":"2022-11-07"},{"lineNumber":511,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":512,"author":{"gitId":"hoang227"},"content":"**Example Input:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":513,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":514,"author":{"gitId":"jeromehjj"},"content":"**_Success_**","lastModifiedDate":"2022-11-10"},{"lineNumber":515,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":516,"author":{"gitId":"hoang227"},"content":"delO 2","lastModifiedDate":"2022-11-07"},{"lineNumber":517,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":518,"author":{"gitId":"jeromehjj"},"content":"![DeleteOfferSuccess](images/DeleteOfferSuccess.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":519,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":520,"author":{"gitId":"jeromehjj"},"content":"**_Failure_**","lastModifiedDate":"2022-11-10"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":522,"author":{"gitId":"jeromehjj"},"content":"* **Invalid index:**","lastModifiedDate":"2022-11-10"},{"lineNumber":523,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":524,"author":{"gitId":"hoang227"},"content":"delO 0","lastModifiedDate":"2022-11-07"},{"lineNumber":525,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":526,"author":{"gitId":"jeromehjj"},"content":"![DeleteOfferInvalid1](images/DeleteOfferInvalid1.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":528,"author":{"gitId":"jeromehjj"},"content":"* **Missing Index**","lastModifiedDate":"2022-11-10"},{"lineNumber":529,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":530,"author":{"gitId":"hoang227"},"content":"delO","lastModifiedDate":"2022-11-07"},{"lineNumber":531,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":532,"author":{"gitId":"jeromehjj"},"content":"![DeleteOfferInvalid2](images/DeleteOfferInvalid2.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":534,"author":{"gitId":"hoang227"},"content":"**Expected Success Output:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":535,"author":{"gitId":"jeromehjj"},"content":"The offer at specified `INDEX`  is deleted from REal-Time.\u003cbr\u003e","lastModifiedDate":"2022-11-10"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":537,"author":{"gitId":"hoang227"},"content":"**Feedback Box:**","lastModifiedDate":"2022-11-07"},{"lineNumber":538,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":539,"author":{"gitId":"hoang227"},"content":"Deleted Offer: [details of the deleted offer]","lastModifiedDate":"2022-11-07"},{"lineNumber":540,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":541,"author":{"gitId":"hoang227"},"content":"**Help:**","lastModifiedDate":"2022-11-07"},{"lineNumber":542,"author":{"gitId":"hoang227"},"content":"1. If you have any confusion of the notation, you can refer to the ","lastModifiedDate":"2022-11-07"},{"lineNumber":543,"author":{"gitId":"jeromehjj"},"content":"[Command Format](#command-format) section here.","lastModifiedDate":"2022-11-07"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":545,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":546,"author":{"gitId":"hoang227"},"content":"Back to [Managing Offers](#managing-offers)","lastModifiedDate":"2022-11-07"},{"lineNumber":547,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":548,"author":{"gitId":"hoang227"},"content":"___","lastModifiedDate":"2022-10-28"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"jeromehjj"},"content":"### Editing an offer : `editO`","lastModifiedDate":"2022-11-03"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"jeromehjj"},"content":"\u003e Edits an existing offer in REal-Time.","lastModifiedDate":"2022-11-07"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"hoang227"},"content":"**Format:** `editO INDEX [n/NAME] [o/OFFER_PRICE] [l/LISTING_ID]`","lastModifiedDate":"2022-11-07"},{"lineNumber":555,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":556,"author":{"gitId":"hoang227"},"content":"**Example Input:**","lastModifiedDate":"2022-11-07"},{"lineNumber":557,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":558,"author":{"gitId":"jeromehjj"},"content":"**_Success_**","lastModifiedDate":"2022-11-10"},{"lineNumber":559,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":560,"author":{"gitId":"hoang227"},"content":"editO 2 n/Betsy Crower o/200000","lastModifiedDate":"2022-11-07"},{"lineNumber":561,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":562,"author":{"gitId":"jeromehjj"},"content":"![EditOfferSuccess](images/EditOfferSuccess.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":563,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":564,"author":{"gitId":"jeromehjj"},"content":"**_Failure_**","lastModifiedDate":"2022-11-10"},{"lineNumber":565,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":566,"author":{"gitId":"jeromehjj"},"content":"* **Invalid index:**","lastModifiedDate":"2022-11-10"},{"lineNumber":567,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":568,"author":{"gitId":"hoang227"},"content":"editO -1 n/Betsy Crower o/200000","lastModifiedDate":"2022-11-07"},{"lineNumber":569,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":570,"author":{"gitId":"jeromehjj"},"content":"![EditOfferInvalidIndex](images/EditOfferInvalidIndex.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":571,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":572,"author":{"gitId":"jeromehjj"},"content":"* **Invalid client name:**","lastModifiedDate":"2022-11-10"},{"lineNumber":573,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":574,"author":{"gitId":"hoang227"},"content":"editO 2 n/Betsy Cr@wer o/200000","lastModifiedDate":"2022-11-07"},{"lineNumber":575,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":576,"author":{"gitId":"jeromehjj"},"content":"![EditOfferInvalidName](images/EditOfferInvalidName.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":577,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":578,"author":{"gitId":"hoang227"},"content":"**Expected Success Output:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":579,"author":{"gitId":"hoang227"},"content":"The offer at `INDEX` 2 is edited according to the fields provided.\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":580,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":581,"author":{"gitId":"hoang227"},"content":"**Feedback Box:**","lastModifiedDate":"2022-11-07"},{"lineNumber":582,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":583,"author":{"gitId":"hoang227"},"content":"Edited Offer: [newly updated details of offer]","lastModifiedDate":"2022-11-07"},{"lineNumber":584,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":585,"author":{"gitId":"hoang227"},"content":"**Note:**","lastModifiedDate":"2022-11-07"},{"lineNumber":586,"author":{"gitId":"hoang227"},"content":"1. Edits the offer at the specified `INDEX`. The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2022-11-07"},{"lineNumber":587,"author":{"gitId":"hoang227"},"content":"   The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-11-07"},{"lineNumber":588,"author":{"gitId":"hoang227"},"content":"2. At least one of the optional fields must be provided.","lastModifiedDate":"2022-11-07"},{"lineNumber":589,"author":{"gitId":"hoang227"},"content":"3. Existing values will be updated to the input values.","lastModifiedDate":"2022-11-07"},{"lineNumber":590,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":591,"author":{"gitId":"hoang227"},"content":"**Help:**","lastModifiedDate":"2022-11-07"},{"lineNumber":592,"author":{"gitId":"hoang227"},"content":"1. If you have any confusion of the notation, you can refer to the","lastModifiedDate":"2022-11-07"},{"lineNumber":593,"author":{"gitId":"jeromehjj"},"content":"   [Command Format](#command-format) section here.","lastModifiedDate":"2022-11-07"},{"lineNumber":594,"author":{"gitId":"hoang227"},"content":"2. If you are still unsure of the **prefixes**, click [here](#prefix-summary) to find out more.","lastModifiedDate":"2022-11-07"},{"lineNumber":595,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":596,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":597,"author":{"gitId":"hoang227"},"content":"Back to [Managing Offers](#managing-offers)","lastModifiedDate":"2022-11-07"},{"lineNumber":598,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":599,"author":{"gitId":"hoang227"},"content":"___","lastModifiedDate":"2022-10-28"},{"lineNumber":600,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":601,"author":{"gitId":"jeromehjj"},"content":"## Managing Listings","lastModifiedDate":"2022-11-03"},{"lineNumber":602,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":603,"author":{"gitId":"hoang227"},"content":"In this section, we provide you the basic steps needed to [add](#adding-a-listing-addl), [delete](#deleting-a-listing--dell),","lastModifiedDate":"2022-11-07"},{"lineNumber":604,"author":{"gitId":"hoang227"},"content":"[edit](#editing-a-listing--editl) and [list](#listing-listings-listl) listings.","lastModifiedDate":"2022-11-07"},{"lineNumber":605,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":606,"author":{"gitId":"hoang227"},"content":"**If this is not the section you are looking for**, click [here](#table-of-contents) to go back to the **Table of Contents**.","lastModifiedDate":"2022-11-07"},{"lineNumber":607,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":608,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":609,"author":{"gitId":"jeromehjj"},"content":"### Adding a listing: `addL`","lastModifiedDate":"2022-11-03"},{"lineNumber":610,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":611,"author":{"gitId":"jeromehjj"},"content":"\u003e Adds a listing to REal-Time.","lastModifiedDate":"2022-11-07"},{"lineNumber":612,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":613,"author":{"gitId":"hoang227"},"content":"**Format:** `addL l/LISTING_ID a/ADDRESS n/OWNER_NAME ap/ASKING_PRICE [t/TAG]…​`","lastModifiedDate":"2022-11-07"},{"lineNumber":614,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":615,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":616,"author":{"gitId":"jeromehjj"},"content":"* `l/LISTING_ID` refers to the ListingId you wish to assign to this Listing.\u003cbr\u003e","lastModifiedDate":"2022-11-10"},{"lineNumber":617,"author":{"gitId":"jeromehjj"},"content":"* `a/ADDRESS` refers to the address of this Listing.\u003cbr\u003e","lastModifiedDate":"2022-11-10"},{"lineNumber":618,"author":{"gitId":"jeromehjj"},"content":"* `n/NAME` refers to the name of the owner of this Listing.\u003cbr\u003e","lastModifiedDate":"2022-11-10"},{"lineNumber":619,"author":{"gitId":"jeromehjj"},"content":"* `ap/ASKING_PRICE` refers to the asking price that the owner is asking for this Listing.","lastModifiedDate":"2022-11-10"},{"lineNumber":620,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":621,"author":{"gitId":"hoang227"},"content":"**Example Input:**","lastModifiedDate":"2022-11-07"},{"lineNumber":622,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":623,"author":{"gitId":"jeromehjj"},"content":"**_Success_**","lastModifiedDate":"2022-11-10"},{"lineNumber":624,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":625,"author":{"gitId":"hoang227"},"content":"addL l/007 a/100 Charming Ave n/Joke Peralta ap/10000000","lastModifiedDate":"2022-11-07"},{"lineNumber":626,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":627,"author":{"gitId":"jeromehjj"},"content":"![addL example](images/addL.png)","lastModifiedDate":"2022-11-03"},{"lineNumber":628,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":629,"author":{"gitId":"jeromehjj"},"content":"**_Failure_**","lastModifiedDate":"2022-11-10"},{"lineNumber":630,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":631,"author":{"gitId":"jeromehjj"},"content":"* **Missing asking price field:**","lastModifiedDate":"2022-11-10"},{"lineNumber":632,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":633,"author":{"gitId":"hoang227"},"content":"addL l/007 a/100 Charming Ave n/Joke Peralta`","lastModifiedDate":"2022-11-07"},{"lineNumber":634,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":635,"author":{"gitId":"jeromehjj"},"content":"![addL Missing Parameter example](images/addLMissingParam.png)","lastModifiedDate":"2022-11-03"},{"lineNumber":636,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":637,"author":{"gitId":"hoang227"},"content":"**Expected Success Output:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":638,"author":{"gitId":"jeromehjj"},"content":"A new listing is added to REal-Time\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":639,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":640,"author":{"gitId":"hoang227"},"content":"**Feedback Box:**","lastModifiedDate":"2022-11-07"},{"lineNumber":641,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":642,"author":{"gitId":"hoang227"},"content":"New listing added: [listing details]","lastModifiedDate":"2022-11-07"},{"lineNumber":643,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":644,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":645,"author":{"gitId":"hoang227"},"content":"**Help:**","lastModifiedDate":"2022-11-07"},{"lineNumber":646,"author":{"gitId":"hoang227"},"content":"1. If you have any confusion of the notation, you can refer to the","lastModifiedDate":"2022-11-07"},{"lineNumber":647,"author":{"gitId":"jeromehjj"},"content":"   [Command Format](#command-format) section here.","lastModifiedDate":"2022-11-07"},{"lineNumber":648,"author":{"gitId":"hoang227"},"content":"2. If you are still unsure of the **prefixes**, click [here](#prefix-summary) to find out more.","lastModifiedDate":"2022-11-07"},{"lineNumber":649,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":650,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":651,"author":{"gitId":"hoang227"},"content":"Back to [Managing Listings](#managing-listings)","lastModifiedDate":"2022-11-07"},{"lineNumber":652,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":653,"author":{"gitId":"hoang227"},"content":"___","lastModifiedDate":"2022-10-28"},{"lineNumber":654,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":655,"author":{"gitId":"jeromehjj"},"content":"### Deleting a listing : `delL`","lastModifiedDate":"2022-11-03"},{"lineNumber":656,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":657,"author":{"gitId":"jeromehjj"},"content":"\u003e Deletes the listing at the specified Index from REal-Time.","lastModifiedDate":"2022-11-07"},{"lineNumber":658,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":659,"author":{"gitId":"hoang227"},"content":"**Format:** `delL id/INDEX`","lastModifiedDate":"2022-11-07"},{"lineNumber":660,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":661,"author":{"gitId":"hoang227"},"content":"**Example Input:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":662,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":663,"author":{"gitId":"jeromehjj"},"content":"**_Success_**","lastModifiedDate":"2022-11-10"},{"lineNumber":664,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":665,"author":{"gitId":"hoang227"},"content":"delL 1","lastModifiedDate":"2022-11-07"},{"lineNumber":666,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":667,"author":{"gitId":"hoang227"},"content":"![delL example](images/delL.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":668,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":669,"author":{"gitId":"jeromehjj"},"content":"**_Failure_**","lastModifiedDate":"2022-11-10"},{"lineNumber":670,"author":{"gitId":"jeromehjj"},"content":"* **Invalid index:**","lastModifiedDate":"2022-11-10"},{"lineNumber":671,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":672,"author":{"gitId":"hoang227"},"content":"delL 2356739457","lastModifiedDate":"2022-11-07"},{"lineNumber":673,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":674,"author":{"gitId":"Isaaclhy00"},"content":"![delL Invalid ListingId example](images/delLInvalidId.png)","lastModifiedDate":"2022-11-10"},{"lineNumber":675,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":676,"author":{"gitId":"hoang227"},"content":"**Expected Success Output:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":677,"author":{"gitId":"jeromehjj"},"content":"The listing at the specified `INDEX` is deleted from REal-Time.\u003cbr\u003e","lastModifiedDate":"2022-11-10"},{"lineNumber":678,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":679,"author":{"gitId":"hoang227"},"content":"**Feedback Box:**","lastModifiedDate":"2022-11-07"},{"lineNumber":680,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":681,"author":{"gitId":"hoang227"},"content":"Deleted Listing: [details of the deleted listing]","lastModifiedDate":"2022-11-07"},{"lineNumber":682,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":683,"author":{"gitId":"hoang227"},"content":"**Help:**","lastModifiedDate":"2022-11-07"},{"lineNumber":684,"author":{"gitId":"hoang227"},"content":"1. If you have any confusion of the notation, you can refer to the","lastModifiedDate":"2022-11-07"},{"lineNumber":685,"author":{"gitId":"jeromehjj"},"content":"   [Command Format](#command-format) section here.","lastModifiedDate":"2022-11-07"},{"lineNumber":686,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":687,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":688,"author":{"gitId":"hoang227"},"content":"Back to [Managing Listings](#managing-listings)","lastModifiedDate":"2022-11-07"},{"lineNumber":689,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":690,"author":{"gitId":"hoang227"},"content":"___","lastModifiedDate":"2022-11-07"},{"lineNumber":691,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":692,"author":{"gitId":"hoang227"},"content":"### Editing a listing : `editL`","lastModifiedDate":"2022-11-07"},{"lineNumber":693,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":694,"author":{"gitId":"jeromehjj"},"content":"\u003e Edits an existing listing in the REal-Time.","lastModifiedDate":"2022-11-07"},{"lineNumber":695,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":696,"author":{"gitId":"hoang227"},"content":"**Format:** `editL INDEX [l/LISTING_ID] [a/ADDRESS] [n/OWNER_NAME] [ap/ASKING_PRICE] [t/TAG]…​`","lastModifiedDate":"2022-11-07"},{"lineNumber":697,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":698,"author":{"gitId":"hoang227"},"content":"**Example input:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":699,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":700,"author":{"gitId":"jeromehjj"},"content":"**_Success_**","lastModifiedDate":"2022-11-10"},{"lineNumber":701,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":702,"author":{"gitId":"jeromehjj"},"content":"editL 1 n/Joke Peralta","lastModifiedDate":"2022-11-10"},{"lineNumber":703,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":704,"author":{"gitId":"jeromehjj"},"content":"![editL example](images/editL.png)","lastModifiedDate":"2022-11-03"},{"lineNumber":705,"author":{"gitId":"jeromehjj"},"content":"![editedL example](images/editedL.png)","lastModifiedDate":"2022-11-03"},{"lineNumber":706,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":707,"author":{"gitId":"jeromehjj"},"content":"**_Failure_**","lastModifiedDate":"2022-11-10"},{"lineNumber":708,"author":{"gitId":"jeromehjj"},"content":"* **Invalid index:**","lastModifiedDate":"2022-11-10"},{"lineNumber":709,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":710,"author":{"gitId":"hoang227"},"content":"editL 200 n/Joke Peralta","lastModifiedDate":"2022-11-07"},{"lineNumber":711,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":712,"author":{"gitId":"jeromehjj"},"content":"![editL IndexOutOfBounds example](images/editLIndexOutOfBounds.png)","lastModifiedDate":"2022-11-03"},{"lineNumber":713,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":714,"author":{"gitId":"jeromehjj"},"content":"* **Missing fields:**","lastModifiedDate":"2022-11-10"},{"lineNumber":715,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":716,"author":{"gitId":"hoang227"},"content":"editL 1","lastModifiedDate":"2022-11-07"},{"lineNumber":717,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":718,"author":{"gitId":"jeromehjj"},"content":"![editL No Change example](images/editLNoChange.png)","lastModifiedDate":"2022-11-03"},{"lineNumber":719,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":720,"author":{"gitId":"hoang227"},"content":"**Expected Success Output:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":721,"author":{"gitId":"jeromehjj"},"content":"The listing at the specified `INDEX` is edited according to the fields provided.\u003cbr\u003e","lastModifiedDate":"2022-11-10"},{"lineNumber":722,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":723,"author":{"gitId":"hoang227"},"content":"**Feedback Box:**","lastModifiedDate":"2022-11-07"},{"lineNumber":724,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":725,"author":{"gitId":"jeromehjj"},"content":"Edited Listing: [newly updated details of listing]","lastModifiedDate":"2022-11-10"},{"lineNumber":726,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":727,"author":{"gitId":"hoang227"},"content":"**Note:**","lastModifiedDate":"2022-11-07"},{"lineNumber":728,"author":{"gitId":"jeromehjj"},"content":"1. Edits the listing at the specified `INDEX`. The index refers to the index number shown in the displayed listing list.","lastModifiedDate":"2022-11-10"},{"lineNumber":729,"author":{"gitId":"hoang227"},"content":"   The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-11-07"},{"lineNumber":730,"author":{"gitId":"hoang227"},"content":"2. At least one of the optional fields must be provided.","lastModifiedDate":"2022-11-07"},{"lineNumber":731,"author":{"gitId":"hoang227"},"content":"3. Existing values will be updated to the input values.","lastModifiedDate":"2022-11-07"},{"lineNumber":732,"author":{"gitId":"jeromehjj"},"content":"4. When editing tags, the existing tags of the listing will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2022-11-10"},{"lineNumber":733,"author":{"gitId":"jeromehjj"},"content":"5. You can remove all the listing’s tags by typing `t/` without","lastModifiedDate":"2022-11-10"},{"lineNumber":734,"author":{"gitId":"hoang227"},"content":"   specifying any tags after it.","lastModifiedDate":"2022-11-07"},{"lineNumber":735,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":736,"author":{"gitId":"hoang227"},"content":"**Help:**","lastModifiedDate":"2022-11-07"},{"lineNumber":737,"author":{"gitId":"hoang227"},"content":"1. If you have any confusion of the notation, you can refer to the","lastModifiedDate":"2022-11-07"},{"lineNumber":738,"author":{"gitId":"jeromehjj"},"content":"   [Command Format](#command-format) section here.","lastModifiedDate":"2022-11-07"},{"lineNumber":739,"author":{"gitId":"hoang227"},"content":"2. If you are still unsure of the **prefixes**, click [here](#prefix-summary) to find out more.","lastModifiedDate":"2022-11-07"},{"lineNumber":740,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":741,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":742,"author":{"gitId":"hoang227"},"content":"Back to [Managing Listings](#managing-listings)","lastModifiedDate":"2022-11-07"},{"lineNumber":743,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":744,"author":{"gitId":"jeromehjj"},"content":"___","lastModifiedDate":"2022-11-03"},{"lineNumber":745,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":746,"author":{"gitId":"jeromehjj"},"content":"### Listing listings: `listL`","lastModifiedDate":"2022-11-03"},{"lineNumber":747,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":748,"author":{"gitId":"hoang227"},"content":"\u003e Shows the full list of listings.","lastModifiedDate":"2022-11-07"},{"lineNumber":749,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":750,"author":{"gitId":"hoang227"},"content":"**Format:** `listL`","lastModifiedDate":"2022-11-07"},{"lineNumber":751,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":752,"author":{"gitId":"hoang227"},"content":"**Expected Success Output:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":753,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":754,"author":{"gitId":"hoang227"},"content":"The full list of listings appears in the Client Box.\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":755,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":756,"author":{"gitId":"Gavzzz"},"content":"![ListLSuccess](images/listL.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":757,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":758,"author":{"gitId":"hoang227"},"content":"**Feedback Box:**","lastModifiedDate":"2022-11-07"},{"lineNumber":759,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":760,"author":{"gitId":"hoang227"},"content":"Listed all listings","lastModifiedDate":"2022-11-07"},{"lineNumber":761,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":762,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":763,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":764,"author":{"gitId":"hoang227"},"content":"Back to [Managing Listings](#managing-listings)","lastModifiedDate":"2022-11-07"},{"lineNumber":765,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":766,"author":{"gitId":"hoang227"},"content":"___","lastModifiedDate":"2022-10-28"},{"lineNumber":767,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":768,"author":{"gitId":"jeromehjj"},"content":"## Managing Meetings","lastModifiedDate":"2022-11-03"},{"lineNumber":769,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"hoang227"},"content":"In this section, we provide you the basic steps needed to [add](#adding-a-meeting-addm), [delete](#deleting-a-meeting--delm)","lastModifiedDate":"2022-11-07"},{"lineNumber":771,"author":{"gitId":"hoang227"},"content":"and [edit](#editing-a-meeting--editm) meetings.","lastModifiedDate":"2022-11-07"},{"lineNumber":772,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":773,"author":{"gitId":"hoang227"},"content":"**If this is not the section you are looking for**, click [here](#table-of-contents) to go back to the **Table of Contents**.","lastModifiedDate":"2022-11-07"},{"lineNumber":774,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":775,"author":{"gitId":"ama-chi"},"content":"\u003e Currently, Meetings are not displayed in the UI.","lastModifiedDate":"2022-11-07"},{"lineNumber":776,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":777,"author":{"gitId":"jeromehjj"},"content":"### Adding a meeting: `addM`","lastModifiedDate":"2022-11-03"},{"lineNumber":778,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":779,"author":{"gitId":"jeromehjj"},"content":"\u003e Adds a meeting to the REal-Time.","lastModifiedDate":"2022-11-07"},{"lineNumber":780,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":781,"author":{"gitId":"ama-chi"},"content":"**Format:** `addM l/LISTING_ID n/CLIENT_NAME d/DATE_TIME`","lastModifiedDate":"2022-11-07"},{"lineNumber":782,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":783,"author":{"gitId":"jeromehjj"},"content":"* `LISTING_ID` refers to the Listing the meeting is about.","lastModifiedDate":"2022-11-10"},{"lineNumber":784,"author":{"gitId":"jeromehjj"},"content":"* `CLIENT_NAME` refers to the name of the Client you are meeting.","lastModifiedDate":"2022-11-10"},{"lineNumber":785,"author":{"gitId":"jeromehjj"},"content":"* `DATE_TIME` refers to the date and time of the meeting.","lastModifiedDate":"2022-11-10"},{"lineNumber":786,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":787,"author":{"gitId":"hoang227"},"content":"**Example Input:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":788,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":789,"author":{"gitId":"jeromehjj"},"content":"**_Success_**","lastModifiedDate":"2022-11-10"},{"lineNumber":790,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":791,"author":{"gitId":"ama-chi"},"content":"addM l/007 n/Joke Peralta d/2022-10-20 12:00","lastModifiedDate":"2022-11-07"},{"lineNumber":792,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":793,"author":{"gitId":"ama-chi"},"content":"![addM](images/addM_example.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":794,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":795,"author":{"gitId":"jeromehjj"},"content":"**_Failure_**","lastModifiedDate":"2022-11-10"},{"lineNumber":796,"author":{"gitId":"jeromehjj"},"content":"* **Wrong date format:**","lastModifiedDate":"2022-11-10"},{"lineNumber":797,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":798,"author":{"gitId":"ama-chi"},"content":"addM l/007 n/Joke Peralta d/tomorrow 12pm","lastModifiedDate":"2022-11-07"},{"lineNumber":799,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":800,"author":{"gitId":"ama-chi"},"content":"![addM](images/addM_invalid.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":801,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":802,"author":{"gitId":"hoang227"},"content":"**Note:**","lastModifiedDate":"2022-11-07"},{"lineNumber":803,"author":{"gitId":"hoang227"},"content":"1. DATE_TIME must be in this format, yyyy-MM-dd HH:mm","lastModifiedDate":"2022-11-07"},{"lineNumber":804,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":805,"author":{"gitId":"hoang227"},"content":"**Help:**","lastModifiedDate":"2022-11-07"},{"lineNumber":806,"author":{"gitId":"hoang227"},"content":"1. If you have any confusion of the notation, you can refer to the","lastModifiedDate":"2022-11-07"},{"lineNumber":807,"author":{"gitId":"jeromehjj"},"content":"   [Command Format](#command-format) section here.","lastModifiedDate":"2022-11-07"},{"lineNumber":808,"author":{"gitId":"hoang227"},"content":"2. If you are still unsure of the **prefixes**, click [here](#prefix-summary) to find out more.","lastModifiedDate":"2022-11-07"},{"lineNumber":809,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":810,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":811,"author":{"gitId":"hoang227"},"content":"Back to [Managing Meetings](#managing-meetings)","lastModifiedDate":"2022-11-07"},{"lineNumber":812,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":813,"author":{"gitId":"hoang227"},"content":"___","lastModifiedDate":"2022-10-28"},{"lineNumber":814,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":815,"author":{"gitId":"ama-chi"},"content":"### Deleting a meeting : `delM`","lastModifiedDate":"2022-11-07"},{"lineNumber":816,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":817,"author":{"gitId":"jeromehjj"},"content":"\u003e Deletes the meeting at the specified index from REal-Time.","lastModifiedDate":"2022-11-07"},{"lineNumber":818,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":819,"author":{"gitId":"hoang227"},"content":"**Format:** `delM id/INDEX`","lastModifiedDate":"2022-11-07"},{"lineNumber":820,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":821,"author":{"gitId":"hoang227"},"content":"**Example Input:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":822,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":823,"author":{"gitId":"jeromehjj"},"content":"**_Success_**","lastModifiedDate":"2022-11-10"},{"lineNumber":824,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":825,"author":{"gitId":"hoang227"},"content":"delM 1","lastModifiedDate":"2022-11-07"},{"lineNumber":826,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":827,"author":{"gitId":"ama-chi"},"content":"![addM](images/deleteM_example.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":828,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":829,"author":{"gitId":"jeromehjj"},"content":"**_Failure_**","lastModifiedDate":"2022-11-10"},{"lineNumber":830,"author":{"gitId":"jeromehjj"},"content":"* **Invalid index:**","lastModifiedDate":"2022-11-10"},{"lineNumber":831,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":832,"author":{"gitId":"hoang227"},"content":"delM -1","lastModifiedDate":"2022-11-07"},{"lineNumber":833,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":834,"author":{"gitId":"ama-chi"},"content":"![addM](images/delM_invalid.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":835,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":836,"author":{"gitId":"hoang227"},"content":"**Expected Success Output:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":837,"author":{"gitId":"jeromehjj"},"content":"The meeting at the specified `INDEX` is deleted from REal-Time.\u003cbr\u003e","lastModifiedDate":"2022-11-10"},{"lineNumber":838,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":839,"author":{"gitId":"hoang227"},"content":"**Feedback Box:**","lastModifiedDate":"2022-11-07"},{"lineNumber":840,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":841,"author":{"gitId":"hoang227"},"content":"Deleted Meeting: [details of the deleted listing]","lastModifiedDate":"2022-11-07"},{"lineNumber":842,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":843,"author":{"gitId":"hoang227"},"content":"**Help:**","lastModifiedDate":"2022-11-07"},{"lineNumber":844,"author":{"gitId":"hoang227"},"content":"1. If you have any confusion of the notation, you can refer to the","lastModifiedDate":"2022-11-07"},{"lineNumber":845,"author":{"gitId":"jeromehjj"},"content":"   [Command Format](#command-format) section here.","lastModifiedDate":"2022-11-07"},{"lineNumber":846,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":847,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2022-11-07"},{"lineNumber":848,"author":{"gitId":"hoang227"},"content":"Back to [Managing Meetings](#managing-meetings)","lastModifiedDate":"2022-11-07"},{"lineNumber":849,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":850,"author":{"gitId":"hoang227"},"content":"___","lastModifiedDate":"2022-10-28"},{"lineNumber":851,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":852,"author":{"gitId":"jeromehjj"},"content":"### Editing a meeting : `editM`","lastModifiedDate":"2022-11-03"},{"lineNumber":853,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":854,"author":{"gitId":"jeromehjj"},"content":"\u003e Edits an existing meeting in REal-Time.","lastModifiedDate":"2022-11-07"},{"lineNumber":855,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":856,"author":{"gitId":"hoang227"},"content":"**Format:** `editM INDEX [n/NAME] [d/DATE_TIME]`","lastModifiedDate":"2022-11-07"},{"lineNumber":857,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":858,"author":{"gitId":"hoang227"},"content":"**Example input:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":859,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":860,"author":{"gitId":"jeromehjj"},"content":"**_Success_**","lastModifiedDate":"2022-11-10"},{"lineNumber":861,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":862,"author":{"gitId":"hoang227"},"content":"`editM 1 n/Joke Peralta d/2022-10-20 23:59`","lastModifiedDate":"2022-11-07"},{"lineNumber":863,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":864,"author":{"gitId":"ama-chi"},"content":"![editM](images/editM_example.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":865,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":866,"author":{"gitId":"jeromehjj"},"content":"**_Failure_**","lastModifiedDate":"2022-11-10"},{"lineNumber":867,"author":{"gitId":"jeromehjj"},"content":"* **Invalid index:**","lastModifiedDate":"2022-11-10"},{"lineNumber":868,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":869,"author":{"gitId":"hoang227"},"content":"editM -1 n/Joke Peralta","lastModifiedDate":"2022-11-07"},{"lineNumber":870,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":871,"author":{"gitId":"ama-chi"},"content":"![editM Invalid](images/editM_invalid.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":872,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":873,"author":{"gitId":"jeromehjj"},"content":"* **Missing fields:**","lastModifiedDate":"2022-11-10"},{"lineNumber":874,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":875,"author":{"gitId":"hoang227"},"content":"editM 1","lastModifiedDate":"2022-11-07"},{"lineNumber":876,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":877,"author":{"gitId":"ama-chi"},"content":"![editM no fields](images/editM_nofields.png)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":878,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":879,"author":{"gitId":"hoang227"},"content":"**Expected Success Output:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":880,"author":{"gitId":"hoang227"},"content":"The meeting at the specified `INDEX` is edited according to the fields provided.\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":881,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":882,"author":{"gitId":"hoang227"},"content":"**Feedback Box:**","lastModifiedDate":"2022-11-07"},{"lineNumber":883,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":884,"author":{"gitId":"hoang227"},"content":"Edited Meeting: [newly updated details of meeting]","lastModifiedDate":"2022-11-07"},{"lineNumber":885,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":886,"author":{"gitId":"hoang227"},"content":"**Note:**","lastModifiedDate":"2022-11-07"},{"lineNumber":887,"author":{"gitId":"hoang227"},"content":"1. Edits the meeting at the specified `INDEX`. The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2022-11-07"},{"lineNumber":888,"author":{"gitId":"hoang227"},"content":"   The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-11-07"},{"lineNumber":889,"author":{"gitId":"hoang227"},"content":"2. At least one of the optional fields must be provided.","lastModifiedDate":"2022-11-07"},{"lineNumber":890,"author":{"gitId":"hoang227"},"content":"3. Existing values will be updated to the input values.","lastModifiedDate":"2022-11-07"},{"lineNumber":891,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":892,"author":{"gitId":"hoang227"},"content":"**Help:**","lastModifiedDate":"2022-11-07"},{"lineNumber":893,"author":{"gitId":"hoang227"},"content":"1. If you have any confusion of the notation, you can refer to the","lastModifiedDate":"2022-11-07"},{"lineNumber":894,"author":{"gitId":"jeromehjj"},"content":"   [Command Format](#command-format) section here.","lastModifiedDate":"2022-11-07"},{"lineNumber":895,"author":{"gitId":"hoang227"},"content":"2. If you are still unsure of the **prefixes**, click [here](#prefix-summary) to find out more.","lastModifiedDate":"2022-11-07"},{"lineNumber":896,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":897,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":898,"author":{"gitId":"hoang227"},"content":"Back to [Managing Meetings](#managing-meetings)","lastModifiedDate":"2022-11-07"},{"lineNumber":899,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":900,"author":{"gitId":"hoang227"},"content":"___","lastModifiedDate":"2022-10-28"},{"lineNumber":901,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":902,"author":{"gitId":"hoang227"},"content":"## General","lastModifiedDate":"2022-11-07"},{"lineNumber":903,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":904,"author":{"gitId":"hoang227"},"content":"In this section, we provide you the basic steps needed to use the [help](#viewing-help--help), [clear](#clearing-all-entries--clear) and","lastModifiedDate":"2022-11-07"},{"lineNumber":905,"author":{"gitId":"jeromehjj"},"content":"[exit](#exit-real-time--exit) commands.","lastModifiedDate":"2022-11-07"},{"lineNumber":906,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":907,"author":{"gitId":"hoang227"},"content":"**If this is not the section you are looking for**, click [here](#table-of-contents) to go back to the **Table of Contents**.","lastModifiedDate":"2022-11-07"},{"lineNumber":908,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":909,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":910,"author":{"gitId":"hoang227"},"content":"Available commands: `help` `clear` `exit`","lastModifiedDate":"2022-11-07"},{"lineNumber":911,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":912,"author":{"gitId":"hoang227"},"content":"### Viewing help : `help`","lastModifiedDate":"2022-11-07"},{"lineNumber":913,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":914,"author":{"gitId":"jeromehjj"},"content":"\u003e Show a help window for REal-Time","lastModifiedDate":"2022-11-07"},{"lineNumber":915,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":916,"author":{"gitId":"hoang227"},"content":"**Format:** `help`","lastModifiedDate":"2022-11-07"},{"lineNumber":917,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":918,"author":{"gitId":"hoang227"},"content":"**Expected Success Output:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":919,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":920,"author":{"gitId":"hoang227"},"content":"A window displaying help similar to below will appear.","lastModifiedDate":"2022-11-07"},{"lineNumber":921,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":922,"author":{"gitId":"hoang227"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":923,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":924,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":925,"author":{"gitId":"hoang227"},"content":"Back to [General](#general)","lastModifiedDate":"2022-11-07"},{"lineNumber":926,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":927,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2022-11-07"},{"lineNumber":928,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":929,"author":{"gitId":"jeromehjj"},"content":"\u003e Clears all entries in REal-Time.","lastModifiedDate":"2022-11-07"},{"lineNumber":930,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":931,"author":{"gitId":"hoang227"},"content":"**Example Input:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":932,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":933,"author":{"gitId":"hoang227"},"content":"clear","lastModifiedDate":"2022-11-07"},{"lineNumber":934,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":935,"author":{"gitId":"hoang227"},"content":"**Expected Success Output:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":936,"author":{"gitId":"jeromehjj"},"content":"All data in REal-Time is cleared","lastModifiedDate":"2022-11-07"},{"lineNumber":937,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":938,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":939,"author":{"gitId":"hoang227"},"content":"Back to [General](#general)","lastModifiedDate":"2022-11-07"},{"lineNumber":940,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":941,"author":{"gitId":"hoang227"},"content":"___","lastModifiedDate":"2022-11-07"},{"lineNumber":942,"author":{"gitId":"jeromehjj"},"content":"### Exit REal-Time : `exit`","lastModifiedDate":"2022-11-07"},{"lineNumber":943,"author":{"gitId":"jeromehjj"},"content":"\u003e Exits REal-Time","lastModifiedDate":"2022-11-07"},{"lineNumber":944,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":945,"author":{"gitId":"hoang227"},"content":"**Example Input:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":946,"author":{"gitId":"hoang227"},"content":"```text","lastModifiedDate":"2022-11-07"},{"lineNumber":947,"author":{"gitId":"hoang227"},"content":"exit","lastModifiedDate":"2022-11-07"},{"lineNumber":948,"author":{"gitId":"hoang227"},"content":"```","lastModifiedDate":"2022-11-07"},{"lineNumber":949,"author":{"gitId":"hoang227"},"content":"**Expected Success Output:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":950,"author":{"gitId":"jeromehjj"},"content":"The REal-Time window closes.","lastModifiedDate":"2022-11-07"},{"lineNumber":951,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":952,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":953,"author":{"gitId":"hoang227"},"content":"Back to [General](#general)","lastModifiedDate":"2022-11-07"},{"lineNumber":954,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":955,"author":{"gitId":"jeromehjj"},"content":"___","lastModifiedDate":"2022-11-03"},{"lineNumber":956,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":957,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":958,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2022-11-07"},{"lineNumber":959,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":960,"author":{"gitId":"jeromehjj"},"content":"REal-Time data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-11-07"},{"lineNumber":961,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":962,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":963,"author":{"gitId":"hoang227"},"content":"Back to [General](#general)","lastModifiedDate":"2022-11-07"},{"lineNumber":964,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":965,"author":{"gitId":"jeromehjj"},"content":"___","lastModifiedDate":"2022-11-03"},{"lineNumber":966,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":967,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2022-11-07"},{"lineNumber":968,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":969,"author":{"gitId":"jeromehjj"},"content":"REal-Time data are saved as a [JSON file](#glossary) `[JAR file location]/data/realtime.json`.","lastModifiedDate":"2022-11-10"},{"lineNumber":970,"author":{"gitId":"hoang227"},"content":"Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-11-07"},{"lineNumber":971,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":972,"author":{"gitId":"jeromehjj"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:** If your changes to the data file makes its format invalid, REal-Time will","lastModifiedDate":"2022-11-07"},{"lineNumber":973,"author":{"gitId":"hoang227"},"content":"discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-11-07"},{"lineNumber":974,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":975,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":976,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":977,"author":{"gitId":"hoang227"},"content":"Back to [General](#general)","lastModifiedDate":"2022-11-07"},{"lineNumber":978,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":979,"author":{"gitId":"jeromehjj"},"content":"# Glossary","lastModifiedDate":"2022-11-03"},{"lineNumber":980,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":981,"author":{"gitId":"jeromehjj"},"content":"|     Term      |                                                 Description                                                 |","lastModifiedDate":"2022-11-03"},{"lineNumber":982,"author":{"gitId":"jeromehjj"},"content":"|:-------------:|:-----------------------------------------------------------------------------------------------------------:|","lastModifiedDate":"2022-11-10"},{"lineNumber":983,"author":{"gitId":"jeromehjj"},"content":"|    **OS**     |                 The operating system is the software that is used to run in your computer.                  |","lastModifiedDate":"2022-11-03"},{"lineNumber":984,"author":{"gitId":"jeromehjj"},"content":"|    **CLI**    |                             Interface that takes in text commands from the user                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":985,"author":{"gitId":"jeromehjj"},"content":"|    **GUI**    |                   A form of user interface that allows users to interact through graphics                   |","lastModifiedDate":"2022-11-07"},{"lineNumber":986,"author":{"gitId":"jeromehjj"},"content":"|  **Client**   |                       A person that is interested in purchasing or selling a property                       |","lastModifiedDate":"2022-11-10"},{"lineNumber":987,"author":{"gitId":"jeromehjj"},"content":"|   **Offer**   |                         A price that the purchaser is willing to pay for a property                         |","lastModifiedDate":"2022-11-10"},{"lineNumber":988,"author":{"gitId":"jeromehjj"},"content":"|  **Listing**  |                                     A property that is being advertised                                     |","lastModifiedDate":"2022-11-10"},{"lineNumber":989,"author":{"gitId":"jeromehjj"},"content":"|  **Meeting**  |                      A scheduled appointment between the Real-Estate agent and client                       |","lastModifiedDate":"2022-11-10"},{"lineNumber":990,"author":{"gitId":"jeromehjj"},"content":"| **JSON file** | JSON stands for JavaScript Object Notation. JSON is a lightweight format for storing and transporting data. |","lastModifiedDate":"2022-11-10"},{"lineNumber":991,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":992,"author":{"gitId":"hoang227"},"content":"Back to [Introduction](#introduction)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":993,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2022-11-07"},{"lineNumber":994,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":995,"author":{"gitId":"jeromehjj"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-11-03"},{"lineNumber":996,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":997,"author":{"gitId":"jeromehjj"},"content":"# Command Summary","lastModifiedDate":"2022-11-03"},{"lineNumber":998,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":999,"author":{"gitId":"jeromehjj"},"content":"|                      Action                       |                                       Format                                       |                                              Examples                                               |","lastModifiedDate":"2022-11-03"},{"lineNumber":1000,"author":{"gitId":"jeromehjj"},"content":"|:-------------------------------------------------:|:----------------------------------------------------------------------------------:|:---------------------------------------------------------------------------------------------------:|","lastModifiedDate":"2022-11-05"},{"lineNumber":1001,"author":{"gitId":"jeromehjj"},"content":"|      [**Add Client**](#adding-a-client-addc)      |              `addC n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`              | `addC n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague` |","lastModifiedDate":"2022-11-05"},{"lineNumber":1002,"author":{"gitId":"jeromehjj"},"content":"|     [**Add Listing**](#adding-a-listing-addl)     |        `addL l/LISTING_ID a/ADDRESS n/OWNER_NAME ap/ASKING_PRICE [t/TAG]…​`        |                     `addL l/007 a/100 Charming Ave n/Joke Peralta ap/10000000`                      |","lastModifiedDate":"2022-11-05"},{"lineNumber":1003,"author":{"gitId":"jeromehjj"},"content":"|     [**Add Meeting**](#adding-a-meeting-addm)     |                   `addM id/Listing_ID n/CLIENT_NAME d/DATE_TIME`                   |                   `addM id/1 a/John street, block 123, #01-01 d/2022-10-20 12:00`                   |","lastModifiedDate":"2022-11-05"},{"lineNumber":1004,"author":{"gitId":"jeromehjj"},"content":"|      [**Add Offer**](#adding-an-offer-addo)       |                      `addO l/LISTING_ID n/NAME o/OFFER_PRICE`                      |                          `addO l/30_SERGARDENS_LOR23_0718 n/Bob o/600000`                           |","lastModifiedDate":"2022-11-05"},{"lineNumber":1005,"author":{"gitId":"jeromehjj"},"content":"|     [**Clear**](#clearing-all-entries--clear)     |                                      `clear`                                       |                                               `clear`                                               |","lastModifiedDate":"2022-11-05"},{"lineNumber":1006,"author":{"gitId":"jeromehjj"},"content":"|   [**Delete Client**](#deleting-a-client--delc)   |                                    `delC INDEX`                                    |                                              `delC 3`                                               |","lastModifiedDate":"2022-11-05"},{"lineNumber":1007,"author":{"gitId":"jeromehjj"},"content":"|  [**Delete Listing**](#deleting-a-listing--dell)  |                                    `delL INDEX`                                    |                                              `delL 1`                                               |","lastModifiedDate":"2022-11-05"},{"lineNumber":1008,"author":{"gitId":"hoang227"},"content":"|  [**Delete Meeting**](#deleting-a-meeting--delm)  |                                    `delM INDEX`                                    |                                              `delM 4`                                               |","lastModifiedDate":"2022-11-07"},{"lineNumber":1009,"author":{"gitId":"jeromehjj"},"content":"|   [**Delete Offer**](#deleting-an-offer--delo)    |                                    `delO INDEX`                                    |                                              `delO 2`                                               |","lastModifiedDate":"2022-11-05"},{"lineNumber":1010,"author":{"gitId":"jeromehjj"},"content":"|    [**Edit Client**](#editing-a-client--editc)    |      `editC INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`       |                            `editC 2 n/James Lee e/jameslee@example.com`                             |","lastModifiedDate":"2022-11-05"},{"lineNumber":1011,"author":{"gitId":"jeromehjj"},"content":"|   [**Edit Listing**](#editing-a-listing--editl)   | `editL INDEX [l/LISTING_ID][a/ADDRESS] [n/OWNER_NAME] [ap/ASKING_PRICE] [t/TAG]…​` |                                        `editL 4 ap/1234567`                                         |","lastModifiedDate":"2022-11-05"},{"lineNumber":1012,"author":{"gitId":"jeromehjj"},"content":"|   [**Edit Meeting**](#editing-a-meeting--editm)   |                     `editM INDEX [n/OWNER_NAME] [d/DATE_TIME]`                     |                                      `editM 2 n/Roza Santiago`                                      |","lastModifiedDate":"2022-11-05"},{"lineNumber":1013,"author":{"gitId":"jeromehjj"},"content":"|    [**Edit Offer**](#editing-an-offer--edito)     |               `editO INDEX [n/NAME] [o/OFFER_PRICE] [l/LISTING_ID]`                |                                  `editO 2 n/Betsy Crower o/123456`                                  |","lastModifiedDate":"2022-11-03"},{"lineNumber":1014,"author":{"gitId":"jeromehjj"},"content":"| [**Find Client**](#finding-clients-by-name-findc) |                          `findC KEYWORD [MORE_KEYWORDS]`                           |                                         `findC James Jake`                                          |","lastModifiedDate":"2022-11-03"},{"lineNumber":1015,"author":{"gitId":"jeromehjj"},"content":"|     [**List Client**](#listing-clients-listc)     |                                      `listC`                                       |                                               `listC`                                               |","lastModifiedDate":"2022-11-05"},{"lineNumber":1016,"author":{"gitId":"jeromehjj"},"content":"|    [**List Listing**](#listing-listings-listl)    |                                      `listL`                                       |                                               `listL`                                               |","lastModifiedDate":"2022-11-05"},{"lineNumber":1017,"author":{"gitId":"jeromehjj"},"content":"|          [**Help**](#viewing-help--help)          |                                       `help`                                       |                                               `help`                                                |","lastModifiedDate":"2022-11-05"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1019,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":1020,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2022-11-07"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":1024,"author":{"gitId":"jeromehjj"},"content":"# Prefix Summary","lastModifiedDate":"2022-11-03"},{"lineNumber":1025,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":1026,"author":{"gitId":"jeromehjj"},"content":"| Prefix | Description                                                             | Used in                                                                                                                                                                                                                                                    | Example                       |","lastModifiedDate":"2022-11-03"},{"lineNumber":1027,"author":{"gitId":"jeromehjj"},"content":"|--------|-------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------|","lastModifiedDate":"2022-11-03"},{"lineNumber":1028,"author":{"gitId":"jeromehjj"},"content":"| `a/`   | **Address** of the Client or the Listing.                               | [Add Client](#adding-a-client-addc)\u003cbr/\u003e [Add Listing](#adding-a-listing-addl) \u003cbr/\u003e [Edit Client](#editing-a-client--editc)\u003cbr/\u003e [Edit Listing](#editing-a-listing--editl)                                                                                | `a/123, Clementi Rd, 1234665` |","lastModifiedDate":"2022-11-03"},{"lineNumber":1029,"author":{"gitId":"jeromehjj"},"content":"| `ap/`  | **Asking Price** of the Owner in a Listing.                             | [Add Listing](#adding-a-listing-addl) \u003cbr/\u003e [Edit Listing](#editing-a-listing--editl)                                                                                                                                                                      | `ap/500000`                   |","lastModifiedDate":"2022-11-03"},{"lineNumber":1030,"author":{"gitId":"jeromehjj"},"content":"| `d/`   | **Date and time** of a Meeting with a Client.                           | [Add Meeting](#adding-a-meeting-addm)\u003cbr/\u003e[Edit Meeting](#editing-a-meeting--editm)                                                                                                                                                                        | `d/2022-10-20 12:00`          |","lastModifiedDate":"2022-11-03"},{"lineNumber":1031,"author":{"gitId":"jeromehjj"},"content":"| `e/`   | **Email** of the Client.                                                | [Add Client](#adding-a-client-addc)\u003cbr/\u003e[Edit Client](#editing-a-client--editc)                                                                                                                                                                            | `e/johndoe@example.com`       |","lastModifiedDate":"2022-11-03"},{"lineNumber":1032,"author":{"gitId":"jeromehjj"},"content":"| `l/`   | **Listing ID** by the user for a Listing. Can be specified by the user. | [Add Listing](#adding-a-listing-addl)\u003cbr/\u003e[Add Offer](#adding-an-offer-addo)\u003cbr/\u003e [Edit Listing](#editing-a-listing--editl)\u003cbr/\u003e[Edit Offer](#editing-an-offer--edito)                                                                                     | `l/BEDOK_NORTH_RD_BLK123`     |","lastModifiedDate":"2022-11-03"},{"lineNumber":1033,"author":{"gitId":"jeromehjj"},"content":"| `n/`   | **Name** of Client or Owner of a Listing                                | [Add Client](#adding-a-client-addc)\u003cbr/\u003e[Add Listing](#adding-a-listing-addl) \u003cbr/\u003e[Add Offer](#adding-an-offer-addo)\u003cbr/\u003e[Edit Client](#editing-a-client--editc)\u003cbr/\u003e[Edit Offer](#editing-an-offer--edito)\u003cbr/\u003e[Edit Listing](#editing-a-listing--editl) | `n/John Doe`                  |","lastModifiedDate":"2022-11-03"},{"lineNumber":1034,"author":{"gitId":"jeromehjj"},"content":"| `o/`   | **Offer price** by a Client                                             | [Add Offer](#adding-an-offer-addo)\u003cbr/\u003e[Edit Offer](#editing-an-offer--edito)                                                                                                                                                                              | `o/700000`                    |","lastModifiedDate":"2022-11-03"},{"lineNumber":1035,"author":{"gitId":"jeromehjj"},"content":"| `p/`   | **Phone number** of a Client                                            | [Add Client](#adding-a-client-addc)\u003cbr/\u003e[Edit Client](#editing-a-client--editc)                                                                                                                                                                            | `p/12345678`                  |","lastModifiedDate":"2022-11-03"},{"lineNumber":1036,"author":{"gitId":"jeromehjj"},"content":"| `t/`   | **Tag** to specify a unique trait of a Listing or Client                | [Add Client](#adding-a-client-addc)\u003cbr/\u003e [Add Listing](#adding-a-listing-addl) \u003cbr/\u003e [Edit Client](#editing-a-client--editc)\u003cbr/\u003e [Edit Listing](#editing-a-listing--editl)                                                                                | `t/4room`                     |","lastModifiedDate":"2022-11-03"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1038,"author":{"gitId":"hoang227"},"content":"Back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"jeromehjj":385,"hoang227":494,"ama-chi":20,"Isaaclhy00":10,"-":113,"Gavzzz":16}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"jeromehjj"},"content":"    content: \"REal-Time\";","lastModifiedDate":"2022-10-03"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"jeromehjj":1,"-":294}},{"path":"docs/diagrams/AddClientSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"@startuml","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"!include style.puml","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"participant \":RealTimeParser\" as RealTimeParser LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"participant \":AddClientCommandParser\" as AddClientCommandParser LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"participant \"c: AddClientCommand\" as AddClientCommand LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"-\u003e LogicManager : execute(userInput)","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"activate LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"LogicManager -\u003e RealTimeParser : parseCommand(userInput)","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"activate RealTimeParser","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"create AddClientCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"RealTimeParser -\u003e AddClientCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"activate AddClientCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"AddClientCommandParser --\u003e RealTimeParser","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"deactivate AddClientCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"note right of AddClientCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"Arguments in userInput are seperated by their prefixes","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"using the tokenize method in the ArgumentTokenizer class.","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"Each attribute is parsed by their respective parsers in the ParserUtil class","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"and is used to instantiate an Client object.","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"end note","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"RealTimeParser -\u003e AddClientCommandParser : parse(userInput))","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"activate AddClientCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"create AddClientCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"AddClientCommandParser -\u003e AddClientCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"activate AddClientCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"return c","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"return c","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"return c","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"destroy AddClientCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"LogicManager -\u003e AddClientCommand : execute(model)","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"destroy RealTimeParser","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"activate AddClientCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"AddClientCommand -\u003e Model : hasClient(o)","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"activate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"Model --\u003e AddClientCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"deactivate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"AddClientCommand -\u003e Model : addClient(o)","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"activate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"Model --\u003e AddClientCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"deactivate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"create CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"AddClientCommand -\u003e CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"activate CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"CommandResult --\u003e AddClientCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"deactivate CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"AddClientCommand --\u003e LogicManager : result","lastModifiedDate":"2022-11-07"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"deactivate AddClientCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"\u003c--LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"deactivate LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"@enduml","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"hoang227":80}},{"path":"docs/diagrams/AddListingSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"@startuml","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"!include style.puml","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"participant \":RealTimeParser\" as RealTimeParser LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"participant \":AddListingCommandParser\" as AddListingCommandParser LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"participant \"l: AddListingCommand\" as AddListingCommand LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"-\u003e LogicManager : execute(userInput)","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"activate LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"LogicManager -\u003e RealTimeParser : parseCommand(userInput)","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"activate RealTimeParser","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"create AddListingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"RealTimeParser -\u003e AddListingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"activate AddListingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"AddListingCommandParser --\u003e RealTimeParser","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"deactivate AddListingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"note right of AddListingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"Arguments in userInput are seperated by their prefixes","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"using the tokenize method in the ArgumentTokenizer class.","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"Each attribute is parsed by their respective parsers in the ParserUtil class","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"and is used to instantiate an Listing object.","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"end note","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"RealTimeParser -\u003e AddListingCommandParser : parse(userInput))","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"activate AddListingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"create AddListingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"AddListingCommandParser -\u003e AddListingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"activate AddListingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"return l","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"return l","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"return l","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"destroy AddListingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"LogicManager -\u003e AddListingCommand : execute(model)","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"destroy RealTimeParser","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"activate AddListingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"AddListingCommand -\u003e Model : hasListing(o)","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"activate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"Model --\u003e AddListingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"deactivate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"AddListingCommand -\u003e Model : addListing(o)","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"activate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"Model --\u003e AddListingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"deactivate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"create CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"AddListingCommand -\u003e CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"activate CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"CommandResult --\u003e AddListingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"deactivate CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"AddListingCommand --\u003e LogicManager : result","lastModifiedDate":"2022-11-07"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"deactivate AddListingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"\u003c--LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"deactivate LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"@enduml","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"hoang227":80}},{"path":"docs/diagrams/AddMeetingSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"@startuml","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"!include style.puml","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"participant \":RealTimeParser\" as RealTimeParser LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"participant \":AddMeetingCommandParser\" as AddMeetingCommandParser LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"participant \"m: AddMeetingCommand\" as AddMeetingCommand LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"-\u003e LogicManager : execute(userInput)","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"activate LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"LogicManager -\u003e RealTimeParser : parseCommand(userInput)","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"activate RealTimeParser","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"create AddMeetingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"RealTimeParser -\u003e AddMeetingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"activate AddMeetingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"AddMeetingCommandParser --\u003e RealTimeParser","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"deactivate AddMeetingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"note right of AddMeetingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"Arguments in userInput are seperated by their prefixes","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"using the tokenize method in the ArgumentTokenizer class.","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"Each attribute is parsed by their respective parsers in the ParserUtil class","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"and is used to instantiate an Meeting object.","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"end note","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"RealTimeParser -\u003e AddMeetingCommandParser : parse(userInput))","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"activate AddMeetingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"create AddMeetingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"AddMeetingCommandParser -\u003e AddMeetingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"activate AddMeetingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"return m","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"return m","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"return m","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"destroy AddMeetingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"LogicManager -\u003e AddMeetingCommand : execute(model)","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"destroy RealTimeParser","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"activate AddMeetingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"AddMeetingCommand -\u003e Model : hasMeeting(o)","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"activate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"Model --\u003e AddMeetingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"deactivate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"AddMeetingCommand -\u003e Model : addMeeting(o)","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"activate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"Model --\u003e AddMeetingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"deactivate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"create CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"AddMeetingCommand -\u003e CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"activate CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"CommandResult --\u003e AddMeetingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"deactivate CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"AddMeetingCommand --\u003e LogicManager : result","lastModifiedDate":"2022-11-07"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"deactivate AddMeetingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"\u003c--LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"deactivate LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"@enduml","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"hoang227":80}},{"path":"docs/diagrams/AddOfferSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"@startuml","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"!include style.puml","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"participant \":RealTimeParser\" as RealTimeParser LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"participant \":AddOfferCommandParser\" as AddOfferCommandParser LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"participant \"o: AddOfferCommand\" as AddOfferCommand LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"end box","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"end box","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"-\u003e LogicManager : execute(userInput)","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"activate LogicManager","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"LogicManager -\u003e RealTimeParser : parseCommand(userInput)","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"activate RealTimeParser","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"create AddOfferCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"RealTimeParser -\u003e AddOfferCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"activate AddOfferCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"AddOfferCommandParser --\u003e RealTimeParser","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"deactivate AddOfferCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"note right of AddOfferCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"Arguments in userInput are seperated by their prefixes","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"using the tokenize method in the ArgumentTokenizer class.","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"Each attribute is parsed by their respective parsers in the ParserUtil class","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"and is used to instantiate an Offer object.","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"end note","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"RealTimeParser -\u003e AddOfferCommandParser : parse(userInput))","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"activate AddOfferCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"create AddOfferCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"AddOfferCommandParser -\u003e AddOfferCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"activate AddOfferCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"return o","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"return o","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"return o","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"destroy AddOfferCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"LogicManager -\u003e AddOfferCommand : execute(model)","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"destroy RealTimeParser","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"activate AddOfferCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"AddOfferCommand -\u003e Model : hasOffer(o)","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"activate Model","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"Model --\u003e AddOfferCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"deactivate Model","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"AddOfferCommand -\u003e Model : addOffer(o)","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"activate Model","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"Model --\u003e AddOfferCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"deactivate Model","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"create CommandResult","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"AddOfferCommand -\u003e CommandResult","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"activate CommandResult","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"CommandResult --\u003e AddOfferCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"deactivate CommandResult","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"AddOfferCommand --\u003e LogicManager : result","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"jeromehjj"},"content":"deactivate AddOfferCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"jeromehjj"},"content":"\u003c--LogicManager","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"jeromehjj"},"content":"deactivate LogicManager","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"jeromehjj"},"content":"@enduml","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"jeromehjj":80}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"user -[USER_COLOR]\u003e ui : \"delC 1\"","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delC 1\")","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteClient(p)","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveRealTime(realTime)","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jeromehjj":3,"hoang227":1,"-":34}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"RealTime *-right-\u003e \"1\" UniqueClientList","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"RealTime *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"UniqueTagList -[hidden]down- UniqueClientList","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"UniqueTagList -[hidden]down- UniqueClientList","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"UniqueClientList -right-\u003e Client","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"Client -up-\u003e \"*\" Tag","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"Client *--\u003e Name","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"Client *--\u003e Phone","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"Client *--\u003e Email","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"Client *--\u003e Address","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jeromehjj":9,"hoang227":1,"-":11}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"if () then ([command commits RealTime])","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"    :Save RealTime to","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    realTimeStateList;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"hoang227":3,"-":12}},{"path":"docs/diagrams/DeleteClientSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"@startuml","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"!include style.puml","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"participant \":RealTimeParser\" as RealTimeParser LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"participant \":DeleteClientCommandParser\" as DeleteClientCommandParser LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"participant \"c:DeleteClientCommand\" as DeleteClientCommand LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"-\u003e LogicManager : execute(\"delC 1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"activate LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"LogicManager -\u003e RealTimeParser : parseCommand(\"delC 1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"activate RealTimeParser","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"create DeleteClientCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"RealTimeParser -\u003e DeleteClientCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"activate DeleteClientCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"DeleteClientCommandParser --\u003e RealTimeParser","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"deactivate DeleteClientCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"RealTimeParser -\u003e DeleteClientCommandParser : parse(\"1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"activate DeleteClientCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"create DeleteClientCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"DeleteClientCommandParser -\u003e DeleteClientCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"activate DeleteClientCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"DeleteClientCommand --\u003e DeleteClientCommandParser : c","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"deactivate DeleteClientCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"DeleteClientCommandParser --\u003e RealTimeParser : c","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"deactivate DeleteClientCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"DeleteClientCommandParser -[hidden]-\u003e RealTimeParser","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"destroy DeleteClientCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"RealTimeParser --\u003e LogicManager : c","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"deactivate RealTimeParser","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"LogicManager -\u003e DeleteClientCommand : execute()","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"activate DeleteClientCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"DeleteClientCommand -\u003e Model : deleteClient(1)","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"activate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"Model --\u003e DeleteClientCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"deactivate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"create CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"DeleteClientCommand -\u003e CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"activate CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"CommandResult --\u003e DeleteClientCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"deactivate CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"DeleteClientCommand --\u003e LogicManager : result","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"deactivate DeleteClientCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"deactivate LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"destroy DeleteClientCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"@enduml","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"hoang227":71}},{"path":"docs/diagrams/DeleteListingSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"@startuml","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"!include style.puml","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"participant \":RealTimeParser\" as RealTimeParser LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"participant \":DeleteListingCommandParser\" as DeleteListingCommandParser LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"participant \"l:DeleteListingCommand\" as DeleteListingCommand LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"-\u003e LogicManager : execute(\"delL 1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"activate LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"LogicManager -\u003e RealTimeParser : parseCommand(\"delL 1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"activate RealTimeParser","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"create DeleteListingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"RealTimeParser -\u003e DeleteListingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"activate DeleteListingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"DeleteListingCommandParser --\u003e RealTimeParser","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"deactivate DeleteListingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"RealTimeParser -\u003e DeleteListingCommandParser : parse(\"1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"activate DeleteListingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"create DeleteListingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"DeleteListingCommandParser -\u003e DeleteListingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"activate DeleteListingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"DeleteListingCommand --\u003e DeleteListingCommandParser : l","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"deactivate DeleteListingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"DeleteListingCommandParser --\u003e RealTimeParser : l","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"deactivate DeleteListingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"DeleteListingCommandParser -[hidden]-\u003e RealTimeParser","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"destroy DeleteListingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"RealTimeParser --\u003e LogicManager : l","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"deactivate RealTimeParser","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"LogicManager -\u003e DeleteListingCommand : execute()","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"activate DeleteListingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"DeleteListingCommand -\u003e Model : deleteListing(1)","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"activate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"Model --\u003e DeleteListingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"deactivate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"create CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"DeleteListingCommand -\u003e CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"activate CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"CommandResult --\u003e DeleteListingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"deactivate CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"DeleteListingCommand --\u003e LogicManager : result","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"deactivate DeleteListingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"deactivate LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"destroy DeleteListingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"@enduml","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"hoang227":71}},{"path":"docs/diagrams/DeleteMeetingSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"@startuml","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"!include style.puml","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"participant \":RealTimeParser\" as RealTimeParser LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"participant \":DeleteMeetingCommandParser\" as DeleteMeetingCommandParser LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"participant \"m:DeleteMeetingCommand\" as DeleteMeetingCommand LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"-\u003e LogicManager : execute(\"delM 1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"activate LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"LogicManager -\u003e RealTimeParser : parseCommand(\"delM 1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"activate RealTimeParser","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"create DeleteMeetingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"RealTimeParser -\u003e DeleteMeetingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"activate DeleteMeetingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"DeleteMeetingCommandParser --\u003e RealTimeParser","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"deactivate DeleteMeetingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"RealTimeParser -\u003e DeleteMeetingCommandParser : parse(\"1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"activate DeleteMeetingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"create DeleteMeetingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"DeleteMeetingCommandParser -\u003e DeleteMeetingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"activate DeleteMeetingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"DeleteMeetingCommand --\u003e DeleteMeetingCommandParser : m","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"deactivate DeleteMeetingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"DeleteMeetingCommandParser --\u003e RealTimeParser : m","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"deactivate DeleteMeetingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"DeleteMeetingCommandParser -[hidden]-\u003e RealTimeParser","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"destroy DeleteMeetingCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"RealTimeParser --\u003e LogicManager : m","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"deactivate RealTimeParser","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"LogicManager -\u003e DeleteMeetingCommand : execute()","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"activate DeleteMeetingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"DeleteMeetingCommand -\u003e Model : deleteMeeting(1)","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"activate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"Model --\u003e DeleteMeetingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"deactivate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"create CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"DeleteMeetingCommand -\u003e CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"activate CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"CommandResult --\u003e DeleteMeetingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"deactivate CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"DeleteMeetingCommand --\u003e LogicManager : result","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"deactivate DeleteMeetingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"deactivate LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"destroy DeleteMeetingCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"@enduml","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"hoang227":71}},{"path":"docs/diagrams/DeleteOfferSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"@startuml","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"!include style.puml","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"participant \":RealTimeParser\" as RealTimeParser LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"participant \":DeleteOfferCommandParser\" as DeleteOfferCommandParser LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"participant \"o:DeleteOfferCommand\" as DeleteOfferCommand LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"end box","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"end box","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"-\u003e LogicManager : execute(\"delO 1\")","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"activate LogicManager","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"LogicManager -\u003e RealTimeParser : parseCommand(\"delO 1\")","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"activate RealTimeParser","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"create DeleteOfferCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"RealTimeParser -\u003e DeleteOfferCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"activate DeleteOfferCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"DeleteOfferCommandParser --\u003e RealTimeParser","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"deactivate DeleteOfferCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"RealTimeParser -\u003e DeleteOfferCommandParser : parse(\"1\")","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"activate DeleteOfferCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"create DeleteOfferCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"DeleteOfferCommandParser -\u003e DeleteOfferCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"activate DeleteOfferCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"DeleteOfferCommand --\u003e DeleteOfferCommandParser : o","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"deactivate DeleteOfferCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"DeleteOfferCommandParser --\u003e RealTimeParser : o","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"deactivate DeleteOfferCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"DeleteOfferCommandParser -[hidden]-\u003e RealTimeParser","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"destroy DeleteOfferCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"RealTimeParser --\u003e LogicManager : o","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"deactivate RealTimeParser","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"LogicManager -\u003e DeleteOfferCommand : execute()","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"activate DeleteOfferCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"DeleteOfferCommand -\u003e Model : deleteOffer(1)","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"activate Model","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"Model --\u003e DeleteOfferCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"deactivate Model","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"create CommandResult","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"DeleteOfferCommand -\u003e CommandResult","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"activate CommandResult","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"CommandResult --\u003e DeleteOfferCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"deactivate CommandResult","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"DeleteOfferCommand --\u003e LogicManager : result","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"deactivate DeleteOfferCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"deactivate LogicManager","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"jeromehjj"},"content":"destroy DeleteOfferCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"@enduml","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"jeromehjj":71}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"participant \":RealTimeParser\" as RealTimeParser LOGIC_COLOR","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"participant \":DeleteClientCommandParser\" as DeleteClientCommandParser LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"participant \"d:DeleteClientCommand\" as DeleteClientCommand LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"[-\u003e LogicManager : execute(\"delC 1\")","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"LogicManager -\u003e RealTimeParser : parseCommand(\"delC 1\")","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"activate RealTimeParser","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"create DeleteClientCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"RealTimeParser -\u003e DeleteClientCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"activate DeleteClientCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"DeleteClientCommandParser --\u003e RealTimeParser","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"deactivate DeleteClientCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"RealTimeParser -\u003e DeleteClientCommandParser : parse(\"1\")","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"activate DeleteClientCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"create DeleteClientCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"DeleteClientCommandParser -\u003e DeleteClientCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"activate DeleteClientCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"DeleteClientCommand --\u003e DeleteClientCommandParser : d","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"deactivate DeleteClientCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"DeleteClientCommandParser --\u003e RealTimeParser : d","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"deactivate DeleteClientCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"DeleteClientCommandParser -[hidden]-\u003e RealTimeParser","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"destroy DeleteClientCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"RealTimeParser --\u003e LogicManager : d","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"deactivate RealTimeParser","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"LogicManager -\u003e DeleteClientCommand : execute()","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"activate DeleteClientCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"DeleteClientCommand -\u003e Model : deleteClient(1)","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"Model --\u003e DeleteClientCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"DeleteClientCommand -\u003e CommandResult","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"CommandResult --\u003e DeleteClientCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"DeleteClientCommand --\u003e LogicManager : result","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"deactivate DeleteClientCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jeromehjj":28,"hoang227":4,"-":37}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"Class RealTimeParser","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"LogicManager -right-\u003e\"1\" RealTimeParser","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"RealTimeParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"note right of XYZCommand: XYZCommand \u003d AddClientCommand, \\nDeleteOfferCommand, etc","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jeromehjj":1,"hoang227":3,"-":42}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyRealTime\" as ReadOnlyRealTime","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"Class RealTime","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"Class UniqueClientList","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"Class UniqueOfferList","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"Class UniqueListingList","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"Class UniqueMeetingList","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"Class Client","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"Class Offer","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"Class Meeting","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"Class Listing","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"RealTime .up.|\u003e ReadOnlyRealTime","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"ModelManager .up....|\u003e Model","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"Model .left.\u003e ReadOnlyRealTime","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"ModelManager -up-\u003e \"1\" RealTime","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"UserPrefs .up....|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"RealTime *--\u003e \"1\" UniqueClientList","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"RealTime *--\u003e \"1\" UniqueOfferList","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"RealTime *--\u003e \"1\" UniqueListingList","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"RealTime *--\u003e \"1\" UniqueMeetingList","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"UniqueClientList -down-\u003e \"~* all\" Client","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"UniqueOfferList -down-\u003e \"~* all\" Offer","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"UniqueListingList -down-\u003e \"~* all\" Listing","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"UniqueMeetingList -down-\u003e \"~* all\" Meeting","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"ModelManager -up-\u003e\"~* filtered\" Client","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"ModelManager -up-\u003e\"~* filtered\" Offer","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"ModelManager -up-\u003e\"~* filtered\" Listing","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"ModelManager -up-\u003e\"~* filtered\" Meeting","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"UniqueClientList -right[hidden]- UniqueOfferList","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"UniqueOfferList -right[hidden]- UniqueListingList","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"UniqueListingList -right[hidden]- UniqueMeetingList","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jeromehjj":31,"hoang227":4,"-":22}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"Class RealTimeParser","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"HiddenOutside ..\u003e RealTimeParser","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"RealTimeParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"RealTimeParser ..\u003e Command : returns \u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"hoang227":4,"-":34}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"package \"RealTime Storage\" #F4F6F6{","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nRealTimeStorage\" as RealTimeStorage","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"Class JsonRealTimeStorage","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"Class JsonSerializableRealTime","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"Class JsonAdaptedClient","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"Class JsonAdaptedOffer","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"Class JsonAdaptedListing","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"StorageManager -up-\u003e \"1\" RealTimeStorage","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"Storage -right-|\u003e RealTimeStorage","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"JsonRealTimeStorage .up.|\u003e RealTimeStorage","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"JsonRealTimeStorage ..\u003e JsonSerializableRealTime","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"JsonSerializableRealTime --\u003e \"*\" JsonAdaptedClient","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"JsonSerializableRealTime --\u003e \"*\" JsonAdaptedOffer","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"JsonSerializableRealTime --\u003e \"*\" JsonAdaptedListing","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"JsonAdaptedClient --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"JsonAdaptedListing --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jeromehjj":8,"hoang227":8,"-":32}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"Class ClientListPanel","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"Class ClientCard","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"Class OfferListPanel","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"Class OfferCard","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"Class ListingListPanel","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"Class ListingCard","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"Class MeetingListPanel","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"Class MeetingCard","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"MainWindow *-down-\u003e \"1\" ClientListPanel","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"MainWindow *-down-\u003e \"1\" OfferListPanel","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"MainWindow *-down-\u003e \"1\" ListingListPanel","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"MainWindow *-down-\u003e \"1\" MeetingListPanel","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"ClientListPanel -down---\u003e \"*\" ClientCard","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"OfferListPanel -down---\u003e \"*\" OfferCard","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"ListingListPanel -down--\u003e \"*\" ListingCard","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"MeetingListPanel -down--\u003e \"*\" MeetingCard","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"ClientListPanel --|\u003e UiPart","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"ClientCard --|\u003e UiPart","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"OfferListPanel --|\u003e UiPart","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"OfferCard --|\u003e UiPart","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"ListingListPanel --|\u003e UiPart","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"ListingCard --|\u003e UiPart","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"MeetingListPanel --|\u003e UiPart","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"MeetingCard --|\u003e UiPart","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"ClientCard ...\u003e Model","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"jeromehjj"},"content":"OfferCard ..\u003e Model","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"ListingCard ..\u003e Model","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"MeetingCard ..\u003e Model","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"jeromehjj"},"content":"ClientListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"jeromehjj"},"content":"ListingListPanel -[hidden]left- ResultDisplay","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"jeromehjj"},"content":"MeetingListPanel -[hidden]left- ResultDisplay","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jeromehjj":32,"-":52}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"    class State1 as \"__ab0:RealTime__\"","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"    class State2 as \"__ab1:RealTime__\"","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    class State3 as \"__ab2:RealTime__\"","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"hoang227":3,"-":17}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"    class State1 as \"__ab0:RealTime__\"","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"    class State2 as \"__ab1:RealTime__\"","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    class State3 as \"__ab2:RealTime__\"","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"hoang227":3,"-":19}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"    class State1 as \"__ab0:RealTime__\"","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"    class State2 as \"__ab1:RealTime__\"","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    class State3 as \"__ab2:RealTime__\"","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"hoang227":3,"-":17}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"    class State1 as \"__ab0:RealTime__\"","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"    class State2 as \"__ab1:RealTime__\"","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    class State3 as \"__ab2:RealTime__\"","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"hoang227":3,"-":17}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"    class State1 as \"__ab0:RealTime__\"","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"    class State2 as \"__ab1:RealTime__\"","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    class State3 as \"__ab2:RealTime__\"","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"hoang227":3,"-":17}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"    class State1 as \"__ab0:RealTime__\"","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"    class State2 as \"__ab1:RealTime__\"","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    class State3 as \"__ab3:RealTime__\"","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"hoang227":3,"-":18}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"participant \":RealTimeParser\" as RealTimeParser LOGIC_COLOR","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"participant \":VersionedRealTime\" as VersionedRealTime MODEL_COLOR","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"LogicManager -\u003e RealTimeParser : parseCommand(undo)","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"activate RealTimeParser","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"RealTimeParser -\u003e UndoCommand","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"UndoCommand --\u003e RealTimeParser","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"RealTimeParser --\u003e LogicManager : u","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"deactivate RealTimeParser","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"UndoCommand -\u003e Model : undoRealTime()","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"Model -\u003e VersionedRealTime : undo()","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"activate VersionedRealTime","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"VersionedRealTime -\u003e VersionedRealTime :resetData(ReadOnlyRealTime)","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"VersionedRealTime --\u003e Model :","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"deactivate VersionedRealTime","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"hoang227":14,"-":39}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"Participant \":RealTimeParser\" as abp LOGIC_COLOR","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"ecp -\u003e ec ++: index, editPersonDescriptor","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"hoang227":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"title: REal-Time","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W15-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W15-2/tp/actions)","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W15-2/tp/branch/master/graph/badge.svg?token\u003dH2G32SVMDR)](https://codecov.io/gh/AY2223S1-CS2103T-W15-2/tp)","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"**REal-Time is a desktop application for managing your client details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"* If you are interested in using REal-Time, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"* If you are interested about developing REal-Time, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"* This project is based on the addressbook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jeromehjj":7,"hoang227":1,"-":12}},{"path":"docs/team/ama-chi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ama-chi"},"content":"## Overview","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"ama-chi"},"content":"### Summary of Contributions","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"ama-chi"},"content":"**Code contributed:** [RepoSense Link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dama-chi\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"ama-chi"},"content":"**Enhancements implemented:** ","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"ama-chi"},"content":"* Implemented a Meeting class to encapsulate a Meeting with a Client, Listing and Date/Time.","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"ama-chi"},"content":"  * Implemented `AddMeetingCommand`,`AddMeetingCommandParser`, ","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"ama-chi"},"content":"  * `EditMeetingCommand`, `EditMeetingCommandParser` and ","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"ama-chi"},"content":"  * `DeleteMeetingCommand`, `DeleteMeetingCommandParser` functions for the Meeting class.","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"ama-chi"},"content":"  ","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"ama-chi"},"content":"  * What it does:","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"ama-chi"},"content":"    * Allows the user to create, edit and remove meetings.","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"ama-chi"},"content":"**Contributions to the UG:**","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"ama-chi"},"content":"* Edited formatting to ensure consistency across the User Guide.","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"ama-chi"},"content":"* Styling and visual touch ups.","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"ama-chi"},"content":"**Contributions to the DG:**","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"ama-chi"},"content":"* Cleaning and formatting.","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"ama-chi"},"content":"**Contributions to team based tasks:** ","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"ama-chi"},"content":"* Created Milestones `v1.1`, `v1.2`, `v1.2b`, `v1.3` and `v1.4` and  their respective deadlines.","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"ama-chi"},"content":"* Created Issues and assigned them to respective milestones.","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"ama-chi"},"content":"* Wrote Test cases for Meeting class.","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"ama-chi"},"content":"**Review/mentoring contributions:** ","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"ama-chi"},"content":"* Reviewed and Merged Pull Request.","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"ama-chi"},"content":"* Handled merge conflicts.","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"ama-chi"},"content":"* Discussions on weekly distribution of work.","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"ama-chi"},"content":"**Contributions beyond the project team:**","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"ama-chi"},"content":"* Bug reports for other teams.","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"ama-chi":34}},{"path":"docs/team/gavzzz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"---","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"layout: page","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"title: Gavzzz Project Portfolio Page","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"---","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"### Project: REal-Time","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"REal-Time is a desktop application for _Real-Estate agents_ to manage client information, schedule meetings,","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"and track client offers and listings.","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"* **New Feature**: Added ability to add, delete, edit and find clients. (Pull request [#80](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/80))","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"  * What it does: allows the user to add new clients to the address book, edit their information, find the client and","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"delete the client if they want to.","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"   * Justification: This feature improves the product significantly because as a real estate agent, they need to manage","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"their clients and allows them to freely manipulate their clients information.","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"   * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. As the Person class was too generic, having a Client class would be more specific and","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"future commands would make use of the Client class instead.","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"**Code contributed:** [RepoSense Link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dgavzzz\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"* **Contributions to team based tasks:**:","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"  * Managed release `v1.3` (1 release) on GitHub","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"  * Updated the read.md Ui picture","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"  * facilitated meetings","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"**Enhancements  to existing features:**","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"* Implemented GUI panels for Client, Listing and Meeting  (Pull requests [\\#93](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/93))","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"* Wrote additional tests for existing features for the client class. (Pull requests [\\#178](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/178))","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"* Fixed bugs related to other members pull requests (Pull request [#80](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/80))","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"**Documentation**:","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"  * User Guide:","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"    * Added documentation for the features `addC`, `editC`, `deleteC` and `findC` (Pull request [#178](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/178))","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"Gavzzz"},"content":"  * Developer Guide:","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"Gavzzz"},"content":"**Review/mentoring contributions:**","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"Gavzzz"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#55](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/55), [\\#60](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/60), [\\#86](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/86)","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"Gavzzz":43}},{"path":"docs/team/hoang227.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"## Overview","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"### Summary of Contributions","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"**Code contributed:** [RepoSense Link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dama-chi\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"**Enhancements implemented:**","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"* New Feature: `AddListingCommand` and `AddListingCommandParser` ([#39](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/39),","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"  [#44](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/44), [#60](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/60))","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"  * What it does:","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    * Allows users to add listings to Real-Time.","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"  * Highlight:","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    * Implemented `Listing` Class ([#39](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/39))","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"    with a new field `ListingId`([#60](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/60)) so that the user can add id to their listings.","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    * Added `parseListingId`([#60](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/60)) in `ParserUtil` class to parse ListingId.","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"* New Feature: Auto-sorting mechanism for all lists ([#60](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/60), [#84](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/84))","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"  * What it does:","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    * Automatically sort the lists when a new entry is added.","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"  * Highlight:","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    * Implemented the sorting mechanism in `add` method in `UniqueClientList`, `UniqueListingList`,","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    `UniqueMeetingList` and `UniqueOfferList` ([#60](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/60), [#84](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/84))","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    * Added `compareTo` to `Client`, `Listing`, `Meeting` and `Offer` classes so","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    `UniqueClientList`, `UniqueListingList`, `UniqueMeetingList` and `UniqueOfferList` can","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"    sort the list everytime a new entry is added. ([#60](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/60), [#84](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/84))","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"* New Feature: Cascading-delete mechanism for lists. ([#89](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/89))","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"  * What it does:","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    * Deleting entries that have related entries from other lists will have a cascading effect.","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"  * Highlight:","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    * `DeleteClientCommand` will also delete the listings, meetings and offers related to the `Client` that is deleted.","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    * `DeleteListingCommand` will also delete the offers and meetings related to the `Listing` that is deleted.","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"**Contributions to the UG:**","lastModifiedDate":"2022-11-04"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"* Added documentation for features:","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"  * Client-related","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    * Adding, Editing, Finding and Listing","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"  * Listing-related","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    * Adding, Editing and Listing","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"  * Meeting-related","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    * Adding","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"* Enchance the visual aspect and readability for entire UG.","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"* Added Command Format section to help user learn the commands.","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"* Relevant pull request(s): [#94](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/94),","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"  [#165](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/165), [#169](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/169), [#173](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/173)","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"**Contributions to the DG:**","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"* Added Implementation details for features with UML sequence diagrams:","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"  * Client-related","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    * Add, Edit, Delete","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"  * Listing-related","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    * Add, Edit, Delete","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"  * Meeting-related","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    * Add, Edit, Delete","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"* Added Use cases for Offer related features:","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"  * Client-related","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    * Add, Edit, Delete","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"  * Listing-related","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"    * Add, Edit, Delete","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"  * Meeting-related","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    * Add, Edit, Delete","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"* Relevant pull request(s): [#176](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/176), [#180](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/180)","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"**Contributions to team based tasks:**","lastModifiedDate":"2022-11-04"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"* Write DG implementation for Client, Listing and Meeting related command.","lastModifiedDate":"2022-11-07"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"* Write use cases and user stories for DG.","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"* Create app\u0027s Logo.","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"* Facilitate meetings.","lastModifiedDate":"2022-11-04"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"* Assigning work among the group.","lastModifiedDate":"2022-11-04"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"* Refactoring the project to match the product name ([#161](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/161))","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"* Format the UG to increase readability. ([#169](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/169),","lastModifiedDate":"2022-11-07"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"[#173](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/173))","lastModifiedDate":"2022-11-07"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"* Added Test Cases ([#150](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/150), [#161](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/161)):","lastModifiedDate":"2022-11-07"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"  * Client-Related","lastModifiedDate":"2022-11-07"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"    * DeleteClientCommandTest","lastModifiedDate":"2022-11-07"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"    * EditClientCommandTest","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"    * AddClientCommandTest","lastModifiedDate":"2022-11-07"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"    * FindClientCommandTest","lastModifiedDate":"2022-11-07"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"    * ClientTest","lastModifiedDate":"2022-11-07"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"    * ViewClientListCommandTest","lastModifiedDate":"2022-11-07"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    * JsonAdaptedClientTest","lastModifiedDate":"2022-11-07"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"  * Listing Related","lastModifiedDate":"2022-11-07"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"    * DeleteListingCommandTest","lastModifiedDate":"2022-11-07"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    * EditListingCommandTest","lastModifiedDate":"2022-11-07"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    * ViewListingsCommandTest","lastModifiedDate":"2022-11-07"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"    * EditListingDescriptorTest","lastModifiedDate":"2022-11-07"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"    * JsonAdaptedListingTest","lastModifiedDate":"2022-11-07"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"    * AddListingCommandTest","lastModifiedDate":"2022-11-07"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"  * Offer-Related","lastModifiedDate":"2022-11-07"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"    * JsonAdaptedOfferTest","lastModifiedDate":"2022-11-07"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"**Review/mentoring contributions:**","lastModifiedDate":"2022-11-04"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"* Merging and Review PRs","lastModifiedDate":"2022-11-07"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"* Discussion providing feedback to teammates on implementation of app architecture.","lastModifiedDate":"2022-11-07"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"**Contributions beyond the project team:**","lastModifiedDate":"2022-11-07"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"* Bugs reported in other team\u0027s product: [Link to PED](https://github.com/hoang227/ped)","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"hoang227":98}},{"path":"docs/team/isaaclhy00.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"### Overview","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"REal-Time is a one-stop desktop app for real-estate agents to manage their work. ","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"It aims to help real-estate agents better organise their listings, clients and offers. ","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"REal-Time make suse of a simple Command Line Interface (CLI) ","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"and displays data via a Graphical User Interface (GUI) created with JavaFX.","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"It is written in Java, and has about 30 kLoC.","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"### Summary of Contributions","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"**Code contributed:** Up until 7 November 2022, ","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"I have contributed 1786 LoC (roughly 4,425 additions and 2,434 deletions), ","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"and pushed 56 commits. For most recent update, ","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"refer to this [RepoSense Link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003disaaclhy00\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"**Enhancements implemented:** ","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"* Added `Add`, `Edit`, `Delete`, and `Find` features for listings.","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"* Added `Add` and `View` offers and clients tagged to the listings. ","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"**Contributions to the UG:**","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"* Added `addL` feature description.","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"* Added `editL` feature description.","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"* Added `delL` feature description.","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"* Added links for navigation.","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"**Contributions to the DG:**","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"* Added rationale for features.","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"* Added user stories for `Listing` related features.","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"**Contributions to team based tasks:** ","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"* Added `Listing` class and its features","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"* Added product demonstration","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"**Review/mentoring contributions:** ","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"* weekly review and merging of peer PRs (with simple review comments)","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"**Contributions beyond the project team:**","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"* Reported 9 bugs and suggestions for other teams.","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"Isaaclhy00":37}},{"path":"docs/team/jeromehjj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"---","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"layout: page","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"title: Jerome Hoo Jun Jie\u0027s Project Portfolio Page","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"---","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"## Overview","lastModifiedDate":"2022-11-03"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"**REal-Time** is a desktop application made for **Real-Estate agents** to **manage client information,","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"schedule meetings, and track client offers and listings.**","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"It is written in Java and uses JavaFX to build the GUI for the application.","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"## Summary of Contributions","lastModifiedDate":"2022-11-03"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"* **Code contributed:** [RepoSense Link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003djeromehjj\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"* **Enhancements implemented:**","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"  * **New Feature:** `AddOfferCommand` and `AddOfferCommandParser`(Pull request [#46](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/46))","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"    * What it does:","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"      * Allows users to add their offers made for a listing in the application.","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"    * Highlights:","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"      * Implemented the `Offer` class with new `Price` field so that prices can be added into an offer by","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"      the user. Added a `AddOfferCommandParser` to parse the input by the user when adding offers.","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"      * Added `parsePrice` in `ParserUtil` class to parse prices that are valid","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"      * Implemented an auto-sorting feature when adding offers so that it is sorted by the `listingId` field.","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"      * Added necessary tests in `AddOfferCommandTest`, `AddOfferCommandParserTest`, `ParserUtilTest` and `PriceTest`(Pull request [#163](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/163))","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"  * **New Feature:** `EditOfferCommand` and `EditOfferCommandParser`(Pull request [#81](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/81))","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"    * What it does:","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"      * Allows users to modify their offers when needed","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"    * Highlights:","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"    * Implemented the `EditOfferDescriptor` class to create the `Offer` that is being edited to replace the targeted `Offer`","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"    * Added necessary tests in `EditOfferCommandTest`, `EditOfferCommandParserTest`, and `EditOfferDescriptorTest`(Pull request [#163](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/163))","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"  * **New Feature:** `DeleteOfferCommand` and `DeleteOfferCommandParser`(Pull request [#81](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/81))","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"    * What it does:","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"    * Allows users to delete their offers in the application","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"    * Highlights:","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"    * Added necessary tests in `DeleteOfferCommandTest` and `DeleteOfferCommandParserTest`(Pull request [#163](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/163))","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"* **Contributions to the User Guide:**","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"  * Added documentation for features: Adding an Offer, Editing an Offer, Deleting an Offer","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"  * Implemented the Glossary table","lastModifiedDate":"2022-11-03"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"  * Implemented the Prefix Summary table with hyperlinks and details","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"  * Updated the Command Summary table with hyperlinks and details","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"  * Relevant pull request(s): [#163](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/163),","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"  [#155](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/155),","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"  [#87](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/87),","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"  [#74](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/74)","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"* **Contributions to the Developer Guide:**","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"    * Added **Implementation** details for features with UML sequence diagrams: **Add Offer, Edit Offer, Delete Offer**","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"    * Added **Use cases** for Offer related features: **Add an Offer, Edit an Offer, Delete an Offer**","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"    * Relevant pull request(s): [#163](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/163),","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"    [#74](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/74)","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"* **Contributions to team based tasks:**","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"  * Maintaining issue tracker on Github","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"  * Release management for `v1.3`","lastModifiedDate":"2022-11-07"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"  * Updated UML Class and Sequence Diagrams in **Design** section to match current architecture of product([#163](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/163))","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"  * Enabled assertions","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"  * Renamed User Guide to match product([#42](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/42))","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"* **Review/mentoring contributions:**","lastModifiedDate":"2022-11-07"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"  * Pull requests reviewed with comments: [#161](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/161),","lastModifiedDate":"2022-11-07"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"  [#69](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/69),","lastModifiedDate":"2022-11-07"},{"lineNumber":75,"author":{"gitId":"jeromehjj"},"content":"  [#60](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/60),","lastModifiedDate":"2022-11-03"},{"lineNumber":76,"author":{"gitId":"jeromehjj"},"content":"  [#45](https://github.com/AY2223S1-CS2103T-W15-2/tp/pull/45)","lastModifiedDate":"2022-11-03"},{"lineNumber":77,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":78,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":79,"author":{"gitId":"jeromehjj"},"content":"* **Contributions beyond the project team:**","lastModifiedDate":"2022-11-07"},{"lineNumber":80,"author":{"gitId":"jeromehjj"},"content":"  * Bugs reported in other team\u0027s product: [Link to PED](https://github.com/jeromehjj/ped/issues)","lastModifiedDate":"2022-11-03"}],"authorContributionMap":{"jeromehjj":80}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"package seedu.addressbook.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"import seedu.addressbook.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"import static seedu.addressbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-11-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-11-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"hoang227"},"content":"Create a `RemarkCommandParser` class in the `seedu.addressbook.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2022-11-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2022-11-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-11-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"hoang227"},"content":"Create a new `Remark` in `seedu.addressbook.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-11-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-11-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"hoang227"},"content":"Simply add the following to [`seedu.addressbook.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-11-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-11-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2022-11-05"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2022-11-05"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2022-11-05"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2022-11-05"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2022-11-05"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-11-05"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-11-05"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"hoang227":6,"-":395}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"The `address` field in `Person` is actually an instance of the `seedu.addressbook.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2022-11-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"hoang227":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.addressbook.logic.Logic`.","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"A quick look at the `seedu.addressbook.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"        Command command \u003d AddressBookParser.parseCommand(commandText);","lastModifiedDate":"2022-11-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2022-11-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2022-11-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2022-11-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2022-11-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2022-11-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2022-11-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2022-11-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2022-11-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2022-11-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"hoang227":3,"-":298}},{"path":"src/main/java/seedu/realtime/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.LogsCenter;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.util.FileUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"hoang227":3,"-":61}},{"path":"src/main/java/seedu/realtime/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"hoang227":1,"-":24}},{"path":"src/main/java/seedu/realtime/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Config;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.LogsCenter;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Version;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.util.ConfigUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.util.StringUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.Logic;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.LogicManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.RealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.util.SampleDataUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.storage.JsonRealTimeStorage;","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.storage.RealTimeStorage;","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.storage.Storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.storage.StorageManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.storage.UserPrefsStorage;","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.ui.Ui;","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.ui.UiManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"    public static final Version VERSION \u003d new Version(1, 4, 0, true);","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing RealTime ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        RealTimeStorage realTimeStorage \u003d new JsonRealTimeStorage(userPrefs.getRealTimeFilePath());","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        storage \u003d new StorageManager(realTimeStorage, userPrefsStorage);","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        Optional\u003cReadOnlyRealTime\u003e realTimeOptional;","lastModifiedDate":"2022-11-05"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        ReadOnlyRealTime initialData;","lastModifiedDate":"2022-11-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"            realTimeOptional \u003d storage.readRealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"            if (!realTimeOptional.isPresent()) {","lastModifiedDate":"2022-11-05"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"                logger.info(\"Data file not found. Will be starting with a sample RealTime\");","lastModifiedDate":"2022-11-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"            initialData \u003d realTimeOptional.orElseGet(SampleDataUtil::getSampleRealTime);","lastModifiedDate":"2022-11-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty RealTime\");","lastModifiedDate":"2022-11-05"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"            initialData \u003d new RealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty RealTime\");","lastModifiedDate":"2022-11-05"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"            initialData \u003d new RealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"hoang227"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty RealTime\");","lastModifiedDate":"2022-11-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"hoang227"},"content":"        logger.info(\"Starting RealTime \" + MainApp.VERSION);","lastModifiedDate":"2022-11-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeromehjj":1,"hoang227":40,"-":143}},{"path":"src/main/java/seedu/realtime/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.core;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hoang227":1,"-":62}},{"path":"src/main/java/seedu/realtime/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.core;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hoang227":1,"-":78}},{"path":"src/main/java/seedu/realtime/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.core;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    private static final String LOG_FILE \u003d \"realTime.log\";","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hoang227":2,"-":110}},{"path":"src/main/java/seedu/realtime/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.core;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_CLIENTS_LISTED_OVERVIEW \u003d \"%1$d clients listed!\";","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"    public static final String MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX \u003d \"The client index provided is invalid\";","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"    public static final String MESSAGE_INVALID_LISTING_DISPLAYED_INDEX \u003d \"The listing index provided is invalid\";","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    public static final String MESSAGE_INVALID_LISTING_ID \u003d \"The listing ID provided is invalid.\";","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    public static final String MESSAGE_LISTING_DOES_NOT_EXIST \u003d \"This listing does not exist in REal-Time.\";","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"    public static final String MESSAGE_INVALID_OFFER_DISPLAYED_INDEX \u003d \"The offer index provided is invalid\";","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"ama-chi"},"content":"    public static final String MESSAGE_INVALID_MEETING_DISPLAYED_INDEX \u003d \"The meeting index provided is invalid\";","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_OFFERS_LISTED_OVERVIEW \u003d \"%1$d offers listed!\";","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jeromehjj":1,"hoang227":4,"ama-chi":1,"Isaaclhy00":6,"-":7,"Gavzzz":1}},{"path":"src/main/java/seedu/realtime/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.core;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hoang227":1,"-":115}},{"path":"src/main/java/seedu/realtime/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.core.index;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"hoang227":1,"-":53}},{"path":"src/main/java/seedu/realtime/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.exceptions;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hoang227":1,"-":10}},{"path":"src/main/java/seedu/realtime/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.exceptions;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hoang227":1,"-":20}},{"path":"src/main/java/seedu/realtime/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.util;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.MainApp;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"hoang227":2,"-":40}},{"path":"src/main/java/seedu/realtime/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.util;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hoang227":1,"-":34}},{"path":"src/main/java/seedu/realtime/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.util;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Config;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"hoang227":3,"-":20}},{"path":"src/main/java/seedu/realtime/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.util;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hoang227":1,"-":82}},{"path":"src/main/java/seedu/realtime/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.util;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.LogsCenter;","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hoang227":3,"-":140}},{"path":"src/main/java/seedu/realtime/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.util;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hoang227":2,"-":66}},{"path":"src/main/java/seedu/realtime/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.GuiSettings;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.CommandResult;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.meeting.Meeting;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"     * Returns the RealTime.","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"     * @see seedu.realtime.model.Model#getRealTime()","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    ReadOnlyRealTime getRealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"    /** Returns an unmodifiable view of the filtered list of clients */","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"    /** Returns an unmodifiable view of the filtered list of offers*/","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"    ObservableList\u003cOffer\u003e getFilteredOfferList();","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"    /** Returns an unmodifiable view of the filtered list of listings*/","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"    ObservableList\u003cListing\u003e getFilteredListingList();","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"    /** Returns an unmodifiable view of the filtered list of listings*/","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"Gavzzz"},"content":"    ObservableList\u003cMeeting\u003e getFilteredMeetingList();","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"    Path getRealTimeFilePath();","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jeromehjj":4,"hoang227":15,"Isaaclhy00":3,"-":39,"Gavzzz":6}},{"path":"src/main/java/seedu/realtime/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.GuiSettings;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.LogsCenter;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.Command;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.CommandResult;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.RealTimeParser;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.meeting.Meeting;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.storage.Storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    private final RealTimeParser realTimeParser;","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        realTimeParser \u003d new RealTimeParser();","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        Command command \u003d realTimeParser.parseCommand(commandText);","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"            storage.saveRealTime(model.getRealTime());","lastModifiedDate":"2022-11-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"    public ReadOnlyRealTime getRealTime() {","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        return model.getRealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":71,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"Gavzzz"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"Gavzzz"},"content":"        return model.getFilteredClientList();","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"jeromehjj"},"content":"    public ObservableList\u003cOffer\u003e getFilteredOfferList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"jeromehjj"},"content":"        return model.getFilteredOfferList();","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"Isaaclhy00"},"content":"    public ObservableList\u003cListing\u003e getFilteredListingList() {","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"Isaaclhy00"},"content":"        return model.getFilteredListingList();","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"Gavzzz"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"Gavzzz"},"content":"        return model.getFilteredMeetingList();","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"    public Path getRealTimeFilePath() {","lastModifiedDate":"2022-11-05"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        return model.getRealTimeFilePath();","lastModifiedDate":"2022-11-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jeromehjj":5,"hoang227":24,"Isaaclhy00":5,"-":61,"Gavzzz":10}},{"path":"src/main/java/seedu/realtime/logic/commands/AddClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":" * Adds a client to the address book.","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"public class AddClientCommand extends Command {","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"    public static final String COMMAND_WORD \u003d \"addC\";","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a client to the address book. \"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New client added: %1$s\";","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in the address book\";","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"Gavzzz"},"content":"    private final Client toAdd;","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"Gavzzz"},"content":"     * Creates an AddCommand to add the specified {@code Client}","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"Gavzzz"},"content":"    public AddClientCommand(Client client) {","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"Gavzzz"},"content":"        requireNonNull(client);","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"Gavzzz"},"content":"        toAdd \u003d client;","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"Gavzzz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"Gavzzz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"        if (model.hasClient(toAdd)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"Gavzzz"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"Gavzzz"},"content":"        model.addClient(toAdd);","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"Gavzzz"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"Gavzzz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"Gavzzz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"Gavzzz"},"content":"                || (other instanceof AddClientCommand // instanceof handles nulls","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"Gavzzz"},"content":"                \u0026\u0026 toAdd.equals(((AddClientCommand) other).toAdd));","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jeromehjj":1,"hoang227":9,"Gavzzz":58}},{"path":"src/main/java/seedu/realtime/logic/commands/AddInterestedClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_LISTING_ID;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":" * Adds an interested client to the listing.","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"public class AddInterestedClientCommand extends Command {","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String COMMAND_WORD \u003d \"addIC\";","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an interested client to the listing. \"","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"            + PREFIX_LISTING_ID","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"            + PREFIX_LISTING_ID + \"001\";","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New client added: %1$s\";","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in the listing\";","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"    private final Name toAdd;","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"    private final ListingId listingId;","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"     * Creates an AddCommand to add the specified {@code Client}","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"    public AddInterestedClientCommand(Name client, ListingId listingId) {","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"        requireNonNull(client);","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"        toAdd \u003d client;","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"        this.listingId \u003d listingId;","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"        Listing listing \u003d model.getListing(listingId);","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"Isaaclhy00"},"content":"        if (listing.hasInterestedClient(toAdd)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"Isaaclhy00"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"Isaaclhy00"},"content":"        listing.addInterestedClient(toAdd);","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"Isaaclhy00"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"Isaaclhy00"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"Isaaclhy00"},"content":"                || (other instanceof AddInterestedClientCommand // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"Isaaclhy00"},"content":"                \u0026\u0026 toAdd.equals(((AddInterestedClientCommand) other).toAdd));","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"hoang227":8,"Isaaclhy00":54}},{"path":"src/main/java/seedu/realtime/logic/commands/AddListingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_ASKING_PRICE;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_LISTING_ID;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Price;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":" * Adds a person to the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"public class AddListingCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"    public static final String COMMAND_WORD \u003d \"addL\";","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a listing to the address book. \"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"            + PREFIX_LISTING_ID + \"ID \"","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"            + PREFIX_ADDRESS + \" ADDRESS \"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"            + PREFIX_ASKING_PRICE + \"ASKING PRICE \\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"            + PREFIX_LISTING_ID + \"3412 \"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"            + PREFIX_ADDRESS + \" 100 Charming Avenue \"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"            + PREFIX_NAME + \"Jake Holt \"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"            + PREFIX_ASKING_PRICE + \"1 \";","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New listing added: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_DUPLICATE_LISTING \u003d \"This listing already exists in the address book\";","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"    private final ListingId id;","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"    private final Address address;","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"    private final Name name;","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"    private final Price askingPrice;","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"    private Listing toAdd;","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"Isaaclhy00"},"content":"    public AddListingCommand(ListingId id, Address address, Name name, Price askingPrice) {","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"Isaaclhy00"},"content":"        requireAllNonNull(address, name);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"Isaaclhy00"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"Isaaclhy00"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"Isaaclhy00"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"Isaaclhy00"},"content":"        this.askingPrice \u003d askingPrice;","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        this.toAdd \u003d new Listing(id, address, name, askingPrice);","lastModifiedDate":"2022-11-01"},{"lineNumber":56,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"Isaaclhy00"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"Isaaclhy00"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"Isaaclhy00"},"content":"        this.toAdd \u003d new Listing(id, address, name, askingPrice);","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"Isaaclhy00"},"content":"        if (model.hasListing(toAdd)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"Isaaclhy00"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_LISTING);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"Isaaclhy00"},"content":"        model.addListing(toAdd);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"Isaaclhy00"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"Isaaclhy00"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"Isaaclhy00"},"content":"                || (other instanceof AddListingCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"                \u0026\u0026 toAdd.getId().equals(((AddListingCommand) other).toAdd.getId()));","lastModifiedDate":"2022-11-01"},{"lineNumber":77,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jeromehjj":2,"hoang227":15,"Isaaclhy00":62}},{"path":"src/main/java/seedu/realtime/logic/commands/AddMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"ama-chi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_LISTING_ID;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.meeting.Meeting;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"ama-chi"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"ama-chi"},"content":" * Adds a Meeting to the address book.","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"ama-chi"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"ama-chi"},"content":"public class AddMeetingCommand extends Command {","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    public static final String COMMAND_WORD \u003d \"addM\";","lastModifiedDate":"2022-10-30"},{"lineNumber":19,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"ama-chi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a meeting to the address book. \"","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"ama-chi"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"ama-chi"},"content":"            + PREFIX_LISTING_ID + \"LISTING ADDRESS \"","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"ama-chi"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"ama-chi"},"content":"            + PREFIX_DATETIME + \"Date Time (yyyy-MM-dd HH:mm) \\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"ama-chi"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"ama-chi"},"content":"            + PREFIX_LISTING_ID + \"30_SERGARDENS_LOR23_0718 \"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"ama-chi"},"content":"            + PREFIX_NAME + \"Bob \"","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"ama-chi"},"content":"            + PREFIX_DATETIME + \"2022-12-14 12:00\";","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"ama-chi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Meeting added: %1$s\";","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"ama-chi"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"This meeting already exists!\";","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"ama-chi"},"content":"    private final Meeting toAdd;","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"ama-chi"},"content":"     * Creates an AddMeetingCommand to add the specified {@code Meeting}","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"ama-chi"},"content":"    public AddMeetingCommand(Meeting meeting) {","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"ama-chi"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"ama-chi"},"content":"        toAdd \u003d meeting;","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"ama-chi"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"ama-chi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"ama-chi"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"ama-chi"},"content":"        if (model.hasMeeting(toAdd)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"ama-chi"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"ama-chi"},"content":"        model.addMeeting(toAdd);","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"ama-chi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"ama-chi"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"ama-chi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"ama-chi"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"ama-chi"},"content":"                || (other instanceof AddMeetingCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"ama-chi"},"content":"                \u0026\u0026 toAdd.equals(((AddMeetingCommand) other).toAdd));","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"ama-chi"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"hoang227":8,"ama-chi":52}},{"path":"src/main/java/seedu/realtime/logic/commands/AddOfferCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_LISTING_ID;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_OFFER;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":" * Adds an offer to the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"public class AddOfferCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    public static final String COMMAND_WORD \u003d \"addO\";","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an offer to the address book. \"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"            + PREFIX_LISTING_ID + \"LISTING ADDRESS \"","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"            + PREFIX_OFFER + \"OFFER \\n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"            + PREFIX_LISTING_ID + \"30_SERGARDENS_LOR23_0718 \"","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"            + PREFIX_NAME + \"Bob \"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"            + PREFIX_OFFER + \"600000\";","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New offer added: %1$s\";","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"    public static final String MESSAGE_DUPLICATE_OFFER \u003d \"This offer already exists in the list of offers\";","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"    private final Offer toAdd;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"     * Creates an AddOfferCommand to add the specified {@code Person}","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"    public AddOfferCommand(Offer offer) {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"        requireNonNull(offer);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"        toAdd \u003d offer;","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"        if (model.hasOffer(toAdd)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_OFFER);","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"        model.addOffer(toAdd);","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"                || (other instanceof AddOfferCommand // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"                \u0026\u0026 toAdd.equals(((AddOfferCommand) other).toAdd));","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"jeromehjj":52,"hoang227":7}},{"path":"src/main/java/seedu/realtime/logic/commands/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"public class AddPersonCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"    public static final String COMMAND_WORD \u003d \"addP\";","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"    public AddPersonCommand(Person person) {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"Isaaclhy00"},"content":"                || (other instanceof AddPersonCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"Isaaclhy00"},"content":"                \u0026\u0026 toAdd.equals(((AddPersonCommand) other).toAdd));","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jeromehjj":1,"hoang227":9,"Isaaclhy00":5,"-":53}},{"path":"src/main/java/seedu/realtime/logic/commands/AddTagsToListingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":" * Adds a set of Tags to the Listing.","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"public class AddTagsToListingCommand extends Command {","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    public static final String COMMAND_WORD \u003d \"addT\";","lastModifiedDate":"2022-10-30"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds tags to the listing in the address book. \"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"            + PREFIX_TAG + \" tags \\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"            + PREFIX_TAG + \" 3 bedroom \\n\";","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New tags added to listing: %1$s\";","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_DUPLICATE_TAGS \u003d \"These tags already exists in the listing\";","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"    private final ListingId listingId;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"    public AddTagsToListingCommand(Set\u003cTag\u003e tags, ListingId listingId) {","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"        requireNonNull(tags);","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"        this.listingId \u003d listingId;","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"        Listing listing \u003d model.getListing(listingId);","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"Isaaclhy00"},"content":"        if (listing.hasTag(tags)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"Isaaclhy00"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TAGS);","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"Isaaclhy00"},"content":"        listing.addTags(tags);","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        model.setListing(model.getListing(listingId), listing);","lastModifiedDate":"2022-11-01"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, tags));","lastModifiedDate":"2022-11-01"},{"lineNumber":55,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"Isaaclhy00"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"Isaaclhy00"},"content":"                || (other instanceof AddTagsToListingCommand // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"Isaaclhy00"},"content":"                \u0026\u0026 tags.equals(((AddTagsToListingCommand) other).tags));","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"hoang227":10,"Isaaclhy00":53}},{"path":"src/main/java/seedu/realtime/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.RealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"        model.setRealTime(new RealTime());","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hoang227":5,"-":19}},{"path":"src/main/java/seedu/realtime/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hoang227":3,"-":17}},{"path":"src/main/java/seedu/realtime/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hoang227":1,"-":70}},{"path":"src/main/java/seedu/realtime/logic/commands/DeleteClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"import java.util.List;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Messages;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":" * Deletes a client identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"public class DeleteClientCommand extends Command {","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    public static final String COMMAND_WORD \u003d \"delC\";","lastModifiedDate":"2022-10-30"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"            + \": Deletes the client identified by the index number used in the displayed client list.\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"    public static final String MESSAGE_DELETE_CLIENT_SUCCESS \u003d \"Deleted Client: %1$s\";","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"    public DeleteClientCommand(Index targetIndex) {","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"Gavzzz"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"Gavzzz"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"Gavzzz"},"content":"        Client clientToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"Gavzzz"},"content":"        model.deleteClient(clientToDelete);","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        model.deleteListingsOwnedBy(clientToDelete);","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        model.deleteOffersMadeBy(clientToDelete);","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        model.deleteMeetingsWith(clientToDelete);","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"Gavzzz"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete));","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"Gavzzz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"Gavzzz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"                || (other instanceof DeleteClientCommand // instanceof handles nulls","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"Gavzzz"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteClientCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"hoang227":10,"Gavzzz":46}},{"path":"src/main/java/seedu/realtime/logic/commands/DeleteListingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.List;","lastModifiedDate":"2022-11-03"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Messages;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"public class DeleteListingCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    public static final String COMMAND_WORD \u003d \"delL\";","lastModifiedDate":"2022-10-30"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"            + \": Deletes the listing identified by the id used in the displayed listings list.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_DELETE_LISTING_SUCCESS \u003d \"Deleted Listing: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"    private final Index index;","lastModifiedDate":"2022-11-03"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"    public DeleteListingCommand(Index index) {","lastModifiedDate":"2022-11-03"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-11-03"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"        List\u003cListing\u003e lastShownList \u003d model.getFilteredListingList();","lastModifiedDate":"2022-11-03"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-11-03"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_LISTING_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"        Listing listingToDelete \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-11-03"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"        model.deleteListing(listingToDelete);","lastModifiedDate":"2022-11-03"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_LISTING_SUCCESS, listingToDelete));","lastModifiedDate":"2022-11-03"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"Isaaclhy00"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"Isaaclhy00"},"content":"                || (other instanceof DeleteListingCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"Isaaclhy00"},"content":"                \u0026\u0026 index.equals(((DeleteListingCommand) other).index)); // state check","lastModifiedDate":"2022-11-03"},{"lineNumber":51,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":9,"Isaaclhy00":44}},{"path":"src/main/java/seedu/realtime/logic/commands/DeleteMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"ama-chi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"ama-chi"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Messages;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.meeting.Meeting;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"ama-chi"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"ama-chi"},"content":" * Deletes a meeting identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"ama-chi"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"ama-chi"},"content":"public class DeleteMeetingCommand extends Command {","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    public static final String COMMAND_WORD \u003d \"delM\";","lastModifiedDate":"2022-10-30"},{"lineNumber":20,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"ama-chi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"ama-chi"},"content":"            + \": Deletes the meeting identified by the index number used in the displayed meeting list.\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"ama-chi"},"content":"            + \"Parameters INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"ama-chi"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"ama-chi"},"content":"    public static final String MESSAGE_DELETE_MEETING_SUCCESS \u003d \"Deleted Meeting: %1$s\";","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"ama-chi"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"ama-chi"},"content":"    public DeleteMeetingCommand(Index targetIndex) {","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"ama-chi"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"ama-chi"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"ama-chi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"ama-chi"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"ama-chi"},"content":"        List\u003cMeeting\u003e lastshownlist \u003d model.getFilteredMeetingList();","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"ama-chi"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastshownlist.size()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"ama-chi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"ama-chi"},"content":"        Meeting toDelete \u003d lastshownlist.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"ama-chi"},"content":"        model.deleteMeeting(toDelete);","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"ama-chi"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MEETING_SUCCESS, toDelete));","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"ama-chi"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"ama-chi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"ama-chi"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"ama-chi"},"content":"                || (other instanceof DeleteMeetingCommand","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"ama-chi"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteMeetingCommand) other).targetIndex));","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"ama-chi"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"hoang227":7,"ama-chi":47}},{"path":"src/main/java/seedu/realtime/logic/commands/DeleteOfferCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Messages;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":" * Deletes an offer identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"public class DeleteOfferCommand extends Command {","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    public static final String COMMAND_WORD \u003d \"delO\";","lastModifiedDate":"2022-10-30"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"        + \": Deletes the offer identified by the index number used in the displayed offer list.\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"        + \"Parameters INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"    public static final String MESSAGE_DELETE_OFFER_SUCCESS \u003d \"Deleted Offer: %1$s\";","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"    public DeleteOfferCommand(Index targetIndex) {","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"        List\u003cOffer\u003e lastShownList \u003d model.getFilteredOfferList();","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_OFFER_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"        Offer offerToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"        model.deleteOffer(offerToDelete);","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_OFFER_SUCCESS, offerToDelete));","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"            || (other instanceof DeleteOfferCommand // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"            \u0026\u0026 targetIndex.equals(((DeleteOfferCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jeromehjj":46,"hoang227":7}},{"path":"src/main/java/seedu/realtime/logic/commands/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Messages;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"public class DeletePersonCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    public static final String COMMAND_WORD \u003d \"delP\";","lastModifiedDate":"2022-10-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"    public DeletePersonCommand(Index targetIndex) {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"Isaaclhy00"},"content":"                || (other instanceof DeletePersonCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"Isaaclhy00"},"content":"                \u0026\u0026 targetIndex.equals(((DeletePersonCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hoang227":7,"Isaaclhy00":4,"-":42}},{"path":"src/main/java/seedu/realtime/logic/commands/EditClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"import java.util.List;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Messages;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.util.CollectionUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Email;","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Phone;","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":" * Edits the details of an existing client in the address book.","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"public class EditClientCommand extends Command {","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"    public static final String COMMAND_WORD \u003d \"editC\";","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the client identified \"","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"            + \"by the index number used in the displayed client list. \"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"Gavzzz"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"Gavzzz"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"Gavzzz"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"Gavzzz"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"Gavzzz"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"Gavzzz"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"Gavzzz"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"Gavzzz"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"    public static final String MESSAGE_EDIT_CLIENT_SUCCESS \u003d \"Edited Clients: %1$s\";","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"Gavzzz"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"Gavzzz"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in the address book.\";","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"    private final Index index;","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"Gavzzz"},"content":"    private final EditClientDescriptor editClientDescriptor;","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"Gavzzz"},"content":"     * @param index of the client in the filtered client list to edit","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"Gavzzz"},"content":"     * @param editClientDescriptor details to edit the client with","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"Gavzzz"},"content":"    public EditClientCommand(Index index, EditClientDescriptor editClientDescriptor) {","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"Gavzzz"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"Gavzzz"},"content":"        requireNonNull(editClientDescriptor);","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"Gavzzz"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"Gavzzz"},"content":"        this.editClientDescriptor \u003d new EditClientDescriptor(editClientDescriptor);","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"Gavzzz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"Gavzzz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"Gavzzz"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"Gavzzz"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"Gavzzz"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"Gavzzz"},"content":"        Client clientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"Gavzzz"},"content":"        Client editedClient \u003d createEditedClient(clientToEdit, editClientDescriptor);","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"Gavzzz"},"content":"        if (!clientToEdit.isSameClient(editedClient) \u0026\u0026 model.hasClient(editedClient)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"Gavzzz"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"Gavzzz"},"content":"        model.setClient(clientToEdit, editedClient);","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"Gavzzz"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"Gavzzz"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CLIENT_SUCCESS, editedClient));","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"Gavzzz"},"content":"     * Creates and returns a {@code Client} with the details of {@code clientToEdit}","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"Gavzzz"},"content":"     * edited with {@code editClientDescriptor}.","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"Gavzzz"},"content":"    private static Client createEditedClient(Client clientToEdit, EditClientDescriptor editClientDescriptor) {","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"Gavzzz"},"content":"        assert clientToEdit !\u003d null;","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"Gavzzz"},"content":"        Name updatedName \u003d editClientDescriptor.getName().orElse(clientToEdit.getName());","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"Gavzzz"},"content":"        Phone updatedPhone \u003d editClientDescriptor.getPhone().orElse(clientToEdit.getPhone());","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"Gavzzz"},"content":"        Email updatedEmail \u003d editClientDescriptor.getEmail().orElse(clientToEdit.getEmail());","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"Gavzzz"},"content":"        Address updatedAddress \u003d editClientDescriptor.getAddress().orElse(clientToEdit.getAddress());","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"Gavzzz"},"content":"        Set\u003cTag\u003e updatedTags \u003d editClientDescriptor.getTags().orElse(clientToEdit.getTags());","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"Gavzzz"},"content":"        return new Client(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":106,"author":{"gitId":"Gavzzz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"Gavzzz"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"Gavzzz"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"Gavzzz"},"content":"            return true;","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":112,"author":{"gitId":"Gavzzz"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-21"},{"lineNumber":113,"author":{"gitId":"Gavzzz"},"content":"        if (!(other instanceof EditClientCommand)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"Gavzzz"},"content":"            return false;","lastModifiedDate":"2022-10-21"},{"lineNumber":115,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":116,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"Gavzzz"},"content":"        // state check","lastModifiedDate":"2022-10-21"},{"lineNumber":118,"author":{"gitId":"Gavzzz"},"content":"        EditClientCommand e \u003d (EditClientCommand) other;","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"Gavzzz"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"Gavzzz"},"content":"                \u0026\u0026 editClientDescriptor.equals(e.editClientDescriptor);","lastModifiedDate":"2022-10-21"},{"lineNumber":121,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":122,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":123,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":124,"author":{"gitId":"Gavzzz"},"content":"     * Stores the details to edit the client with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-21"},{"lineNumber":125,"author":{"gitId":"Gavzzz"},"content":"     * corresponding field value of the client.","lastModifiedDate":"2022-10-21"},{"lineNumber":126,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":127,"author":{"gitId":"Gavzzz"},"content":"    public static class EditClientDescriptor {","lastModifiedDate":"2022-10-21"},{"lineNumber":128,"author":{"gitId":"Gavzzz"},"content":"        private Name name;","lastModifiedDate":"2022-10-21"},{"lineNumber":129,"author":{"gitId":"Gavzzz"},"content":"        private Phone phone;","lastModifiedDate":"2022-10-21"},{"lineNumber":130,"author":{"gitId":"Gavzzz"},"content":"        private Email email;","lastModifiedDate":"2022-10-21"},{"lineNumber":131,"author":{"gitId":"Gavzzz"},"content":"        private Address address;","lastModifiedDate":"2022-10-21"},{"lineNumber":132,"author":{"gitId":"Gavzzz"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-21"},{"lineNumber":133,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":134,"author":{"gitId":"Gavzzz"},"content":"        public EditClientDescriptor() {}","lastModifiedDate":"2022-10-21"},{"lineNumber":135,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":136,"author":{"gitId":"Gavzzz"},"content":"        /**","lastModifiedDate":"2022-10-21"},{"lineNumber":137,"author":{"gitId":"Gavzzz"},"content":"         * Copy constructor.","lastModifiedDate":"2022-10-21"},{"lineNumber":138,"author":{"gitId":"Gavzzz"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-21"},{"lineNumber":139,"author":{"gitId":"Gavzzz"},"content":"         */","lastModifiedDate":"2022-10-21"},{"lineNumber":140,"author":{"gitId":"Gavzzz"},"content":"        public EditClientDescriptor(EditClientDescriptor toCopy) {","lastModifiedDate":"2022-10-21"},{"lineNumber":141,"author":{"gitId":"Gavzzz"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-10-21"},{"lineNumber":142,"author":{"gitId":"Gavzzz"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2022-10-21"},{"lineNumber":143,"author":{"gitId":"Gavzzz"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2022-10-21"},{"lineNumber":144,"author":{"gitId":"Gavzzz"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2022-10-21"},{"lineNumber":145,"author":{"gitId":"Gavzzz"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2022-10-21"},{"lineNumber":146,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":147,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":148,"author":{"gitId":"Gavzzz"},"content":"        /**","lastModifiedDate":"2022-10-21"},{"lineNumber":149,"author":{"gitId":"Gavzzz"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-21"},{"lineNumber":150,"author":{"gitId":"Gavzzz"},"content":"         */","lastModifiedDate":"2022-10-21"},{"lineNumber":151,"author":{"gitId":"Gavzzz"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-21"},{"lineNumber":152,"author":{"gitId":"Gavzzz"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2022-10-21"},{"lineNumber":153,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":154,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":155,"author":{"gitId":"Gavzzz"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-10-21"},{"lineNumber":156,"author":{"gitId":"Gavzzz"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-10-21"},{"lineNumber":157,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":158,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":159,"author":{"gitId":"Gavzzz"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-10-21"},{"lineNumber":160,"author":{"gitId":"Gavzzz"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-10-21"},{"lineNumber":161,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":162,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":163,"author":{"gitId":"Gavzzz"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2022-10-21"},{"lineNumber":164,"author":{"gitId":"Gavzzz"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2022-10-21"},{"lineNumber":165,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":166,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":167,"author":{"gitId":"Gavzzz"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2022-10-21"},{"lineNumber":168,"author":{"gitId":"Gavzzz"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2022-10-21"},{"lineNumber":169,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":170,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":171,"author":{"gitId":"Gavzzz"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2022-10-21"},{"lineNumber":172,"author":{"gitId":"Gavzzz"},"content":"            this.email \u003d email;","lastModifiedDate":"2022-10-21"},{"lineNumber":173,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":174,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":175,"author":{"gitId":"Gavzzz"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2022-10-21"},{"lineNumber":176,"author":{"gitId":"Gavzzz"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2022-10-21"},{"lineNumber":177,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":178,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":179,"author":{"gitId":"Gavzzz"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2022-10-21"},{"lineNumber":180,"author":{"gitId":"Gavzzz"},"content":"            this.address \u003d address;","lastModifiedDate":"2022-10-21"},{"lineNumber":181,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":182,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":183,"author":{"gitId":"Gavzzz"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2022-10-21"},{"lineNumber":184,"author":{"gitId":"Gavzzz"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2022-10-21"},{"lineNumber":185,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":186,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":187,"author":{"gitId":"Gavzzz"},"content":"        /**","lastModifiedDate":"2022-10-21"},{"lineNumber":188,"author":{"gitId":"Gavzzz"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-10-21"},{"lineNumber":189,"author":{"gitId":"Gavzzz"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-21"},{"lineNumber":190,"author":{"gitId":"Gavzzz"},"content":"         */","lastModifiedDate":"2022-10-21"},{"lineNumber":191,"author":{"gitId":"Gavzzz"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-21"},{"lineNumber":192,"author":{"gitId":"Gavzzz"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-10-21"},{"lineNumber":193,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":194,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":195,"author":{"gitId":"Gavzzz"},"content":"        /**","lastModifiedDate":"2022-10-21"},{"lineNumber":196,"author":{"gitId":"Gavzzz"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-21"},{"lineNumber":197,"author":{"gitId":"Gavzzz"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-10-21"},{"lineNumber":198,"author":{"gitId":"Gavzzz"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-10-21"},{"lineNumber":199,"author":{"gitId":"Gavzzz"},"content":"         */","lastModifiedDate":"2022-10-21"},{"lineNumber":200,"author":{"gitId":"Gavzzz"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-10-21"},{"lineNumber":201,"author":{"gitId":"Gavzzz"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-10-21"},{"lineNumber":202,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":203,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":204,"author":{"gitId":"Gavzzz"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":205,"author":{"gitId":"Gavzzz"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":206,"author":{"gitId":"Gavzzz"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-21"},{"lineNumber":207,"author":{"gitId":"Gavzzz"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-21"},{"lineNumber":208,"author":{"gitId":"Gavzzz"},"content":"                return true;","lastModifiedDate":"2022-10-21"},{"lineNumber":209,"author":{"gitId":"Gavzzz"},"content":"            }","lastModifiedDate":"2022-10-21"},{"lineNumber":210,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":211,"author":{"gitId":"Gavzzz"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-21"},{"lineNumber":212,"author":{"gitId":"Gavzzz"},"content":"            if (!(other instanceof EditClientDescriptor)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":213,"author":{"gitId":"Gavzzz"},"content":"                return false;","lastModifiedDate":"2022-10-21"},{"lineNumber":214,"author":{"gitId":"Gavzzz"},"content":"            }","lastModifiedDate":"2022-10-21"},{"lineNumber":215,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":216,"author":{"gitId":"Gavzzz"},"content":"            // state check","lastModifiedDate":"2022-10-21"},{"lineNumber":217,"author":{"gitId":"Gavzzz"},"content":"            EditClientDescriptor e \u003d (EditClientDescriptor) other;","lastModifiedDate":"2022-10-21"},{"lineNumber":218,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":219,"author":{"gitId":"Gavzzz"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-10-21"},{"lineNumber":220,"author":{"gitId":"Gavzzz"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2022-10-21"},{"lineNumber":221,"author":{"gitId":"Gavzzz"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2022-10-21"},{"lineNumber":222,"author":{"gitId":"Gavzzz"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2022-10-21"},{"lineNumber":223,"author":{"gitId":"Gavzzz"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2022-10-21"},{"lineNumber":224,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":225,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":226,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-21"},{"lineNumber":227,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jeromehjj":1,"hoang227":18,"Gavzzz":208}},{"path":"src/main/java/seedu/realtime/logic/commands/EditListingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_ASKING_PRICE;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_LISTING_ID;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.model.Model.PREDICATE_SHOW_ALL_LISTINGS;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.List;","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Messages;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.util.CollectionUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Price;","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"public class EditListingCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"    public static final String COMMAND_WORD \u003d \"editL\";","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the listing identified \"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"            + \"by the id used in the displayed listing list. \"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"            + \"[\" + PREFIX_LISTING_ID + \"ID]\"","lastModifiedDate":"2022-10-31"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS]\"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"            + \"[\" + PREFIX_NAME + \"NAME]\"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"            + \"[\" + PREFIX_ASKING_PRICE + \"ASKING PRICE] \\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-31"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"            + PREFIX_LISTING_ID + \"3412 \"","lastModifiedDate":"2022-10-31"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"            + PREFIX_ADDRESS + \" 100 Charming Avenue \"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"            + PREFIX_NAME + \"Jake Holt \"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"            + PREFIX_ASKING_PRICE + \"1 \";","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_EDIT_LISTING_SUCCESS \u003d \"Edited Listing: %1$s\";","lastModifiedDate":"2022-10-31"},{"lineNumber":50,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_DUPLICATE_LISTING \u003d \"This Listing already exists in the address book.\";","lastModifiedDate":"2022-10-31"},{"lineNumber":52,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"Isaaclhy00"},"content":"    private final Index index;","lastModifiedDate":"2022-10-31"},{"lineNumber":54,"author":{"gitId":"Isaaclhy00"},"content":"    private final EditListingDescriptor editListingDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"Isaaclhy00"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"Isaaclhy00"},"content":"     * @param editListingDescriptor details to edit the person with","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"Isaaclhy00"},"content":"    public EditListingCommand(Index index, EditListingDescriptor editListingDescriptor) {","lastModifiedDate":"2022-10-31"},{"lineNumber":61,"author":{"gitId":"Isaaclhy00"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-31"},{"lineNumber":62,"author":{"gitId":"Isaaclhy00"},"content":"        requireNonNull(editListingDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"Isaaclhy00"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-31"},{"lineNumber":65,"author":{"gitId":"Isaaclhy00"},"content":"        this.editListingDescriptor \u003d new EditListingDescriptor(editListingDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"Isaaclhy00"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"Isaaclhy00"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"Isaaclhy00"},"content":"        List\u003cListing\u003e lastShownList \u003d model.getFilteredListingList();","lastModifiedDate":"2022-10-31"},{"lineNumber":72,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"Isaaclhy00"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-31"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_LISTING_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-05"},{"lineNumber":75,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"Isaaclhy00"},"content":"        Listing listingToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-31"},{"lineNumber":78,"author":{"gitId":"Isaaclhy00"},"content":"        Listing editedListing \u003d createEditedListing(listingToEdit, editListingDescriptor);","lastModifiedDate":"2022-10-31"},{"lineNumber":79,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"Isaaclhy00"},"content":"        if (!listingToEdit.isSameListing(editedListing) \u0026\u0026 model.hasListing(editedListing)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"Isaaclhy00"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_LISTING);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"Isaaclhy00"},"content":"        model.setListing(listingToEdit, editedListing);","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"Isaaclhy00"},"content":"        model.updateFilteredListingList(PREDICATE_SHOW_ALL_LISTINGS);","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"Isaaclhy00"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_LISTING_SUCCESS, editedListing));","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"Isaaclhy00"},"content":"     * Creates and returns a {@code Listing} with the details of {@code listingToEdit}","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"Isaaclhy00"},"content":"     * edited with {@code editListingDescriptor}.","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"Isaaclhy00"},"content":"    private static Listing createEditedListing(Listing listingToEdit, EditListingDescriptor editListingDescriptor) {","lastModifiedDate":"2022-10-31"},{"lineNumber":94,"author":{"gitId":"Isaaclhy00"},"content":"        assert listingToEdit !\u003d null;","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"Isaaclhy00"},"content":"        ListingId updatedId \u003d editListingDescriptor.getId().orElse(listingToEdit.getId());","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"Isaaclhy00"},"content":"        Address updatedAddress \u003d editListingDescriptor.getAddress().orElse(listingToEdit.getAddress());","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"Isaaclhy00"},"content":"        Name updatedName \u003d editListingDescriptor.getName().orElse(listingToEdit.getName());","lastModifiedDate":"2022-11-02"},{"lineNumber":99,"author":{"gitId":"jeromehjj"},"content":"        Price updatedAskingPrice \u003d editListingDescriptor.getAskingPrice().orElse(listingToEdit.getAskingPrice());","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"        Set\u003cTag\u003e updatedTags \u003d editListingDescriptor.getTags().orElse(listingToEdit.getTags());","lastModifiedDate":"2022-11-05"},{"lineNumber":101,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        Listing listing \u003d new Listing(updatedId, updatedAddress, updatedName, updatedAskingPrice);","lastModifiedDate":"2022-11-05"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"        listing.addTags(updatedTags);","lastModifiedDate":"2022-11-05"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"        return listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":105,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"Isaaclhy00"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"Isaaclhy00"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"Isaaclhy00"},"content":"            return true;","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"Isaaclhy00"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"Isaaclhy00"},"content":"        if (!(other instanceof EditListingCommand)) {","lastModifiedDate":"2022-10-31"},{"lineNumber":115,"author":{"gitId":"Isaaclhy00"},"content":"            return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"Isaaclhy00"},"content":"        // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"Isaaclhy00"},"content":"        EditListingCommand e \u003d (EditListingCommand) other;","lastModifiedDate":"2022-10-31"},{"lineNumber":120,"author":{"gitId":"Isaaclhy00"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-31"},{"lineNumber":121,"author":{"gitId":"Isaaclhy00"},"content":"                \u0026\u0026 editListingDescriptor.equals(e.editListingDescriptor);","lastModifiedDate":"2022-10-31"},{"lineNumber":122,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"Isaaclhy00"},"content":"     * Stores the details to edit the listing with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-31"},{"lineNumber":126,"author":{"gitId":"Isaaclhy00"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"Isaaclhy00"},"content":"    public static class EditListingDescriptor {","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"Isaaclhy00"},"content":"        private ListingId id;","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"Isaaclhy00"},"content":"        private Name name;","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"Isaaclhy00"},"content":"        private Address address;","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"jeromehjj"},"content":"        private Price askingPrice;","lastModifiedDate":"2022-10-14"},{"lineNumber":133,"author":{"gitId":"Isaaclhy00"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-31"},{"lineNumber":134,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"Isaaclhy00"},"content":"        public EditListingDescriptor() {}","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"Isaaclhy00"},"content":"        /**","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"Isaaclhy00"},"content":"         * Copy constructor.","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"Isaaclhy00"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"Isaaclhy00"},"content":"         */","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"Isaaclhy00"},"content":"        public EditListingDescriptor(EditListingDescriptor toCopy) {","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"Isaaclhy00"},"content":"            setId(toCopy.id);","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"Isaaclhy00"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"Isaaclhy00"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"Isaaclhy00"},"content":"            setAskingPrice(toCopy.askingPrice);","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"Isaaclhy00"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2022-10-31"},{"lineNumber":147,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"Isaaclhy00"},"content":"        /**","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"Isaaclhy00"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"Isaaclhy00"},"content":"         */","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"Isaaclhy00"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"Isaaclhy00"},"content":"            return CollectionUtil.isAnyNonNull(id, name, address, askingPrice, tags);","lastModifiedDate":"2022-10-31"},{"lineNumber":154,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"Isaaclhy00"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"Isaaclhy00"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"Isaaclhy00"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"Isaaclhy00"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"Isaaclhy00"},"content":"        public void setId(ListingId id) {","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"Isaaclhy00"},"content":"            this.id \u003d id;","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"Isaaclhy00"},"content":"        public Optional\u003cListingId\u003e getId() {","lastModifiedDate":"2022-10-27"},{"lineNumber":169,"author":{"gitId":"Isaaclhy00"},"content":"            return Optional.ofNullable(id);","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"Isaaclhy00"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"Isaaclhy00"},"content":"            this.address \u003d address;","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"Isaaclhy00"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"Isaaclhy00"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"jeromehjj"},"content":"        public void setAskingPrice(Price askingPrice) {","lastModifiedDate":"2022-10-14"},{"lineNumber":181,"author":{"gitId":"Isaaclhy00"},"content":"            this.askingPrice \u003d askingPrice;","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"jeromehjj"},"content":"        public Optional\u003cPrice\u003e getAskingPrice() {","lastModifiedDate":"2022-10-14"},{"lineNumber":185,"author":{"gitId":"Isaaclhy00"},"content":"            return Optional.ofNullable(askingPrice);","lastModifiedDate":"2022-11-02"},{"lineNumber":186,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"Isaaclhy00"},"content":"        /**","lastModifiedDate":"2022-10-31"},{"lineNumber":189,"author":{"gitId":"Isaaclhy00"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-10-31"},{"lineNumber":190,"author":{"gitId":"Isaaclhy00"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-31"},{"lineNumber":191,"author":{"gitId":"Isaaclhy00"},"content":"         */","lastModifiedDate":"2022-10-31"},{"lineNumber":192,"author":{"gitId":"Isaaclhy00"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-31"},{"lineNumber":193,"author":{"gitId":"Isaaclhy00"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-10-31"},{"lineNumber":194,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-31"},{"lineNumber":195,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":196,"author":{"gitId":"Isaaclhy00"},"content":"        /**","lastModifiedDate":"2022-10-31"},{"lineNumber":197,"author":{"gitId":"Isaaclhy00"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-31"},{"lineNumber":198,"author":{"gitId":"Isaaclhy00"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-10-31"},{"lineNumber":199,"author":{"gitId":"Isaaclhy00"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-10-31"},{"lineNumber":200,"author":{"gitId":"Isaaclhy00"},"content":"         */","lastModifiedDate":"2022-10-31"},{"lineNumber":201,"author":{"gitId":"Isaaclhy00"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-10-31"},{"lineNumber":202,"author":{"gitId":"Isaaclhy00"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-10-31"},{"lineNumber":203,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-31"},{"lineNumber":204,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":205,"author":{"gitId":"Isaaclhy00"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":206,"author":{"gitId":"Isaaclhy00"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":207,"author":{"gitId":"Isaaclhy00"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":208,"author":{"gitId":"Isaaclhy00"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-10"},{"lineNumber":209,"author":{"gitId":"Isaaclhy00"},"content":"                return true;","lastModifiedDate":"2022-10-10"},{"lineNumber":210,"author":{"gitId":"Isaaclhy00"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":211,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":212,"author":{"gitId":"Isaaclhy00"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":213,"author":{"gitId":"Isaaclhy00"},"content":"            if (!(other instanceof EditListingDescriptor)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":214,"author":{"gitId":"Isaaclhy00"},"content":"                return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":215,"author":{"gitId":"Isaaclhy00"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":216,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":217,"author":{"gitId":"Isaaclhy00"},"content":"            // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":218,"author":{"gitId":"Isaaclhy00"},"content":"            EditListingDescriptor e \u003d (EditListingDescriptor) other;","lastModifiedDate":"2022-10-10"},{"lineNumber":219,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":220,"author":{"gitId":"Isaaclhy00"},"content":"            return getId().equals(e.getId())","lastModifiedDate":"2022-10-10"},{"lineNumber":221,"author":{"gitId":"Isaaclhy00"},"content":"                    \u0026\u0026 getName().equals(e.getName())","lastModifiedDate":"2022-10-10"},{"lineNumber":222,"author":{"gitId":"Isaaclhy00"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2022-10-10"},{"lineNumber":223,"author":{"gitId":"hoang227"},"content":"                    \u0026\u0026 getAskingPrice().equals(e.getAskingPrice())","lastModifiedDate":"2022-11-05"},{"lineNumber":224,"author":{"gitId":"hoang227"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2022-11-05"},{"lineNumber":225,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":226,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":227,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jeromehjj":5,"hoang227":24,"Isaaclhy00":198}},{"path":"src/main/java/seedu/realtime/logic/commands/EditMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"ama-chi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_LISTING_ID;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"ama-chi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"ama-chi"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"ama-chi"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Messages;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.util.CollectionUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.meeting.Meeting;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"ama-chi"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"ama-chi"},"content":" * Edits the details of an existing meeting in the address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"ama-chi"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"ama-chi"},"content":"public class EditMeetingCommand extends Command {","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    public static final String COMMAND_WORD \u003d \"editM\";","lastModifiedDate":"2022-10-30"},{"lineNumber":27,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"ama-chi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the meeting identified \"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"ama-chi"},"content":"            + \"by the index number used in the displayed meeting list. \"","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"ama-chi"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"ama-chi"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"ama-chi"},"content":"            + \"[\" + PREFIX_LISTING_ID + \"ADDRESS LISTING ID] \"","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"ama-chi"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"ama-chi"},"content":"            + \"[\" + PREFIX_DATETIME + \"Date and Time]...\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"ama-chi"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"ama-chi"},"content":"            + PREFIX_DATETIME + \"2022-09-20 12:59\";","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"ama-chi"},"content":"    public static final String MESSAGE_EDIT_MEETING_SUCCESS \u003d \"Edited Meeting: %1$s\";","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"ama-chi"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"ama-chi"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"This meeting already exists in the address book\";","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"ama-chi"},"content":"    private final Index index;","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"ama-chi"},"content":"    private final EditMeetingCommand.EditMeetingDescriptor editMeetingDescriptor;","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"ama-chi"},"content":"     * Constructor","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"ama-chi"},"content":"     * @param index index of Meeting to edit","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"ama-chi"},"content":"     * @param editMeetingDescriptor descriptor","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"ama-chi"},"content":"    public EditMeetingCommand(Index index, EditMeetingCommand.EditMeetingDescriptor editMeetingDescriptor) {","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"ama-chi"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"ama-chi"},"content":"        requireNonNull(editMeetingDescriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"ama-chi"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"ama-chi"},"content":"        this.editMeetingDescriptor \u003d new EditMeetingCommand.EditMeetingDescriptor(editMeetingDescriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"ama-chi"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"ama-chi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"ama-chi"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"ama-chi"},"content":"        List\u003cMeeting\u003e lastshownlist \u003d model.getFilteredMeetingList();","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"ama-chi"},"content":"        if (index.getZeroBased() \u003e\u003d lastshownlist.size()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"ama-chi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"ama-chi"},"content":"        Meeting toEdit \u003d lastshownlist.get(index.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"ama-chi"},"content":"        Meeting edited \u003d createEditedMeeting(toEdit, editMeetingDescriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"ama-chi"},"content":"        if (!toEdit.isSameMeeting(edited) \u0026\u0026 model.hasMeeting(edited)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"ama-chi"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"ama-chi"},"content":"        model.setMeeting(toEdit, edited);","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"ama-chi"},"content":"        model.updateFilteredMeetingList(Model.PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"ama-chi"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_MEETING_SUCCESS, edited));","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"ama-chi"},"content":"    private static Meeting createEditedMeeting(Meeting toedit,","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"ama-chi"},"content":"                                               EditMeetingCommand.EditMeetingDescriptor editMeetingDescriptor) {","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"ama-chi"},"content":"        assert toedit !\u003d null;","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"ama-chi"},"content":"        Name updatedName \u003d editMeetingDescriptor.getName().orElse(toedit.getClient());","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"ama-chi"},"content":"        ListingId updatedListingId \u003d editMeetingDescriptor.getListing().orElse(toedit.getListing());","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"ama-chi"},"content":"        LocalDateTime updatedDateTime \u003d editMeetingDescriptor.getDateTime().orElse(toedit.getdateTime());","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"ama-chi"},"content":"        return new Meeting(updatedName, updatedListingId, updatedDateTime);","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"ama-chi"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"ama-chi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"ama-chi"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"ama-chi"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"ama-chi"},"content":"            return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"ama-chi"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"ama-chi"},"content":"        if (!(other instanceof EditMeetingCommand)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"ama-chi"},"content":"            return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"ama-chi"},"content":"        // state check","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"ama-chi"},"content":"        EditMeetingCommand e \u003d (EditMeetingCommand) other;","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"ama-chi"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"ama-chi"},"content":"                \u0026\u0026 editMeetingDescriptor.equals(e.editMeetingDescriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"ama-chi"},"content":"     * Stores the details to edit the meeting with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"ama-chi"},"content":"     * corresponding field value of the meeting.","lastModifiedDate":"2022-10-28"},{"lineNumber":111,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"ama-chi"},"content":"    public static class EditMeetingDescriptor {","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"ama-chi"},"content":"        private Name name;","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"ama-chi"},"content":"        private ListingId listing;","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"ama-chi"},"content":"        private LocalDateTime dateTime;","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"ama-chi"},"content":"        public EditMeetingDescriptor() {}","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"ama-chi"},"content":"        /**","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"ama-chi"},"content":"         * Constructor.","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"ama-chi"},"content":"         */","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"ama-chi"},"content":"        public EditMeetingDescriptor(EditMeetingCommand.EditMeetingDescriptor toCopy) {","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"ama-chi"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"ama-chi"},"content":"            setListing(toCopy.listing);","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"ama-chi"},"content":"            setDateTime(toCopy.dateTime);","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"ama-chi"},"content":"        /**","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"ama-chi"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"ama-chi"},"content":"         */","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"ama-chi"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"ama-chi"},"content":"            return CollectionUtil.isAnyNonNull(name, listing, dateTime);","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"ama-chi"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"ama-chi"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"ama-chi"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-10-28"},{"lineNumber":140,"author":{"gitId":"ama-chi"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-10-28"},{"lineNumber":141,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":142,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"ama-chi"},"content":"        public void setListing(ListingId listing) {","lastModifiedDate":"2022-10-28"},{"lineNumber":144,"author":{"gitId":"ama-chi"},"content":"            this.listing \u003d listing;","lastModifiedDate":"2022-10-28"},{"lineNumber":145,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":146,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":147,"author":{"gitId":"ama-chi"},"content":"        public Optional\u003cListingId\u003e getListing() {","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"ama-chi"},"content":"            return Optional.ofNullable(listing);","lastModifiedDate":"2022-10-28"},{"lineNumber":149,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":150,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":151,"author":{"gitId":"ama-chi"},"content":"        public void setDateTime(LocalDateTime newDate) {","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"ama-chi"},"content":"            this.dateTime \u003d newDate;","lastModifiedDate":"2022-10-28"},{"lineNumber":153,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":154,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"ama-chi"},"content":"        public Optional\u003cLocalDateTime\u003e getDateTime() {","lastModifiedDate":"2022-10-28"},{"lineNumber":156,"author":{"gitId":"ama-chi"},"content":"            return Optional.ofNullable(dateTime);","lastModifiedDate":"2022-10-28"},{"lineNumber":157,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":158,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":159,"author":{"gitId":"ama-chi"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":160,"author":{"gitId":"ama-chi"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":161,"author":{"gitId":"ama-chi"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-28"},{"lineNumber":162,"author":{"gitId":"ama-chi"},"content":"                return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":163,"author":{"gitId":"ama-chi"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":164,"author":{"gitId":"ama-chi"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":165,"author":{"gitId":"ama-chi"},"content":"            if (!(other instanceof EditMeetingCommand.EditMeetingDescriptor)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":166,"author":{"gitId":"ama-chi"},"content":"                return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":167,"author":{"gitId":"ama-chi"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":168,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":169,"author":{"gitId":"ama-chi"},"content":"            // state check","lastModifiedDate":"2022-10-28"},{"lineNumber":170,"author":{"gitId":"ama-chi"},"content":"            EditMeetingCommand.EditMeetingDescriptor e \u003d (EditMeetingCommand.EditMeetingDescriptor) other;","lastModifiedDate":"2022-10-28"},{"lineNumber":171,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":172,"author":{"gitId":"ama-chi"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-10-28"},{"lineNumber":173,"author":{"gitId":"ama-chi"},"content":"                    \u0026\u0026 getListing().equals(e.getListing())","lastModifiedDate":"2022-10-28"},{"lineNumber":174,"author":{"gitId":"ama-chi"},"content":"                    \u0026\u0026 getDateTime().equals(e.getDateTime());","lastModifiedDate":"2022-10-28"},{"lineNumber":175,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":176,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":177,"author":{"gitId":"ama-chi"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"hoang227":13,"ama-chi":164}},{"path":"src/main/java/seedu/realtime/logic/commands/EditOfferCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_LISTING_ID;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_OFFER;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.model.Model.PREDICATE_SHOW_ALL_OFFERS;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Messages;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.util.CollectionUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Price;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":" * Edits the details of an existing offer in the address book.","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"public class EditOfferCommand extends Command {","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"    public static final String COMMAND_WORD \u003d \"editO\";","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the offer identified \"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        + \"by the index number used in the displayed offer list. \"","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"        + \"[\" + PREFIX_LISTING_ID + \"ADDRESS LISTING ID] \"","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"        + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"        + \"[\" + PREFIX_OFFER + \"OFFER PRICE]...\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"        + PREFIX_OFFER + \"650000\";","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"    public static final String MESSAGE_EDIT_OFFER_SUCCESS \u003d \"Edited Offer: %1$s\";","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"    public static final String MESSAGE_DUPLICATE_OFFER \u003d \"This offer already exists in the address book.\";","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"    private final Index index;","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"    private final EditOfferCommand.EditOfferDescriptor editOfferDescriptor;","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"     * @param index of the offer in the filtered offer list to edit","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"     * @param editOfferDescriptor details to edit the offer with","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"    public EditOfferCommand(Index index, EditOfferCommand.EditOfferDescriptor editOfferDescriptor) {","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"        requireNonNull(editOfferDescriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"        this.editOfferDescriptor \u003d new EditOfferCommand.EditOfferDescriptor(editOfferDescriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"        List\u003cOffer\u003e lastShownList \u003d model.getFilteredOfferList();","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_OFFER_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"        Offer offerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"        Offer editedOffer \u003d createEditedOffer(offerToEdit, editOfferDescriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"        if (!offerToEdit.isSameOffer(editedOffer) \u0026\u0026 model.hasOffer(editedOffer)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"jeromehjj"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_OFFER);","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"        model.setOffer(offerToEdit, editedOffer);","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"        model.updateFilteredOfferList(PREDICATE_SHOW_ALL_OFFERS);","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"jeromehjj"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_OFFER_SUCCESS, editedOffer));","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"jeromehjj"},"content":"     * Creates and returns an {@code Offer} with the details of {@code offerToEdit}","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"jeromehjj"},"content":"     * edited with {@code editOfferDescriptor}.","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"jeromehjj"},"content":"    private static Offer createEditedOffer(Offer offerToEdit,","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"jeromehjj"},"content":"                                           EditOfferCommand.EditOfferDescriptor editOfferDescriptor) {","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"jeromehjj"},"content":"        assert offerToEdit !\u003d null;","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"jeromehjj"},"content":"        Name updatedName \u003d editOfferDescriptor.getName().orElse(offerToEdit.getClient());","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"Isaaclhy00"},"content":"        ListingId updatedListingId \u003d editOfferDescriptor.getListing().orElse(offerToEdit.getListing());","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"jeromehjj"},"content":"        Price offerPrice \u003d editOfferDescriptor.getOfferPrice().orElse(offerToEdit.getOfferPrice());","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"jeromehjj"},"content":"        return new Offer(updatedName, updatedListingId, offerPrice);","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"jeromehjj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"jeromehjj"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"jeromehjj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"jeromehjj"},"content":"            return true;","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"jeromehjj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"jeromehjj"},"content":"        if (!(other instanceof EditOfferCommand)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"jeromehjj"},"content":"            return false;","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"jeromehjj"},"content":"        // state check","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand e \u003d (EditOfferCommand) other;","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"jeromehjj"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"jeromehjj"},"content":"            \u0026\u0026 editOfferDescriptor.equals(e.editOfferDescriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"jeromehjj"},"content":"     * Stores the details to edit the offer with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"jeromehjj"},"content":"     * corresponding field value of the offer.","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"jeromehjj"},"content":"    public static class EditOfferDescriptor {","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"jeromehjj"},"content":"        private Name name;","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"Isaaclhy00"},"content":"        private ListingId listing;","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"jeromehjj"},"content":"        private Price offerPrice;","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"jeromehjj"},"content":"        public EditOfferDescriptor() {}","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"jeromehjj"},"content":"        /**","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"jeromehjj"},"content":"         * Copy constructor.","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"jeromehjj"},"content":"         */","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"jeromehjj"},"content":"        public EditOfferDescriptor(EditOfferCommand.EditOfferDescriptor toCopy) {","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"jeromehjj"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"jeromehjj"},"content":"            setListing(toCopy.listing);","lastModifiedDate":"2022-10-20"},{"lineNumber":128,"author":{"gitId":"jeromehjj"},"content":"            setOfferPrice(toCopy.offerPrice);","lastModifiedDate":"2022-10-20"},{"lineNumber":129,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"jeromehjj"},"content":"        /**","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"jeromehjj"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"jeromehjj"},"content":"         */","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"jeromehjj"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-20"},{"lineNumber":135,"author":{"gitId":"jeromehjj"},"content":"            return CollectionUtil.isAnyNonNull(name, listing, offerPrice);","lastModifiedDate":"2022-10-20"},{"lineNumber":136,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":137,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":138,"author":{"gitId":"jeromehjj"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-10-20"},{"lineNumber":139,"author":{"gitId":"jeromehjj"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-10-20"},{"lineNumber":140,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":141,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":142,"author":{"gitId":"jeromehjj"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-10-20"},{"lineNumber":143,"author":{"gitId":"jeromehjj"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-10-20"},{"lineNumber":144,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":145,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":146,"author":{"gitId":"Isaaclhy00"},"content":"        public void setListing(ListingId listing) {","lastModifiedDate":"2022-10-27"},{"lineNumber":147,"author":{"gitId":"jeromehjj"},"content":"            this.listing \u003d listing;","lastModifiedDate":"2022-10-20"},{"lineNumber":148,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":149,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"Isaaclhy00"},"content":"        public Optional\u003cListingId\u003e getListing() {","lastModifiedDate":"2022-10-27"},{"lineNumber":151,"author":{"gitId":"jeromehjj"},"content":"            return Optional.ofNullable(listing);","lastModifiedDate":"2022-10-20"},{"lineNumber":152,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":153,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":154,"author":{"gitId":"jeromehjj"},"content":"        public void setOfferPrice(Price offerPrice) {","lastModifiedDate":"2022-10-20"},{"lineNumber":155,"author":{"gitId":"jeromehjj"},"content":"            this.offerPrice \u003d offerPrice;","lastModifiedDate":"2022-10-20"},{"lineNumber":156,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":157,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":158,"author":{"gitId":"jeromehjj"},"content":"        public Optional\u003cPrice\u003e getOfferPrice() {","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"jeromehjj"},"content":"            return Optional.ofNullable(offerPrice);","lastModifiedDate":"2022-10-20"},{"lineNumber":160,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":161,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":162,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":163,"author":{"gitId":"jeromehjj"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":164,"author":{"gitId":"jeromehjj"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":165,"author":{"gitId":"jeromehjj"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":166,"author":{"gitId":"jeromehjj"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-20"},{"lineNumber":167,"author":{"gitId":"jeromehjj"},"content":"                return true;","lastModifiedDate":"2022-10-20"},{"lineNumber":168,"author":{"gitId":"jeromehjj"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":169,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":170,"author":{"gitId":"jeromehjj"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":171,"author":{"gitId":"jeromehjj"},"content":"            if (!(other instanceof EditOfferCommand.EditOfferDescriptor)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":172,"author":{"gitId":"jeromehjj"},"content":"                return false;","lastModifiedDate":"2022-10-20"},{"lineNumber":173,"author":{"gitId":"jeromehjj"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":174,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":175,"author":{"gitId":"jeromehjj"},"content":"            // state check","lastModifiedDate":"2022-10-20"},{"lineNumber":176,"author":{"gitId":"jeromehjj"},"content":"            EditOfferCommand.EditOfferDescriptor e \u003d (EditOfferCommand.EditOfferDescriptor) other;","lastModifiedDate":"2022-10-20"},{"lineNumber":177,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":178,"author":{"gitId":"jeromehjj"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-10-20"},{"lineNumber":179,"author":{"gitId":"jeromehjj"},"content":"                \u0026\u0026 getListing().equals(e.getListing())","lastModifiedDate":"2022-10-20"},{"lineNumber":180,"author":{"gitId":"jeromehjj"},"content":"                \u0026\u0026 getOfferPrice().equals(e.getOfferPrice());","lastModifiedDate":"2022-10-20"},{"lineNumber":181,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":182,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":183,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jeromehjj":165,"hoang227":14,"Isaaclhy00":4}},{"path":"src/main/java/seedu/realtime/logic/commands/EditPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Messages;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.util.CollectionUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Email;","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Phone;","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"public class EditPersonCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"    public static final String COMMAND_WORD \u003d \"editP\";","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"Isaaclhy00"},"content":"    public EditPersonCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"Isaaclhy00"},"content":"        if (!(other instanceof EditPersonCommand)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"Isaaclhy00"},"content":"        EditPersonCommand e \u003d (EditPersonCommand) other;","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"jeromehjj":1,"hoang227":18,"Isaaclhy00":4,"-":203}},{"path":"src/main/java/seedu/realtime/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"hoang227":2,"-":17}},{"path":"src/main/java/seedu/realtime/logic/commands/FindClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Messages;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":" * Finds and lists all clients in address book whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"public class FindClientCommand extends Command {","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    public static final String COMMAND_WORD \u003d \"findC\";","lastModifiedDate":"2022-10-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all clients whose names contain any of \"","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public FindClientCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        model.updateFilteredClientList(predicate);","lastModifiedDate":"2022-10-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredClientList().size()));","lastModifiedDate":"2022-10-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"                || (other instanceof FindClientCommand // instanceof handles nulls","lastModifiedDate":"2022-10-30"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"                \u0026\u0026 predicate.equals(((FindClientCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"hoang227":13,"-":29}},{"path":"src/main/java/seedu/realtime/logic/commands/FindOffersForListingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Messages;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.OfferContainsListingIdPredicate;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":" * Finds and lists all offers in address book for the specified Listing ID.","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"public class FindOffersForListingCommand extends Command {","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String COMMAND_WORD \u003d \"findO\";","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all offers in address book for \"","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"            + \"the specified Listing ID (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"            + \"Parameters: LISTING ID \\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"            + \"Example: \" + COMMAND_WORD + \" 007\";","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"    private final OfferContainsListingIdPredicate predicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"    public FindOffersForListingCommand(OfferContainsListingIdPredicate predicate) {","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"        model.updateFilteredOfferList(predicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"                String.format(Messages.MESSAGE_OFFERS_LISTED_OVERVIEW, model.getFilteredOfferList().size()));","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"                || (other instanceof FindOffersForListingCommand // instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"                \u0026\u0026 predicate.equals(((FindOffersForListingCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"hoang227":4,"Isaaclhy00":38}},{"path":"src/main/java/seedu/realtime/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hoang227":2,"-":19}},{"path":"src/main/java/seedu/realtime/logic/commands/ViewClientListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":" * Lists all clients in the address book to the user.","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"public class ViewClientListCommand extends Command {","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    public static final String COMMAND_WORD \u003d \"listC\";","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all clients\";","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"hoang227":4,"Gavzzz":20}},{"path":"src/main/java/seedu/realtime/logic/commands/ViewListingClientsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_LISTING_ID;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"public class ViewListingClientsCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    public static final String COMMAND_WORD \u003d \"listLC\";","lastModifiedDate":"2022-10-30"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Views interested clients of this listing. \"","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"            + PREFIX_LISTING_ID + \"ID \\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"            + PREFIX_LISTING_ID + \"3412 \";","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all listing clients\";","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"    private final ListingId id;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"     * Creates an ViewListingClientsCommand to view interested clients of the specified {@code Listing}","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"    public ViewListingClientsCommand(ListingId id) {","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"        for (Name client : model.getListing(id).getInterestedClients()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"            builder.append(client).append(\"\\n\");","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"        return new CommandResult(MESSAGE_SUCCESS + \"\\n\" + builder);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":7,"Isaaclhy00":37}},{"path":"src/main/java/seedu/realtime/logic/commands/ViewListingsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.model.Model.PREDICATE_SHOW_ALL_LISTINGS;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"public class ViewListingsCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    public static final String COMMAND_WORD \u003d \"listL\";","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all listings\";","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"        model.updateFilteredListingList(PREDICATE_SHOW_ALL_LISTINGS);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":4,"Isaaclhy00":4,"-":17}},{"path":"src/main/java/seedu/realtime/logic/commands/ViewPersonListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"public class ViewPersonListCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    public static final String COMMAND_WORD \u003d \"listP\";","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hoang227":4,"Isaaclhy00":1,"-":19}},{"path":"src/main/java/seedu/realtime/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands.exceptions;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"hoang227":1,"-":16}},{"path":"src/main/java/seedu/realtime/logic/parser/AddClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.AddClientCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Email;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Phone;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":" * Parses input arguments and creates a new AddClientCommand object","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"public class AddClientCommandParser implements Parser\u003cAddClientCommand\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"     * Parses the given {@code String} of arguments in the context of the AddClientCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"     * and returns an AddClientCommand object for execution.","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"    public AddClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"Gavzzz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"Gavzzz"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"Gavzzz"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"Gavzzz"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"Gavzzz"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"Gavzzz"},"content":"        Client client \u003d new Client(name, phone, email, address, tagList);","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"        return new AddClientCommand(client);","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"Gavzzz"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"Gavzzz"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"Gavzzz"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"hoang227":15,"Gavzzz":45}},{"path":"src/main/java/seedu/realtime/logic/parser/AddInterestedClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_LISTING_ID;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.AddClientCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.AddInterestedClientCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":" * Parses input arguments and creates a new AddInterestedClientCommand object","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"public class AddInterestedClientCommandParser implements Parser\u003cAddInterestedClientCommand\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"     * Parses the given {@code String} of arguments in the context of the AddInterestedClientCommand","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"     * and returns an AddInterestedClientCommand object for execution.","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"    public AddInterestedClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_LISTING_ID);","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_LISTING_ID)","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"        ListingId listingId \u003d ParserUtil.parseListingId(argMultimap.getValue(PREFIX_LISTING_ID).get());","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"        return new AddInterestedClientCommand(name, listingId);","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"hoang227":9,"Isaaclhy00":39}},{"path":"src/main/java/seedu/realtime/logic/parser/AddListingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_ASKING_PRICE;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_LISTING_ID;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.AddListingCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Price;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"public class AddListingCommandParser implements Parser\u003cAddListingCommand\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"     * Parses the given {@code String} of arguments in the context of the AddListingCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"     * and returns an AddListingCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    public AddListingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_LISTING_ID, PREFIX_ADDRESS, PREFIX_NAME, PREFIX_ASKING_PRICE);","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_LISTING_ID, PREFIX_ADDRESS, PREFIX_NAME, PREFIX_ASKING_PRICE)","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddListingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"        ListingId id \u003d ParserUtil.parseListingId(argMultimap.getValue(PREFIX_LISTING_ID).get());","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"        Price askingPrice \u003d ParserUtil.parsePrice(argMultimap.getValue(PREFIX_ASKING_PRICE).get());","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"        return new AddListingCommand(id, address, name, askingPrice);","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jeromehjj":1,"hoang227":47,"Isaaclhy00":5}},{"path":"src/main/java/seedu/realtime/logic/parser/AddMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_LISTING_ID;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"ama-chi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"ama-chi"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.AddMeetingCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.meeting.Meeting;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"ama-chi"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"ama-chi"},"content":" * Parses input arguments and create a new AddMeetingCommand object.","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"ama-chi"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"ama-chi"},"content":"public class AddMeetingCommandParser implements Parser\u003cAddMeetingCommand\u003e {","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"ama-chi"},"content":"     * Parses the given {@code String} of arguments in the context of AddMeetingCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"ama-chi"},"content":"     * and returns an AddMeetingCommand object for execution.","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"ama-chi"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"ama-chi"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"ama-chi"},"content":"    public AddMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"ama-chi"},"content":"        ArgumentMultimap argMultiMap \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"ama-chi"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_LISTING_ID, PREFIX_NAME, PREFIX_DATETIME);","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"ama-chi"},"content":"        if (!arePrefixesPresent(argMultiMap, PREFIX_LISTING_ID, PREFIX_NAME, PREFIX_DATETIME)","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"ama-chi"},"content":"                || !argMultiMap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"ama-chi"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"        ListingId listing \u003d ParserUtil.parseListingId(argMultiMap.getValue(PREFIX_LISTING_ID).get());","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"ama-chi"},"content":"        Name name \u003d ParserUtil.parseName(argMultiMap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"ama-chi"},"content":"        LocalDateTime dateTime \u003d ParserUtil.parseDateTime(argMultiMap.getValue(PREFIX_DATETIME).get());","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"ama-chi"},"content":"        Meeting meeting \u003d new Meeting(name, listing, dateTime);","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"ama-chi"},"content":"        return new AddMeetingCommand(meeting);","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"ama-chi"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"ama-chi"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"ama-chi"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"ama-chi"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"ama-chi"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"hoang227":10,"ama-chi":41,"Isaaclhy00":1}},{"path":"src/main/java/seedu/realtime/logic/parser/AddOfferCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_LISTING_ID;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_OFFER;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.AddOfferCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Price;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":" * Parses input arguments and creates a new AddOfferCommand object","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"public class AddOfferCommandParser implements Parser\u003cAddOfferCommand\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"     * Parses the given {@code String} of arguments in the context of the AddOfferCommand","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"     * and returns an AddOfferCommand object for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"    public AddOfferCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_LISTING_ID, PREFIX_NAME, PREFIX_OFFER);","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_LISTING_ID, PREFIX_NAME, PREFIX_OFFER)","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOfferCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"        ListingId listing \u003d ParserUtil.parseListingId(argMultimap.getValue(PREFIX_LISTING_ID).get());","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"        Price offerPrice \u003d ParserUtil.parsePrice(argMultimap.getValue(PREFIX_OFFER).get());","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        Offer offer \u003d new Offer(name, listing, offerPrice);","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"        return new AddOfferCommand(offer);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"jeromehjj":41,"hoang227":12,"Isaaclhy00":1}},{"path":"src/main/java/seedu/realtime/logic/parser/AddPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Email;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Phone;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":" * Parses input arguments and creates a new AddPersonCommand object","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"public class AddPersonCommandParser implements Parser\u003cAddPersonCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPersonCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"     * and returns an AddPersonCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"    public AddPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"Isaaclhy00"},"content":"        return new AddPersonCommand(person);","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"hoang227":15,"Isaaclhy00":7,"-":38}},{"path":"src/main/java/seedu/realtime/logic/parser/AddTagsToListingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_LISTING_ID;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.AddTagsToListingCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":" * Parses input arguments and creates a new AddTagsToListingCommand object.","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"public class AddTagsToListingCommandParser implements Parser\u003cAddTagsToListingCommand\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTagsToListingCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"     * and returns an AddTagsToListingCommand object for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"    public AddTagsToListingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG, PREFIX_LISTING_ID);","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TAG, PREFIX_LISTING_ID)","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"                    AddTagsToListingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"        ListingId listingId \u003d ParserUtil.parseListingId(argMultimap.getValue(PREFIX_LISTING_ID).get());","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"        return new AddTagsToListingCommand(tagList, listingId);","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"hoang227":8,"Isaaclhy00":40}},{"path":"src/main/java/seedu/realtime/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        return values.isEmpty() ? Optional.empty()","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"                : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"hoang227":4,"-":58}},{"path":"src/main/java/seedu/realtime/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"hoang227":1,"-":147}},{"path":"src/main/java/seedu/realtime/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"    public static final Prefix PREFIX_ID \u003d new Prefix(\"id/\");","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"    public static final Prefix PREFIX_CLIENT \u003d new Prefix(\"cli/\");","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"    public static final Prefix PREFIX_PERSON \u003d new Prefix(\"per/\");","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"    public static final Prefix PREFIX_ASKING_PRICE \u003d new Prefix(\"ap/\");","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"    public static final Prefix PREFIX_OFFER \u003d new Prefix(\"o/\");","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"    public static final Prefix PREFIX_LISTING_ID \u003d new Prefix(\"l/\");","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"ama-chi"},"content":"    public static final Prefix PREFIX_DATETIME \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"hoang227":1,"ama-chi":1,"Isaaclhy00":6,"-":13,"Gavzzz":1}},{"path":"src/main/java/seedu/realtime/logic/parser/DeleteClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.DeleteClientCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"public class DeleteClientCommandParser implements Parser\u003cDeleteClientCommand\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteClientCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"     * and returns a DeleteClientCommand object for execution.","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"    public DeleteClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"        try {","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"            return new DeleteClientCommand(index);","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteClientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"hoang227":5,"Gavzzz":24}},{"path":"src/main/java/seedu/realtime/logic/parser/DeleteListingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.DeleteListingCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"public class DeleteListingCommandParser implements Parser\u003cDeleteListingCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteListingCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"     * and returns a DeleteListingCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"    public DeleteListingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"        Index index \u003d ParserUtil.parseIndex(args.trim());","lastModifiedDate":"2022-11-03"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"        return new DeleteListingCommand(index);","lastModifiedDate":"2022-11-03"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":4,"Isaaclhy00":18}},{"path":"src/main/java/seedu/realtime/logic/parser/DeleteMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"ama-chi"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"ama-chi"},"content":" * Parses input arguments and creates a new DeleteMeetingCommand object","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"ama-chi"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"ama-chi"},"content":"public class DeleteMeetingCommandParser {","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"ama-chi"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteMeetingCommand","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"ama-chi"},"content":"     * and returns a DeleteMeetingCommand object for execution.","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"ama-chi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"ama-chi"},"content":"    public DeleteMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"ama-chi"},"content":"        try {","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"ama-chi"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"ama-chi"},"content":"            return new DeleteMeetingCommand(index);","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"ama-chi"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"ama-chi"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"ama-chi"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMeetingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"ama-chi"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"hoang227":5,"ama-chi":23}},{"path":"src/main/java/seedu/realtime/logic/parser/DeleteOfferCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.DeleteOfferCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":" * Parses input arguments and creates a new DeleteOfferCommand object","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"public class DeleteOfferCommandParser implements Parser\u003cDeleteOfferCommand\u003e {","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteOfferCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"     * and returns a DeleteOfferCommand object for execution.","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"    public DeleteOfferCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"            return new DeleteOfferCommand(index);","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteOfferCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jeromehjj":23,"hoang227":5}},{"path":"src/main/java/seedu/realtime/logic/parser/DeletePersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.DeletePersonCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"public class DeletePersonCommandParser implements Parser\u003cDeletePersonCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePersonCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"     * and returns a DeletePersonCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"    public DeletePersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"            return new DeletePersonCommand(index);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"hoang227":5,"Isaaclhy00":6,"-":18}},{"path":"src/main/java/seedu/realtime/logic/parser/EditClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditClientCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditClientCommand.EditClientDescriptor;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"public class EditClientCommandParser implements Parser\u003cEditClientCommand\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"     * Parses the given {@code String} of arguments in the context of the EditClientCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"     * and returns an EditClientCommand object for execution.","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"    public EditClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"        Index index;","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"Gavzzz"},"content":"        try {","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"Gavzzz"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"Gavzzz"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"Gavzzz"},"content":"                            EditClientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"Gavzzz"},"content":"        EditClientDescriptor editClientDescriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"Gavzzz"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"            editClientDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"Gavzzz"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"Gavzzz"},"content":"            editClientDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"Gavzzz"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"Gavzzz"},"content":"            editClientDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"Gavzzz"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"Gavzzz"},"content":"            editClientDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"Gavzzz"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editClientDescriptor::setTags);","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"Gavzzz"},"content":"        if (!editClientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"Gavzzz"},"content":"            throw new ParseException(EditClientCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"Gavzzz"},"content":"        return new EditClientCommand(index, editClientDescriptor);","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"Gavzzz"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"Gavzzz"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"Gavzzz"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"Gavzzz"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"Gavzzz"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"Gavzzz"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"Gavzzz"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"Gavzzz"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"Gavzzz"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"hoang227":12,"Gavzzz":72}},{"path":"src/main/java/seedu/realtime/logic/parser/EditListingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_ASKING_PRICE;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_LISTING_ID;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditListingCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditListingCommand.EditListingDescriptor;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"public class EditListingCommandParser implements Parser\u003cEditListingCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"     * Parses the given {@code String} of arguments in the context of the EditListingCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"     * and returns an EditListingCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"    public EditListingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_LISTING_ID, PREFIX_ADDRESS, PREFIX_NAME, PREFIX_ASKING_PRICE);","lastModifiedDate":"2022-10-31"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"        Index index;","lastModifiedDate":"2022-10-31"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"        try {","lastModifiedDate":"2022-10-31"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-31"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-31"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-31"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"                            EditListingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-31"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-31"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"        EditListingDescriptor editListingDescriptor \u003d new EditListingDescriptor();","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"Isaaclhy00"},"content":"        if (argMultimap.getValue(PREFIX_LISTING_ID).isPresent()) {","lastModifiedDate":"2022-10-31"},{"lineNumber":49,"author":{"gitId":"Isaaclhy00"},"content":"            editListingDescriptor.setId(ParserUtil.parseListingId(argMultimap.getValue(PREFIX_LISTING_ID).get()));","lastModifiedDate":"2022-10-31"},{"lineNumber":50,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"Isaaclhy00"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"Isaaclhy00"},"content":"            editListingDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"Isaaclhy00"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"Isaaclhy00"},"content":"            editListingDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"Isaaclhy00"},"content":"        if (argMultimap.getValue(PREFIX_ASKING_PRICE).isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"            editListingDescriptor.setAskingPrice(","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"                ParserUtil.parsePrice(argMultimap.getValue(PREFIX_ASKING_PRICE).get()));","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"Isaaclhy00"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editListingDescriptor::setTags);","lastModifiedDate":"2022-10-31"},{"lineNumber":62,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":63,"author":{"gitId":"Isaaclhy00"},"content":"        if (!editListingDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"Isaaclhy00"},"content":"            throw new ParseException(EditListingCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"Isaaclhy00"},"content":"        return new EditListingCommand(index, editListingDescriptor);","lastModifiedDate":"2022-10-31"},{"lineNumber":68,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"Isaaclhy00"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"Isaaclhy00"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"Isaaclhy00"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"Isaaclhy00"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"Isaaclhy00"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"Isaaclhy00"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"Isaaclhy00"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"Isaaclhy00"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"Isaaclhy00"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jeromehjj":2,"hoang227":12,"Isaaclhy00":72}},{"path":"src/main/java/seedu/realtime/logic/parser/EditMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"ama-chi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_LISTING_ID;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditMeetingCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"ama-chi"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"ama-chi"},"content":" * Parses input arguments and creates a new EditMeetingCommand object","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"ama-chi"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"ama-chi"},"content":"public class EditMeetingCommandParser implements Parser\u003cEditMeetingCommand\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"ama-chi"},"content":"     * Parses the given {@code String} of arguments in the context of the EditMeetingCommand","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"ama-chi"},"content":"     * and returns an EditMeetingCommand object for execution.","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"ama-chi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"ama-chi"},"content":"    public EditMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"ama-chi"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"ama-chi"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"ama-chi"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_LISTING_ID, PREFIX_NAME, PREFIX_DATETIME);","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"ama-chi"},"content":"        Index index;","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"ama-chi"},"content":"        try {","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"ama-chi"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"ama-chi"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"ama-chi"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"ama-chi"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"ama-chi"},"content":"                            EditMeetingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"ama-chi"},"content":"        EditMeetingCommand.EditMeetingDescriptor editMeetingDescriptor \u003d new EditMeetingCommand.EditMeetingDescriptor();","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"ama-chi"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"ama-chi"},"content":"            editMeetingDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"ama-chi"},"content":"        if (argMultimap.getValue(PREFIX_LISTING_ID).isPresent()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"ama-chi"},"content":"            editMeetingDescriptor.setListing(ParserUtil.parseListingId(argMultimap.getValue(PREFIX_LISTING_ID).get()));","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"ama-chi"},"content":"        if (argMultimap.getValue(PREFIX_DATETIME).isPresent()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"ama-chi"},"content":"            editMeetingDescriptor.setDateTime(ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_DATETIME).get()));","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"ama-chi"},"content":"        if (!editMeetingDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"ama-chi"},"content":"            throw new ParseException(EditMeetingCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"ama-chi"},"content":"        return new EditMeetingCommand(index, editMeetingDescriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"ama-chi"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"hoang227":8,"ama-chi":47}},{"path":"src/main/java/seedu/realtime/logic/parser/EditOfferCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_LISTING_ID;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_OFFER;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditOfferCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":" * Parses input arguments and creates a new EditOfferCommand object","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"public class EditOfferCommandParser implements Parser\u003cEditOfferCommand\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"     * Parses the given {@code String} of arguments in the context of the EditOfferCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"     * and returns an EditOfferCommand object for execution.","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"    public EditOfferCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_LISTING_ID, PREFIX_NAME, PREFIX_OFFER);","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"        Index index;","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"                    EditOfferCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand.EditOfferDescriptor editOfferDescriptor \u003d new EditOfferCommand.EditOfferDescriptor();","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"            editOfferDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"        if (argMultimap.getValue(PREFIX_LISTING_ID).isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"            editOfferDescriptor.setListing(ParserUtil.parseListingId(argMultimap.getValue(PREFIX_LISTING_ID).get()));","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"        if (argMultimap.getValue(PREFIX_OFFER).isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"            editOfferDescriptor.setOfferPrice(ParserUtil.parsePrice(argMultimap.getValue(PREFIX_OFFER).get()));","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"        if (!editOfferDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"            throw new ParseException(EditOfferCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"        return new EditOfferCommand(index, editOfferDescriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jeromehjj":46,"hoang227":8,"Isaaclhy00":1}},{"path":"src/main/java/seedu/realtime/logic/parser/EditPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditPersonCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"public class EditPersonCommandParser implements Parser\u003cEditPersonCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPersonCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"     * and returns an EditPersonCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"    public EditPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"                            EditPersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"Isaaclhy00"},"content":"            throw new ParseException(EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"Isaaclhy00"},"content":"        return new EditPersonCommand(index, editPersonDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"hoang227":12,"Isaaclhy00":9,"-":63,"Gavzzz":1}},{"path":"src/main/java/seedu/realtime/logic/parser/FindClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.FindClientCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":" * Parses input arguments and creates a new FindClientCommand object","lastModifiedDate":"2022-10-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"public class FindClientCommandParser implements Parser\u003cFindClientCommand\u003e {","lastModifiedDate":"2022-10-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"     * Parses the given {@code String} of arguments in the context of the FindClientCommand","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"     * and returns a FindClientCommand object for execution.","lastModifiedDate":"2022-10-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    public FindClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        return new FindClientCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"hoang227":12,"-":21}},{"path":"src/main/java/seedu/realtime/logic/parser/FindOffersForListingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.FindOffersForListingCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.OfferContainsListingIdPredicate;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":" * Parses input arguments and creates a new FindOffersForListingCommand object","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"public class FindOffersForListingCommandParser {","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"     * Parses the given {@code String} of arguments in the context of the FindOffersForListingCommand","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"     * and returns a FindOffersForListingCommand object for execution.","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"    public FindOffersForListingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindOffersForListingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"        String[] listingId \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"        return new FindOffersForListingCommand(new OfferContainsListingIdPredicate(List.of(listingId)));","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"hoang227":5,"Isaaclhy00":26}},{"path":"src/main/java/seedu/realtime/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.Command;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"hoang227":3,"-":13}},{"path":"src/main/java/seedu/realtime/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"ama-chi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"ama-chi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"ama-chi"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.util.StringUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Price;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Email;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Phone;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"ama-chi"},"content":"    public static final String INVALID_DATETIME_FORMAT \u003d \"Date time format incorrect! Use yyyy-MM-dd HH:mm\";","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"ama-chi"},"content":"    public static final String DATETIME_FORMAT \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"jeromehjj"},"content":"     * Parses {@code int askingPrice} into a {@code Integer}.","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"jeromehjj"},"content":"    public static Price parsePrice(String offerPrice) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"jeromehjj"},"content":"        requireNonNull(offerPrice);","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"jeromehjj"},"content":"        String trimmedPrice \u003d offerPrice.trim();","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"jeromehjj"},"content":"        if (!Price.isValidPrice(trimmedPrice)) {","lastModifiedDate":"2022-11-06"},{"lineNumber":141,"author":{"gitId":"jeromehjj"},"content":"            throw new ParseException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"jeromehjj"},"content":"        return new Price(trimmedPrice);","lastModifiedDate":"2022-11-06"},{"lineNumber":144,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":146,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":147,"author":{"gitId":"Isaaclhy00"},"content":"     * Parses {@code int id} into a {@code ListingId}.","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":149,"author":{"gitId":"Isaaclhy00"},"content":"    public static ListingId parseListingId(String id) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":150,"author":{"gitId":"hoang227"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-10-17"},{"lineNumber":151,"author":{"gitId":"hoang227"},"content":"        String trimmedListingID \u003d id.trim();","lastModifiedDate":"2022-10-17"},{"lineNumber":152,"author":{"gitId":"Isaaclhy00"},"content":"        if (!ListingId.isValidListingId(trimmedListingID)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":153,"author":{"gitId":"Isaaclhy00"},"content":"            throw new ParseException(ListingId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":154,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":155,"author":{"gitId":"Isaaclhy00"},"content":"        return new ListingId(trimmedListingID);","lastModifiedDate":"2022-10-27"},{"lineNumber":156,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":157,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":158,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":159,"author":{"gitId":"ama-chi"},"content":"     * Parses {@code String LocalDateTime} into a {@Code LocalDateTime}.","lastModifiedDate":"2022-10-24"},{"lineNumber":160,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":161,"author":{"gitId":"ama-chi"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2022-10-24"},{"lineNumber":162,"author":{"gitId":"ama-chi"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2022-10-24"},{"lineNumber":163,"author":{"gitId":"ama-chi"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2022-10-24"},{"lineNumber":164,"author":{"gitId":"ama-chi"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(DATETIME_FORMAT);","lastModifiedDate":"2022-11-07"},{"lineNumber":165,"author":{"gitId":"ama-chi"},"content":"        try {","lastModifiedDate":"2022-10-24"},{"lineNumber":166,"author":{"gitId":"ama-chi"},"content":"            LocalDateTime formattedDate \u003d LocalDateTime.parse(trimmedDateTime, format);","lastModifiedDate":"2022-10-24"},{"lineNumber":167,"author":{"gitId":"ama-chi"},"content":"            return formattedDate;","lastModifiedDate":"2022-10-24"},{"lineNumber":168,"author":{"gitId":"ama-chi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-24"},{"lineNumber":169,"author":{"gitId":"ama-chi"},"content":"            throw new ParseException(INVALID_DATETIME_FORMAT);","lastModifiedDate":"2022-10-24"},{"lineNumber":170,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":171,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jeromehjj":11,"hoang227":19,"ama-chi":22,"Isaaclhy00":5,"-":115}},{"path":"src/main/java/seedu/realtime/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"hoang227":1,"-":38}},{"path":"src/main/java/seedu/realtime/logic/parser/RealTimeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.AddClientCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.AddInterestedClientCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.AddListingCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.AddMeetingCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.AddOfferCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.AddTagsToListingCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.ClearCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.Command;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.DeleteClientCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.DeleteListingCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.DeleteOfferCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditClientCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditListingCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditMeetingCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditOfferCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.ExitCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.FindClientCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.FindOffersForListingCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.HelpCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.ViewClientListCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.ViewListingClientsCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.ViewListingsCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"public class RealTimeParser {","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"Gavzzz"},"content":"        case AddClientCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"Gavzzz"},"content":"            return new AddClientCommandParser().parse(arguments);","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"Isaaclhy00"},"content":"        case AddInterestedClientCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"Isaaclhy00"},"content":"            return new AddInterestedClientCommandParser().parse(arguments);","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"Isaaclhy00"},"content":"        case AddListingCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"Isaaclhy00"},"content":"            return new AddListingCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"Isaaclhy00"},"content":"        case AddTagsToListingCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"Isaaclhy00"},"content":"            return new AddTagsToListingCommandParser().parse(arguments);","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"Isaaclhy00"},"content":"        case AddOfferCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"Isaaclhy00"},"content":"            return new AddOfferCommandParser().parse(arguments);","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"ama-chi"},"content":"        case AddMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-11-04"},{"lineNumber":78,"author":{"gitId":"ama-chi"},"content":"            return new AddMeetingCommandParser().parse(arguments);","lastModifiedDate":"2022-11-04"},{"lineNumber":79,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":80,"author":{"gitId":"Gavzzz"},"content":"        case EditClientCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"Gavzzz"},"content":"            return new EditClientCommandParser().parse(arguments);","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"Isaaclhy00"},"content":"        case EditListingCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"Isaaclhy00"},"content":"            return new EditListingCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"jeromehjj"},"content":"        case EditOfferCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"jeromehjj"},"content":"            return new EditOfferCommandParser().parse(arguments);","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"ama-chi"},"content":"        case EditMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-11-04"},{"lineNumber":90,"author":{"gitId":"ama-chi"},"content":"            return new EditMeetingCommandParser().parse(arguments);","lastModifiedDate":"2022-11-04"},{"lineNumber":91,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":92,"author":{"gitId":"Gavzzz"},"content":"        case DeleteClientCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"Gavzzz"},"content":"            return new DeleteClientCommandParser().parse(arguments);","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"Isaaclhy00"},"content":"        case DeleteListingCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"Isaaclhy00"},"content":"            return new DeleteListingCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"jeromehjj"},"content":"        case DeleteOfferCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"jeromehjj"},"content":"            return new DeleteOfferCommandParser().parse(arguments);","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"ama-chi"},"content":"        case DeleteMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-11-04"},{"lineNumber":102,"author":{"gitId":"ama-chi"},"content":"            return new DeleteMeetingCommandParser().parse(arguments);","lastModifiedDate":"2022-11-04"},{"lineNumber":103,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        case FindClientCommand.COMMAND_WORD:","lastModifiedDate":"2022-11-01"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"            return new FindClientCommandParser().parse(arguments);","lastModifiedDate":"2022-11-01"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":110,"author":{"gitId":"Isaaclhy00"},"content":"        case FindOffersForListingCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"Isaaclhy00"},"content":"            return new FindOffersForListingCommandParser().parse(arguments);","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"Gavzzz"},"content":"        case ViewClientListCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"Gavzzz"},"content":"            return new ViewClientListCommand();","lastModifiedDate":"2022-10-21"},{"lineNumber":115,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":116,"author":{"gitId":"Isaaclhy00"},"content":"        case ViewListingsCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"Isaaclhy00"},"content":"            return new ViewListingsCommand();","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"Isaaclhy00"},"content":"        case ViewListingClientsCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"Isaaclhy00"},"content":"            return new ViewListingClientsCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jeromehjj":6,"hoang227":32,"ama-chi":9,"Isaaclhy00":25,"-":49,"Gavzzz":12}},{"path":"src/main/java/seedu/realtime/logic/parser/ViewListingClientsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_LISTING_ID;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.ViewListingClientsCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"public class ViewListingClientsCommandParser implements Parser\u003cViewListingClientsCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewListingClientsCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"     * and returns an ViewListingClientsCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"    public ViewListingClientsCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_LISTING_ID);","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_LISTING_ID)","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"                    ViewListingClientsCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"        ListingId id \u003d ParserUtil.parseListingId(argMultimap.getValue(PREFIX_LISTING_ID).get());","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"        return new ViewListingClientsCommand(id);","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":6,"Isaaclhy00":41}},{"path":"src/main/java/seedu/realtime/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser.exceptions;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"hoang227":2,"-":15}},{"path":"src/main/java/seedu/realtime/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.GuiSettings;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.meeting.Meeting;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"    Predicate\u003cClient\u003e PREDICATE_SHOW_ALL_CLIENTS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"    Predicate\u003cListing\u003e PREDICATE_SHOW_ALL_LISTINGS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"    Predicate\u003cOffer\u003e PREDICATE_SHOW_ALL_OFFERS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"ama-chi"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"ama-chi"},"content":"    Predicate\u003cMeeting\u003e PREDICATE_SHOW_ALL_MEETINGS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"    Path getRealTimeFilePath();","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    void setRealTimeFilePath(Path realTimeFilePath);","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"     * Replaces address book data with the data in {@code realTime}.","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    void setRealTime(ReadOnlyRealTime realTime);","lastModifiedDate":"2022-11-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    /** Returns the RealTime */","lastModifiedDate":"2022-11-05"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    ReadOnlyRealTime getRealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"Isaaclhy00"},"content":"     * Gets the person with the given name {@code name}.","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"Isaaclhy00"},"content":"     * @param name name of the person","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"Isaaclhy00"},"content":"     * @return person with given name","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"Isaaclhy00"},"content":"    Person getPerson(Name name);","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"Isaaclhy00"},"content":"     * Returns true if a listing with the same identity as {@code listing} exists in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"Isaaclhy00"},"content":"    boolean hasListing(Listing listing);","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"Isaaclhy00"},"content":"     * Deletes the given listing.","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"Isaaclhy00"},"content":"     * The listing must exist in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"Isaaclhy00"},"content":"    void deleteListing(Listing target);","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"Isaaclhy00"},"content":"     * Adds the given listing.","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"Isaaclhy00"},"content":"     * {@code listing} must not already exist in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"Isaaclhy00"},"content":"    void addListing(Listing listing);","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"Isaaclhy00"},"content":"     * Gets the listing with the given id {@code id}.","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"Isaaclhy00"},"content":"     * @param id id of the listing","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"Isaaclhy00"},"content":"     * @return listing with given id","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"Isaaclhy00"},"content":"    Listing getListing(ListingId id);","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"Isaaclhy00"},"content":"     * Replaces the given listing {@code target} with {@code editedListing}.","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"Isaaclhy00"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"Isaaclhy00"},"content":"     * The listing identity of {@code editedListing} must not be the same","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"Isaaclhy00"},"content":"     * as another existing listing in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"Isaaclhy00"},"content":"    void setListing(Listing listing, Listing editedListing);","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":147,"author":{"gitId":"hoang227"},"content":"     * Deletes all offers for the specified listing.","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":149,"author":{"gitId":"hoang227"},"content":"    void deleteOffersFor(Listing target);","lastModifiedDate":"2022-10-28"},{"lineNumber":150,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":151,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"hoang227"},"content":"     * Delete all meetings about the specified listing.","lastModifiedDate":"2022-10-28"},{"lineNumber":153,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":154,"author":{"gitId":"hoang227"},"content":"    void deleteMeetingsAbout(Listing target);","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":156,"author":{"gitId":"Isaaclhy00"},"content":"    /** Returns an unmodifiable view of the filtered listings list */","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"Isaaclhy00"},"content":"    ObservableList\u003cListing\u003e getFilteredListingList();","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"Isaaclhy00"},"content":"     * Updates the filter of the filtered listings list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"Isaaclhy00"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"Isaaclhy00"},"content":"    void updateFilteredListingList(Predicate\u003cListing\u003e predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":165,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":166,"author":{"gitId":"jeromehjj"},"content":"     * Returns true if an offer with the same identity as {@code offer} exists in the address book.","lastModifiedDate":"2022-10-14"},{"lineNumber":167,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":168,"author":{"gitId":"jeromehjj"},"content":"    boolean hasOffer(Offer offer);","lastModifiedDate":"2022-10-14"},{"lineNumber":169,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":170,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":171,"author":{"gitId":"jeromehjj"},"content":"     * Deletes the given offer.","lastModifiedDate":"2022-10-14"},{"lineNumber":172,"author":{"gitId":"jeromehjj"},"content":"     * The offer must exist in the address book.","lastModifiedDate":"2022-10-14"},{"lineNumber":173,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":174,"author":{"gitId":"jeromehjj"},"content":"    void deleteOffer(Offer target);","lastModifiedDate":"2022-10-14"},{"lineNumber":175,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":176,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":177,"author":{"gitId":"jeromehjj"},"content":"     * Adds the given offer.","lastModifiedDate":"2022-10-14"},{"lineNumber":178,"author":{"gitId":"jeromehjj"},"content":"     * {@code offer} must not already exist in the address book.","lastModifiedDate":"2022-10-14"},{"lineNumber":179,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":180,"author":{"gitId":"jeromehjj"},"content":"    void addOffer(Offer offer);","lastModifiedDate":"2022-10-14"},{"lineNumber":181,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":182,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":183,"author":{"gitId":"jeromehjj"},"content":"     * Gets the offer from the given name {@code name} and listing address {@code address}.","lastModifiedDate":"2022-10-14"},{"lineNumber":184,"author":{"gitId":"Gavzzz"},"content":"     * @param name name of the client in offer","lastModifiedDate":"2022-10-21"},{"lineNumber":185,"author":{"gitId":"jeromehjj"},"content":"     * @param address listing address of offer","lastModifiedDate":"2022-10-14"},{"lineNumber":186,"author":{"gitId":"jeromehjj"},"content":"     * @return offer with given name and listing address","lastModifiedDate":"2022-10-14"},{"lineNumber":187,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":188,"author":{"gitId":"jeromehjj"},"content":"    public Offer getOffer(Name name, Address address);","lastModifiedDate":"2022-10-14"},{"lineNumber":189,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":190,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":191,"author":{"gitId":"jeromehjj"},"content":"     * Replaces the given offer {@code target} with {@code editedOffer}.","lastModifiedDate":"2022-10-14"},{"lineNumber":192,"author":{"gitId":"jeromehjj"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-14"},{"lineNumber":193,"author":{"gitId":"jeromehjj"},"content":"     * The offer identity of {@code editedOffer} must not be the same as another existing offer in the address book.","lastModifiedDate":"2022-10-14"},{"lineNumber":194,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":195,"author":{"gitId":"jeromehjj"},"content":"    void setOffer(Offer target, Offer editedOffer);","lastModifiedDate":"2022-10-14"},{"lineNumber":196,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":197,"author":{"gitId":"jeromehjj"},"content":"    /** Returns an unmodifiable view of the filtered offer list */","lastModifiedDate":"2022-10-14"},{"lineNumber":198,"author":{"gitId":"jeromehjj"},"content":"    ObservableList\u003cOffer\u003e getFilteredOfferList();","lastModifiedDate":"2022-10-14"},{"lineNumber":199,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":200,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":201,"author":{"gitId":"jeromehjj"},"content":"     * Updates the filter of the filtered offer list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-14"},{"lineNumber":202,"author":{"gitId":"jeromehjj"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-14"},{"lineNumber":203,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":204,"author":{"gitId":"jeromehjj"},"content":"    void updateFilteredOfferList(Predicate\u003cOffer\u003e predicate);","lastModifiedDate":"2022-10-14"},{"lineNumber":205,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":206,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":207,"author":{"gitId":"ama-chi"},"content":"     * Returns true if a meeting with the same identity as {@code meeting} exists in the address book.","lastModifiedDate":"2022-10-24"},{"lineNumber":208,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":209,"author":{"gitId":"ama-chi"},"content":"    boolean hasMeeting(Meeting meeting);","lastModifiedDate":"2022-10-24"},{"lineNumber":210,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":211,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":212,"author":{"gitId":"ama-chi"},"content":"     * Adds the given meeting.","lastModifiedDate":"2022-10-24"},{"lineNumber":213,"author":{"gitId":"ama-chi"},"content":"     * {@code meeting} must not already exist in the address book.","lastModifiedDate":"2022-10-24"},{"lineNumber":214,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":215,"author":{"gitId":"ama-chi"},"content":"    void addMeeting(Meeting meeting);","lastModifiedDate":"2022-10-24"},{"lineNumber":216,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":217,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":218,"author":{"gitId":"ama-chi"},"content":"     * Deletes given meeting.","lastModifiedDate":"2022-10-24"},{"lineNumber":219,"author":{"gitId":"ama-chi"},"content":"     * {@code meeting} must not exist in the given address book.","lastModifiedDate":"2022-10-24"},{"lineNumber":220,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":221,"author":{"gitId":"ama-chi"},"content":"    void deleteMeeting(Meeting meeting);","lastModifiedDate":"2022-10-24"},{"lineNumber":222,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":223,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":224,"author":{"gitId":"ama-chi"},"content":"     * Gets the meeting from the given name {@code name} and listing address {@code address}.","lastModifiedDate":"2022-10-24"},{"lineNumber":225,"author":{"gitId":"ama-chi"},"content":"     * @param name name of the client in meeting","lastModifiedDate":"2022-10-24"},{"lineNumber":226,"author":{"gitId":"ama-chi"},"content":"     * @param address listing address of meeting","lastModifiedDate":"2022-10-24"},{"lineNumber":227,"author":{"gitId":"ama-chi"},"content":"     * @return meeting with given name and listing address","lastModifiedDate":"2022-10-24"},{"lineNumber":228,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":229,"author":{"gitId":"ama-chi"},"content":"    public Meeting getMeeting(Name name, Address address);","lastModifiedDate":"2022-10-24"},{"lineNumber":230,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":231,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":232,"author":{"gitId":"ama-chi"},"content":"     * Replaces the given meeting {@code target} with {@code editedMeeting}.","lastModifiedDate":"2022-10-28"},{"lineNumber":233,"author":{"gitId":"ama-chi"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":234,"author":{"gitId":"ama-chi"},"content":"     * The meeting identity of {@code editedMeeting} must not be the same as another existing meeting in the address","lastModifiedDate":"2022-10-28"},{"lineNumber":235,"author":{"gitId":"ama-chi"},"content":"     * book.","lastModifiedDate":"2022-10-28"},{"lineNumber":236,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":237,"author":{"gitId":"ama-chi"},"content":"    void setMeeting(Meeting target, Meeting editedMeeting);","lastModifiedDate":"2022-10-28"},{"lineNumber":238,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":239,"author":{"gitId":"ama-chi"},"content":"    /** Returns an unmodifiable view of the filtered meeting list */","lastModifiedDate":"2022-10-28"},{"lineNumber":240,"author":{"gitId":"ama-chi"},"content":"    ObservableList\u003cMeeting\u003e getFilteredMeetingList();","lastModifiedDate":"2022-10-28"},{"lineNumber":241,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":242,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":243,"author":{"gitId":"ama-chi"},"content":"     * Updates the filter of the filtered meeting list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-24"},{"lineNumber":244,"author":{"gitId":"ama-chi"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-24"},{"lineNumber":245,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":246,"author":{"gitId":"ama-chi"},"content":"    void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":247,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":248,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":249,"author":{"gitId":"Gavzzz"},"content":"     * Returns true if a client with the same identity as {@code client} exists in the address book.","lastModifiedDate":"2022-10-21"},{"lineNumber":250,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":251,"author":{"gitId":"Gavzzz"},"content":"    boolean hasClient(Client client);","lastModifiedDate":"2022-10-21"},{"lineNumber":252,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":253,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":254,"author":{"gitId":"Gavzzz"},"content":"     * Deletes the given client.","lastModifiedDate":"2022-10-21"},{"lineNumber":255,"author":{"gitId":"Gavzzz"},"content":"     * The client must exist in the address book.","lastModifiedDate":"2022-10-21"},{"lineNumber":256,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":257,"author":{"gitId":"Gavzzz"},"content":"    void deleteClient(Client target);","lastModifiedDate":"2022-10-21"},{"lineNumber":258,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":259,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":260,"author":{"gitId":"hoang227"},"content":"     * Deletes all the listings owned by the given client.","lastModifiedDate":"2022-10-28"},{"lineNumber":261,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":262,"author":{"gitId":"hoang227"},"content":"    void deleteListingsOwnedBy(Client target);","lastModifiedDate":"2022-10-28"},{"lineNumber":263,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":264,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":265,"author":{"gitId":"hoang227"},"content":"     * Delete all the offers made by the given client.","lastModifiedDate":"2022-10-28"},{"lineNumber":266,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":267,"author":{"gitId":"hoang227"},"content":"    void deleteOffersMadeBy(Client target);","lastModifiedDate":"2022-10-28"},{"lineNumber":268,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":269,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":270,"author":{"gitId":"hoang227"},"content":"     * Delete all the meetings with the given client.","lastModifiedDate":"2022-10-28"},{"lineNumber":271,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":272,"author":{"gitId":"hoang227"},"content":"    void deleteMeetingsWith(Client target);","lastModifiedDate":"2022-10-28"},{"lineNumber":273,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":274,"author":{"gitId":"Gavzzz"},"content":"     * Adds the given client.","lastModifiedDate":"2022-10-21"},{"lineNumber":275,"author":{"gitId":"Gavzzz"},"content":"     * {@code client} must not already exist in the address book.","lastModifiedDate":"2022-10-21"},{"lineNumber":276,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":277,"author":{"gitId":"Gavzzz"},"content":"    void addClient(Client client);","lastModifiedDate":"2022-10-21"},{"lineNumber":278,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":279,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":280,"author":{"gitId":"Gavzzz"},"content":"     * Gets the client with the given name {@code name}.","lastModifiedDate":"2022-10-21"},{"lineNumber":281,"author":{"gitId":"Gavzzz"},"content":"     * @param name name of the client","lastModifiedDate":"2022-10-21"},{"lineNumber":282,"author":{"gitId":"Gavzzz"},"content":"     * @return client with given name","lastModifiedDate":"2022-10-21"},{"lineNumber":283,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":284,"author":{"gitId":"Gavzzz"},"content":"    Client getClient(Name name);","lastModifiedDate":"2022-10-21"},{"lineNumber":285,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":286,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":287,"author":{"gitId":"Gavzzz"},"content":"     * Replaces the given client {@code target} with {@code editedClient}.","lastModifiedDate":"2022-10-21"},{"lineNumber":288,"author":{"gitId":"Gavzzz"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-21"},{"lineNumber":289,"author":{"gitId":"Gavzzz"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the address book.","lastModifiedDate":"2022-10-21"},{"lineNumber":290,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":291,"author":{"gitId":"Gavzzz"},"content":"    void setClient(Client target, Client editedClient);","lastModifiedDate":"2022-10-21"},{"lineNumber":292,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":293,"author":{"gitId":"Gavzzz"},"content":"    /** Returns an unmodifiable view of the filtered client list */","lastModifiedDate":"2022-10-21"},{"lineNumber":294,"author":{"gitId":"Gavzzz"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2022-10-21"},{"lineNumber":295,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":296,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":297,"author":{"gitId":"Gavzzz"},"content":"     * Updates the filter of the filtered client list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-21"},{"lineNumber":298,"author":{"gitId":"Gavzzz"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-21"},{"lineNumber":299,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":300,"author":{"gitId":"Gavzzz"},"content":"    void updateFilteredClientList(Predicate\u003cClient\u003e predicate);","lastModifiedDate":"2022-10-21"},{"lineNumber":301,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jeromehjj":43,"hoang227":39,"ama-chi":44,"Isaaclhy00":52,"-":78,"Gavzzz":46}},{"path":"src/main/java/seedu/realtime/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.GuiSettings;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.LogsCenter;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.meeting.Meeting;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    private final RealTime realTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"    private final FilteredList\u003cClient\u003e filteredClients;","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"    private final FilteredList\u003cListing\u003e filteredListings;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"    private final FilteredList\u003cOffer\u003e filteredOffers;","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"ama-chi"},"content":"    private final FilteredList\u003cMeeting\u003e filteredMeetings;","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"     * Initializes a ModelManager with the given realTime and userPrefs.","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    public ModelManager(ReadOnlyRealTime realTime, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        requireAllNonNull(realTime, userPrefs);","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        logger.fine(\"Initializing with address book: \" + realTime + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        this.realTime \u003d new RealTime(realTime);","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        filteredClients \u003d new FilteredList\u003c\u003e(this.realTime.getClientList());","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.realTime.getPersonList());","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        filteredListings \u003d new FilteredList\u003c\u003e(this.realTime.getListingList());","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        filteredOffers \u003d new FilteredList\u003c\u003e(this.realTime.getOfferList());","lastModifiedDate":"2022-11-05"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        filteredMeetings \u003d new FilteredList\u003c\u003e(this.realTime.getMeetingList());","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        this(new RealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"    public Path getRealTimeFilePath() {","lastModifiedDate":"2022-11-05"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        return userPrefs.getRealTimeFilePath();","lastModifiedDate":"2022-11-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"    public void setRealTimeFilePath(Path realTimeFilePath) {","lastModifiedDate":"2022-11-05"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        requireNonNull(realTimeFilePath);","lastModifiedDate":"2022-11-05"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        userPrefs.setRealTimeFilePath(realTimeFilePath);","lastModifiedDate":"2022-11-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d RealTime \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-11-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"    public void setRealTime(ReadOnlyRealTime realTime) {","lastModifiedDate":"2022-11-05"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        this.realTime.resetData(realTime);","lastModifiedDate":"2022-11-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"    public ReadOnlyRealTime getRealTime() {","lastModifiedDate":"2022-11-05"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        return realTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"        return realTime.hasPerson(person);","lastModifiedDate":"2022-11-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"        realTime.removePerson(target);","lastModifiedDate":"2022-11-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"        realTime.addPerson(person);","lastModifiedDate":"2022-11-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"Isaaclhy00"},"content":"    public Person getPerson(Name name) {","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"        return realTime.getPerson(name);","lastModifiedDate":"2022-11-05"},{"lineNumber":125,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"        realTime.setPerson(target, editedPerson);","lastModifiedDate":"2022-11-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":136,"author":{"gitId":"Gavzzz"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2022-10-21"},{"lineNumber":137,"author":{"gitId":"Gavzzz"},"content":"        requireNonNull(client);","lastModifiedDate":"2022-10-21"},{"lineNumber":138,"author":{"gitId":"hoang227"},"content":"        return realTime.hasClient(client);","lastModifiedDate":"2022-11-05"},{"lineNumber":139,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":140,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":141,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":142,"author":{"gitId":"Gavzzz"},"content":"    public void deleteClient(Client target) {","lastModifiedDate":"2022-10-21"},{"lineNumber":143,"author":{"gitId":"hoang227"},"content":"        realTime.removeClient(target);","lastModifiedDate":"2022-11-05"},{"lineNumber":144,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":145,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":146,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":147,"author":{"gitId":"hoang227"},"content":"    public void deleteListingsOwnedBy(Client target) {","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"hoang227"},"content":"        realTime.removeAllListingOwnedBy(target);","lastModifiedDate":"2022-11-05"},{"lineNumber":149,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":150,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":151,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"hoang227"},"content":"    public void deleteOffersMadeBy(Client target) {","lastModifiedDate":"2022-10-28"},{"lineNumber":153,"author":{"gitId":"hoang227"},"content":"        realTime.removeAllOffersMadeBy(target);","lastModifiedDate":"2022-11-05"},{"lineNumber":154,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":156,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":157,"author":{"gitId":"hoang227"},"content":"    public void deleteMeetingsWith(Client target) {","lastModifiedDate":"2022-10-28"},{"lineNumber":158,"author":{"gitId":"hoang227"},"content":"        realTime.removeAllMeetingsWith(target);","lastModifiedDate":"2022-11-05"},{"lineNumber":159,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":160,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":161,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":162,"author":{"gitId":"Gavzzz"},"content":"    public void addClient(Client client) {","lastModifiedDate":"2022-10-21"},{"lineNumber":163,"author":{"gitId":"hoang227"},"content":"        realTime.addClient(client);","lastModifiedDate":"2022-11-05"},{"lineNumber":164,"author":{"gitId":"Gavzzz"},"content":"        updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":165,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":166,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":167,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":168,"author":{"gitId":"Gavzzz"},"content":"    public Client getClient(Name name) {","lastModifiedDate":"2022-10-21"},{"lineNumber":169,"author":{"gitId":"hoang227"},"content":"        return realTime.getClient(name);","lastModifiedDate":"2022-11-05"},{"lineNumber":170,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":171,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":172,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":173,"author":{"gitId":"Gavzzz"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-10-21"},{"lineNumber":174,"author":{"gitId":"Gavzzz"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2022-10-21"},{"lineNumber":175,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":176,"author":{"gitId":"hoang227"},"content":"        realTime.setClient(target, editedClient);","lastModifiedDate":"2022-11-05"},{"lineNumber":177,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":178,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":179,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":180,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean hasListing(Listing listing) {","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"Isaaclhy00"},"content":"        requireNonNull(listing);","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"hoang227"},"content":"        return realTime.hasListing(listing);","lastModifiedDate":"2022-11-05"},{"lineNumber":184,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"Isaaclhy00"},"content":"    public void deleteListing(Listing target) {","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"hoang227"},"content":"        realTime.removeListing(target);","lastModifiedDate":"2022-11-05"},{"lineNumber":189,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"Isaaclhy00"},"content":"    public void addListing(Listing listing) {","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"hoang227"},"content":"        realTime.addListing(listing);","lastModifiedDate":"2022-11-05"},{"lineNumber":194,"author":{"gitId":"Isaaclhy00"},"content":"        updateFilteredListingList(PREDICATE_SHOW_ALL_LISTINGS);","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":197,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"Isaaclhy00"},"content":"     * Gets the listing with the given id {@code id}.","lastModifiedDate":"2022-10-10"},{"lineNumber":199,"author":{"gitId":"Isaaclhy00"},"content":"     * @param id id of the listing","lastModifiedDate":"2022-10-10"},{"lineNumber":200,"author":{"gitId":"Isaaclhy00"},"content":"     * @return listing with given id","lastModifiedDate":"2022-10-10"},{"lineNumber":201,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":202,"author":{"gitId":"Isaaclhy00"},"content":"    public Listing getListing(ListingId id) {","lastModifiedDate":"2022-10-27"},{"lineNumber":203,"author":{"gitId":"hoang227"},"content":"        return realTime.getListing(id);","lastModifiedDate":"2022-11-05"},{"lineNumber":204,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":205,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":206,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":207,"author":{"gitId":"Isaaclhy00"},"content":"    public void setListing(Listing target, Listing editedListing) {","lastModifiedDate":"2022-10-10"},{"lineNumber":208,"author":{"gitId":"Isaaclhy00"},"content":"        requireAllNonNull(target, editedListing);","lastModifiedDate":"2022-10-10"},{"lineNumber":209,"author":{"gitId":"hoang227"},"content":"        realTime.setListing(target, editedListing);","lastModifiedDate":"2022-11-05"},{"lineNumber":210,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":211,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":212,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":213,"author":{"gitId":"hoang227"},"content":"    public void deleteOffersFor(Listing target) {","lastModifiedDate":"2022-10-28"},{"lineNumber":214,"author":{"gitId":"hoang227"},"content":"        realTime.removeAllOffersFor(target);","lastModifiedDate":"2022-11-05"},{"lineNumber":215,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":216,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":217,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":218,"author":{"gitId":"hoang227"},"content":"    public void deleteMeetingsAbout(Listing target) {","lastModifiedDate":"2022-10-28"},{"lineNumber":219,"author":{"gitId":"hoang227"},"content":"        realTime.removeAllMeetingsAbout(target);","lastModifiedDate":"2022-11-05"},{"lineNumber":220,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":221,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":222,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":223,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean hasOffer(Offer offer) {","lastModifiedDate":"2022-10-14"},{"lineNumber":224,"author":{"gitId":"jeromehjj"},"content":"        requireNonNull(offer);","lastModifiedDate":"2022-10-14"},{"lineNumber":225,"author":{"gitId":"hoang227"},"content":"        return realTime.hasOffer(offer);","lastModifiedDate":"2022-11-05"},{"lineNumber":226,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":227,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":228,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":229,"author":{"gitId":"jeromehjj"},"content":"    public void deleteOffer(Offer target) {","lastModifiedDate":"2022-10-14"},{"lineNumber":230,"author":{"gitId":"hoang227"},"content":"        realTime.removeOffer(target);","lastModifiedDate":"2022-11-05"},{"lineNumber":231,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":232,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":233,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":234,"author":{"gitId":"Isaaclhy00"},"content":"    public void addOffer(Offer offer) {","lastModifiedDate":"2022-10-14"},{"lineNumber":235,"author":{"gitId":"hoang227"},"content":"        realTime.addOffer(offer);","lastModifiedDate":"2022-11-05"},{"lineNumber":236,"author":{"gitId":"jeromehjj"},"content":"        updateFilteredOfferList(PREDICATE_SHOW_ALL_OFFERS);","lastModifiedDate":"2022-10-14"},{"lineNumber":237,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":238,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":239,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":240,"author":{"gitId":"jeromehjj"},"content":"    public Offer getOffer(Name name, Address address) {","lastModifiedDate":"2022-10-14"},{"lineNumber":241,"author":{"gitId":"hoang227"},"content":"        return realTime.getOffer(name, address);","lastModifiedDate":"2022-11-05"},{"lineNumber":242,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":243,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":244,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":245,"author":{"gitId":"jeromehjj"},"content":"    public void setOffer(Offer target, Offer editedOffer) {","lastModifiedDate":"2022-10-14"},{"lineNumber":246,"author":{"gitId":"jeromehjj"},"content":"        requireAllNonNull(target, editedOffer);","lastModifiedDate":"2022-10-14"},{"lineNumber":247,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":248,"author":{"gitId":"hoang227"},"content":"        realTime.setOffer(target, editedOffer);","lastModifiedDate":"2022-11-05"},{"lineNumber":249,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":250,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":251,"author":{"gitId":"ama-chi"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":252,"author":{"gitId":"ama-chi"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-24"},{"lineNumber":253,"author":{"gitId":"ama-chi"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2022-10-24"},{"lineNumber":254,"author":{"gitId":"hoang227"},"content":"        return realTime.hasMeeting(meeting);","lastModifiedDate":"2022-11-05"},{"lineNumber":255,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":256,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":257,"author":{"gitId":"ama-chi"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":258,"author":{"gitId":"ama-chi"},"content":"    public void deleteMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-24"},{"lineNumber":259,"author":{"gitId":"hoang227"},"content":"        realTime.removeMeeting(meeting);","lastModifiedDate":"2022-11-05"},{"lineNumber":260,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":261,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":262,"author":{"gitId":"ama-chi"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":263,"author":{"gitId":"ama-chi"},"content":"    public void addMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-24"},{"lineNumber":264,"author":{"gitId":"hoang227"},"content":"        realTime.addMeeting(meeting);","lastModifiedDate":"2022-11-05"},{"lineNumber":265,"author":{"gitId":"ama-chi"},"content":"        updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2022-10-24"},{"lineNumber":266,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":267,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":268,"author":{"gitId":"ama-chi"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":269,"author":{"gitId":"ama-chi"},"content":"    public Meeting getMeeting(Name name, Address address) {","lastModifiedDate":"2022-10-24"},{"lineNumber":270,"author":{"gitId":"hoang227"},"content":"        return realTime.getMeeting(name, address);","lastModifiedDate":"2022-11-05"},{"lineNumber":271,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":272,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":273,"author":{"gitId":"ama-chi"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":274,"author":{"gitId":"ama-chi"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2022-10-28"},{"lineNumber":275,"author":{"gitId":"ama-chi"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2022-10-28"},{"lineNumber":276,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":277,"author":{"gitId":"hoang227"},"content":"        realTime.setMeeting(target, editedMeeting);","lastModifiedDate":"2022-11-05"},{"lineNumber":278,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":279,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":280,"author":{"gitId":"Isaaclhy00"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":283,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":284,"author":{"gitId":"hoang227"},"content":"     * {@code versionedRealTime}","lastModifiedDate":"2022-11-05"},{"lineNumber":285,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":297,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":298,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":299,"author":{"gitId":"Gavzzz"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2022-10-21"},{"lineNumber":300,"author":{"gitId":"Gavzzz"},"content":"        return filteredClients;","lastModifiedDate":"2022-10-21"},{"lineNumber":301,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":302,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":303,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":304,"author":{"gitId":"Gavzzz"},"content":"    public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2022-10-21"},{"lineNumber":305,"author":{"gitId":"Gavzzz"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-21"},{"lineNumber":306,"author":{"gitId":"Gavzzz"},"content":"        filteredClients.setPredicate(predicate);","lastModifiedDate":"2022-10-21"},{"lineNumber":307,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":308,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":309,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":310,"author":{"gitId":"Isaaclhy00"},"content":"    public ObservableList\u003cListing\u003e getFilteredListingList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":311,"author":{"gitId":"Isaaclhy00"},"content":"        return filteredListings;","lastModifiedDate":"2022-10-10"},{"lineNumber":312,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":313,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":314,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":315,"author":{"gitId":"Isaaclhy00"},"content":"    public void updateFilteredListingList(Predicate\u003cListing\u003e predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":316,"author":{"gitId":"Isaaclhy00"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":317,"author":{"gitId":"Isaaclhy00"},"content":"        filteredListings.setPredicate(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":318,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":319,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":320,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":321,"author":{"gitId":"jeromehjj"},"content":"    public ObservableList\u003cOffer\u003e getFilteredOfferList() {","lastModifiedDate":"2022-10-14"},{"lineNumber":322,"author":{"gitId":"jeromehjj"},"content":"        return filteredOffers;","lastModifiedDate":"2022-10-14"},{"lineNumber":323,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":324,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":325,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":326,"author":{"gitId":"jeromehjj"},"content":"    public void updateFilteredOfferList(Predicate\u003cOffer\u003e predicate) {","lastModifiedDate":"2022-10-14"},{"lineNumber":327,"author":{"gitId":"jeromehjj"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-14"},{"lineNumber":328,"author":{"gitId":"jeromehjj"},"content":"        filteredOffers.setPredicate(predicate);","lastModifiedDate":"2022-10-14"},{"lineNumber":329,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":330,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":331,"author":{"gitId":"ama-chi"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":332,"author":{"gitId":"ama-chi"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2022-10-28"},{"lineNumber":333,"author":{"gitId":"ama-chi"},"content":"        return filteredMeetings;","lastModifiedDate":"2022-10-28"},{"lineNumber":334,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":335,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":336,"author":{"gitId":"ama-chi"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":337,"author":{"gitId":"ama-chi"},"content":"    public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2022-10-24"},{"lineNumber":338,"author":{"gitId":"ama-chi"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":339,"author":{"gitId":"ama-chi"},"content":"        filteredMeetings.setPredicate(predicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":340,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":341,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":351,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":356,"author":{"gitId":"hoang227"},"content":"        return realTime.equals(other.realTime)","lastModifiedDate":"2022-11-05"},{"lineNumber":357,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":358,"author":{"gitId":"Gavzzz"},"content":"                \u0026\u0026 filteredClients.equals(other.filteredClients)","lastModifiedDate":"2022-10-21"},{"lineNumber":359,"author":{"gitId":"jeromehjj"},"content":"                \u0026\u0026 filteredListings.equals(other.filteredListings)","lastModifiedDate":"2022-10-14"},{"lineNumber":360,"author":{"gitId":"ama-chi"},"content":"                \u0026\u0026 filteredOffers.equals(other.filteredOffers)","lastModifiedDate":"2022-10-24"},{"lineNumber":361,"author":{"gitId":"ama-chi"},"content":"                \u0026\u0026 filteredMeetings.equals(other.filteredMeetings);","lastModifiedDate":"2022-10-24"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":363,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeromehjj":29,"hoang227":86,"ama-chi":38,"Isaaclhy00":53,"-":118,"Gavzzz":39}},{"path":"src/main/java/seedu/realtime/model/ReadOnlyRealTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.meeting.Meeting;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"public interface ReadOnlyRealTime {","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"     * Returns an unmodifiable view of the clients list.","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"    ObservableList\u003cClient\u003e getClientList();","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"     * Returns an unmodifiable view of the listings list.","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"     * This list will not contain any duplicate listings.","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"    ObservableList\u003cListing\u003e getListingList();","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"     * Returns an unmodifiable view of the offers list.","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"     * This list will not contain any duplicate offers.","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"    ObservableList\u003cOffer\u003e getOfferList();","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"ama-chi"},"content":"     * Returns an unmodifaibale view of the meetings list.","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"ama-chi"},"content":"     * This list will not contain any duplicate meetings.","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"ama-chi"},"content":"    ObservableList\u003cMeeting\u003e getMeetingList();","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeromehjj":6,"hoang227":7,"ama-chi":6,"Isaaclhy00":5,"-":14,"Gavzzz":6}},{"path":"src/main/java/seedu/realtime/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.GuiSettings;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"    Path getRealTimeFilePath();","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"hoang227":3,"-":13}},{"path":"src/main/java/seedu/realtime/model/RealTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.UniqueListingList;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.meeting.Meeting;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.meeting.UniqueMeetingList;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.UniqueOfferList;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.UniqueClientList;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.UniquePersonList;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":" * Wraps all data at the real-time level","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"public class RealTime implements ReadOnlyRealTime {","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"    private final UniqueClientList clients;","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"    private final UniqueListingList listings;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"    private final UniqueOfferList offers;","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"ama-chi"},"content":"    private final UniqueMeetingList meetings;","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":43,"author":{"gitId":"Gavzzz"},"content":"        clients \u003d new UniqueClientList();","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"        listings \u003d new UniqueListingList();","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"        offers \u003d new UniqueOfferList();","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"ama-chi"},"content":"        meetings \u003d new UniqueMeetingList();","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    public RealTime() {}","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"     * Creates an RealTime using the Persons in the {@code toBeCopied}","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    public RealTime(ReadOnlyRealTime toBeCopied) {","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"Gavzzz"},"content":"     * Replaces the contents of the client list with {@code clients}.","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"Gavzzz"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"Gavzzz"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"Gavzzz"},"content":"        this.clients.setClients(clients);","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"Isaaclhy00"},"content":"     * Replaces the contents of the listing list with {@code listings}.","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"Isaaclhy00"},"content":"     * {@code listings} must not contain duplicate listings.","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"Isaaclhy00"},"content":"    public void setListings(List\u003cListing\u003e listings) {","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"Isaaclhy00"},"content":"        this.listings.setListings(listings);","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"jeromehjj"},"content":"     * Replaces the contents of the offer list with {@code offers}.","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"Gavzzz"},"content":"     * {@code clients} must not contain duplicate offers.","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"jeromehjj"},"content":"    public void setOffers(List\u003cOffer\u003e offers) {","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"jeromehjj"},"content":"        this.offers.setOffers(offers);","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"     * Resets the existing data of this {@code RealTime} with {@code newData}.","lastModifiedDate":"2022-11-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"    public void resetData(ReadOnlyRealTime newData) {","lastModifiedDate":"2022-11-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":99,"author":{"gitId":"jeromehjj"},"content":"        setOffers(newData.getOfferList());","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"Gavzzz"},"content":"        setClients(newData.getClientList());","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":102,"author":{"gitId":"Isaaclhy00"},"content":"        setListings(newData.getListingList());","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"     * Returns true if a person with the same identity as {@code person} exists in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"     * Adds a person to realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"     * The person must not already exist in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"Isaaclhy00"},"content":"     * Gets the person with the given name {@code name}.","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"Isaaclhy00"},"content":"     * @param name name of the person","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"Isaaclhy00"},"content":"     * @return person with given name","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"Isaaclhy00"},"content":"    public Person getPerson(Name name) {","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"Isaaclhy00"},"content":"        return persons.getPerson(name);","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"     * {@code target} must exist in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"hoang227"},"content":"     * Removes {@code key} from this {@code RealTime}.","lastModifiedDate":"2022-11-05"},{"lineNumber":145,"author":{"gitId":"hoang227"},"content":"     * {@code key} must exist in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"hoang227"},"content":"     * Removes all listings owned by {@code key} from this {@code RealTime}","lastModifiedDate":"2022-11-05"},{"lineNumber":153,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":154,"author":{"gitId":"hoang227"},"content":"    public void removeAllListingOwnedBy(Client key) {","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"hoang227"},"content":"        listings.deleteListingsOfClient(key);","lastModifiedDate":"2022-10-28"},{"lineNumber":156,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":157,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":158,"author":{"gitId":"hoang227"},"content":"    public void removeAllOffersMadeBy(Client key) {","lastModifiedDate":"2022-10-28"},{"lineNumber":159,"author":{"gitId":"hoang227"},"content":"        offers.deleteOffersOfClient(key);","lastModifiedDate":"2022-10-28"},{"lineNumber":160,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":161,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":162,"author":{"gitId":"hoang227"},"content":"    public void removeAllMeetingsWith(Client key) {","lastModifiedDate":"2022-10-28"},{"lineNumber":163,"author":{"gitId":"hoang227"},"content":"        meetings.deleteMeetingsWithClient(key);","lastModifiedDate":"2022-10-28"},{"lineNumber":164,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":165,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":166,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":167,"author":{"gitId":"Gavzzz"},"content":"    //// client-level operations","lastModifiedDate":"2022-10-21"},{"lineNumber":168,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":169,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":170,"author":{"gitId":"hoang227"},"content":"     * Returns true if a client with the same identity as {@code client} exists in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":171,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":172,"author":{"gitId":"Gavzzz"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2022-10-21"},{"lineNumber":173,"author":{"gitId":"Gavzzz"},"content":"        requireNonNull(client);","lastModifiedDate":"2022-10-21"},{"lineNumber":174,"author":{"gitId":"Gavzzz"},"content":"        return clients.contains(client);","lastModifiedDate":"2022-10-21"},{"lineNumber":175,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":176,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":177,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":178,"author":{"gitId":"hoang227"},"content":"     * Adds a client to realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":179,"author":{"gitId":"hoang227"},"content":"     * The client must not already exist in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":180,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":181,"author":{"gitId":"Gavzzz"},"content":"    public void addClient(Client p) {","lastModifiedDate":"2022-10-21"},{"lineNumber":182,"author":{"gitId":"Gavzzz"},"content":"        clients.add(p);","lastModifiedDate":"2022-10-21"},{"lineNumber":183,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":184,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":185,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":186,"author":{"gitId":"Gavzzz"},"content":"     * Gets the vn with the given name {@code name}.","lastModifiedDate":"2022-10-21"},{"lineNumber":187,"author":{"gitId":"Gavzzz"},"content":"     * @param name name of the client","lastModifiedDate":"2022-10-21"},{"lineNumber":188,"author":{"gitId":"Gavzzz"},"content":"     * @return client with given name","lastModifiedDate":"2022-10-21"},{"lineNumber":189,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":190,"author":{"gitId":"Gavzzz"},"content":"    public Client getClient(Name name) {","lastModifiedDate":"2022-10-21"},{"lineNumber":191,"author":{"gitId":"Gavzzz"},"content":"        return clients.getClient(name);","lastModifiedDate":"2022-10-21"},{"lineNumber":192,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":193,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":194,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":195,"author":{"gitId":"Gavzzz"},"content":"     * Replaces the given client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2022-10-21"},{"lineNumber":196,"author":{"gitId":"hoang227"},"content":"     * {@code target} must exist in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":197,"author":{"gitId":"hoang227"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":198,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":199,"author":{"gitId":"Gavzzz"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-10-21"},{"lineNumber":200,"author":{"gitId":"Gavzzz"},"content":"        requireNonNull(editedClient);","lastModifiedDate":"2022-10-21"},{"lineNumber":201,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":202,"author":{"gitId":"Gavzzz"},"content":"        clients.setClient(target, editedClient);","lastModifiedDate":"2022-10-21"},{"lineNumber":203,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":204,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":205,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":206,"author":{"gitId":"hoang227"},"content":"     * Removes {@code key} from this {@code RealTime}.","lastModifiedDate":"2022-11-05"},{"lineNumber":207,"author":{"gitId":"hoang227"},"content":"     * {@code key} must exist in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":208,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":209,"author":{"gitId":"Gavzzz"},"content":"    public void removeClient(Client key) {","lastModifiedDate":"2022-10-21"},{"lineNumber":210,"author":{"gitId":"Gavzzz"},"content":"        clients.remove(key);","lastModifiedDate":"2022-10-21"},{"lineNumber":211,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":212,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":213,"author":{"gitId":"Isaaclhy00"},"content":"    //// listing-level operations","lastModifiedDate":"2022-10-10"},{"lineNumber":214,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":215,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":216,"author":{"gitId":"hoang227"},"content":"     * Returns true if a listing with the same identity as {@code listing} exists in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":217,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":218,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean hasListing(Listing listing) {","lastModifiedDate":"2022-10-10"},{"lineNumber":219,"author":{"gitId":"Isaaclhy00"},"content":"        requireNonNull(listing);","lastModifiedDate":"2022-10-10"},{"lineNumber":220,"author":{"gitId":"Isaaclhy00"},"content":"        return listings.contains(listing);","lastModifiedDate":"2022-10-10"},{"lineNumber":221,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":222,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":223,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":224,"author":{"gitId":"hoang227"},"content":"     * Adds a lsiting to realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":225,"author":{"gitId":"hoang227"},"content":"     * The listing must not already exist in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":226,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":227,"author":{"gitId":"Isaaclhy00"},"content":"    public void addListing(Listing l) {","lastModifiedDate":"2022-10-10"},{"lineNumber":228,"author":{"gitId":"Isaaclhy00"},"content":"        listings.add(l);","lastModifiedDate":"2022-10-10"},{"lineNumber":229,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":230,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":231,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":232,"author":{"gitId":"Isaaclhy00"},"content":"     * Gets the listing with the given id {@code id}.","lastModifiedDate":"2022-10-10"},{"lineNumber":233,"author":{"gitId":"Isaaclhy00"},"content":"     * @param id id of the listing","lastModifiedDate":"2022-10-10"},{"lineNumber":234,"author":{"gitId":"Isaaclhy00"},"content":"     * @return listing with given id","lastModifiedDate":"2022-10-10"},{"lineNumber":235,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":236,"author":{"gitId":"Isaaclhy00"},"content":"    public Listing getListing(ListingId id) {","lastModifiedDate":"2022-10-27"},{"lineNumber":237,"author":{"gitId":"Isaaclhy00"},"content":"        return listings.getListing(id);","lastModifiedDate":"2022-10-10"},{"lineNumber":238,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":239,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":240,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":241,"author":{"gitId":"Isaaclhy00"},"content":"     * Replaces the given listing {@code target} in the list with {@code editedListing}.","lastModifiedDate":"2022-10-10"},{"lineNumber":242,"author":{"gitId":"hoang227"},"content":"     * {@code target} must exist in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":243,"author":{"gitId":"Isaaclhy00"},"content":"     * The listing identity of {@code editedListing} must not be the same","lastModifiedDate":"2022-10-10"},{"lineNumber":244,"author":{"gitId":"hoang227"},"content":"     * as another existing listing in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":245,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":246,"author":{"gitId":"Isaaclhy00"},"content":"    public void setListing(Listing target, Listing editedListing) {","lastModifiedDate":"2022-10-10"},{"lineNumber":247,"author":{"gitId":"Isaaclhy00"},"content":"        requireNonNull(editedListing);","lastModifiedDate":"2022-10-10"},{"lineNumber":248,"author":{"gitId":"Isaaclhy00"},"content":"        listings.setListing(target, editedListing);","lastModifiedDate":"2022-10-10"},{"lineNumber":249,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":250,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":251,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":252,"author":{"gitId":"hoang227"},"content":"     * Removes {@code listing} from this {@code RealTime}.","lastModifiedDate":"2022-11-05"},{"lineNumber":253,"author":{"gitId":"hoang227"},"content":"     * {@code listing} must exist in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":254,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":255,"author":{"gitId":"Isaaclhy00"},"content":"    public void removeListing(Listing listing) {","lastModifiedDate":"2022-10-10"},{"lineNumber":256,"author":{"gitId":"Isaaclhy00"},"content":"        listings.remove(listing);","lastModifiedDate":"2022-10-10"},{"lineNumber":257,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":258,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":259,"author":{"gitId":"hoang227"},"content":"    public void removeAllOffersFor(Listing target) {","lastModifiedDate":"2022-10-28"},{"lineNumber":260,"author":{"gitId":"hoang227"},"content":"        offers.deleteOffersForListing(target);","lastModifiedDate":"2022-10-28"},{"lineNumber":261,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":262,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":263,"author":{"gitId":"hoang227"},"content":"    public void removeAllMeetingsAbout(Listing target) {","lastModifiedDate":"2022-10-28"},{"lineNumber":264,"author":{"gitId":"hoang227"},"content":"        meetings.deleteMeetingsAboutListing(target);","lastModifiedDate":"2022-10-28"},{"lineNumber":265,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":266,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":267,"author":{"gitId":"jeromehjj"},"content":"    //// offer-level operations","lastModifiedDate":"2022-10-14"},{"lineNumber":268,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":269,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":270,"author":{"gitId":"hoang227"},"content":"     * Returns true if an offer with the same identity as {@code offer} exists in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":271,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":272,"author":{"gitId":"jeromehjj"},"content":"    public boolean hasOffer(Offer offer) {","lastModifiedDate":"2022-10-14"},{"lineNumber":273,"author":{"gitId":"jeromehjj"},"content":"        requireNonNull(offer);","lastModifiedDate":"2022-10-14"},{"lineNumber":274,"author":{"gitId":"jeromehjj"},"content":"        return offers.contains(offer);","lastModifiedDate":"2022-10-14"},{"lineNumber":275,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":276,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":277,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":278,"author":{"gitId":"hoang227"},"content":"     * Adds an offer to realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":279,"author":{"gitId":"hoang227"},"content":"     * The offer must not already exist in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":280,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":281,"author":{"gitId":"jeromehjj"},"content":"    public void addOffer(Offer o) {","lastModifiedDate":"2022-10-14"},{"lineNumber":282,"author":{"gitId":"jeromehjj"},"content":"        offers.add(o);","lastModifiedDate":"2022-10-14"},{"lineNumber":283,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":284,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":285,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":286,"author":{"gitId":"jeromehjj"},"content":"     * Gets the offer from the given name {@code name} and listing address {@code address}.","lastModifiedDate":"2022-10-14"},{"lineNumber":287,"author":{"gitId":"jeromehjj"},"content":"     * @param name name of the person in offer","lastModifiedDate":"2022-10-14"},{"lineNumber":288,"author":{"gitId":"jeromehjj"},"content":"     * @param address listing address of offer","lastModifiedDate":"2022-10-14"},{"lineNumber":289,"author":{"gitId":"jeromehjj"},"content":"     * @return offer with given name and listing address","lastModifiedDate":"2022-10-14"},{"lineNumber":290,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":291,"author":{"gitId":"jeromehjj"},"content":"    public Offer getOffer(Name name, Address address) {","lastModifiedDate":"2022-10-14"},{"lineNumber":292,"author":{"gitId":"jeromehjj"},"content":"        return offers.getOffer(name, address);","lastModifiedDate":"2022-10-14"},{"lineNumber":293,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":294,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":295,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":296,"author":{"gitId":"jeromehjj"},"content":"     * Replaces the given offer {@code target} in the list with {@code editedOffer}.","lastModifiedDate":"2022-10-14"},{"lineNumber":297,"author":{"gitId":"hoang227"},"content":"     * {@code target} must exist in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":298,"author":{"gitId":"hoang227"},"content":"     * The offer identity of {@code editedOffer} must not be the same as another existing offer in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":299,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":300,"author":{"gitId":"jeromehjj"},"content":"    public void setOffer(Offer target, Offer editedOffer) {","lastModifiedDate":"2022-10-14"},{"lineNumber":301,"author":{"gitId":"jeromehjj"},"content":"        requireNonNull(editedOffer);","lastModifiedDate":"2022-10-14"},{"lineNumber":302,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":303,"author":{"gitId":"jeromehjj"},"content":"        offers.setOffer(target, editedOffer);","lastModifiedDate":"2022-10-14"},{"lineNumber":304,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":305,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":306,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":307,"author":{"gitId":"hoang227"},"content":"     * Removes {@code key} from this {@code RealTime}.","lastModifiedDate":"2022-11-05"},{"lineNumber":308,"author":{"gitId":"hoang227"},"content":"     * {@code key} must exist in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":309,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":310,"author":{"gitId":"jeromehjj"},"content":"    public void removeOffer(Offer key) {","lastModifiedDate":"2022-10-14"},{"lineNumber":311,"author":{"gitId":"jeromehjj"},"content":"        offers.remove(key);","lastModifiedDate":"2022-10-14"},{"lineNumber":312,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":313,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":314,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":315,"author":{"gitId":"hoang227"},"content":"     * Returns true if a meeting with the same identity as {@code meeting} exists in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":316,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":317,"author":{"gitId":"ama-chi"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-24"},{"lineNumber":318,"author":{"gitId":"ama-chi"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2022-10-24"},{"lineNumber":319,"author":{"gitId":"ama-chi"},"content":"        return meetings.contains(meeting);","lastModifiedDate":"2022-10-24"},{"lineNumber":320,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":321,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":322,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":323,"author":{"gitId":"hoang227"},"content":"     * Removes {@code key} from this {@code RealTime}.","lastModifiedDate":"2022-11-05"},{"lineNumber":324,"author":{"gitId":"hoang227"},"content":"     * {@code key} must exist in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":325,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":326,"author":{"gitId":"ama-chi"},"content":"    public void removeMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-24"},{"lineNumber":327,"author":{"gitId":"ama-chi"},"content":"        meetings.remove(meeting);","lastModifiedDate":"2022-10-24"},{"lineNumber":328,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":329,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":330,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":331,"author":{"gitId":"hoang227"},"content":"     * Adds a meeting to realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":332,"author":{"gitId":"hoang227"},"content":"     * The meeting must not already exist in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":333,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":334,"author":{"gitId":"ama-chi"},"content":"    public void addMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-24"},{"lineNumber":335,"author":{"gitId":"ama-chi"},"content":"        meetings.add(meeting);","lastModifiedDate":"2022-10-24"},{"lineNumber":336,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":337,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":338,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":339,"author":{"gitId":"ama-chi"},"content":"     * Gets the meeting from the given name {@code name} and listing address {@code address}.","lastModifiedDate":"2022-10-24"},{"lineNumber":340,"author":{"gitId":"ama-chi"},"content":"     * @param name name of the person in meeting","lastModifiedDate":"2022-10-24"},{"lineNumber":341,"author":{"gitId":"ama-chi"},"content":"     * @param address listing address of meeting","lastModifiedDate":"2022-10-24"},{"lineNumber":342,"author":{"gitId":"ama-chi"},"content":"     * @return meeting with given name and listing address","lastModifiedDate":"2022-10-24"},{"lineNumber":343,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":344,"author":{"gitId":"ama-chi"},"content":"    public Meeting getMeeting(Name name, Address address) {","lastModifiedDate":"2022-10-24"},{"lineNumber":345,"author":{"gitId":"ama-chi"},"content":"        return meetings.getMeeting(name, address);","lastModifiedDate":"2022-10-24"},{"lineNumber":346,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":347,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":348,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":349,"author":{"gitId":"ama-chi"},"content":"     * Replaces the given meeting {@code target} in the list with {@code editedMeeting}.","lastModifiedDate":"2022-10-28"},{"lineNumber":350,"author":{"gitId":"hoang227"},"content":"     * {@code target} must exist in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":351,"author":{"gitId":"hoang227"},"content":"     * The meeting identity of {@code editedMeeting} must not be the same as another existing offer in realtime.","lastModifiedDate":"2022-11-05"},{"lineNumber":352,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":353,"author":{"gitId":"ama-chi"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2022-10-28"},{"lineNumber":354,"author":{"gitId":"ama-chi"},"content":"        requireNonNull(editedMeeting);","lastModifiedDate":"2022-10-28"},{"lineNumber":355,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":356,"author":{"gitId":"ama-chi"},"content":"        meetings.setMeeting(target, editedMeeting);","lastModifiedDate":"2022-10-28"},{"lineNumber":357,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":358,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"Gavzzz"},"content":"        int clientListSize \u003d clients.asUnmodifiableObservableList().size();","lastModifiedDate":"2022-10-21"},{"lineNumber":364,"author":{"gitId":"jeromehjj"},"content":"        int personListSize \u003d persons.asUnmodifiableObservableList().size();","lastModifiedDate":"2022-10-14"},{"lineNumber":365,"author":{"gitId":"jeromehjj"},"content":"        int listingListSize \u003d listings.asUnmodifiableObservableList().size();","lastModifiedDate":"2022-10-14"},{"lineNumber":366,"author":{"gitId":"jeromehjj"},"content":"        int offerListSize \u003d offers.asUnmodifiableObservableList().size();","lastModifiedDate":"2022-10-14"},{"lineNumber":367,"author":{"gitId":"Gavzzz"},"content":"        return String.format(\"%d clients, %d listings, %d offers\", clientListSize, listingListSize, offerListSize);","lastModifiedDate":"2022-10-21"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":371,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":372,"author":{"gitId":"Gavzzz"},"content":"    public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2022-10-21"},{"lineNumber":373,"author":{"gitId":"Gavzzz"},"content":"        return clients.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-21"},{"lineNumber":374,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":375,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":381,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":382,"author":{"gitId":"Isaaclhy00"},"content":"    public ObservableList\u003cListing\u003e getListingList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":383,"author":{"gitId":"Isaaclhy00"},"content":"        return listings.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-10"},{"lineNumber":384,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":385,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":386,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":387,"author":{"gitId":"jeromehjj"},"content":"    public ObservableList\u003cOffer\u003e getOfferList() {","lastModifiedDate":"2022-10-14"},{"lineNumber":388,"author":{"gitId":"jeromehjj"},"content":"        return offers.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-14"},{"lineNumber":389,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":390,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":391,"author":{"gitId":"ama-chi"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":392,"author":{"gitId":"ama-chi"},"content":"    public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2022-10-24"},{"lineNumber":393,"author":{"gitId":"ama-chi"},"content":"        return meetings.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-24"},{"lineNumber":394,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":395,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":399,"author":{"gitId":"hoang227"},"content":"                || (other instanceof RealTime) // instanceof handles nulls","lastModifiedDate":"2022-11-05"},{"lineNumber":400,"author":{"gitId":"hoang227"},"content":"                \u0026\u0026 (clients.equals(((RealTime) other).clients))","lastModifiedDate":"2022-11-05"},{"lineNumber":401,"author":{"gitId":"hoang227"},"content":"                \u0026\u0026 (listings.equals(((RealTime) other).listings))","lastModifiedDate":"2022-11-05"},{"lineNumber":402,"author":{"gitId":"hoang227"},"content":"                \u0026\u0026 (offers.equals(((RealTime) other).offers));","lastModifiedDate":"2022-11-05"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":407,"author":{"gitId":"Gavzzz"},"content":"        return clients.hashCode();","lastModifiedDate":"2022-10-21"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":409,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeromehjj":58,"hoang227":83,"ama-chi":45,"Isaaclhy00":64,"-":98,"Gavzzz":61}},{"path":"src/main/java/seedu/realtime/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.GuiSettings;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    private Path realTimeFilePath \u003d Paths.get(\"data\" , \"realTime.json\");","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        setRealTimeFilePath(newUserPrefs.getRealTimeFilePath());","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    public Path getRealTimeFilePath() {","lastModifiedDate":"2022-11-05"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        return realTimeFilePath;","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    public void setRealTimeFilePath(Path realTimeFilePath) {","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        requireNonNull(realTimeFilePath);","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        this.realTimeFilePath \u003d realTimeFilePath;","lastModifiedDate":"2022-11-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"                \u0026\u0026 realTimeFilePath.equals(o.realTimeFilePath);","lastModifiedDate":"2022-11-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        return Objects.hash(guiSettings, realTimeFilePath);","lastModifiedDate":"2022-11-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"        sb.append(\"\\nLocal data file location : \" + realTimeFilePath);","lastModifiedDate":"2022-11-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hoang227":12,"-":75}},{"path":"src/main/java/seedu/realtime/model/listing/IdContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.util.StringUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":" * Tests that a {@code Listing}\u0027s {@code Id} matches any of the keywords given.","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"public class IdContainsKeywordsPredicate implements Predicate\u003cListing\u003e {","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    private final String keyword;","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    public IdContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    public boolean test(Listing listing) {","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        return StringUtil.containsWordIgnoreCase(listing.getId().value, keyword);","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"                || (other instanceof IdContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"                \u0026\u0026 keyword.equals(((IdContainsKeywordsPredicate) other).keyword)); // state check","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"hoang227":29}},{"path":"src/main/java/seedu/realtime/model/listing/Listing.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.meeting.Meeting;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Price;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"ama-chi"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"ama-chi"},"content":" * Listing object contains a currently listed property, its owner, asking price, and offers and clients.","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"ama-chi"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"public class Listing implements Comparable\u003cListing\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"    // Identity fields","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"    private final ListingId id;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    private final Address address;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"    private final Name owner;","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"    private final Price askingPrice;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"    // Data fields","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"    private final List\u003cName\u003e interestedClients;","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"ama-chi"},"content":"     * * Constructor for Listing","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"ama-chi"},"content":"     * @param address     Address","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"ama-chi"},"content":"     * @param owner       Person","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"ama-chi"},"content":"     * @param askingPrice int","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"    public Listing(ListingId id, Address address, Name owner, Price askingPrice) {","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        this.owner \u003d owner;","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        this.askingPrice \u003d askingPrice;","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        interestedClients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"     * Gets the id of this listing.","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"Isaaclhy00"},"content":"     * @return id of listing","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"Isaaclhy00"},"content":"    public ListingId getId() {","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"Isaaclhy00"},"content":"        return this.id;","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"Isaaclhy00"},"content":"     * Gets the name of this owner.","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":58,"author":{"gitId":"Isaaclhy00"},"content":"     * @return name of owner","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"Isaaclhy00"},"content":"    public Name getName() {","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"Isaaclhy00"},"content":"        return this.owner;","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"Isaaclhy00"},"content":"     * Gets the address of this listing.","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":68,"author":{"gitId":"Isaaclhy00"},"content":"     * @return address of listing","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"Isaaclhy00"},"content":"    public Address getAddress() {","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"Isaaclhy00"},"content":"        return this.address;","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"Isaaclhy00"},"content":"     * Gets the asking price of this listing.","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":77,"author":{"gitId":"jeromehjj"},"content":"     * @return asking price of listing","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"jeromehjj"},"content":"    public Price getAskingPrice() {","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"Isaaclhy00"},"content":"        return this.askingPrice;","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"ama-chi"},"content":"     * Getter for a list of interested clients.","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":86,"author":{"gitId":"ama-chi"},"content":"     * @return List(Person)","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"Isaaclhy00"},"content":"    public List\u003cName\u003e getInterestedClients() {","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        return interestedClients;","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"Isaaclhy00"},"content":"     * Adds prospective client to the interestedClients list.","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":95,"author":{"gitId":"Isaaclhy00"},"content":"     * @param client the interested client","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"Isaaclhy00"},"content":"    public void addInterestedClient(Name client) {","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"Isaaclhy00"},"content":"        this.interestedClients.add(client);","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"Isaaclhy00"},"content":"     * Checks if the client is already in the listing.","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":104,"author":{"gitId":"Isaaclhy00"},"content":"     * @param client name of the client","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"Isaaclhy00"},"content":"     * @return true if the client is in the listing, false otherwise","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean hasInterestedClient(Name client) {","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"Isaaclhy00"},"content":"        return this.interestedClients.contains(client);","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":111,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"Isaaclhy00"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"Isaaclhy00"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"Isaaclhy00"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"Isaaclhy00"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"Isaaclhy00"},"content":"     * Adds the tags to the listing.","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":122,"author":{"gitId":"Isaaclhy00"},"content":"     * @param tags to be added","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"Isaaclhy00"},"content":"    public void addTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"Isaaclhy00"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"Isaaclhy00"},"content":"     * Checks if the tag already exists for this listing.","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":131,"author":{"gitId":"Isaaclhy00"},"content":"     * @param toCheck the tags to be checked","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"Isaaclhy00"},"content":"     * @return true if the tag exists, false otherwise","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean hasTag(Set\u003cTag\u003e toCheck) {","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"Isaaclhy00"},"content":"        for (Tag tag : toCheck) {","lastModifiedDate":"2022-10-16"},{"lineNumber":136,"author":{"gitId":"Isaaclhy00"},"content":"            if (tags.contains(tag)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":137,"author":{"gitId":"Isaaclhy00"},"content":"                return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":138,"author":{"gitId":"Isaaclhy00"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":139,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":140,"author":{"gitId":"Isaaclhy00"},"content":"        return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"Isaaclhy00"},"content":"     * Returns true if both Listings have the same Address.","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"Isaaclhy00"},"content":"     * This defines a weaker notion of equality between two Listings.","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean isSameListing(Listing otherListing) {","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"Isaaclhy00"},"content":"        if (otherListing \u003d\u003d this) {","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"Isaaclhy00"},"content":"            return true;","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"Isaaclhy00"},"content":"        return otherListing !\u003d null","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"Isaaclhy00"},"content":"                \u0026\u0026 (otherListing.address.equals(this.address)","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"Isaaclhy00"},"content":"                || otherListing.id.equals(this.id));","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"hoang227"},"content":"    public boolean doNotHaveMeeting(Meeting toCheck) {","lastModifiedDate":"2022-10-28"},{"lineNumber":158,"author":{"gitId":"hoang227"},"content":"        return !this.getName().equals(toCheck.getClient());","lastModifiedDate":"2022-10-28"},{"lineNumber":159,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":160,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":161,"author":{"gitId":"hoang227"},"content":"    public boolean doNotHaveOffer(Offer toCheck) {","lastModifiedDate":"2022-10-28"},{"lineNumber":162,"author":{"gitId":"hoang227"},"content":"        return !this.getName().equals(toCheck.getClient());","lastModifiedDate":"2022-10-28"},{"lineNumber":163,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":164,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":165,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":166,"author":{"gitId":"hoang227"},"content":"     * Compares current listing to l","lastModifiedDate":"2022-10-17"},{"lineNumber":167,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":168,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":169,"author":{"gitId":"hoang227"},"content":"    public int compareTo(Listing l) {","lastModifiedDate":"2022-10-15"},{"lineNumber":170,"author":{"gitId":"hoang227"},"content":"        return this.id.value.compareTo(l.id.value);","lastModifiedDate":"2022-10-17"},{"lineNumber":171,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":172,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":173,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":174,"author":{"gitId":"hoang227"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2022-11-01"},{"lineNumber":175,"author":{"gitId":"hoang227"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2022-11-01"},{"lineNumber":176,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":177,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":178,"author":{"gitId":"hoang227"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-11-01"},{"lineNumber":179,"author":{"gitId":"hoang227"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-11-01"},{"lineNumber":180,"author":{"gitId":"hoang227"},"content":"            return true;","lastModifiedDate":"2022-11-01"},{"lineNumber":181,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":182,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":183,"author":{"gitId":"hoang227"},"content":"        if (!(other instanceof Listing)) {","lastModifiedDate":"2022-11-01"},{"lineNumber":184,"author":{"gitId":"hoang227"},"content":"            return false;","lastModifiedDate":"2022-11-01"},{"lineNumber":185,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":186,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":187,"author":{"gitId":"hoang227"},"content":"        Listing otherListing \u003d (Listing) other;","lastModifiedDate":"2022-11-01"},{"lineNumber":188,"author":{"gitId":"hoang227"},"content":"        return otherListing.getId().equals(getId())","lastModifiedDate":"2022-11-01"},{"lineNumber":189,"author":{"gitId":"hoang227"},"content":"                || otherListing.getAddress().equals(getAddress());","lastModifiedDate":"2022-11-01"},{"lineNumber":190,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":191,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":192,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":193,"author":{"gitId":"ama-chi"},"content":"     * String representation of Listing.","lastModifiedDate":"2022-10-06"},{"lineNumber":194,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":195,"author":{"gitId":"ama-chi"},"content":"     * @return String","lastModifiedDate":"2022-10-06"},{"lineNumber":196,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":197,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":198,"author":{"gitId":"hoang227"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":199,"author":{"gitId":"hoang227"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-05"},{"lineNumber":200,"author":{"gitId":"Isaaclhy00"},"content":"        builder.append(\"; ID: \")","lastModifiedDate":"2022-10-10"},{"lineNumber":201,"author":{"gitId":"Isaaclhy00"},"content":"                .append(this.id)","lastModifiedDate":"2022-10-10"},{"lineNumber":202,"author":{"gitId":"Isaaclhy00"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2022-10-10"},{"lineNumber":203,"author":{"gitId":"Isaaclhy00"},"content":"                .append(this.address)","lastModifiedDate":"2022-10-10"},{"lineNumber":204,"author":{"gitId":"hoang227"},"content":"                .append(\"; Owner: \")","lastModifiedDate":"2022-10-05"},{"lineNumber":205,"author":{"gitId":"Isaaclhy00"},"content":"                .append(this.owner)","lastModifiedDate":"2022-10-10"},{"lineNumber":206,"author":{"gitId":"hoang227"},"content":"                .append(\"; Asking Price: \")","lastModifiedDate":"2022-10-05"},{"lineNumber":207,"author":{"gitId":"Isaaclhy00"},"content":"                .append(this.askingPrice);","lastModifiedDate":"2022-10-10"},{"lineNumber":208,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":209,"author":{"gitId":"hoang227"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-11-01"},{"lineNumber":210,"author":{"gitId":"hoang227"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-11-01"},{"lineNumber":211,"author":{"gitId":"hoang227"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-11-01"},{"lineNumber":212,"author":{"gitId":"hoang227"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-11-01"},{"lineNumber":213,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":214,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":215,"author":{"gitId":"hoang227"},"content":"        List\u003cName\u003e interestedClients \u003d getInterestedClients();","lastModifiedDate":"2022-11-01"},{"lineNumber":216,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":217,"author":{"gitId":"Isaaclhy00"},"content":"        if (!interestedClients.isEmpty()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":218,"author":{"gitId":"hoang227"},"content":"            builder.append(\"; Interested Clients: \");","lastModifiedDate":"2022-10-05"},{"lineNumber":219,"author":{"gitId":"Isaaclhy00"},"content":"            for (Name client : interestedClients) {","lastModifiedDate":"2022-10-28"},{"lineNumber":220,"author":{"gitId":"Isaaclhy00"},"content":"                builder.append(client).append(\"\\n\");","lastModifiedDate":"2022-10-10"},{"lineNumber":221,"author":{"gitId":"Isaaclhy00"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":222,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":223,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":224,"author":{"gitId":"hoang227"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":225,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":226,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"jeromehjj":3,"hoang227":92,"ama-chi":24,"Isaaclhy00":107}},{"path":"src/main/java/seedu/realtime/model/listing/ListingId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":" * Represents a ListingId of a specific listing in the address book.","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"public class ListingId {","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"        \"ListingId should not be blank\";","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    public final String value;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"     * Constructs a {@Code ListingId}","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"     * @param id A valid listingID.","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"    public ListingId(String id) {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"        checkArgument(isValidListingId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        value \u003d id;","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"     * Returns true if a given string is a valid listingID.","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"    public static boolean isValidListingId(String test) {","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    public String toString() {","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        return value;","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"            || (other instanceof ListingId // instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"            \u0026\u0026 value.equals(((ListingId) other).value)); // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"jeromehjj":1,"hoang227":39,"Isaaclhy00":9}},{"path":"src/main/java/seedu/realtime/model/listing/UniqueListingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Messages;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.exceptions.DuplicateListingException;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.exceptions.ListingNotFoundException;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":" *","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":" *","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":" * @see Listing#isSameListing(Listing)","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"public class UniqueListingList implements Iterable\u003cListing\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"    private final ObservableList\u003cListing\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"    private final ObservableList\u003cListing\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"     * Returns true if the list contains an equivalent listing as the given argument.","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean contains(Listing toCheck) {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"        return internalList.stream().anyMatch(toCheck::isSameListing);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"     * Adds a listing to the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"     * The listing must not already exist in the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"    public void add(Listing toAdd) {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"Isaaclhy00"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"Isaaclhy00"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"Isaaclhy00"},"content":"            throw new DuplicateListingException();","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"Gavzzz"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"        Collections.sort(internalList);","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"Isaaclhy00"},"content":"     * Gets the listing with the given id {@code id}.","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"Isaaclhy00"},"content":"     * @param id id of the listing","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"Isaaclhy00"},"content":"     * @return listing with given id","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"Isaaclhy00"},"content":"    public Listing getListing(ListingId id) {","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"Isaaclhy00"},"content":"        for (Listing listing : internalList) {","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"Isaaclhy00"},"content":"            if (listing.getId() \u003d\u003d (id)) {","lastModifiedDate":"2022-11-03"},{"lineNumber":64,"author":{"gitId":"Isaaclhy00"},"content":"                return listing;","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"Isaaclhy00"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        throw new ListingNotFoundException(Messages.MESSAGE_LISTING_DOES_NOT_EXIST);","lastModifiedDate":"2022-11-01"},{"lineNumber":68,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"Isaaclhy00"},"content":"     * Replaces the listing {@code target} in the list with {@code editedListing}.","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"Isaaclhy00"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"Isaaclhy00"},"content":"     * The listing identity of {@code editedListing} must not be the same as another existing listing in the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"Isaaclhy00"},"content":"    public void setListing(Listing target, Listing editedListing) {","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"Isaaclhy00"},"content":"        requireAllNonNull(target, editedListing);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"Isaaclhy00"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"Isaaclhy00"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"            throw new ListingNotFoundException(Messages.MESSAGE_LISTING_DOES_NOT_EXIST);","lastModifiedDate":"2022-11-01"},{"lineNumber":81,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"Isaaclhy00"},"content":"        if (!target.isSameListing(editedListing) \u0026\u0026 contains(editedListing)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"            throw new DuplicateListingException();","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"Isaaclhy00"},"content":"        internalList.set(index, editedListing);","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"Isaaclhy00"},"content":"     * Removes the equivalent listing from the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"Isaaclhy00"},"content":"     * The person must exist in the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"Isaaclhy00"},"content":"    public void remove(Listing toRemove) {","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"Isaaclhy00"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"Isaaclhy00"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"            throw new ListingNotFoundException(Messages.MESSAGE_LISTING_DOES_NOT_EXIST);","lastModifiedDate":"2022-11-01"},{"lineNumber":98,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"Isaaclhy00"},"content":"    public void setListings(UniqueListingList replacement) {","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"Isaaclhy00"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"Isaaclhy00"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"Isaaclhy00"},"content":"     * Replaces the contents of this list with {@code listings}.","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"Isaaclhy00"},"content":"     * {@code listings} must not contain duplicate persons.","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"Isaaclhy00"},"content":"    public void setListings(List\u003cListing\u003e listings) {","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"Isaaclhy00"},"content":"        requireAllNonNull(listings);","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"Isaaclhy00"},"content":"        if (!listingsAreUnique(listings)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"Isaaclhy00"},"content":"            throw new DuplicateListingException();","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"Isaaclhy00"},"content":"        internalList.setAll(listings);","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"     * Remove all listing owned by the client.","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"    public void deleteListingsOfClient(Client toBeRemoved) {","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"        List\u003cListing\u003e newInternalList \u003d internalList.stream().filter(toBeRemoved::doNotOwn)","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"        setListings(newInternalList);","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"Isaaclhy00"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"Isaaclhy00"},"content":"    public ObservableList\u003cListing\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"Isaaclhy00"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"Isaaclhy00"},"content":"    public Iterator\u003cListing\u003e iterator() {","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"Isaaclhy00"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"Isaaclhy00"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"Isaaclhy00"},"content":"                || (other instanceof UniqueListingList // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"Isaaclhy00"},"content":"                \u0026\u0026 internalList.equals(((UniqueListingList) other).internalList));","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"Isaaclhy00"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"Isaaclhy00"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"Isaaclhy00"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"Isaaclhy00"},"content":"    private boolean listingsAreUnique(List\u003cListing\u003e listings) {","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"Isaaclhy00"},"content":"        for (int i \u003d 0; i \u003c listings.size() - 1; i++) {","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"Isaaclhy00"},"content":"            for (int j \u003d i + 1; j \u003c listings.size(); j++) {","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"Isaaclhy00"},"content":"                if (listings.get(i).isSameListing(listings.get(j))) {","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"Isaaclhy00"},"content":"                    return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"Isaaclhy00"},"content":"                }","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"Isaaclhy00"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"Isaaclhy00"},"content":"        return true;","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":20,"Isaaclhy00":142,"Gavzzz":3}},{"path":"src/main/java/seedu/realtime/model/listing/exceptions/DuplicateListingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.listing.exceptions;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":" * Signals that the operation will result in duplicate Listings","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":" * (Listings are considered duplicates if they have the same address).","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"public class DuplicateListingException extends RuntimeException {","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"    public DuplicateListingException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"        super(\"Listing already exist in REal-Time.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":2,"Isaaclhy00":9}},{"path":"src/main/java/seedu/realtime/model/listing/exceptions/ListingNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.listing.exceptions;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":" * Signals that the operation is unable to find the specified listing.","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"public class ListingNotFoundException extends RuntimeException {","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"    public ListingNotFoundException(String message) {","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"        super(message);","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"hoang227":6,"Isaaclhy00":4}},{"path":"src/main/java/seedu/realtime/model/meeting/Meeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.meeting;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"ama-chi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"ama-chi"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"ama-chi"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"ama-chi"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"ama-chi"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"ama-chi"},"content":" * Meeting class is a meeting a client has at a listing on a specific dateTime.","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"ama-chi"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"public class Meeting implements Comparable\u003cMeeting\u003e {","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"ama-chi"},"content":"     * Date and Time of meeting.","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"ama-chi"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"ama-chi"},"content":"     * Client involved in the meeting.","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"ama-chi"},"content":"    private final Name client;","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"ama-chi"},"content":"     * Listing involved in the meeting.","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"    private final ListingId listing;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"ama-chi"},"content":"     * Tag for type of Meeting.","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"ama-chi"},"content":"    private Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"ama-chi"},"content":"     * Constructor for meeting.","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"ama-chi"},"content":"     * @param client Person","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"ama-chi"},"content":"     * @param listing Listing","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"ama-chi"},"content":"     * @param dateTime dateTime","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"    public Meeting(Name client, ListingId listing, LocalDateTime dateTime) {","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"ama-chi"},"content":"        this.client \u003d client;","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"ama-chi"},"content":"        this.listing \u003d listing;","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"ama-chi"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"ama-chi"},"content":"     * Constructor for meeting with tags.","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"ama-chi"},"content":"     * @param client Person","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"ama-chi"},"content":"     * @param listing Listing","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"ama-chi"},"content":"     * @param dateTime dateTime","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"Isaaclhy00"},"content":"    public Meeting(Name client, ListingId listing, LocalDateTime dateTime, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"ama-chi"},"content":"        this.client \u003d client;","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"ama-chi"},"content":"        this.listing \u003d listing;","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"ama-chi"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"ama-chi"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"ama-chi"},"content":"     * Getter for client.","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"ama-chi"},"content":"     * @return Person","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"ama-chi"},"content":"    public Name getClient() {","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"ama-chi"},"content":"        return client;","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"ama-chi"},"content":"     * Getter for listing.","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"ama-chi"},"content":"     * @return Listing","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"Isaaclhy00"},"content":"    public ListingId getListing() {","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"ama-chi"},"content":"        return listing;","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"ama-chi"},"content":"     * Getter for date time.","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"ama-chi"},"content":"     * @return LocalDatetime","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"ama-chi"},"content":"    public LocalDateTime getdateTime() {","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"ama-chi"},"content":"        return dateTime;","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"ama-chi"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"ama-chi"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"ama-chi"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"ama-chi"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"ama-chi"},"content":"     * Returns true if both Meeting have the same identity and data fields.","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"ama-chi"},"content":"     * This defines a stronger notion of equality between two meetings.","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"ama-chi"},"content":"    public boolean isSameMeeting(Meeting other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"ama-chi"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"ama-chi"},"content":"            return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"ama-chi"},"content":"        if (!(other instanceof Meeting)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"ama-chi"},"content":"            return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"ama-chi"},"content":"        Meeting otherMeeting \u003d (Meeting) other;","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"ama-chi"},"content":"        return otherMeeting.getClient().equals(getClient())","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"ama-chi"},"content":"                \u0026\u0026 otherMeeting.getListing().equals(getListing())","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"ama-chi"},"content":"                \u0026\u0026 otherMeeting.getdateTime().equals(getdateTime());","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"     * Compares this meeting to another meeting","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"    public int compareTo(Meeting o) {","lastModifiedDate":"2022-10-23"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"        if (this.dateTime.isAfter(o.dateTime)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"            return 1;","lastModifiedDate":"2022-10-23"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"        } else if (this.dateTime.isBefore(o.dateTime)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"            return 1;","lastModifiedDate":"2022-10-23"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"        } else {","lastModifiedDate":"2022-10-23"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"            return 0;","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":124,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"ama-chi"},"content":"     * String representation of meeting.","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"ama-chi"},"content":"     * @return String","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"ama-chi"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"ama-chi"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"ama-chi"},"content":"        return String.format(\"%s is meeting at %s on %s\", getClient(), getListing(), dateTime);","lastModifiedDate":"2022-10-24"},{"lineNumber":131,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":133,"author":{"gitId":"ama-chi"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"hoang227":21,"ama-chi":108,"Isaaclhy00":4}},{"path":"src/main/java/seedu/realtime/model/meeting/UniqueMeetingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.meeting;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"ama-chi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"ama-chi"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"ama-chi"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"ama-chi"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"ama-chi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.meeting.exceptions.DuplicateMeetingException;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.meeting.exceptions.MeetingNotFoundException;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"ama-chi"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"ama-chi"},"content":" * A list of meetings that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"ama-chi"},"content":" * A meeting is considered unique by comparing using {@code Meeting#isSameMeeting(Meeting)}. As such, adding and","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"ama-chi"},"content":" * updating of Meeting uses Meeting#isSameMeeting(Meeting) for equality to ensure that the Meeting being added or","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"ama-chi"},"content":" * updated is unique in terms of identity in the UniqueMeetingList. However, the removal of an Meeting uses","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"ama-chi"},"content":" * Meeting#equals(Object) to ensure that the Meeting with exactly the same fields will be removed.","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"ama-chi"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"ama-chi"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"ama-chi"},"content":" *","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"ama-chi"},"content":" * @see Meeting#isSameMeeting(Meeting)","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"ama-chi"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"ama-chi"},"content":"public class UniqueMeetingList implements Iterable\u003cMeeting\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"ama-chi"},"content":"    private final ObservableList\u003cMeeting\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"ama-chi"},"content":"    private final ObservableList\u003cMeeting\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"ama-chi"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"ama-chi"},"content":"     * Returns true if the list contains an equivalent meeting as the given argument.","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"ama-chi"},"content":"    public boolean contains(Meeting toCheck) {","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"ama-chi"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"ama-chi"},"content":"        return internalList.stream().anyMatch(toCheck::isSameMeeting);","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"ama-chi"},"content":"     * Adds a meeting to the list.","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"ama-chi"},"content":"     * The meeting must not already exist in the list.","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"ama-chi"},"content":"    public void add(Meeting toAdd) {","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"ama-chi"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"ama-chi"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"ama-chi"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"ama-chi"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        Collections.sort(internalList);","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"ama-chi"},"content":"     * Gets the meeting from the given name {@code name} and listing address {@code address}.","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"ama-chi"},"content":"     * @param name name of the person in meeting","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"ama-chi"},"content":"     * @param address listing address of meeting","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"ama-chi"},"content":"     * @return meeting with given name and listing address","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"ama-chi"},"content":"    public Meeting getMeeting(Name name, Address address) {","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"ama-chi"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"ama-chi"},"content":"        for (Meeting meeting : internalList) {","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"ama-chi"},"content":"            if (meeting.getClient().equals(name) \u0026\u0026 meeting.getListing().equals(address)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"ama-chi"},"content":"                return meeting;","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"ama-chi"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"ama-chi"},"content":"        throw new MeetingNotFoundException();","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"ama-chi"},"content":"     * Replaces the meeting {@code target} in the list with {@code editedMeeting}.","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"ama-chi"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"ama-chi"},"content":"     * The meeting identity of {@code editedMeeting} must not be the same as another existing meeting in the list.","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"ama-chi"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"ama-chi"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"ama-chi"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"ama-chi"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"ama-chi"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"ama-chi"},"content":"        if (!target.isSameMeeting(editedMeeting) \u0026\u0026 contains(editedMeeting)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"ama-chi"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"ama-chi"},"content":"        internalList.set(index, editedMeeting);","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"ama-chi"},"content":"     * Removes the equivalent meeting from the list.","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"ama-chi"},"content":"     * The person must exist in the list.","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"ama-chi"},"content":"    public void remove(Meeting toRemove) {","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"ama-chi"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"ama-chi"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"ama-chi"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"ama-chi"},"content":"    public void setMeetings(UniqueMeetingList replacement) {","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"ama-chi"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"ama-chi"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"ama-chi"},"content":"     * Replaces the contents of this list with {@code meetings}.","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"ama-chi"},"content":"     * {@code meetings} must not contain duplicate persons.","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"ama-chi"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"ama-chi"},"content":"        requireAllNonNull(meetings);","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"ama-chi"},"content":"        if (!meetingsAreUnique(meetings)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"ama-chi"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"ama-chi"},"content":"        internalList.setAll(meetings);","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"     * Remove all meetings with the client.","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"    public void deleteMeetingsWithClient(Client toBeRemoved) {","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"        List\u003cMeeting\u003e newInternalList \u003d internalList.stream().filter(toBeRemoved::doNotHaveMeeting)","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"        setMeetings(newInternalList);","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"     * Remove all meetings about the listing.","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"hoang227"},"content":"    public void deleteMeetingsAboutListing(Listing toBeRemoved) {","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"        List\u003cMeeting\u003e newInternalList \u003d internalList.stream().filter(toBeRemoved::doNotHaveMeeting)","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"hoang227"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"        setMeetings(newInternalList);","lastModifiedDate":"2022-10-28"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":141,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":142,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"ama-chi"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"ama-chi"},"content":"    public ObservableList\u003cMeeting\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"ama-chi"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"ama-chi"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"ama-chi"},"content":"    public Iterator\u003cMeeting\u003e iterator() {","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"ama-chi"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"ama-chi"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"ama-chi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"ama-chi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"ama-chi"},"content":"                || (other instanceof UniqueMeetingList // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"ama-chi"},"content":"                \u0026\u0026 internalList.equals(((UniqueMeetingList) other).internalList));","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"ama-chi"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":162,"author":{"gitId":"ama-chi"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"ama-chi"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":165,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":167,"author":{"gitId":"ama-chi"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2022-10-16"},{"lineNumber":168,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"ama-chi"},"content":"    private boolean meetingsAreUnique(List\u003cMeeting\u003e listings) {","lastModifiedDate":"2022-10-16"},{"lineNumber":170,"author":{"gitId":"ama-chi"},"content":"        for (int i \u003d 0; i \u003c listings.size() - 1; i++) {","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"ama-chi"},"content":"            for (int j \u003d i + 1; j \u003c listings.size(); j++) {","lastModifiedDate":"2022-10-16"},{"lineNumber":172,"author":{"gitId":"ama-chi"},"content":"                if (listings.get(i).isSameMeeting(listings.get(j))) {","lastModifiedDate":"2022-10-16"},{"lineNumber":173,"author":{"gitId":"ama-chi"},"content":"                    return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"ama-chi"},"content":"                }","lastModifiedDate":"2022-10-16"},{"lineNumber":175,"author":{"gitId":"ama-chi"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":177,"author":{"gitId":"ama-chi"},"content":"        return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":178,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":179,"author":{"gitId":"ama-chi"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"hoang227":30,"ama-chi":149}},{"path":"src/main/java/seedu/realtime/model/meeting/exceptions/DuplicateMeetingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.meeting.exceptions;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"ama-chi"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"ama-chi"},"content":" * Signals that the operation will result in duplicate Meetings","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"ama-chi"},"content":" * (Meetings are considered duplicates if they have the same identity).","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"ama-chi"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"ama-chi"},"content":"public class DuplicateMeetingException extends RuntimeException {","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"ama-chi"},"content":"    public DuplicateMeetingException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"ama-chi"},"content":"        super(\"Operation would result in duplicate meeting\");","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"ama-chi"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"hoang227":1,"ama-chi":10}},{"path":"src/main/java/seedu/realtime/model/meeting/exceptions/MeetingNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.meeting.exceptions;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"ama-chi"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"ama-chi"},"content":" * Signals that the operation is unable to find the specified meeting.","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"ama-chi"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"ama-chi"},"content":"public class MeetingNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"ama-chi"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"hoang227":1,"ama-chi":6}},{"path":"src/main/java/seedu/realtime/model/offer/Offer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"ama-chi"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":" * Offer Class represents a client\u0027s offer for a listing, containing an offer price.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"ama-chi"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"public class Offer implements Comparable\u003cOffer\u003e {","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"     * Name of client making the offer.","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"    private final Name client;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"     * The listing the offer is for.","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"    private final ListingId listing;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"     * Price client is offering for the listing.","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"    private final Price offerPrice;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"ama-chi"},"content":"     * Constructor for offer object.","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"ama-chi"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"     * @param client Name","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"     * @param listing Address","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"     * @param offerPrice Price","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"    public Offer(Name client, ListingId listing, Price offerPrice) {","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"        this.client \u003d client;","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"ama-chi"},"content":"        this.listing \u003d listing;","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"ama-chi"},"content":"        this.offerPrice \u003d offerPrice;","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"ama-chi"},"content":"     * Getter for client.","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"ama-chi"},"content":"     * @return Person","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"    public Name getClient() {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"        return client;","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"ama-chi"},"content":"     * Getter for listing.","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"ama-chi"},"content":"     * @return Listing","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"Isaaclhy00"},"content":"    public ListingId getListing() {","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"ama-chi"},"content":"        return listing;","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"ama-chi"},"content":"     * Getter for offer price.","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"ama-chi"},"content":"     * @return int","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"    public Price getOfferPrice() {","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"ama-chi"},"content":"        return offerPrice;","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"     * Returns true if both offers have the same identity and data fields.","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"     * This defines a stronger notion of equality between two offers.","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"    public boolean isSameOffer(Offer other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"            return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"jeromehjj"},"content":"        if (!(other instanceof Offer)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"            return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"        Offer otherOffer \u003d (Offer) other;","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"        return otherOffer.getClient().equals(getClient())","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"jeromehjj"},"content":"                \u0026\u0026 otherOffer.getListing().equals(getListing())","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"jeromehjj"},"content":"                \u0026\u0026 otherOffer.getOfferPrice().equals(getOfferPrice());","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"     * Compares this offer to another offer.","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"    public int compareTo(Offer o) {","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        return this.listing.value.compareTo(o.listing.value);","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"     * Returns true if both offers have the same identity and data fields.","lastModifiedDate":"2022-11-05"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"     * This defines a stronger notion of equality between two offers.","lastModifiedDate":"2022-11-05"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-05"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-11-05"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-11-05"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"            return true;","lastModifiedDate":"2022-11-05"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-11-05"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        if (!(other instanceof Offer)) {","lastModifiedDate":"2022-11-05"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"            return false;","lastModifiedDate":"2022-11-05"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-11-05"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"        Offer otherOffer \u003d (Offer) other;","lastModifiedDate":"2022-11-05"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        return otherOffer.getClient().equals(getClient())","lastModifiedDate":"2022-11-05"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"                \u0026\u0026 otherOffer.getListing().equals(getListing())","lastModifiedDate":"2022-11-05"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"                \u0026\u0026 otherOffer.getOfferPrice().equals(getOfferPrice());","lastModifiedDate":"2022-11-05"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"     * String representation of offer.","lastModifiedDate":"2022-11-05"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"     * @return String","lastModifiedDate":"2022-11-05"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":112,"author":{"gitId":"ama-chi"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"ama-chi"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"jeromehjj"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"jeromehjj"},"content":"        builder.append(\"Listing address: \")","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"jeromehjj"},"content":"                .append(getListing())","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"jeromehjj"},"content":"                .append(\"; Client: \")","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"jeromehjj"},"content":"                .append(getClient())","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"jeromehjj"},"content":"                .append(\"; Offer Price: S$\")","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"jeromehjj"},"content":"                .append(getOfferPrice());","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"jeromehjj"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"jeromehjj":38,"hoang227":40,"ama-chi":42,"Isaaclhy00":3}},{"path":"src/main/java/seedu/realtime/model/offer/OfferContainsListingIdPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.util.StringUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":" * Tests that a {@code Offer}\u0027s {@code ListingId} matches the ListingId given.","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"public class OfferContainsListingIdPredicate implements Predicate\u003cOffer\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"    private final List\u003cString\u003e listingId;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"    public OfferContainsListingIdPredicate(List\u003cString\u003e listingId) {","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"        this.listingId \u003d listingId;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean test(Offer offer) {","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"        return listingId.stream()","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(offer.getListing().toString(), keyword));","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"                || (other instanceof OfferContainsListingIdPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"                \u0026\u0026 listingId.equals(((OfferContainsListingIdPredicate) other).listingId)); // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"jeromehjj":1,"hoang227":2,"Isaaclhy00":27}},{"path":"src/main/java/seedu/realtime/model/offer/Price.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":" * Represents a Price that a client offers or an owner asks for in the address book.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"public class Price {","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"            \"Prices should only contain numbers, and it should be at least 1 digit long\";","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{1,}\";","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"    public final String value;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"     * Constructs a {@Code Price}","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"     * @param price A valid price.","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"    public Price(String price) {","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"        requireNonNull(price);","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"        checkArgument(isValidPrice(price), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"        value \u003d price;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"     * Returns true if a given string is a valid price.","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"    public static boolean isValidPrice(String test) {","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"    public String toString() {","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"        return value;","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"                || (other instanceof Price // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"                \u0026\u0026 value.equals(((Price) other).value)); // state check","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"jeromehjj":47,"hoang227":2}},{"path":"src/main/java/seedu/realtime/model/offer/UniqueOfferList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.exceptions.DuplicateOfferException;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.exceptions.OfferNotFoundException;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":" * A list of offers that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":" * An offer is considered unique by comparing using {@code Offer#isSameOffer(Offer)}. As such, adding and","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":" * updating of Offers uses Offer#isSameOffer(Offer) for equality to ensure that the Offer being added or","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":" * updated is unique in terms of identity in the UniqueOfferList. However, the removal of an Offer uses","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":" * Offer#equals(Object) to ensure that the Offer with exactly the same fields will be removed.","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":" *","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":" * @see Offer#isSameOffer(Offer)","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"public class UniqueOfferList implements Iterable\u003cOffer\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"    private final ObservableList\u003cOffer\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"    private final ObservableList\u003cOffer\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"     * Returns true if the list contains an equivalent Offer as the given argument.","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"    public boolean contains(Offer toCheck) {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"        return internalList.stream().anyMatch(toCheck::isSameOffer);","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"     * Adds an Offer to the list.","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"     * The Offer must not already exist in the list.","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"    public void add(Offer toAdd) {","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"            throw new DuplicateOfferException();","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"        Collections.sort(internalList);","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"     * Replaces the Offer {@code target} in the list with {@code editedOffer}.","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"     * The Offer identity of {@code editedOffer} must not be the same as another existing Offer in the list.","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"    public void setOffer(Offer target, Offer editedOffer) {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"        requireAllNonNull(target, editedOffer);","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"            throw new OfferNotFoundException();","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"        if (!target.isSameOffer(editedOffer) \u0026\u0026 contains(editedOffer)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"            throw new DuplicateOfferException();","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"jeromehjj"},"content":"        internalList.set(index, editedOffer);","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"jeromehjj"},"content":"     * Gets the offer from the given name {@code name} and listing address {@code address}.","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"jeromehjj"},"content":"     * @param name name of the person in offer","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"jeromehjj"},"content":"     * @param address listing address of offer","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"jeromehjj"},"content":"     * @return offer with given name and listing address","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"jeromehjj"},"content":"    public Offer getOffer(Name name, Address address) {","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"jeromehjj"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"jeromehjj"},"content":"        for (Offer offer : internalList) {","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"jeromehjj"},"content":"            if (offer.getClient().equals(name) \u0026\u0026 offer.getListing().equals(address)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"jeromehjj"},"content":"                return offer;","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"jeromehjj"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"jeromehjj"},"content":"        throw new OfferNotFoundException();","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"jeromehjj"},"content":"     * Removes the equivalent Offer from the list.","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"jeromehjj"},"content":"     * The Offer must exist in the list.","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"jeromehjj"},"content":"    public void remove(Offer toRemove) {","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"jeromehjj"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"jeromehjj"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"jeromehjj"},"content":"            throw new OfferNotFoundException();","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"jeromehjj"},"content":"    public void setOffers(UniqueOfferList replacement) {","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"jeromehjj"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"jeromehjj"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"jeromehjj"},"content":"     * Replaces the contents of this list with {@code Offers}.","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"jeromehjj"},"content":"     * {@code Offers} must not contain duplicate Offers.","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"jeromehjj"},"content":"    public void setOffers(List\u003cOffer\u003e offers) {","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"jeromehjj"},"content":"        requireAllNonNull(offers);","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"jeromehjj"},"content":"        if (!offersAreUnique(offers)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"jeromehjj"},"content":"            throw new DuplicateOfferException();","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"jeromehjj"},"content":"        internalList.setAll(offers);","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"     * Remove all offers made by the client.","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"    public void deleteOffersOfClient(Client toBeRemoved) {","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"        List\u003cOffer\u003e newInternalList \u003d internalList.stream().filter(toBeRemoved::doNotHaveOffer)","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"        setOffers(newInternalList);","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"     * Remove all offers related to listing.","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"    public void deleteOffersForListing(Listing toBeRemoved) {","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"hoang227"},"content":"        List\u003cOffer\u003e newInternalList \u003d internalList.stream().filter(toBeRemoved::doNotHaveOffer)","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"hoang227"},"content":"        setOffers(newInternalList);","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":141,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"jeromehjj"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"jeromehjj"},"content":"    public ObservableList\u003cOffer\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"jeromehjj"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"jeromehjj"},"content":"    public Iterator\u003cOffer\u003e iterator() {","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"jeromehjj"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"jeromehjj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"jeromehjj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"jeromehjj"},"content":"                || (other instanceof UniqueOfferList // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"jeromehjj"},"content":"                \u0026\u0026 internalList.equals(((UniqueOfferList) other).internalList));","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"jeromehjj"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"jeromehjj"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":166,"author":{"gitId":"jeromehjj"},"content":"     * Returns true if {@code offers} contains only unique Offers.","lastModifiedDate":"2022-10-13"},{"lineNumber":167,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"jeromehjj"},"content":"    private boolean offersAreUnique(List\u003cOffer\u003e offers) {","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"jeromehjj"},"content":"        for (int i \u003d 0; i \u003c offers.size() - 1; i++) {","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"jeromehjj"},"content":"            for (int j \u003d i + 1; j \u003c offers.size(); j++) {","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"jeromehjj"},"content":"                if (offers.get(i).isSameOffer(offers.get(j))) {","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"jeromehjj"},"content":"                    return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":173,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-10-12"},{"lineNumber":174,"author":{"gitId":"jeromehjj"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":176,"author":{"gitId":"jeromehjj"},"content":"        return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":177,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":179,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"jeromehjj":152,"hoang227":27}},{"path":"src/main/java/seedu/realtime/model/offer/exceptions/DuplicateOfferException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.offer.exceptions;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":" * Signals that the operation will result in duplicate Offers (Offers are considered duplicates if they have the same","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":" * identity).","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"public class DuplicateOfferException extends RuntimeException {","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"    public DuplicateOfferException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"        super(\"Operation would result in duplicate offers\");","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"jeromehjj":11,"hoang227":1}},{"path":"src/main/java/seedu/realtime/model/offer/exceptions/OfferNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.offer.exceptions;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":" * Signals that the operation is unable to find the specified offer.","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"public class OfferNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"jeromehjj":6,"hoang227":1}},{"path":"src/main/java/seedu/realtime/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hoang227":2,"-":55}},{"path":"src/main/java/seedu/realtime/model/person/Client.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.meeting.Meeting;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":" * Represents a Client in the address book.","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":" * Guarantees: details are present and not null, field values are validated, immutable","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":" * except meetinglist, listinglist and offerlist.","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"public class Client extends Person implements Comparable\u003cClient\u003e {","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"    // Identity fields","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"     * @param name","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"     * @param phone","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"     * @param email","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"     * @param address","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"     * @param tags","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"    public Client(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"     * Constructor for sample client","lastModifiedDate":"2022-11-01"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    public Client() {","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        super(","lastModifiedDate":"2022-11-01"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"            new Name(\"Amy Bee\"),","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"            new Phone(\"85355255\"),","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"            new Email(\"amy@gmail.com\"),","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"            new Address(\"123, Jurong West Ave 6, #08-111\"), new HashSet\u003c\u003e());","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"Gavzzz"},"content":"     * Returns true if both client have the same name.","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"Gavzzz"},"content":"     * This defines a weaker notion of equality between two client.","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"Gavzzz"},"content":"    public boolean isSameClient(Client otherClient) {","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"Gavzzz"},"content":"        if (otherClient \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"Gavzzz"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"Gavzzz"},"content":"        return otherClient !\u003d null","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"Gavzzz"},"content":"                \u0026\u0026 this.getName().toString().toLowerCase().equals((","lastModifiedDate":"2022-11-04"},{"lineNumber":61,"author":{"gitId":"Gavzzz"},"content":"                otherClient.getName().toString().toLowerCase()));","lastModifiedDate":"2022-11-04"},{"lineNumber":62,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"     * Returns true if this Listing is not owned by toCheck.","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"    public boolean doNotOwn(Listing toCheck) {","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"Isaaclhy00"},"content":"        return !this.equals(toCheck.getName());","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    public boolean doNotHaveMeeting(Meeting toCheck) {","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        return !this.getName().equals(toCheck.getClient());","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"    public boolean doNotHaveOffer(Offer toCheck) {","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        return !this.getName().equals(toCheck.getClient());","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"    public int compareTo(Client o) {","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        return this.getName().fullName.compareTo(o.getName().fullName);","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"Gavzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"Gavzzz"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"Gavzzz"},"content":"        builder.append(getName())","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"Gavzzz"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"Gavzzz"},"content":"                .append(getPhone())","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"Gavzzz"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"Gavzzz"},"content":"                .append(getEmail())","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"Gavzzz"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"Gavzzz"},"content":"                .append(getAddress());","lastModifiedDate":"2022-10-17"},{"lineNumber":94,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"Gavzzz"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"Gavzzz"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"Gavzzz"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"Gavzzz"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"Gavzzz"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"hoang227":36,"Isaaclhy00":1,"Gavzzz":66}},{"path":"src/main/java/seedu/realtime/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hoang227":2,"-":69}},{"path":"src/main/java/seedu/realtime/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"                \u0026\u0026 fullName.toLowerCase().equals(((Name) other).fullName.toLowerCase())); // state check","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jeromehjj":1,"hoang227":2,"-":56}},{"path":"src/main/java/seedu/realtime/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.util.StringUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":" * Tests that a {@code Client}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2022-10-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2022-10-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(client.getName().fullName, keyword));","lastModifiedDate":"2022-10-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"hoang227":6,"-":25}},{"path":"src/main/java/seedu/realtime/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hoang227":3,"-":120}},{"path":"src/main/java/seedu/realtime/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hoang227":2,"-":51}},{"path":"src/main/java/seedu/realtime/model/person/UniqueClientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.exceptions.ClientNotFoundException;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.exceptions.DuplicateClientException;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":" * A list of clients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":" * A client is considered unique by comparing using {@code Client#isSameClient(Client)}. As such, adding and updating of","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":" * clients uses Client#isSameClient(Client)for equality so as to ensure that the client being added or updated is","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":" * unique in terms of identity in the UniqueClientList. However, the removal of a client uses Client#equals(Object) so","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":" * as to ensure that the client with exactly the same fields will be removed.","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":" *","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":" *","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":" * @see Client#isSameClient(Client)","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"public class UniqueClientList implements Iterable\u003cClient\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"    private final ObservableList\u003cClient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"    private final ObservableList\u003cClient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"     * Returns true if the list contains an equivalent client as the given argument.","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"    public boolean contains(Client toCheck) {","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Gavzzz"},"content":"        return internalList.stream().anyMatch(toCheck::isSameClient);","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"Gavzzz"},"content":"     * Adds a client to the list.","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"Gavzzz"},"content":"     * The client must not already exist in the list.","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"Gavzzz"},"content":"    public void add(Client toAdd) {","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"Gavzzz"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"Gavzzz"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"Gavzzz"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"Gavzzz"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"Gavzzz"},"content":"        Collections.sort(internalList);","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"Gavzzz"},"content":"     * Gets the client with the given name {@code name}.","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"Gavzzz"},"content":"     * @param name name of the client","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"Gavzzz"},"content":"     * @return client with given name","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"Gavzzz"},"content":"    public Client getClient(Name name) {","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"Gavzzz"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"Gavzzz"},"content":"        for (Client client : internalList) {","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"Gavzzz"},"content":"            if (client.getName().equals(name)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"Gavzzz"},"content":"                return client;","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"Gavzzz"},"content":"            }","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"Gavzzz"},"content":"        throw new ClientNotFoundException();","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"Gavzzz"},"content":"     * Replaces the client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"Gavzzz"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"Gavzzz"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing Client in the list.","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"Gavzzz"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"Gavzzz"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"Gavzzz"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"Gavzzz"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"Gavzzz"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"Gavzzz"},"content":"        if (!target.isSameClient(editedClient) \u0026\u0026 contains(editedClient)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"Gavzzz"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"Gavzzz"},"content":"        internalList.set(index, editedClient);","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"Gavzzz"},"content":"     * Removes the equivalent client from the list.","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"Gavzzz"},"content":"     * The client must exist in the list.","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"Gavzzz"},"content":"    public void remove(Client toRemove) {","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"Gavzzz"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"Gavzzz"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"Gavzzz"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"Gavzzz"},"content":"    public void setClients(UniqueClientList replacement) {","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"Gavzzz"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"Gavzzz"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"Gavzzz"},"content":"     * Replaces the contents of this list with {@code clients}.","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"Gavzzz"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"Gavzzz"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"Gavzzz"},"content":"        requireAllNonNull(clients);","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"Gavzzz"},"content":"        if (!clientsAreUnique(clients)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"Gavzzz"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"Gavzzz"},"content":"        internalList.setAll(clients);","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"Gavzzz"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"Gavzzz"},"content":"    public ObservableList\u003cClient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"Gavzzz"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"Gavzzz"},"content":"    public Iterator\u003cClient\u003e iterator() {","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"Gavzzz"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"Gavzzz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"Gavzzz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"Gavzzz"},"content":"                || (other instanceof UniqueClientList // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"Gavzzz"},"content":"                \u0026\u0026 internalList.equals(((UniqueClientList) other).internalList));","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"Gavzzz"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"Gavzzz"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"Gavzzz"},"content":"     * Returns true if {@code clients} contains only unique clients.","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"Gavzzz"},"content":"    private boolean clientsAreUnique(List\u003cClient\u003e clients) {","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"Gavzzz"},"content":"        for (int i \u003d 0; i \u003c clients.size() - 1; i++) {","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"Gavzzz"},"content":"            for (int j \u003d i + 1; j \u003c clients.size(); j++) {","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"Gavzzz"},"content":"                if (clients.get(i).isSameClient(clients.get(j))) {","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"Gavzzz"},"content":"                    return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"Gavzzz"},"content":"                }","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"Gavzzz"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"Gavzzz"},"content":"        return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":157,"author":{"gitId":"Gavzzz"},"content":"    private Client findClient(Name name) throws ClientNotFoundException {","lastModifiedDate":"2022-10-17"},{"lineNumber":158,"author":{"gitId":"Gavzzz"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2022-10-17"},{"lineNumber":159,"author":{"gitId":"Gavzzz"},"content":"            Client temp \u003d internalList.get(i);","lastModifiedDate":"2022-10-17"},{"lineNumber":160,"author":{"gitId":"Gavzzz"},"content":"            if (temp.getName() \u003d\u003d name) {","lastModifiedDate":"2022-10-17"},{"lineNumber":161,"author":{"gitId":"Gavzzz"},"content":"                return temp;","lastModifiedDate":"2022-10-17"},{"lineNumber":162,"author":{"gitId":"Gavzzz"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":163,"author":{"gitId":"Gavzzz"},"content":"        } throw new ClientNotFoundException();","lastModifiedDate":"2022-10-17"},{"lineNumber":164,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":166,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"hoang227":5,"Gavzzz":161}},{"path":"src/main/java/seedu/realtime/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"Isaaclhy00"},"content":"     * Gets the person with the given name {@code name}.","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"Isaaclhy00"},"content":"     * @param name name of the person","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"Isaaclhy00"},"content":"     * @return person with given name","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"Isaaclhy00"},"content":"    public Person getPerson(Name name) {","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"Isaaclhy00"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"Isaaclhy00"},"content":"        for (Person person : internalList) {","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"Isaaclhy00"},"content":"            if (person.getName().equals(name)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"Isaaclhy00"},"content":"                return person;","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"Isaaclhy00"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"Isaaclhy00"},"content":"        throw new PersonNotFoundException();","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hoang227":4,"Isaaclhy00":15,"-":133}},{"path":"src/main/java/seedu/realtime/model/person/exceptions/ClientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person.exceptions;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":" * Signals that the operation is unable to find the specified client.","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"public class ClientNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"hoang227":1,"Gavzzz":5}},{"path":"src/main/java/seedu/realtime/model/person/exceptions/DuplicateClientException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person.exceptions;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":" * Signals that the operation will result in duplicate Clients (Clients are considered duplicates if they have the same","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":" * identity).","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"public class DuplicateClientException extends RuntimeException {","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"    public DuplicateClientException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"        super(\"Operation would result in duplicate clients\");","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"hoang227":1,"Gavzzz":10}},{"path":"src/main/java/seedu/realtime/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person.exceptions;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"hoang227":1,"-":10}},{"path":"src/main/java/seedu/realtime/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person.exceptions;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"hoang227":1,"-":5}},{"path":"src/main/java/seedu/realtime/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hoang227":2,"-":52}},{"path":"src/main/java/seedu/realtime/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.util;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.RealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Price;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Email;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Phone;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":" * Contains utility methods for populating {@code realTime} with sample data.","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"Gavzzz"},"content":"    public static Client[] getSampleClients() {","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"Gavzzz"},"content":"        return new Client[] {","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"Gavzzz"},"content":"            new Client(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"Gavzzz"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"Gavzzz"},"content":"            new Client(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"Gavzzz"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"Gavzzz"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"Gavzzz"},"content":"            new Client(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"Gavzzz"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"Gavzzz"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"Gavzzz"},"content":"            new Client(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"Gavzzz"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"Gavzzz"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"Gavzzz"},"content":"            new Client(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"Gavzzz"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"Gavzzz"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"Gavzzz"},"content":"            new Client(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"Gavzzz"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"Gavzzz"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"Gavzzz"},"content":"        };","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"    public static Offer[] getSampleOffers() {","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"        return new Offer[] {","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"Isaaclhy00"},"content":"            new Offer(new Name(\"Alex Yeoh\"), new ListingId(\"30_GL_ST29_0640\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"jeromehjj"},"content":"                new Price(\"1000000\")),","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"Isaaclhy00"},"content":"            new Offer(new Name(\"Bernice Yu\"), new ListingId(\"30_SERGARDENS_LOR23_0718\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"jeromehjj"},"content":"                new Price(\"900000\")),","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"Isaaclhy00"},"content":"            new Offer(new Name(\"Charlotte Oliveiro\"), new ListingId(\"11_AMK_ST74_1104\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"jeromehjj"},"content":"                new Price(\"900000\")),","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"Isaaclhy00"},"content":"            new Offer(new Name(\"David Li\"), new ListingId(\"436_SERGARDENS_ST26_16-43\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"jeromehjj"},"content":"                new Price(\"950000\")),","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"Isaaclhy00"},"content":"            new Offer(new Name(\"Irfan Ibrahim\"), new ListingId(\"47_TAMP_ST20_1735\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"jeromehjj"},"content":"                new Price(\"960000\")),","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"Isaaclhy00"},"content":"            new Offer(new Name(\"Roy Balakrishnan\"), new ListingId(\"45_ALJU_ST85_1135\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"jeromehjj"},"content":"                new Price(\"965000\"))","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"jeromehjj"},"content":"        };","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"jeromehjj"},"content":"    public static Listing[] getSamepleListings() {","lastModifiedDate":"2022-11-03"},{"lineNumber":91,"author":{"gitId":"jeromehjj"},"content":"        return new Listing[] {","lastModifiedDate":"2022-11-03"},{"lineNumber":92,"author":{"gitId":"jeromehjj"},"content":"            new Listing(new ListingId(\"BEDOK_NORTH\"), new Address(\"Bedok North Blk 123 #02-2222\"),","lastModifiedDate":"2022-11-03"},{"lineNumber":93,"author":{"gitId":"jeromehjj"},"content":"                new Name(\"Billy Joe\"), new Price(\"760000\"))","lastModifiedDate":"2022-11-03"},{"lineNumber":94,"author":{"gitId":"jeromehjj"},"content":"        };","lastModifiedDate":"2022-11-03"},{"lineNumber":95,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":96,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":97,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":98,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"    public static ReadOnlyRealTime getSampleRealTime() {","lastModifiedDate":"2022-11-05"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"        RealTime sampleRt \u003d new RealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":101,"author":{"gitId":"Gavzzz"},"content":"        for (Client sampleClient : getSampleClients()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"            sampleRt.addClient(sampleClient);","lastModifiedDate":"2022-11-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":104,"author":{"gitId":"jeromehjj"},"content":"        for (Offer sampleOffer : getSampleOffers()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"            sampleRt.addOffer(sampleOffer);","lastModifiedDate":"2022-11-05"},{"lineNumber":106,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":108,"author":{"gitId":"jeromehjj"},"content":"        for (Listing sampleListing : getSamepleListings()) {","lastModifiedDate":"2022-11-03"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"            sampleRt.addListing(sampleListing);","lastModifiedDate":"2022-11-05"},{"lineNumber":110,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"        return sampleRt;","lastModifiedDate":"2022-11-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"jeromehjj":25,"hoang227":33,"Isaaclhy00":6,"-":34,"Gavzzz":25}},{"path":"src/main/java/seedu/realtime/storage/JsonAdaptedClient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"import java.util.List;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Email;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Phone;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":" * Jackson-friendly version of {@link Client}.","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"class JsonAdaptedClient {","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Client\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"    private final String name;","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"    private final String phone;","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"    private final String email;","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"    private final String address;","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"     * Constructs a {@code JsonAdaptedClient} with the given client details.","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"    public JsonAdaptedClient(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"Gavzzz"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"Gavzzz"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"Gavzzz"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"Gavzzz"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"Gavzzz"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"Gavzzz"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"Gavzzz"},"content":"     * Converts a given {@code Client} into this class for Jackson use.","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"Gavzzz"},"content":"    public JsonAdaptedClient(Client source) {","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"Gavzzz"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"Gavzzz"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"Gavzzz"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"Gavzzz"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"Gavzzz"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"Gavzzz"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"Gavzzz"},"content":"     * Converts this Jackson-friendly adapted client object into the model\u0027s {@code Client} object.","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"Gavzzz"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted client.","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"Gavzzz"},"content":"    public Client toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"Gavzzz"},"content":"        final List\u003cTag\u003e clientTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"Gavzzz"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"Gavzzz"},"content":"            clientTags.add(tag.toModelType());","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"Gavzzz"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"Gavzzz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"Gavzzz"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"Gavzzz"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"Gavzzz"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"Gavzzz"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"Gavzzz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"Gavzzz"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"Gavzzz"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"Gavzzz"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"Gavzzz"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"Gavzzz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"Gavzzz"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"Gavzzz"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"Gavzzz"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"Gavzzz"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"Gavzzz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"Gavzzz"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"Gavzzz"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"Gavzzz"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"Gavzzz"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(clientTags);","lastModifiedDate":"2022-10-21"},{"lineNumber":106,"author":{"gitId":"Gavzzz"},"content":"        return new Client(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"hoang227":8,"Gavzzz":102}},{"path":"src/main/java/seedu/realtime/storage/JsonAdaptedListing.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Price;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":" * Jackson-friendly version of {@link Listing}.","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"public class JsonAdaptedListing {","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Listing\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"    private final String listingId;","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"    private final String address;","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"    private final String name;","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"    private final String askingPrice;","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"     * Constructs a {@code JsonAdaptedClient} with the given client details.","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"    public JsonAdaptedListing(@JsonProperty(\"listingId\") String listingId, @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"                             @JsonProperty(\"name\") String name, @JsonProperty(\"askingPrice\") String askingPrice,","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"        this.listingId \u003d listingId;","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"        this.askingPrice \u003d askingPrice;","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"Isaaclhy00"},"content":"     * Converts a given {@code Client} into this class for Jackson use.","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"Isaaclhy00"},"content":"    public JsonAdaptedListing(Listing source) {","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"Isaaclhy00"},"content":"        listingId \u003d source.getId().value;","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"Isaaclhy00"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"Isaaclhy00"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"Isaaclhy00"},"content":"        askingPrice \u003d source.getAskingPrice().value;","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"Isaaclhy00"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"Isaaclhy00"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"Isaaclhy00"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"Isaaclhy00"},"content":"     * Converts this Jackson-friendly adapted client object into the model\u0027s {@code Listing} object.","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"Isaaclhy00"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted client.","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"Isaaclhy00"},"content":"    public Listing toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"Isaaclhy00"},"content":"        final List\u003cTag\u003e listingTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"Isaaclhy00"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"Isaaclhy00"},"content":"            listingTags.add(tag.toModelType());","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"Isaaclhy00"},"content":"        if (listingId \u003d\u003d null) {","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"Isaaclhy00"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"Isaaclhy00"},"content":"                    ListingId.class.getSimpleName()));","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"Isaaclhy00"},"content":"        if (!ListingId.isValidListingId(listingId)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"Isaaclhy00"},"content":"            throw new IllegalValueException(ListingId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"Isaaclhy00"},"content":"        final ListingId modelListingId \u003d new ListingId(listingId);","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"Isaaclhy00"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"Isaaclhy00"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"Isaaclhy00"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"Isaaclhy00"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"Isaaclhy00"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"Isaaclhy00"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"Isaaclhy00"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"Isaaclhy00"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"Isaaclhy00"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"Isaaclhy00"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"Isaaclhy00"},"content":"        if (askingPrice \u003d\u003d null) {","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"Isaaclhy00"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Price.class.getSimpleName()));","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"Isaaclhy00"},"content":"        if (!Price.isValidPrice(askingPrice)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"Isaaclhy00"},"content":"            throw new IllegalValueException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"Isaaclhy00"},"content":"        final Price modelAskingPrice \u003d new Price(askingPrice);","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"Isaaclhy00"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(listingTags);","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"Isaaclhy00"},"content":"        return new Listing(modelListingId, modelAddress, modelName, modelAskingPrice);","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"hoang227":8,"Isaaclhy00":102}},{"path":"src/main/java/seedu/realtime/storage/JsonAdaptedOffer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Price;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":" * Jackson-friendly version of {@link Offer}.","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"public class JsonAdaptedOffer {","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Offer\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"    private final String name;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"    private final String listing;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"    private final String offerPrice;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"     * Constructs a {@code JsonAdaptedOffer} with the given person details.","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"    public JsonAdaptedOffer(@JsonProperty(\"name\") String name, @JsonProperty(\"listing\") String listing,","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"                            @JsonProperty(\"offerPrice\") String offerPrice) {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        this.listing \u003d listing;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"        this.offerPrice \u003d offerPrice;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"     * Converts a given {@code Offer} into this class for Jackson use.","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"    public JsonAdaptedOffer(Offer source) {","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"        name \u003d source.getClient().fullName;","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"        listing \u003d source.getListing().value;","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"        offerPrice \u003d source.getOfferPrice().value;","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"     * Converts this Jackson-friendly adapted offer object into the model\u0027s {@code Offer} object.","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted offer.","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"    public Offer toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"        if (listing \u003d\u003d null) {","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"Isaaclhy00"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, ListingId.class.getSimpleName()));","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"Isaaclhy00"},"content":"        if (!ListingId.isValidListingId(listing)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"            throw new IllegalValueException(ListingId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"Isaaclhy00"},"content":"        final ListingId modelListingId \u003d new ListingId(listing);","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"        if (offerPrice \u003d\u003d null) {","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Price.class.getSimpleName()));","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"        if (!Price.isValidPrice(offerPrice)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"jeromehjj"},"content":"            throw new IllegalValueException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"        final Price modelOfferPrice \u003d new Price(offerPrice);","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"Isaaclhy00"},"content":"        return new Offer(modelName, modelListingId, modelOfferPrice);","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"jeromehjj":64,"hoang227":10,"Isaaclhy00":4}},{"path":"src/main/java/seedu/realtime/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Email;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Phone;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"hoang227":9,"-":100}},{"path":"src/main/java/seedu/realtime/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"hoang227":3,"-":45}},{"path":"src/main/java/seedu/realtime/storage/JsonRealTimeStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import java.io.IOException;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import java.util.Optional;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.LogsCenter;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.util.FileUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.util.JsonUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":" * A class to access realTime data stored as a json file on the hard disk.","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"public class JsonRealTimeStorage implements RealTimeStorage {","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonRealTimeStorage.class);","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    private Path filePath;","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    public JsonRealTimeStorage(Path filePath) {","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    public Path getRealTimeFilePath() {","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        return filePath;","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    public Optional\u003cReadOnlyRealTime\u003e readRealTime() throws DataConversionException {","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        return readRealTime(filePath);","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"     * Similar to {@link #readRealTime()}.","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    public Optional\u003cReadOnlyRealTime\u003e readRealTime(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        Optional\u003cJsonSerializableRealTime\u003e jsonRealTime \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"                filePath, JsonSerializableRealTime.class);","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        if (!jsonRealTime.isPresent()) {","lastModifiedDate":"2022-11-05"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"            return Optional.empty();","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        try {","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"            return Optional.of(jsonRealTime.get().toModelType());","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-11-05"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    public void saveRealTime(ReadOnlyRealTime realTime) throws IOException {","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        saveRealTime(realTime, filePath);","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"     * Similar to {@link #saveRealTime(ReadOnlyRealTime)}.","lastModifiedDate":"2022-11-05"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-11-05"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-11-05"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    public void saveRealTime(ReadOnlyRealTime realTime, Path filePath) throws IOException {","lastModifiedDate":"2022-11-05"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        requireNonNull(realTime);","lastModifiedDate":"2022-11-05"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-11-05"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-11-05"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableRealTime(realTime), filePath);","lastModifiedDate":"2022-11-05"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"hoang227":80}},{"path":"src/main/java/seedu/realtime/storage/JsonSerializableRealTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.RealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":" * An Immutable RealTime that is serializable to JSON format.","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"@JsonRootName(value \u003d \"RealTime\")","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"class JsonSerializableRealTime {","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"Clients list contains duplicate client(s).\";","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"    public static final String MESSAGE_DUPLICATE_OFFER \u003d \"Offers list contains duplicate offer(s)\";","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String MESSAGE_DUPLICATE_LISTING \u003d \"Listings list contains duplicate listing(s).\";","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"    private final List\u003cJsonAdaptedClient\u003e clients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"    private final List\u003cJsonAdaptedOffer\u003e offers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"    private final List\u003cJsonAdaptedListing\u003e listings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"     * Constructs a {@code JsonSerializableRealTime} with the given clients and offers.","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    public JsonSerializableRealTime(@JsonProperty(\"clients\") List\u003cJsonAdaptedClient\u003e clients,","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"                                       @JsonProperty(\"offers\") List\u003cJsonAdaptedOffer\u003e offers,","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"                                       @JsonProperty(\"listings\") List\u003cJsonAdaptedListing\u003e listings) {","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"Gavzzz"},"content":"        this.clients.addAll(clients);","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"        this.offers.addAll(offers);","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"        this.listings.addAll(listings);","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"     * Converts a given {@code ReadOnlyRealTime} into this class for Jackson use.","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableRealTime}.","lastModifiedDate":"2022-11-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    public JsonSerializableRealTime(ReadOnlyRealTime source) {","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"        clients.addAll(source.getClientList().stream().map(JsonAdaptedClient::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"        offers.addAll(source.getOfferList().stream().map(JsonAdaptedOffer::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"Isaaclhy00"},"content":"        listings.addAll(source.getListingList().stream().map(JsonAdaptedListing::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"     * Converts realtime into the model\u0027s {@code RealTime} object.","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    public RealTime toModelType() throws IllegalValueException {","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        RealTime realTime \u003d new RealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"Gavzzz"},"content":"        for (JsonAdaptedClient jsonAdaptedClient : clients) {","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"Gavzzz"},"content":"            Client client \u003d jsonAdaptedClient.toModelType();","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"            if (realTime.hasClient(client)) {","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"Gavzzz"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"            realTime.addClient(client);","lastModifiedDate":"2022-11-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"        for (JsonAdaptedOffer jsonAdaptedOffer : offers) {","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"            Offer offer \u003d jsonAdaptedOffer.toModelType();","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"            if (realTime.hasOffer(offer)) {","lastModifiedDate":"2022-11-05"},{"lineNumber":76,"author":{"gitId":"jeromehjj"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_OFFER);","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"jeromehjj"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"            realTime.addOffer(offer);","lastModifiedDate":"2022-11-05"},{"lineNumber":79,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"Isaaclhy00"},"content":"        for (JsonAdaptedListing jsonAdaptedListing : listings) {","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"Isaaclhy00"},"content":"            Listing listing \u003d jsonAdaptedListing.toModelType();","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"            if (realTime.hasListing(listing)) {","lastModifiedDate":"2022-11-05"},{"lineNumber":84,"author":{"gitId":"Isaaclhy00"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_LISTING);","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"Isaaclhy00"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"            realTime.addListing(listing);","lastModifiedDate":"2022-11-05"},{"lineNumber":87,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        return realTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jeromehjj":10,"hoang227":25,"Isaaclhy00":12,"-":36,"Gavzzz":8}},{"path":"src/main/java/seedu/realtime/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.util.JsonUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"hoang227":5,"-":42}},{"path":"src/main/java/seedu/realtime/storage/RealTimeStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import java.io.IOException;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import java.util.Optional;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.RealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":" * Represents a storage for {@link RealTime}.","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"public interface RealTimeStorage {","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    Path getRealTimeFilePath();","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"     * Returns realTime data as a {@link ReadOnlyRealTime}.","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    Optional\u003cReadOnlyRealTime\u003e readRealTime() throws DataConversionException, IOException;","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"     * @see #getRealTimeFilePath()","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    Optional\u003cReadOnlyRealTime\u003e readRealTime(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"     * Saves the given {@link ReadOnlyRealTime} to the storage.","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"     * @param realTime cannot be null.","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    void saveRealTime(ReadOnlyRealTime realTime) throws IOException;","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"     * @see #saveRealTime(ReadOnlyRealTime)","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    void saveRealTime(ReadOnlyRealTime realTime, Path filePath) throws IOException;","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"hoang227":46}},{"path":"src/main/java/seedu/realtime/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import java.io.IOException;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import java.util.Optional;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":" * API of the Storage component","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"public interface Storage extends RealTimeStorage, UserPrefsStorage {","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    Path getRealTimeFilePath();","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    Optional\u003cReadOnlyRealTime\u003e readRealTime() throws DataConversionException, IOException;","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    void saveRealTime(ReadOnlyRealTime realTime) throws IOException;","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"hoang227":32}},{"path":"src/main/java/seedu/realtime/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import java.io.IOException;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import java.util.Optional;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.LogsCenter;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":" * Manages storage of realTime data in local storage.","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    private RealTimeStorage realTimeStorage;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"     * Creates a {@code StorageManager} with the given {@code RealTimeStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    public StorageManager(RealTimeStorage realTimeStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        this.realTimeStorage \u003d realTimeStorage;","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d realTime methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    public Path getRealTimeFilePath() {","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        return realTimeStorage.getRealTimeFilePath();","lastModifiedDate":"2022-11-05"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-05"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    public Optional\u003cReadOnlyRealTime\u003e readRealTime() throws DataConversionException, IOException {","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        return readRealTime(realTimeStorage.getRealTimeFilePath());","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"    public Optional\u003cReadOnlyRealTime\u003e readRealTime(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        return realTimeStorage.readRealTime(filePath);","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"    public void saveRealTime(ReadOnlyRealTime realTime) throws IOException {","lastModifiedDate":"2022-11-05"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        saveRealTime(realTime, realTimeStorage.getRealTimeFilePath());","lastModifiedDate":"2022-11-05"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-05"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"    public void saveRealTime(ReadOnlyRealTime realTime, Path filePath) throws IOException {","lastModifiedDate":"2022-11-05"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-11-05"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        realTimeStorage.saveRealTime(realTime, filePath);","lastModifiedDate":"2022-11-05"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"hoang227":78}},{"path":"src/main/java/seedu/realtime/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":" * Represents a storage for {@link seedu.realtime.model.UserPrefs}.","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"     * Saves the given {@link seedu.realtime.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"hoang227":6,"-":30}},{"path":"src/main/java/seedu/realtime/ui/ClientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.ui;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":" * An UI component that displays information of a {@code Client}.","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"public class ClientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"    private static final String FXML \u003d \"ClientListCard.fxml\";","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"    public final Client client;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"    private Label name;","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"    private Label id;","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"    private Label phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Gavzzz"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"Gavzzz"},"content":"    private Label address;","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"    private Label email;","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"Gavzzz"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"Gavzzz"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"Gavzzz"},"content":"     * Creates a {@code ClientCode} with the given {@code Client} and index to display.","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"    public ClientCard(Client client, int displayedIndex) {","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"Gavzzz"},"content":"        super(FXML);","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"Gavzzz"},"content":"        this.client \u003d client;","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"Gavzzz"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"        name.setText(client.getName().fullName);","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"Gavzzz"},"content":"        phone.setText(client.getPhone().value);","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"Gavzzz"},"content":"        address.setText(client.getAddress().value);","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"Gavzzz"},"content":"        email.setText(client.getEmail().value);","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"Gavzzz"},"content":"        client.getTags().stream()","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"Gavzzz"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"Gavzzz"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"Gavzzz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"Gavzzz"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"Gavzzz"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"Gavzzz"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"Gavzzz"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"Gavzzz"},"content":"        if (!(other instanceof ClientCard)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"Gavzzz"},"content":"            return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"Gavzzz"},"content":"        // state check","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"Gavzzz"},"content":"        ClientCard card \u003d (ClientCard) other;","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"Gavzzz"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"Gavzzz"},"content":"                \u0026\u0026 client.equals(card.client);","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"hoang227":3,"Gavzzz":76}},{"path":"src/main/java/seedu/realtime/ui/ClientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.ui;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.LogsCenter;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":" * Panel containing the list of client.","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"public class ClientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"    private static final String FXML \u003d \"ClientListPanel.fxml\";","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ClientListPanel.class);","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"    @FXML","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"    private ListView\u003cClient\u003e clientListView;","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"     * Creates a {@code ClientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"    public ClientListPanel(ObservableList\u003cClient\u003e clientList) {","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"        super(FXML);","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"        clientListView.setItems(clientList);","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"        clientListView.setCellFactory(listView -\u003e new ClientListViewCell());","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Client} using a {@code ClientCard}.","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"    class ClientListViewCell extends ListCell\u003cClient\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"        protected void updateItem(Client client, boolean empty) {","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"Gavzzz"},"content":"            super.updateItem(client, empty);","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"            if (empty || client \u003d\u003d null) {","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"Gavzzz"},"content":"                setText(null);","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"Gavzzz"},"content":"            } else {","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"Gavzzz"},"content":"                setGraphic(new ClientCard(client, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"Gavzzz"},"content":"            }","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"hoang227":3,"Gavzzz":46}},{"path":"src/main/java/seedu/realtime/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.ui;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.CommandResult;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"         * @see seedu.realtime.logic.Logic#execute(String)","lastModifiedDate":"2022-11-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"hoang227":5,"-":80}},{"path":"src/main/java/seedu/realtime/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.ui;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.LogsCenter;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103t-w15-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"    public static final String HELP_URL \u003d \"Refer to the user guide for more information: \" + USERGUIDE_URL;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"    public static final String HELP_LIST \u003d \"These are all the commands available:\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"        + \"addC - adds a client\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"        + \"addL - adds a listing\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"        + \"addO - adds an offer\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"        + \"addTags - adds tags to a listing\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"        + \"clear - clears the entire list of clients, meetings, offers and listings\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"        + \"deleteC - deletes the specified client\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"        + \"deleteL - deletes the specified listing\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"        + \"deleteO - deletes the specified offer\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        + \"editC - edits the specified client\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"        + \"editL - edits the specified listing\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"        + \"editO - edits the specified offer\\n\";","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"    public static final String HELP_MESSAGE \u003d HELP_LIST + HELP_URL;","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jeromehjj":15,"hoang227":2,"-":98}},{"path":"src/main/java/seedu/realtime/ui/ListingCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.ui;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":" * An UI component that displays information of a {@code Listing}.","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"public class ListingCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"    private static final String FXML \u003d \"ListingListCard.fxml\";","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"    public final Listing listing;","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"    private Label id;","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"    private Label listingId;","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"    private Label name;","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"    private Label address;","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"    private Label askingPrice;","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"     * Creates a {@code ClientCode} with the given {@code Client} and index to display.","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"Isaaclhy00"},"content":"    public ListingCard(Listing listing, int displayedIndex) {","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"Isaaclhy00"},"content":"        super(FXML);","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"Isaaclhy00"},"content":"        this.listing \u003d listing;","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"Isaaclhy00"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"Isaaclhy00"},"content":"        listingId.setText(listing.getId().value);","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"Isaaclhy00"},"content":"        name.setText(listing.getName().fullName);","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"Isaaclhy00"},"content":"        address.setText(listing.getAddress().value);","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"Isaaclhy00"},"content":"        askingPrice.setText(listing.getAskingPrice().value);","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"Isaaclhy00"},"content":"        listing.getTags().stream()","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"Isaaclhy00"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"Isaaclhy00"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"Isaaclhy00"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"Isaaclhy00"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"Isaaclhy00"},"content":"            return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"Isaaclhy00"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"Isaaclhy00"},"content":"        if (!(other instanceof ListingCard)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"Isaaclhy00"},"content":"            return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"Isaaclhy00"},"content":"        // state check","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"Isaaclhy00"},"content":"        ListingCard card \u003d (ListingCard) other;","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"Isaaclhy00"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"Isaaclhy00"},"content":"                \u0026\u0026 listing.equals(card.listing);","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"hoang227":3,"Isaaclhy00":75}},{"path":"src/main/java/seedu/realtime/ui/ListingListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.ui;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.LogsCenter;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":" * Panel containing the list of listings.","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"public class ListingListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"    private static final String FXML \u003d \"ListingListPanel.fxml\";","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ListingListPanel.class);","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"    private ListView\u003cListing\u003e listingListView;","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"     * Creates a {@code ListingListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"    public ListingListPanel(ObservableList\u003cListing\u003e listingList) {","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"        super(FXML);","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"        listingListView.setItems(listingList);","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"        listingListView.setCellFactory(listView -\u003e new ListingListViewCell());","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Listing} using a {@code ListingCard}.","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"    class ListingListViewCell extends ListCell\u003cListing\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"        protected void updateItem(Listing listing, boolean empty) {","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"            super.updateItem(listing, empty);","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"            if (empty || listing \u003d\u003d null) {","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"                setText(null);","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"            } else {","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"                setGraphic(new ListingCard(listing, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"hoang227":3,"Isaaclhy00":46}},{"path":"src/main/java/seedu/realtime/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.ui;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.GuiSettings;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.LogsCenter;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.Logic;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.CommandResult;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"    private final Stage primaryStage;","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"    private final Logic logic;","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"    private ClientListPanel clientListPanel;","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"    private OfferListPanel offerListPanel;","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"    private ListingListPanel listingListPanel;","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"    private MeetingListPanel meetingListPanel;","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"    private final HelpWindow helpWindow;","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"Gavzzz"},"content":"    private StackPane clientListPanelPlaceholder;","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"    private StackPane offerListPanelPlaceholder;","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"Isaaclhy00"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"Isaaclhy00"},"content":"    private StackPane listingListPanelPlaceholder;","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"Gavzzz"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"Gavzzz"},"content":"    private StackPane meetingListPanelPlaceholder;","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"Gavzzz"},"content":"        clientListPanel \u003d new ClientListPanel(logic.getFilteredClientList());","lastModifiedDate":"2022-10-21"},{"lineNumber":126,"author":{"gitId":"Gavzzz"},"content":"        clientListPanelPlaceholder.getChildren().add(clientListPanel.getRoot());","lastModifiedDate":"2022-10-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"jeromehjj"},"content":"        offerListPanel \u003d new OfferListPanel(logic.getFilteredOfferList());","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"jeromehjj"},"content":"        offerListPanelPlaceholder.getChildren().add(offerListPanel.getRoot());","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"Isaaclhy00"},"content":"        listingListPanel \u003d new ListingListPanel(logic.getFilteredListingList());","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"Isaaclhy00"},"content":"        listingListPanelPlaceholder.getChildren().add(listingListPanel.getRoot());","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"Gavzzz"},"content":"        meetingListPanel \u003d new MeetingListPanel(logic.getFilteredMeetingList());","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"Gavzzz"},"content":"        meetingListPanelPlaceholder.getChildren().add(meetingListPanel.getRoot());","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getRealTimeFilePath());","lastModifiedDate":"2022-11-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":187,"author":{"gitId":"Gavzzz"},"content":"    public ClientListPanel getClientListPanel() {","lastModifiedDate":"2022-10-21"},{"lineNumber":188,"author":{"gitId":"Gavzzz"},"content":"        return clientListPanel;","lastModifiedDate":"2022-10-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":191,"author":{"gitId":"jeromehjj"},"content":"    public OfferListPanel getOfferListPanel() {","lastModifiedDate":"2022-10-13"},{"lineNumber":192,"author":{"gitId":"jeromehjj"},"content":"        return offerListPanel;","lastModifiedDate":"2022-10-13"},{"lineNumber":193,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":194,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":195,"author":{"gitId":"Isaaclhy00"},"content":"    public ListingListPanel getListingListPanel() {","lastModifiedDate":"2022-10-28"},{"lineNumber":196,"author":{"gitId":"Isaaclhy00"},"content":"        return listingListPanel;","lastModifiedDate":"2022-10-28"},{"lineNumber":197,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":198,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":199,"author":{"gitId":"Gavzzz"},"content":"    public MeetingListPanel getMeetingListPanel() {","lastModifiedDate":"2022-10-28"},{"lineNumber":200,"author":{"gitId":"Gavzzz"},"content":"        return meetingListPanel;","lastModifiedDate":"2022-10-28"},{"lineNumber":201,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":202,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":203,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":204,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"hoang227"},"content":"     * @see seedu.realtime.logic.Logic#execute(String)","lastModifiedDate":"2022-11-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jeromehjj":11,"hoang227":9,"Isaaclhy00":14,"-":180,"Gavzzz":17}},{"path":"src/main/java/seedu/realtime/ui/MeetingCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.ui;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.meeting.Meeting;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":" * A UI component that displays information of a {@code meeting}.","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"public class MeetingCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"    private static final String FXML \u003d \"meetingListCard.fxml\";","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"    public final Meeting meeting;","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"    private Label name;","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"    private Label dateTime;","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"    private Label client;","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"    private Label listingId;","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"     * Creates a {@code meetingCode} with the given {@code meeting} and index to display.","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"Gavzzz"},"content":"    public MeetingCard(Meeting meeting, int displayedIndex) {","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"Gavzzz"},"content":"        super(FXML);","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"Gavzzz"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"Gavzzz"},"content":"        name.setText(meeting.getClient().fullName);","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"Gavzzz"},"content":"        listingId.setText(meeting.getListing().value);","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"Gavzzz"},"content":"        dateTime.setText(meeting.getdateTime().toString());","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"Gavzzz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"Gavzzz"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"Gavzzz"},"content":"            return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"Gavzzz"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"Gavzzz"},"content":"        if (!(other instanceof MeetingCard)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"Gavzzz"},"content":"            return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"Gavzzz"},"content":"        // state check","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"Gavzzz"},"content":"        MeetingCard card \u003d (MeetingCard) other;","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"Gavzzz"},"content":"        return client.getText().equals(card.client.getText())","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"Gavzzz"},"content":"                \u0026\u0026 meeting.equals(card.meeting);","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"hoang227":3,"Gavzzz":66}},{"path":"src/main/java/seedu/realtime/ui/MeetingListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.ui;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.LogsCenter;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.meeting.Meeting;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":" * Panel containing the list of meetings.","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"public class MeetingListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"    private static final String FXML \u003d \"MeetingListPanel.fxml\";","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MeetingListPanel.class);","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"    private ListView\u003cMeeting\u003e meetingListView;","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"     * Creates a {@code MeetingListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"    public MeetingListPanel(ObservableList\u003cMeeting\u003e meetingList) {","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"        super(FXML);","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"        meetingListView.setItems(meetingList);","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"        meetingListView.setCellFactory(listView -\u003e new MeetingListViewCell());","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Meeting} using a {@code MeetingCard}.","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"    class MeetingListViewCell extends ListCell\u003cMeeting\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"        protected void updateItem(Meeting meeting, boolean empty) {","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"Gavzzz"},"content":"            super.updateItem(meeting, empty);","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"            if (empty || meeting \u003d\u003d null) {","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"Gavzzz"},"content":"                setText(null);","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"Gavzzz"},"content":"            } else {","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"Gavzzz"},"content":"                setGraphic(new MeetingCard(meeting, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"Gavzzz"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"hoang227":3,"Gavzzz":47}},{"path":"src/main/java/seedu/realtime/ui/OfferCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.ui;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":" * A UI component that displays information of a {@code Offer}.","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"public class OfferCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"    private static final String FXML \u003d \"OfferListCard.fxml\";","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"    public final Offer offer;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"    private Label name;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"    private Label id;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"    private Label listing;","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"    private Label offerPrice;","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"     * Creates a {@code OfferCode} with the given {@code Offer} and index to display.","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"    public OfferCard(Offer offer, int displayedIndex) {","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"        super(FXML);","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"        this.offer \u003d offer;","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"        name.setText(offer.getClient().fullName);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"        listing.setText(offer.getListing().value);","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"        offerPrice.setText(\"S$\" + offer.getOfferPrice().value);","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"        if (!(other instanceof OfferCard)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"            return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"        // state check","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"        OfferCard card \u003d (OfferCard) other;","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"                \u0026\u0026 offer.equals(card.offer);","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"jeromehjj":64,"hoang227":3}},{"path":"src/main/java/seedu/realtime/ui/OfferListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.ui;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.LogsCenter;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":" * Panel containing the list of offers.","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"public class OfferListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"    private static final String FXML \u003d \"OfferListPanel.fxml\";","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(OfferListPanel.class);","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"    private ListView\u003cOffer\u003e offerListView;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"     * Creates a {@code OfferListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"    public OfferListPanel(ObservableList\u003cOffer\u003e offerList) {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"        super(FXML);","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"        offerListView.setItems(offerList);","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        offerListView.setCellFactory(listView -\u003e new OfferListViewCell());","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Offer} using a {@code OfferCard}.","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"    class OfferListViewCell extends ListCell\u003cOffer\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"        protected void updateItem(Offer offer, boolean empty) {","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"            super.updateItem(offer, empty);","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"            if (empty || offer \u003d\u003d null) {","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"                setText(null);","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"            } else {","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"                setGraphic(new OfferCard(offer, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"jeromehjj":46,"hoang227":3}},{"path":"src/main/java/seedu/realtime/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.ui;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"hoang227":2,"-":75}},{"path":"src/main/java/seedu/realtime/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.ui;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.LogsCenter;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"hoang227":3,"-":46}},{"path":"src/main/java/seedu/realtime/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.ui;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"hoang227":1,"-":27}},{"path":"src/main/java/seedu/realtime/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.ui;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hoang227":1,"-":27}},{"path":"src/main/java/seedu/realtime/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.ui;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"hoang227":1,"-":12}},{"path":"src/main/java/seedu/realtime/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.ui;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.MainApp;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.LogsCenter;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.util.StringUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.Logic;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"hoang227":5,"-":83}},{"path":"src/main/java/seedu/realtime/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.ui;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.MainApp;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"hoang227":2,"-":86}},{"path":"src/main/resources/view/ClientListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"            \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"Gavzzz":37}},{"path":"src/main/resources/view/ClientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"    \u003cListView fx:id\u003d\"clientListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"Gavzzz":9}},{"path":"src/main/resources/view/ListingListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"                \u003cLabel fx:id\u003d\"listingId\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"            \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$name\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"            \u003cLabel fx:id\u003d\"askingPrice\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$askingPrice\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"Isaaclhy00":37}},{"path":"src/main/resources/view/ListingListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"    \u003cListView fx:id\u003d\"listingListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"Isaaclhy00":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"         title\u003d\"Real-Time\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"        \u003cVBox fx:id\u003d\"clientList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"          \u003cStackPane fx:id\u003d\"clientListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"        \u003cVBox fx:id\u003d\"offerList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"          \u003cStackPane fx:id\u003d\"offerListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"Isaaclhy00"},"content":"        \u003cVBox fx:id\u003d\"listingList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"Isaaclhy00"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"Isaaclhy00"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"Isaaclhy00"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"Isaaclhy00"},"content":"          \u003cStackPane fx:id\u003d\"listingListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"Isaaclhy00"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"Gavzzz"},"content":"        \u003cVBox fx:id\u003d\"meetingList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"Gavzzz"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"Gavzzz"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"Gavzzz"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"Gavzzz"},"content":"          \u003cStackPane fx:id\u003d\"meetingListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"Gavzzz"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"jeromehjj":7,"hoang227":1,"Isaaclhy00":7,"-":57,"Gavzzz":12}},{"path":"src/main/resources/view/MeetingListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"            \u003cLabel fx:id\u003d\"datetime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$datetime\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"            \u003cLabel fx:id\u003d\"listingId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$listingId\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"Gavzzz":35}},{"path":"src/main/resources/view/MeetingListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"    \u003cListView fx:id\u003d\"meetingListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"Gavzzz":8}},{"path":"src/main/resources/view/OfferListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"            \u003cLabel fx:id\u003d\"listing\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$listing\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"            \u003cLabel fx:id\u003d\"offerPrice\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$offerPrice\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"jeromehjj":34}},{"path":"src/main/resources/view/OfferListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"    \u003cListView fx:id\u003d\"offerListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"jeromehjj":8}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hoang227":1,"-":36}},{"path":"src/test/java/seedu/realtime/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"hoang227":1,"-":57}},{"path":"src/test/java/seedu/realtime/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.core;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"hoang227":1,"-":26}},{"path":"src/test/java/seedu/realtime/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.core;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hoang227":2,"-":133}},{"path":"src/test/java/seedu/realtime/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.core.index;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"hoang227":2,"-":58}},{"path":"src/test/java/seedu/realtime/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.util;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"hoang227":2,"-":34}},{"path":"src/test/java/seedu/realtime/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.util;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"hoang227":3,"-":105}},{"path":"src/test/java/seedu/realtime/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.util;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Config;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"hoang227":4,"-":112}},{"path":"src/test/java/seedu/realtime/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.util;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hoang227":2,"-":21}},{"path":"src/test/java/seedu/realtime/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.util;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.SerializableTestClass;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.TestUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hoang227":3,"-":42}},{"path":"src/test/java/seedu/realtime/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.util;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"hoang227":2,"-":141}},{"path":"src/test/java/seedu/realtime/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.AddClientCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.CommandResult;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.ViewClientListCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.storage.JsonRealTimeStorage;","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.storage.StorageManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.ClientBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        JsonRealTimeStorage realTimeStorage \u003d","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"                new JsonRealTimeStorage(temporaryFolder.resolve(\"realTime.json\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        StorageManager storage \u003d new StorageManager(realTimeStorage, userPrefsStorage);","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        String deleteCommand \u003d \"delC 9\";","lastModifiedDate":"2022-11-01"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        String listCommand \u003d ViewClientListCommand.COMMAND_WORD;","lastModifiedDate":"2022-10-30"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(listCommand, ViewClientListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-10-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        // Setup LogicManager with JsonRealTimeIoExceptionThrowingStub","lastModifiedDate":"2022-11-05"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        JsonRealTimeStorage realTimeStorage \u003d","lastModifiedDate":"2022-11-05"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"                new JsonRealTimeIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionRealTime.json\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        StorageManager storage \u003d new StorageManager(realTimeStorage, userPrefsStorage);","lastModifiedDate":"2022-11-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        String addCommand \u003d AddClientCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        Client expectedClient \u003d new ClientBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"        expectedModel.addClient(expectedClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"    public void getFilteredClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-30"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredClientList().remove(0));","lastModifiedDate":"2022-10-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(model.getRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"hoang227"},"content":"    private static class JsonRealTimeIoExceptionThrowingStub extends JsonRealTimeStorage {","lastModifiedDate":"2022-11-05"},{"lineNumber":153,"author":{"gitId":"hoang227"},"content":"        private JsonRealTimeIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-11-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"hoang227"},"content":"        public void saveRealTime(ReadOnlyRealTime realTime, Path filePath) throws IOException {","lastModifiedDate":"2022-11-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"hoang227":43,"-":119}},{"path":"src/test/java/seedu/realtime/logic/commands/AddClientCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.getTypicalRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.ClientBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"public class AddClientCommandIntegrationTest {","lastModifiedDate":"2022-10-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        model \u003d new ModelManager(getTypicalRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    public void execute_newClient_success() {","lastModifiedDate":"2022-10-30"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-10-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(model.getRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        expectedModel.addClient(validClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(new AddClientCommand(validClient), model,","lastModifiedDate":"2022-10-30"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"                String.format(AddClientCommand.MESSAGE_SUCCESS, validClient), expectedModel);","lastModifiedDate":"2022-10-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    public void execute_duplicateClient_throwsCommandException() {","lastModifiedDate":"2022-10-30"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        Client clientInList \u003d model.getRealTime().getClientList().get(0);","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(new AddClientCommand(clientInList), model, AddClientCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-10-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"hoang227":20,"Isaaclhy00":1,"-":24}},{"path":"src/test/java/seedu/realtime/logic/commands/AddClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.RealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.ClientBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.ModelStub;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"public class AddClientCommandTest {","lastModifiedDate":"2022-10-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public void constructor_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-10-30"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddClientCommand(null));","lastModifiedDate":"2022-10-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    public void execute_clientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-30"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        ModelStubAcceptingClientAdded modelStub \u003d new ModelStubAcceptingClientAdded();","lastModifiedDate":"2022-10-30"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-10-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        CommandResult commandResult \u003d new AddClientCommand(validClient).execute(modelStub);","lastModifiedDate":"2022-10-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        assertEquals(String.format(AddClientCommand.MESSAGE_SUCCESS, validClient), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-30"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        assertEquals(Arrays.asList(validClient), modelStub.clientsAdded);","lastModifiedDate":"2022-10-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    public void execute_duplicateClient_throwsCommandException() {","lastModifiedDate":"2022-10-30"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-10-30"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        AddClientCommand addClientCommand \u003d new AddClientCommand(validClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        ModelStub modelStub \u003d new ModelStubWithClient(validClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"                AddClientCommand.MESSAGE_DUPLICATE_CLIENT, (","lastModifiedDate":"2022-10-30"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"                ) -\u003e addClientCommand.execute(modelStub));","lastModifiedDate":"2022-10-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        Client alice \u003d new ClientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-10-30"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        Client bob \u003d new ClientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-10-30"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        AddClientCommand addAliceCommand \u003d new AddClientCommand(alice);","lastModifiedDate":"2022-10-30"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        AddClientCommand addBobCommand \u003d new AddClientCommand(bob);","lastModifiedDate":"2022-10-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        AddClientCommand addAliceCommandCopy \u003d new AddClientCommand(alice);","lastModifiedDate":"2022-10-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-10-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"     * A Model stub that contains a single client.","lastModifiedDate":"2022-10-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"    private class ModelStubWithClient extends ModelStub {","lastModifiedDate":"2022-10-30"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        private final Client client;","lastModifiedDate":"2022-10-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"        ModelStubWithClient(Client client) {","lastModifiedDate":"2022-10-30"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"            requireNonNull(client);","lastModifiedDate":"2022-10-30"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"            this.client \u003d client;","lastModifiedDate":"2022-10-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2022-10-30"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"            requireNonNull(client);","lastModifiedDate":"2022-10-30"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"            return this.client.isSameClient(client);","lastModifiedDate":"2022-10-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"     * A Model stub that always accept the client being added.","lastModifiedDate":"2022-10-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"    private class ModelStubAcceptingClientAdded extends ModelStub {","lastModifiedDate":"2022-10-30"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"        final ArrayList\u003cClient\u003e clientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2022-10-30"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"            requireNonNull(client);","lastModifiedDate":"2022-10-30"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"            return clientsAdded.stream().anyMatch(client::isSameClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2022-10-30"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"            requireNonNull(client);","lastModifiedDate":"2022-10-30"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"            clientsAdded.add(client);","lastModifiedDate":"2022-10-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"        public ReadOnlyRealTime getRealTime() {","lastModifiedDate":"2022-11-05"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"            return new RealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"hoang227":49,"Isaaclhy00":1,"-":66}},{"path":"src/test/java/seedu/realtime/logic/commands/AddListingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.RealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.ListingBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.ModelStub;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"public class AddListingCommandTest {","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public void constructor_nullListing_throwsNullPointerException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"                new AddListingCommand(null, null, null, null));","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    public void execute_listingAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        ModelStubAcceptingListingAdded modelStub \u003d new ModelStubAcceptingListingAdded();","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        Listing validListing \u003d new ListingBuilder().build();","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        CommandResult commandResult \u003d new AddListingCommand(validListing.getId(),","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"            validListing.getAddress(), validListing.getName(), validListing.getAskingPrice()).execute(modelStub);","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        assertEquals(String.format(AddListingCommand.MESSAGE_SUCCESS, validListing), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    public void execute_duplicateListing_throwsCommandException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        Listing validListing \u003d new ListingBuilder().build();","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        AddListingCommand addListingCommand \u003d new AddListingCommand(validListing.getId(),","lastModifiedDate":"2022-11-01"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"            validListing.getAddress(), validListing.getName(), validListing.getAskingPrice());","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        ModelStub modelStub \u003d new ModelStubWithListing(validListing);","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"            AddListingCommand.MESSAGE_DUPLICATE_LISTING, (","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"            ) -\u003e addListingCommand.execute(modelStub));","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    public void equals() {","lastModifiedDate":"2022-11-01"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        Listing alice \u003d new ListingBuilder().withId(\"alice\").build();","lastModifiedDate":"2022-11-01"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        Listing bob \u003d new ListingBuilder().withId(\"bob\").build();","lastModifiedDate":"2022-11-01"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        AddListingCommand addAliceCommand \u003d new AddListingCommand(","lastModifiedDate":"2022-11-01"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"            alice.getId(), alice.getAddress(), alice.getName(), alice.getAskingPrice());","lastModifiedDate":"2022-11-01"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        AddListingCommand addBobCommand \u003d new AddListingCommand(","lastModifiedDate":"2022-11-01"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"            bob.getId(), bob.getAddress(), bob.getName(), bob.getAskingPrice());","lastModifiedDate":"2022-11-01"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-01"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2022-11-01"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-01"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        AddListingCommand addAliceCommandCopy \u003d new AddListingCommand(","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"            alice.getId(), alice.getAddress(), alice.getName(), alice.getAskingPrice());","lastModifiedDate":"2022-11-01"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2022-11-01"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-11-01"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2022-11-01"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-01"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2022-11-01"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        // different listing -\u003e returns false","lastModifiedDate":"2022-11-01"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2022-11-01"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"     * A Model stub that contains a single listing.","lastModifiedDate":"2022-11-01"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"    private class ModelStubWithListing extends ModelStub {","lastModifiedDate":"2022-11-01"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        private final Listing listing;","lastModifiedDate":"2022-11-01"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        ModelStubWithListing(Listing listing) {","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"            requireNonNull(listing);","lastModifiedDate":"2022-11-01"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"            this.listing \u003d listing;","lastModifiedDate":"2022-11-01"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        public boolean hasListing(Listing listing) {","lastModifiedDate":"2022-11-01"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"            requireNonNull(listing);","lastModifiedDate":"2022-11-01"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"            return this.listing.isSameListing(listing);","lastModifiedDate":"2022-11-01"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"     * A Model stub that always accept the listing being added.","lastModifiedDate":"2022-11-01"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"    private class ModelStubAcceptingListingAdded extends ModelStub {","lastModifiedDate":"2022-11-01"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"        final ArrayList\u003cListing\u003e listingsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-01"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"        public boolean hasListing(Listing listing) {","lastModifiedDate":"2022-11-01"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"            requireNonNull(listing);","lastModifiedDate":"2022-11-01"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"            return listingsAdded.stream().anyMatch(listing::isSameListing);","lastModifiedDate":"2022-11-01"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"        public void addListing(Listing listing) {","lastModifiedDate":"2022-11-01"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"            requireNonNull(listing);","lastModifiedDate":"2022-11-01"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"            listingsAdded.add(listing);","lastModifiedDate":"2022-11-01"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"        public ReadOnlyRealTime getRealTime() {","lastModifiedDate":"2022-11-05"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"            return new RealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"hoang227":119}},{"path":"src/test/java/seedu/realtime/logic/commands/AddOfferCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.ReadOnlyRealTime;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.RealTime;","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.testutil.ModelStub;","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.testutil.OfferBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"public class AddOfferCommandTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"    public void constructor_nullOffer_throwsNullPointerException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddOfferCommand(null));","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"    public void execute_offerAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"        ModelStubAcceptingOfferAdded modelStub \u003d new ModelStubAcceptingOfferAdded();","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"        Offer validOffer \u003d new OfferBuilder().build();","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"        CommandResult commandResult \u003d new AddOfferCommand(validOffer).execute(modelStub);","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"        assertEquals(String.format(AddOfferCommand.MESSAGE_SUCCESS, validOffer), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"        assertEquals(Arrays.asList(validOffer), modelStub.offersAdded);","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"    public void execute_duplicateOffer_throwsCommandException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"        Offer validOffer \u003d new OfferBuilder().build();","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"        AddOfferCommand addOfferCommand \u003d new AddOfferCommand(validOffer);","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"        ModelStub modelStub \u003d new ModelStubWithOffer(validOffer);","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"            AddOfferCommand.MESSAGE_DUPLICATE_OFFER, () -\u003e addOfferCommand.execute(modelStub));","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"    public void equals() {","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"        Offer alice \u003d new OfferBuilder().withBuyer(\"Alice\").build();","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"        Offer bob \u003d new OfferBuilder().withBuyer(\"Bob\").build();","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"        AddOfferCommand addAliceCommand \u003d new AddOfferCommand(alice);","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"        AddOfferCommand addBobCommand \u003d new AddOfferCommand(bob);","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"        AddOfferCommand addAliceCommandCopy \u003d new AddOfferCommand(alice);","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"        // different types -\u003e return false","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"     * A Model stub that contains a single offer.","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"jeromehjj"},"content":"    private class ModelStubWithOffer extends ModelStub {","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"jeromehjj"},"content":"        private final Offer offer;","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"jeromehjj"},"content":"        ModelStubWithOffer(Offer offer) {","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"jeromehjj"},"content":"            requireNonNull(offer);","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"jeromehjj"},"content":"            this.offer \u003d offer;","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"jeromehjj"},"content":"        @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"jeromehjj"},"content":"        public boolean hasOffer(Offer offer) {","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"jeromehjj"},"content":"            requireNonNull(offer);","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"jeromehjj"},"content":"            return this.offer.isSameOffer(offer);","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"jeromehjj"},"content":"     * A Model stub that always accept the offer being added.","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"jeromehjj"},"content":"    private class ModelStubAcceptingOfferAdded extends ModelStub {","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"jeromehjj"},"content":"        final ArrayList\u003cOffer\u003e offersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":97,"author":{"gitId":"jeromehjj"},"content":"        @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"jeromehjj"},"content":"        public boolean hasOffer(Offer offer) {","lastModifiedDate":"2022-11-06"},{"lineNumber":99,"author":{"gitId":"jeromehjj"},"content":"            requireNonNull(offer);","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"jeromehjj"},"content":"            return offersAdded.stream().anyMatch(offer::isSameOffer);","lastModifiedDate":"2022-11-06"},{"lineNumber":101,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":103,"author":{"gitId":"jeromehjj"},"content":"        @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":104,"author":{"gitId":"jeromehjj"},"content":"        public void addOffer(Offer offer) {","lastModifiedDate":"2022-11-06"},{"lineNumber":105,"author":{"gitId":"jeromehjj"},"content":"            requireNonNull(offer);","lastModifiedDate":"2022-11-06"},{"lineNumber":106,"author":{"gitId":"jeromehjj"},"content":"            offersAdded.add(offer);","lastModifiedDate":"2022-11-06"},{"lineNumber":107,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":108,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":109,"author":{"gitId":"jeromehjj"},"content":"        @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":110,"author":{"gitId":"jeromehjj"},"content":"        public ReadOnlyRealTime getRealTime() {","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"jeromehjj"},"content":"            return new RealTime();","lastModifiedDate":"2022-11-06"},{"lineNumber":112,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":113,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":114,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"jeromehjj":114}},{"path":"src/test/java/seedu/realtime/logic/commands/AddTagsToListingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import java.util.Set;","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.RealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.ListingBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.ModelStub;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"public class AddTagsToListingCommandTest {","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    public void constructor_nullListing_throwsNullPointerException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"                new AddTagsToListingCommand(null, null));","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    public void execute_tagsAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        AddTagsToListingCommandTest.ModelStubAcceptingListingAdded modelStub \u003d","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"            new AddTagsToListingCommandTest.ModelStubAcceptingListingAdded();","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        Listing validListing \u003d new ListingBuilder().build();","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        tags.add(new Tag(\"test\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        CommandResult commandResult \u003d new AddTagsToListingCommand(tags, validListing.getId()).execute(modelStub);","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertEquals(String.format(AddTagsToListingCommand.MESSAGE_SUCCESS, tags), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"     * A Model stub that contains a single listing.","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    private class ModelStubWithTags extends ModelStub {","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        private final Listing listing;","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        ModelStubWithTags(Listing listing) {","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"            requireNonNull(listing);","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"            this.listing \u003d listing;","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        public boolean hasListing(Listing listing) {","lastModifiedDate":"2022-11-01"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"            requireNonNull(listing);","lastModifiedDate":"2022-11-01"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"            return this.listing.isSameListing(listing);","lastModifiedDate":"2022-11-01"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"     * A Model stub that always accept the listing being added.","lastModifiedDate":"2022-11-01"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    private class ModelStubAcceptingListingAdded extends ModelStub {","lastModifiedDate":"2022-11-01"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        final ArrayList\u003cListing\u003e listingsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-01"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        public boolean hasListing(Listing listing) {","lastModifiedDate":"2022-11-01"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"            requireNonNull(listing);","lastModifiedDate":"2022-11-01"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"            return listingsAdded.stream().anyMatch(listing::isSameListing);","lastModifiedDate":"2022-11-01"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        public void addListing(Listing listing) {","lastModifiedDate":"2022-11-01"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"            requireNonNull(listing);","lastModifiedDate":"2022-11-01"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"            listingsAdded.add(listing);","lastModifiedDate":"2022-11-01"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        public ReadOnlyRealTime getRealTime() {","lastModifiedDate":"2022-11-05"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"            return new RealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"hoang227":81}},{"path":"src/test/java/seedu/realtime/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.getTypicalRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.RealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"public class ClearCommandTest {","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    public void execute_emptyRealTime_success() {","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public void execute_nonEmptyRealTime_success() {","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        Model model \u003d new ModelManager(getTypicalRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        expectedModel.setRealTime(new RealTime());","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"hoang227":32}},{"path":"src/test/java/seedu/realtime/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"hoang227":1,"-":53}},{"path":"src/test/java/seedu/realtime/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_ASKING_PRICE;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_LISTING_ID;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_OFFER;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.RealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.IdContainsKeywordsPredicate;","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.exceptions.ListingNotFoundException;","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.offer.OfferContainsListingIdPredicate;","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.EditListingDescriptorBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.testutil.EditOfferDescriptorBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    public static final String VALID_TAG_4_BEDROOM \u003d \"4bedroom\";","lastModifiedDate":"2022-11-01"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    public static final String VALID_TAG_GARDEN \u003d \"garden\";","lastModifiedDate":"2022-11-01"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    public static final String VALID_TAG_POOL \u003d \"pool\";","lastModifiedDate":"2022-11-01"},{"lineNumber":54,"author":{"gitId":"ama-chi"},"content":"    public static final String VALID_TAG_VIEWING \u003d \"viewing\";","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"ama-chi"},"content":"    public static final String VALID_TAG_CONTRACT \u003d \"contractSigning\";","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"ama-chi"},"content":"    public static final String VALID_TAG_CHILDREN \u003d \"withChildren\";","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    public static final String VALID_ID_AMY \u003d \"amy\";","lastModifiedDate":"2022-11-01"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    public static final String VALID_ID_BOB \u003d \"bob\";","lastModifiedDate":"2022-11-01"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"    public static final String VALID_PRICE_1 \u003d \"1\";","lastModifiedDate":"2022-11-01"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    public static final String VALID_PRICE_2 \u003d \"2\";","lastModifiedDate":"2022-11-01"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"    public static final String VALID_PRICE_3 \u003d \"1000000\";","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"ama-chi"},"content":"    public static final String VALID_DATETIME_1 \u003d \"2022-10-23 23:59\";","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"ama-chi"},"content":"    public static final String VALID_DATETIME_2 \u003d \"2000-11-24 12:00\";","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"    public static final String VALID_LISTING_ID_BEDOK \u003d \"BEDOK\";","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"    public static final String VALID_LISTING_ID_1 \u003d \"1\";","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"    public static final String VALID_LISTING_ID_2 \u003d \"2\";","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"    public static final String TAG_DESC_4_BEDROOM \u003d \" \" + PREFIX_TAG + VALID_TAG_4_BEDROOM;","lastModifiedDate":"2022-11-01"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"    public static final String TAG_DESC_GARDEN \u003d \" \" + PREFIX_TAG + VALID_TAG_GARDEN;","lastModifiedDate":"2022-11-01"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"    public static final String TAG_DESC_POOL \u003d \" \" + PREFIX_TAG + VALID_TAG_POOL;","lastModifiedDate":"2022-11-01"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"    public static final String ID_DESC_AMY \u003d \" \" + PREFIX_ID + VALID_ID_AMY;","lastModifiedDate":"2022-11-01"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    public static final String ID_DESC_BOB \u003d \" \" + PREFIX_ID + VALID_ID_BOB;","lastModifiedDate":"2022-11-01"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"    public static final String PRICE_DESC_1 \u003d \" \" + PREFIX_ASKING_PRICE + VALID_PRICE_1;","lastModifiedDate":"2022-11-01"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"    public static final String PRICE_DESC_2 \u003d \" \" + PREFIX_ASKING_PRICE + VALID_PRICE_2;","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"jeromehjj"},"content":"    public static final String LISTING_ID_DESC_AMY \u003d \" \" + PREFIX_LISTING_ID + VALID_LISTING_ID_1;","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"jeromehjj"},"content":"    public static final String LISTING_ID_DESC_BOB \u003d \" \" + PREFIX_LISTING_ID + VALID_LISTING_ID_2;","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"jeromehjj"},"content":"    public static final String OFFER_PRICE_DESC_AMY \u003d \" \" + PREFIX_OFFER + VALID_PRICE_1;","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"jeromehjj"},"content":"    public static final String OFFER_PRICE_DESC_BOB \u003d \" \" + PREFIX_OFFER + VALID_PRICE_2;","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"jeromehjj"},"content":"    public static final String INVALID_OFFER_PRICE \u003d \" \" + PREFIX_OFFER + \"123p123\"; // \u0027p\u0027 not allowed in prices","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"jeromehjj"},"content":"    public static final String INVALID_LISTING_ID \u003d \" \" + PREFIX_LISTING_ID; // empty string not allowed for listing IDs","lastModifiedDate":"2022-11-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"    public static final EditClientCommand.EditClientDescriptor DESC_AMY;","lastModifiedDate":"2022-10-30"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"    public static final EditClientCommand.EditClientDescriptor DESC_BOB;","lastModifiedDate":"2022-10-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"        DESC_AMY \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"        DESC_BOB \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"    public static final EditListingCommand.EditListingDescriptor DESC_LISTING_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"    public static final EditListingCommand.EditListingDescriptor DESC_LISTING_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"    static {","lastModifiedDate":"2022-11-05"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"        DESC_LISTING_AMY \u003d new EditListingDescriptorBuilder().withId(VALID_ID_AMY).withName(VALID_NAME_AMY)","lastModifiedDate":"2022-11-05"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"                .withAddress(VALID_ADDRESS_AMY).withAskingPrice(VALID_PRICE_1).withTags(VALID_TAG_4_BEDROOM).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"        DESC_LISTING_BOB \u003d new EditListingDescriptorBuilder().withId(VALID_ID_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2022-11-05"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"                .withAddress(VALID_ADDRESS_BOB).withAskingPrice(VALID_PRICE_2).withTags(VALID_TAG_POOL).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":124,"author":{"gitId":"jeromehjj"},"content":"    public static final EditOfferCommand.EditOfferDescriptor DESC_OFFER_AMY;","lastModifiedDate":"2022-11-06"},{"lineNumber":125,"author":{"gitId":"jeromehjj"},"content":"    public static final EditOfferCommand.EditOfferDescriptor DESC_OFFER_BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":126,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":127,"author":{"gitId":"jeromehjj"},"content":"    static {","lastModifiedDate":"2022-11-06"},{"lineNumber":128,"author":{"gitId":"jeromehjj"},"content":"        DESC_OFFER_AMY \u003d new EditOfferDescriptorBuilder().withBuyer(VALID_NAME_AMY)","lastModifiedDate":"2022-11-06"},{"lineNumber":129,"author":{"gitId":"jeromehjj"},"content":"                .withOfferPrice(VALID_PRICE_1).withListing(VALID_LISTING_ID_1).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":130,"author":{"gitId":"jeromehjj"},"content":"        DESC_OFFER_BOB \u003d new EditOfferDescriptorBuilder().withBuyer(VALID_NAME_BOB)","lastModifiedDate":"2022-11-06"},{"lineNumber":131,"author":{"gitId":"jeromehjj"},"content":"                .withOfferPrice(VALID_PRICE_2).withListing(VALID_LISTING_ID_2).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":132,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":133,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"hoang227"},"content":"     * - the address book, filtered client list and selected client in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":169,"author":{"gitId":"hoang227"},"content":"        RealTime expectedRealTime \u003d new RealTime(actualModel.getRealTime());","lastModifiedDate":"2022-11-05"},{"lineNumber":170,"author":{"gitId":"hoang227"},"content":"        List\u003cClient\u003e expectedFilteredClientList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredClientList());","lastModifiedDate":"2022-11-01"},{"lineNumber":171,"author":{"gitId":"jeromehjj"},"content":"        List\u003cOffer\u003e expectedFilteredOfferList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredOfferList());","lastModifiedDate":"2022-11-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":174,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedRealTime, actualModel.getRealTime());","lastModifiedDate":"2022-11-05"},{"lineNumber":175,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedFilteredClientList, actualModel.getFilteredClientList());","lastModifiedDate":"2022-11-01"},{"lineNumber":176,"author":{"gitId":"jeromehjj"},"content":"        assertEquals(expectedFilteredOfferList, actualModel.getFilteredOfferList());","lastModifiedDate":"2022-11-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":178,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":180,"author":{"gitId":"hoang227"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":181,"author":{"gitId":"hoang227"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":182,"author":{"gitId":"hoang227"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":183,"author":{"gitId":"hoang227"},"content":"     * - the address book, filtered client list and selected client in {@code actualModel} remain unchanged","lastModifiedDate":"2022-11-01"},{"lineNumber":184,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":185,"author":{"gitId":"hoang227"},"content":"    public static void assertListingNotFoundFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2022-11-01"},{"lineNumber":186,"author":{"gitId":"hoang227"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2022-11-01"},{"lineNumber":187,"author":{"gitId":"hoang227"},"content":"        // only do so by copying its components.","lastModifiedDate":"2022-11-01"},{"lineNumber":188,"author":{"gitId":"hoang227"},"content":"        RealTime expectedRealTime \u003d new RealTime(actualModel.getRealTime());","lastModifiedDate":"2022-11-05"},{"lineNumber":189,"author":{"gitId":"hoang227"},"content":"        List\u003cListing\u003e expectedFilteredListingList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredListingList());","lastModifiedDate":"2022-11-01"},{"lineNumber":190,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":191,"author":{"gitId":"hoang227"},"content":"        assertThrows(ListingNotFoundException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2022-11-01"},{"lineNumber":192,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedRealTime, actualModel.getRealTime());","lastModifiedDate":"2022-11-05"},{"lineNumber":193,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedFilteredListingList, actualModel.getFilteredListingList());","lastModifiedDate":"2022-11-01"},{"lineNumber":194,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":195,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":196,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":198,"author":{"gitId":"hoang227"},"content":"     * Updates {@code model}\u0027s filtered list to show only the client at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":201,"author":{"gitId":"hoang227"},"content":"    public static void showClientAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-30"},{"lineNumber":202,"author":{"gitId":"hoang227"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredClientList().size());","lastModifiedDate":"2022-10-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":204,"author":{"gitId":"hoang227"},"content":"        Client client \u003d model.getFilteredClientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-30"},{"lineNumber":205,"author":{"gitId":"hoang227"},"content":"        final String[] splitName \u003d client.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-30"},{"lineNumber":206,"author":{"gitId":"hoang227"},"content":"        model.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":208,"author":{"gitId":"hoang227"},"content":"        assertEquals(1, model.getFilteredClientList().size());","lastModifiedDate":"2022-10-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":212,"author":{"gitId":"hoang227"},"content":"     * Updates {@code model}\u0027s filtered list to show only the listing at the given {@code targetIndex} in the","lastModifiedDate":"2022-11-01"},{"lineNumber":213,"author":{"gitId":"hoang227"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-11-01"},{"lineNumber":214,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":215,"author":{"gitId":"hoang227"},"content":"    public static void showListingAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-11-01"},{"lineNumber":216,"author":{"gitId":"hoang227"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredListingList().size());","lastModifiedDate":"2022-11-05"},{"lineNumber":217,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":218,"author":{"gitId":"hoang227"},"content":"        Listing listing \u003d model.getFilteredListingList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-11-01"},{"lineNumber":219,"author":{"gitId":"hoang227"},"content":"        final String id \u003d listing.getId().value;","lastModifiedDate":"2022-11-01"},{"lineNumber":220,"author":{"gitId":"hoang227"},"content":"        model.updateFilteredListingList(new IdContainsKeywordsPredicate(id));","lastModifiedDate":"2022-11-01"},{"lineNumber":221,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":222,"author":{"gitId":"hoang227"},"content":"        assertEquals(1, model.getFilteredListingList().size());","lastModifiedDate":"2022-11-01"},{"lineNumber":223,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":224,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":225,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":226,"author":{"gitId":"jeromehjj"},"content":"     * Updates {@code model}\u0027s filtered list to show only the offer at the given {@code targetIndex} in the","lastModifiedDate":"2022-11-06"},{"lineNumber":227,"author":{"gitId":"jeromehjj"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-11-06"},{"lineNumber":228,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":229,"author":{"gitId":"jeromehjj"},"content":"    public static void showOfferAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-11-06"},{"lineNumber":230,"author":{"gitId":"jeromehjj"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredOfferList().size());","lastModifiedDate":"2022-11-06"},{"lineNumber":231,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":232,"author":{"gitId":"jeromehjj"},"content":"        Offer offer \u003d model.getFilteredOfferList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":233,"author":{"gitId":"jeromehjj"},"content":"        final String[] splitListingId \u003d offer.getListing().toString().split(\"\\\\s+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":234,"author":{"gitId":"jeromehjj"},"content":"        model.updateFilteredOfferList(new OfferContainsListingIdPredicate(Arrays.asList(splitListingId[0])));","lastModifiedDate":"2022-11-06"},{"lineNumber":235,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":236,"author":{"gitId":"jeromehjj"},"content":"        assertEquals(2, model.getFilteredOfferList().size());","lastModifiedDate":"2022-11-06"},{"lineNumber":237,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":238,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jeromehjj":42,"hoang227":94,"ama-chi":5,"-":98}},{"path":"src/test/java/seedu/realtime/logic/commands/DeleteClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.getTypicalRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.FIRST_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.SECOND_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Messages;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":" * {@code DeleteClientCommand}.","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"public class DeleteClientCommandTest {","lastModifiedDate":"2022-10-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    private Model model \u003d new ModelManager(getTypicalRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(FIRST_INDEX.getZeroBased());","lastModifiedDate":"2022-11-04"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        DeleteClientCommand deleteClientCommand \u003d new DeleteClientCommand(FIRST_INDEX);","lastModifiedDate":"2022-11-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(DeleteClientCommand.MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete);","lastModifiedDate":"2022-10-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        expectedModel.deleteClient(clientToDelete);","lastModifiedDate":"2022-10-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(deleteClientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        DeleteClientCommand deleteClientCommand \u003d new DeleteClientCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(deleteClientCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        showClientAtIndex(model, FIRST_INDEX);","lastModifiedDate":"2022-11-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(FIRST_INDEX.getZeroBased());","lastModifiedDate":"2022-11-04"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        DeleteClientCommand deleteClientCommand \u003d new DeleteClientCommand(FIRST_INDEX);","lastModifiedDate":"2022-11-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(DeleteClientCommand.MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete);","lastModifiedDate":"2022-10-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(model.getRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        expectedModel.deleteClient(clientToDelete);","lastModifiedDate":"2022-10-30"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        showNoClient(expectedModel);","lastModifiedDate":"2022-10-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(deleteClientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        showClientAtIndex(model, FIRST_INDEX);","lastModifiedDate":"2022-11-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        Index outOfBoundIndex \u003d SECOND_INDEX;","lastModifiedDate":"2022-11-04"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"        // ensures that outOfBoundIndex is still in bounds of realtime list","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getRealTime().getClientList().size());","lastModifiedDate":"2022-11-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        DeleteClientCommand deleteClientCommand \u003d new DeleteClientCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(deleteClientCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        DeleteClientCommand deleteFirstCommand \u003d new DeleteClientCommand(FIRST_INDEX);","lastModifiedDate":"2022-11-04"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        DeleteClientCommand deleteSecondCommand \u003d new DeleteClientCommand(SECOND_INDEX);","lastModifiedDate":"2022-11-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        DeleteClientCommand deleteFirstCommandCopy \u003d new DeleteClientCommand(FIRST_INDEX);","lastModifiedDate":"2022-11-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-10-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"    private void showNoClient(Model model) {","lastModifiedDate":"2022-10-30"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        model.updateFilteredClientList(p -\u003e false);","lastModifiedDate":"2022-10-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        assertTrue(model.getFilteredClientList().isEmpty());","lastModifiedDate":"2022-10-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jeromehjj":2,"hoang227":44,"-":63}},{"path":"src/test/java/seedu/realtime/logic/commands/DeleteListingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.showListingAtIndex;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.FIRST_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.SECOND_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalListings.getTypicalRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Messages;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"public class DeleteListingCommandTest {","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    private Model model \u003d new ModelManager(getTypicalRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        Listing listingToDelete \u003d model.getFilteredListingList().get(FIRST_INDEX.getZeroBased());","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        DeleteListingCommand deleteListingCommand \u003d new DeleteListingCommand(FIRST_INDEX);","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(DeleteListingCommand.MESSAGE_DELETE_LISTING_SUCCESS, listingToDelete);","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        expectedModel.deleteListing(listingToDelete);","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(deleteListingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-01"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredListingList().size() + 1);","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        DeleteListingCommand deleteListingCommand \u003d new DeleteListingCommand(outOfBoundIndex);","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(deleteListingCommand, model, Messages.MESSAGE_INVALID_LISTING_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        showListingAtIndex(model, FIRST_INDEX);","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        Listing listingToDelete \u003d model.getFilteredListingList().get(FIRST_INDEX.getZeroBased());","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        DeleteListingCommand deleteListingCommand \u003d new DeleteListingCommand(FIRST_INDEX);","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(DeleteListingCommand.MESSAGE_DELETE_LISTING_SUCCESS, listingToDelete);","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(model.getRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        expectedModel.deleteListing(listingToDelete);","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        showNoListing(expectedModel);","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(deleteListingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        showListingAtIndex(model, FIRST_INDEX);","lastModifiedDate":"2022-11-05"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        Index outOfBoundIndex \u003d SECOND_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-11-05"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getRealTime().getListingList().size());","lastModifiedDate":"2022-11-05"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        DeleteListingCommand deleteListingCommand \u003d new DeleteListingCommand(outOfBoundIndex);","lastModifiedDate":"2022-11-05"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(deleteListingCommand, model, Messages.MESSAGE_INVALID_LISTING_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-05"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"    public void equals() {","lastModifiedDate":"2022-11-01"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        DeleteListingCommand deleteFirstCommand \u003d new DeleteListingCommand(FIRST_INDEX);","lastModifiedDate":"2022-11-05"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        DeleteListingCommand deleteSecondCommand \u003d new DeleteListingCommand(SECOND_INDEX);","lastModifiedDate":"2022-11-05"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-11-01"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-01"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        DeleteListingCommand deleteFirstCommandCopy \u003d new DeleteListingCommand(FIRST_INDEX);","lastModifiedDate":"2022-11-05"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-11-01"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-11-01"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-11-01"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-01"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-11-01"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        // different listing -\u003e returns false","lastModifiedDate":"2022-11-01"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-11-01"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-11-01"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"    private void showNoListing(Model model) {","lastModifiedDate":"2022-11-01"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        model.updateFilteredListingList(p -\u003e false);","lastModifiedDate":"2022-11-01"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        assertTrue(model.getFilteredListingList().isEmpty());","lastModifiedDate":"2022-11-01"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"hoang227":109}},{"path":"src/test/java/seedu/realtime/logic/commands/DeleteOfferCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.showOfferAtIndex;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.testutil.TypicalIndexes.FIRST_INDEX;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.testutil.TypicalIndexes.SECOND_INDEX;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.testutil.TypicalOffers.getTypicalRealTime;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.commons.core.Messages;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":" * Contains integration tests (integration with the Model) and unit tests for","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":" * {@code DeleteOfferCommand}","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"public class DeleteOfferCommandTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"    private Model model \u003d new ModelManager(getTypicalRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"        Offer offerToDelete \u003d model.getFilteredOfferList().get(FIRST_INDEX.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"        DeleteOfferCommand deleteOfferCommand \u003d new DeleteOfferCommand(FIRST_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"        String expectedMessage \u003d String.format(DeleteOfferCommand.MESSAGE_DELETE_OFFER_SUCCESS, offerToDelete);","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"        expectedModel.deleteOffer(offerToDelete);","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"        assertCommandSuccess(deleteOfferCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOfferList().size() + 1);","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"        DeleteOfferCommand deleteOfferCommand \u003d new DeleteOfferCommand(outOfBoundIndex);","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"        assertCommandFailure(deleteOfferCommand, model, Messages.MESSAGE_INVALID_OFFER_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"        showOfferAtIndex(model, FIRST_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"        Offer offerToDelete \u003d model.getFilteredOfferList().get(FIRST_INDEX.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"        DeleteOfferCommand deleteOfferCommand \u003d new DeleteOfferCommand(FIRST_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"        String expectedMessage \u003d String.format(DeleteOfferCommand.MESSAGE_DELETE_OFFER_SUCCESS, offerToDelete);","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"        Model expectedModel \u003d new ModelManager(model.getRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"        expectedModel.deleteOffer(offerToDelete);","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"        showNoOffer(expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"        // assertCommandSuccess(deleteOfferCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"        showOfferAtIndex(model, FIRST_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"jeromehjj"},"content":"        Index outOfBoundIndex \u003d SECOND_INDEX;","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"        // ensures that outOfBoundIndex is still in bounds of realtime list","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getRealTime().getOfferList().size());","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"        DeleteOfferCommand deleteOfferCommand \u003d new DeleteOfferCommand(outOfBoundIndex);","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"jeromehjj"},"content":"        // assertCommandFailure(deleteOfferCommand, model, Messages.MESSAGE_INVALID_OFFER_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"jeromehjj"},"content":"    public void equals() {","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"jeromehjj"},"content":"        DeleteOfferCommand deleteFirstCommand \u003d new DeleteOfferCommand(FIRST_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"jeromehjj"},"content":"        DeleteOfferCommand deleteSecondCommand \u003d new DeleteOfferCommand(SECOND_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"jeromehjj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"jeromehjj"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"jeromehjj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"jeromehjj"},"content":"        DeleteOfferCommand deleteFirstCommandCopy \u003d new DeleteOfferCommand(FIRST_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"jeromehjj"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"jeromehjj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"jeromehjj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":97,"author":{"gitId":"jeromehjj"},"content":"        // different offer -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-11-06"},{"lineNumber":99,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":101,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"jeromehjj"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-11-06"},{"lineNumber":103,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":104,"author":{"gitId":"jeromehjj"},"content":"    private void showNoOffer(Model model) {","lastModifiedDate":"2022-11-06"},{"lineNumber":105,"author":{"gitId":"jeromehjj"},"content":"        model.updateFilteredOfferList(p -\u003e false);","lastModifiedDate":"2022-11-06"},{"lineNumber":106,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":107,"author":{"gitId":"jeromehjj"},"content":"        assertTrue(model.getFilteredOfferList().isEmpty());","lastModifiedDate":"2022-11-06"},{"lineNumber":108,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":109,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"jeromehjj":109}},{"path":"src/test/java/seedu/realtime/logic/commands/EditClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-30"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-30"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.getTypicalRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.FIRST_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.SECOND_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Messages;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.RealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.ClientBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-30"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2022-10-30"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-30"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"public class EditClientCommandTest {","lastModifiedDate":"2022-10-30"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    private Model model \u003d new ModelManager(getTypicalRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-30"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        Client editedClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-10-30"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        EditClientCommand.EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(editedClient).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(FIRST_INDEX, descriptor);","lastModifiedDate":"2022-11-04"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(EditClientCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(new RealTime(model.getRealTime()), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        expectedModel.setClient(model.getFilteredClientList().get(0), editedClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(editClientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-30"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-30"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        Index indexLastClient \u003d Index.fromOneBased(model.getFilteredClientList().size());","lastModifiedDate":"2022-10-30"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        Client lastClient \u003d model.getFilteredClientList().get(indexLastClient.getZeroBased());","lastModifiedDate":"2022-10-30"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        ClientBuilder clientInList \u003d new ClientBuilder(lastClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        Client editedClient \u003d clientInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-30"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        EditClientCommand.EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(indexLastClient, descriptor);","lastModifiedDate":"2022-10-30"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(EditClientCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(new RealTime(model.getRealTime()), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        expectedModel.setClient(lastClient, editedClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(editClientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-30"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-30"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(","lastModifiedDate":"2022-11-05"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"                FIRST_INDEX, new EditClientCommand.EditClientDescriptor());","lastModifiedDate":"2022-11-05"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        Client editedClient \u003d model.getFilteredClientList().get(FIRST_INDEX.getZeroBased());","lastModifiedDate":"2022-11-04"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(EditClientCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(new RealTime(model.getRealTime()), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(editClientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-30"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-10-30"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        showClientAtIndex(model, FIRST_INDEX);","lastModifiedDate":"2022-11-04"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        Client clientInFilteredList \u003d model.getFilteredClientList().get(FIRST_INDEX.getZeroBased());","lastModifiedDate":"2022-11-04"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        Client editedClient \u003d new ClientBuilder(clientInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(FIRST_INDEX,","lastModifiedDate":"2022-11-04"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"                new EditClientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-30"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(EditClientCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(new RealTime(model.getRealTime()), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        expectedModel.setClient(model.getFilteredClientList().get(0), editedClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(editClientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-30"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"    public void execute_duplicateClientUnfilteredList_failure() {","lastModifiedDate":"2022-10-30"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"        Client firstClient \u003d model.getFilteredClientList().get(FIRST_INDEX.getZeroBased());","lastModifiedDate":"2022-11-04"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        EditClientCommand.EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(firstClient).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(SECOND_INDEX, descriptor);","lastModifiedDate":"2022-11-04"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(editClientCommand, model, EditClientCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-10-30"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"    public void execute_duplicateClientFilteredList_failure() {","lastModifiedDate":"2022-10-30"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"        showClientAtIndex(model, FIRST_INDEX);","lastModifiedDate":"2022-11-04"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":115,"author":{"gitId":"jeromehjj"},"content":"        // edit client in filtered list into a duplicate in realtime","lastModifiedDate":"2022-11-06"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"        Client clientInList \u003d model.getRealTime().getClientList().get(SECOND_INDEX.getZeroBased());","lastModifiedDate":"2022-11-05"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(FIRST_INDEX,","lastModifiedDate":"2022-11-04"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"                new EditClientDescriptorBuilder(clientInList).build());","lastModifiedDate":"2022-10-30"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(editClientCommand, model, EditClientCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-10-30"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"    public void execute_invalidClientIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-30"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2022-10-30"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"        EditClientCommand.EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder()","lastModifiedDate":"2022-11-05"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-30"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(editClientCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-30"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-30"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-10-30"},{"lineNumber":135,"author":{"gitId":"jeromehjj"},"content":"     * but smaller than size of realtime","lastModifiedDate":"2022-11-06"},{"lineNumber":136,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-30"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":138,"author":{"gitId":"hoang227"},"content":"    public void execute_invalidClientIndexFilteredList_failure() {","lastModifiedDate":"2022-10-30"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"        showClientAtIndex(model, FIRST_INDEX);","lastModifiedDate":"2022-11-04"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"        Index outOfBoundIndex \u003d SECOND_INDEX;","lastModifiedDate":"2022-11-04"},{"lineNumber":141,"author":{"gitId":"hoang227"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-30"},{"lineNumber":142,"author":{"gitId":"hoang227"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getRealTime().getClientList().size());","lastModifiedDate":"2022-11-05"},{"lineNumber":143,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":144,"author":{"gitId":"hoang227"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-30"},{"lineNumber":145,"author":{"gitId":"hoang227"},"content":"                new EditClientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-30"},{"lineNumber":146,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":147,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(editClientCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-30"},{"lineNumber":148,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":149,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":150,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":151,"author":{"gitId":"hoang227"},"content":"    public void equals() {","lastModifiedDate":"2022-10-30"},{"lineNumber":152,"author":{"gitId":"hoang227"},"content":"        final EditClientCommand standardCommand \u003d new EditClientCommand(FIRST_INDEX, DESC_AMY);","lastModifiedDate":"2022-11-04"},{"lineNumber":153,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":154,"author":{"gitId":"hoang227"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-30"},{"lineNumber":155,"author":{"gitId":"hoang227"},"content":"        EditClientCommand.EditClientDescriptor copyDescriptor \u003d new EditClientCommand.EditClientDescriptor(DESC_AMY);","lastModifiedDate":"2022-11-05"},{"lineNumber":156,"author":{"gitId":"hoang227"},"content":"        EditClientCommand commandWithSameValues \u003d new EditClientCommand(FIRST_INDEX, copyDescriptor);","lastModifiedDate":"2022-11-04"},{"lineNumber":157,"author":{"gitId":"hoang227"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-30"},{"lineNumber":158,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":159,"author":{"gitId":"hoang227"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-30"},{"lineNumber":160,"author":{"gitId":"hoang227"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-30"},{"lineNumber":161,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":162,"author":{"gitId":"hoang227"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-30"},{"lineNumber":163,"author":{"gitId":"hoang227"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-30"},{"lineNumber":164,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":165,"author":{"gitId":"hoang227"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-30"},{"lineNumber":166,"author":{"gitId":"hoang227"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-30"},{"lineNumber":167,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":168,"author":{"gitId":"hoang227"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-30"},{"lineNumber":169,"author":{"gitId":"hoang227"},"content":"        assertFalse(standardCommand.equals(new EditClientCommand(SECOND_INDEX, DESC_AMY)));","lastModifiedDate":"2022-11-04"},{"lineNumber":170,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":171,"author":{"gitId":"hoang227"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-10-30"},{"lineNumber":172,"author":{"gitId":"hoang227"},"content":"        assertFalse(standardCommand.equals(new EditClientCommand(FIRST_INDEX, DESC_BOB)));","lastModifiedDate":"2022-11-04"},{"lineNumber":173,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":174,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":175,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-30"}],"authorContributionMap":{"jeromehjj":2,"hoang227":173}},{"path":"src/test/java/seedu/realtime/logic/commands/EditClientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditClientCommand.EditClientDescriptor;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"public class EditClientDescriptorTest {","lastModifiedDate":"2022-10-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        EditClientDescriptor descriptorWithSameValues \u003d new EditClientDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        EditClientDescriptor editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"hoang227":17,"-":41}},{"path":"src/test/java/seedu/realtime/logic/commands/EditListingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.DESC_LISTING_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.DESC_LISTING_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_4_BEDROOM;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.showListingAtIndex;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.FIRST_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.SECOND_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalListings.getTypicalRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Messages;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditListingCommand.EditListingDescriptor;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.RealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.EditListingDescriptorBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.ListingBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"public class EditListingCommandTest {","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    private Model model \u003d new ModelManager(getTypicalRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        Listing editedListing \u003d new ListingBuilder().build();","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        EditListingDescriptor descriptor \u003d new EditListingDescriptorBuilder(editedListing).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        EditListingCommand editListingCommand \u003d new EditListingCommand(FIRST_INDEX, descriptor);","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(EditListingCommand.MESSAGE_EDIT_LISTING_SUCCESS, editedListing);","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(new RealTime(model.getRealTime()), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        expectedModel.setListing(model.getFilteredListingList().get(0), editedListing);","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(editListingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        Index indexLastListing \u003d Index.fromOneBased(model.getFilteredListingList().size());","lastModifiedDate":"2022-11-05"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        Listing lastListing \u003d model.getFilteredListingList().get(indexLastListing.getZeroBased());","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        ListingBuilder listingInList \u003d new ListingBuilder(lastListing);","lastModifiedDate":"2022-11-05"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        Listing editedListing \u003d listingInList.withOwner(VALID_NAME_BOB).withId(VALID_ID_BOB)","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"                .withTags(VALID_TAG_4_BEDROOM).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        EditListingDescriptor descriptor \u003d new EditListingDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"                .withId(VALID_ID_BOB).withTags(VALID_TAG_4_BEDROOM).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        EditListingCommand editListingCommand \u003d new EditListingCommand(indexLastListing, descriptor);","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(EditListingCommand.MESSAGE_EDIT_LISTING_SUCCESS, editedListing);","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(new RealTime(model.getRealTime()), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        expectedModel.setListing(lastListing, editedListing);","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(editListingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-05"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-11-05"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        EditListingCommand editListingCommand \u003d new EditListingCommand(FIRST_INDEX, new EditListingDescriptor());","lastModifiedDate":"2022-11-05"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        Listing editedListing \u003d model.getFilteredListingList().get(FIRST_INDEX.getZeroBased());","lastModifiedDate":"2022-11-05"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(EditListingCommand.MESSAGE_EDIT_LISTING_SUCCESS, editedListing);","lastModifiedDate":"2022-11-05"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(new RealTime(model.getRealTime()), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(editListingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-05"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-11-05"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"        showListingAtIndex(model, FIRST_INDEX);","lastModifiedDate":"2022-11-05"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        Listing listingInFilteredList \u003d model.getFilteredListingList().get(FIRST_INDEX.getZeroBased());","lastModifiedDate":"2022-11-05"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        Listing editedListing \u003d new ListingBuilder(listingInFilteredList)","lastModifiedDate":"2022-11-05"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"                .withOwner(VALID_NAME_BOB).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"        EditListingCommand editListingCommand \u003d new EditListingCommand(FIRST_INDEX,","lastModifiedDate":"2022-11-05"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"                new EditListingDescriptorBuilder().withName(VALID_NAME_BOB).withTags(VALID_TAG_4_BEDROOM).build());","lastModifiedDate":"2022-11-05"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(EditListingCommand.MESSAGE_EDIT_LISTING_SUCCESS, editedListing);","lastModifiedDate":"2022-11-05"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(new RealTime(model.getRealTime()), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        expectedModel.setListing(model.getFilteredListingList().get(0), editedListing);","lastModifiedDate":"2022-11-05"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(editListingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-05"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"    public void execute_duplicateListingUnfilteredList_failure() {","lastModifiedDate":"2022-11-05"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"        Listing firstListing \u003d model.getFilteredListingList().get(FIRST_INDEX.getZeroBased());","lastModifiedDate":"2022-11-05"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        EditListingDescriptor descriptor \u003d new EditListingDescriptorBuilder(firstListing).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"        EditListingCommand editListingCommand \u003d new EditListingCommand(SECOND_INDEX, descriptor);","lastModifiedDate":"2022-11-05"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(editListingCommand, model, EditListingCommand.MESSAGE_DUPLICATE_LISTING);","lastModifiedDate":"2022-11-05"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"    public void execute_duplicateListingFilteredList_failure() {","lastModifiedDate":"2022-11-05"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"        showListingAtIndex(model, FIRST_INDEX);","lastModifiedDate":"2022-11-05"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"        // edit listing in filtered list into a duplicate in address book","lastModifiedDate":"2022-11-05"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"        Listing listingInList \u003d model.getRealTime().getListingList().get(SECOND_INDEX.getZeroBased());","lastModifiedDate":"2022-11-05"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"        EditListingCommand editListingCommand \u003d new EditListingCommand(FIRST_INDEX,","lastModifiedDate":"2022-11-05"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"                new EditListingDescriptorBuilder(listingInList).build());","lastModifiedDate":"2022-11-05"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(editListingCommand, model, EditListingCommand.MESSAGE_DUPLICATE_LISTING);","lastModifiedDate":"2022-11-05"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"    public void execute_invalidListingIndexUnfilteredList_failure() {","lastModifiedDate":"2022-11-05"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredListingList().size() + 1);","lastModifiedDate":"2022-11-05"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"        EditListingDescriptor descriptor \u003d new EditListingDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"        EditListingCommand editListingCommand \u003d new EditListingCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-11-05"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(editListingCommand, model, Messages.MESSAGE_INVALID_LISTING_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-05"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-11-05"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-11-05"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":136,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"    public void execute_invalidListingIndexFilteredList_failure() {","lastModifiedDate":"2022-11-05"},{"lineNumber":138,"author":{"gitId":"hoang227"},"content":"        showListingAtIndex(model, FIRST_INDEX);","lastModifiedDate":"2022-11-05"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"        Index outOfBoundIndex \u003d SECOND_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-11-05"},{"lineNumber":141,"author":{"gitId":"hoang227"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getRealTime().getListingList().size());","lastModifiedDate":"2022-11-05"},{"lineNumber":142,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":143,"author":{"gitId":"hoang227"},"content":"        EditListingCommand editListingCommand \u003d new EditListingCommand(outOfBoundIndex,","lastModifiedDate":"2022-11-05"},{"lineNumber":144,"author":{"gitId":"hoang227"},"content":"                new EditListingDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-11-05"},{"lineNumber":145,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":146,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(editListingCommand, model, Messages.MESSAGE_INVALID_LISTING_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-05"},{"lineNumber":147,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":148,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":149,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":150,"author":{"gitId":"hoang227"},"content":"    public void equals() {","lastModifiedDate":"2022-11-05"},{"lineNumber":151,"author":{"gitId":"hoang227"},"content":"        final EditListingCommand standardCommand \u003d new EditListingCommand(FIRST_INDEX, DESC_LISTING_AMY);","lastModifiedDate":"2022-11-05"},{"lineNumber":152,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":153,"author":{"gitId":"hoang227"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-05"},{"lineNumber":154,"author":{"gitId":"hoang227"},"content":"        EditListingDescriptor copyDescriptor \u003d new EditListingDescriptor(DESC_LISTING_AMY);","lastModifiedDate":"2022-11-05"},{"lineNumber":155,"author":{"gitId":"hoang227"},"content":"        EditListingCommand commandWithSameValues \u003d new EditListingCommand(FIRST_INDEX, copyDescriptor);","lastModifiedDate":"2022-11-05"},{"lineNumber":156,"author":{"gitId":"hoang227"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-11-05"},{"lineNumber":157,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":158,"author":{"gitId":"hoang227"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-05"},{"lineNumber":159,"author":{"gitId":"hoang227"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-11-05"},{"lineNumber":160,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":161,"author":{"gitId":"hoang227"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":162,"author":{"gitId":"hoang227"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-11-05"},{"lineNumber":163,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":164,"author":{"gitId":"hoang227"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":165,"author":{"gitId":"hoang227"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-11-05"},{"lineNumber":166,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":167,"author":{"gitId":"hoang227"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":168,"author":{"gitId":"hoang227"},"content":"        assertFalse(standardCommand.equals(new EditListingCommand(SECOND_INDEX, DESC_LISTING_AMY)));","lastModifiedDate":"2022-11-05"},{"lineNumber":169,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":170,"author":{"gitId":"hoang227"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":171,"author":{"gitId":"hoang227"},"content":"        assertFalse(standardCommand.equals(new EditListingCommand(FIRST_INDEX, DESC_LISTING_BOB)));","lastModifiedDate":"2022-11-05"},{"lineNumber":172,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":173,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":174,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"hoang227":174}},{"path":"src/test/java/seedu/realtime/logic/commands/EditListingDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.DESC_LISTING_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.DESC_LISTING_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PRICE_2;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_GARDEN;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditListingCommand.EditListingDescriptor;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.EditListingDescriptorBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"public class EditListingDescriptorTest {","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    public void equals() {","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        EditListingDescriptor descriptorWithSameValues \u003d new EditListingDescriptor(DESC_LISTING_AMY);","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"        assertTrue(DESC_LISTING_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        assertTrue(DESC_LISTING_AMY.equals(DESC_LISTING_AMY));","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        assertFalse(DESC_LISTING_AMY.equals(null));","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        assertFalse(DESC_LISTING_AMY.equals(5));","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        assertFalse(DESC_LISTING_AMY.equals(DESC_LISTING_BOB));","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        EditListingDescriptor editedAmy \u003d new EditListingDescriptorBuilder(DESC_LISTING_AMY)","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        assertFalse(DESC_LISTING_AMY.equals(editedAmy));","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        // different id -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        editedAmy \u003d new EditListingDescriptorBuilder(DESC_LISTING_AMY).withId(VALID_ID_BOB).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        assertFalse(DESC_LISTING_AMY.equals(editedAmy));","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        editedAmy \u003d new EditListingDescriptorBuilder(DESC_LISTING_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        assertFalse(DESC_LISTING_AMY.equals(editedAmy));","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        // different asking price -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        editedAmy \u003d new EditListingDescriptorBuilder(DESC_LISTING_AMY).withAskingPrice(VALID_PRICE_2).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        assertFalse(DESC_LISTING_AMY.equals(editedAmy));","lastModifiedDate":"2022-11-05"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        editedAmy \u003d new EditListingDescriptorBuilder(DESC_LISTING_AMY).withTags(VALID_TAG_GARDEN).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        assertFalse(DESC_LISTING_AMY.equals(editedAmy));","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"hoang227":59}},{"path":"src/test/java/seedu/realtime/logic/commands/EditOfferCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.DESC_OFFER_AMY;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.DESC_OFFER_BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_LISTING_ID_1;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PRICE_1;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.showOfferAtIndex;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.testutil.TypicalIndexes.FIRST_INDEX;","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.testutil.TypicalIndexes.SECOND_INDEX;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.testutil.TypicalOffers.getTypicalRealTime;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.commons.core.Messages;","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.RealTime;","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.testutil.EditOfferDescriptorBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.testutil.OfferBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditOfferCommand.","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"public class EditOfferCommandTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"    private Model model \u003d new ModelManager(getTypicalRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"        Offer editedOffer \u003d new OfferBuilder().build();","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand.EditOfferDescriptor descriptor \u003d new EditOfferDescriptorBuilder(editedOffer).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand editOfferCommand \u003d new EditOfferCommand(FIRST_INDEX, descriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"        String expectedMessage \u003d String.format(EditOfferCommand.MESSAGE_EDIT_OFFER_SUCCESS, editedOffer);","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"        Model expectedModel \u003d new ModelManager(new RealTime(model.getRealTime()), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"        expectedModel.setOffer(model.getFilteredOfferList().get(0), editedOffer);","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"        assertCommandSuccess(editOfferCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"        Index indexLastOffer \u003d Index.fromOneBased(model.getFilteredOfferList().size());","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"        Offer lastOffer \u003d model.getFilteredOfferList().get(indexLastOffer.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"        OfferBuilder offerInList \u003d new OfferBuilder(lastOffer);","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"        Offer editedOffer \u003d offerInList.withBuyer(VALID_NAME_AMY).withOfferPrice(VALID_PRICE_1)","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"                .withListing(VALID_LISTING_ID_1).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand.EditOfferDescriptor descriptor \u003d new EditOfferDescriptorBuilder().withBuyer(VALID_NAME_AMY)","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"                .withOfferPrice(VALID_PRICE_1).withListing(VALID_LISTING_ID_1).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand editOfferCommand \u003d new EditOfferCommand(indexLastOffer, descriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"        String expectedMessage \u003d String.format(EditOfferCommand.MESSAGE_EDIT_OFFER_SUCCESS, editedOffer);","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"        Model expectedModel \u003d new ModelManager(new RealTime(model.getRealTime()), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"        expectedModel.setOffer(lastOffer, editedOffer);","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"        assertCommandSuccess(editOfferCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand editOfferCommand \u003d new EditOfferCommand(","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"                FIRST_INDEX, new EditOfferCommand.EditOfferDescriptor());","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"jeromehjj"},"content":"        Offer editedOffer \u003d model.getFilteredOfferList().get(FIRST_INDEX.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"jeromehjj"},"content":"        String expectedMessage \u003d String.format(EditOfferCommand.MESSAGE_EDIT_OFFER_SUCCESS, editedOffer);","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"jeromehjj"},"content":"        Model expectedModel \u003d new ModelManager(new RealTime(model.getRealTime()), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"jeromehjj"},"content":"        assertCommandSuccess(editOfferCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"jeromehjj"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"jeromehjj"},"content":"        showOfferAtIndex(model, FIRST_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"jeromehjj"},"content":"        Offer offerInFilteredList \u003d model.getFilteredOfferList().get(FIRST_INDEX.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"jeromehjj"},"content":"        Offer editedOffer \u003d new OfferBuilder(offerInFilteredList).withBuyer(VALID_NAME_AMY).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand editOfferCommand \u003d new EditOfferCommand(FIRST_INDEX,","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"jeromehjj"},"content":"            new EditOfferDescriptorBuilder().withBuyer(VALID_NAME_AMY).build());","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"jeromehjj"},"content":"        String expectedMessage \u003d String.format(EditOfferCommand.MESSAGE_EDIT_OFFER_SUCCESS, editedOffer);","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"jeromehjj"},"content":"        Model expectedModel \u003d new ModelManager(new RealTime(model.getRealTime()), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"jeromehjj"},"content":"        expectedModel.setOffer(model.getFilteredOfferList().get(0), editedOffer);","lastModifiedDate":"2022-11-06"},{"lineNumber":97,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"jeromehjj"},"content":"        assertCommandSuccess(editOfferCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":99,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":101,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"jeromehjj"},"content":"    public void execute_duplicateOfferUnfilteredList_failure() {","lastModifiedDate":"2022-11-06"},{"lineNumber":103,"author":{"gitId":"jeromehjj"},"content":"        Offer firstOffer \u003d model.getFilteredOfferList().get(FIRST_INDEX.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":104,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand.EditOfferDescriptor descriptor \u003d new EditOfferDescriptorBuilder(firstOffer).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":105,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand editOfferCommand \u003d new EditOfferCommand(SECOND_INDEX, descriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":106,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":107,"author":{"gitId":"jeromehjj"},"content":"        assertCommandFailure(editOfferCommand, model, EditOfferCommand.MESSAGE_DUPLICATE_OFFER);","lastModifiedDate":"2022-11-06"},{"lineNumber":108,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":109,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":110,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"jeromehjj"},"content":"    public void execute_duplicateOfferFilteredList_failure() {","lastModifiedDate":"2022-11-06"},{"lineNumber":112,"author":{"gitId":"jeromehjj"},"content":"        showOfferAtIndex(model, FIRST_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":113,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":114,"author":{"gitId":"jeromehjj"},"content":"        // edit offer in filtered list into a duplicate in realtime","lastModifiedDate":"2022-11-06"},{"lineNumber":115,"author":{"gitId":"jeromehjj"},"content":"        Offer offerInList \u003d model.getRealTime().getOfferList().get(SECOND_INDEX.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":116,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand editOfferCommand \u003d new EditOfferCommand(FIRST_INDEX,","lastModifiedDate":"2022-11-06"},{"lineNumber":117,"author":{"gitId":"jeromehjj"},"content":"                new EditOfferDescriptorBuilder(offerInList).build());","lastModifiedDate":"2022-11-06"},{"lineNumber":118,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":119,"author":{"gitId":"jeromehjj"},"content":"        assertCommandFailure(editOfferCommand, model, EditOfferCommand.MESSAGE_DUPLICATE_OFFER);","lastModifiedDate":"2022-11-06"},{"lineNumber":120,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":121,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":122,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":123,"author":{"gitId":"jeromehjj"},"content":"    public void execute_invalidOfferIndexUnfilteredList_failure() {","lastModifiedDate":"2022-11-06"},{"lineNumber":124,"author":{"gitId":"jeromehjj"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOfferList().size() + 1);","lastModifiedDate":"2022-11-06"},{"lineNumber":125,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand.EditOfferDescriptor descriptor \u003d new EditOfferDescriptorBuilder()","lastModifiedDate":"2022-11-06"},{"lineNumber":126,"author":{"gitId":"jeromehjj"},"content":"                .withBuyer(VALID_NAME_AMY).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":127,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand editOfferCommand \u003d new EditOfferCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":128,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":129,"author":{"gitId":"jeromehjj"},"content":"        assertCommandFailure(editOfferCommand, model, Messages.MESSAGE_INVALID_OFFER_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":130,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":131,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":132,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":133,"author":{"gitId":"jeromehjj"},"content":"    public void equals() {","lastModifiedDate":"2022-11-06"},{"lineNumber":134,"author":{"gitId":"jeromehjj"},"content":"        final EditOfferCommand standardCommand \u003d new EditOfferCommand(FIRST_INDEX, DESC_OFFER_AMY);","lastModifiedDate":"2022-11-06"},{"lineNumber":135,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":136,"author":{"gitId":"jeromehjj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":137,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand.EditOfferDescriptor copyDescriptor \u003d new EditOfferCommand.EditOfferDescriptor(DESC_OFFER_AMY);","lastModifiedDate":"2022-11-06"},{"lineNumber":138,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand commandWithSameValues \u003d new EditOfferCommand(FIRST_INDEX, copyDescriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":139,"author":{"gitId":"jeromehjj"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-11-06"},{"lineNumber":140,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":141,"author":{"gitId":"jeromehjj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":142,"author":{"gitId":"jeromehjj"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-11-06"},{"lineNumber":143,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":144,"author":{"gitId":"jeromehjj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":145,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-11-06"},{"lineNumber":146,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":147,"author":{"gitId":"jeromehjj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":148,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-11-06"},{"lineNumber":149,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":150,"author":{"gitId":"jeromehjj"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":151,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(standardCommand.equals(new EditOfferCommand(SECOND_INDEX, DESC_OFFER_AMY)));","lastModifiedDate":"2022-11-06"},{"lineNumber":152,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":153,"author":{"gitId":"jeromehjj"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":154,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(standardCommand.equals(new EditOfferCommand(FIRST_INDEX, DESC_OFFER_BOB)));","lastModifiedDate":"2022-11-06"},{"lineNumber":155,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":156,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"jeromehjj":156}},{"path":"src/test/java/seedu/realtime/logic/commands/EditOfferDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.DESC_OFFER_AMY;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.DESC_OFFER_BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_LISTING_ID_2;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PRICE_2;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.testutil.EditOfferDescriptorBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"public class EditOfferDescriptorTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"    public void equals() {","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand.EditOfferDescriptor descriptorWithSameValues \u003d new EditOfferCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"                .EditOfferDescriptor(DESC_OFFER_AMY);","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"        assertTrue(DESC_OFFER_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"        assertTrue(DESC_OFFER_AMY.equals(DESC_OFFER_AMY));","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(DESC_OFFER_AMY.equals(null));","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(DESC_OFFER_AMY.equals(5));","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(DESC_OFFER_AMY.equals(DESC_OFFER_BOB));","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand.EditOfferDescriptor editedAmy \u003d new EditOfferDescriptorBuilder(DESC_OFFER_AMY)","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"                .withBuyer(VALID_NAME_BOB).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(DESC_OFFER_AMY.equals(editedAmy));","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"        // different offer price -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"        editedAmy \u003d new EditOfferDescriptorBuilder(DESC_OFFER_AMY).withOfferPrice(VALID_PRICE_2).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(DESC_OFFER_AMY.equals(editedAmy));","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"        // different listing ID -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"        editedAmy \u003d new EditOfferDescriptorBuilder(DESC_OFFER_AMY).withListing(VALID_LISTING_ID_2).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(DESC_OFFER_AMY.equals(editedAmy));","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"jeromehjj":50}},{"path":"src/test/java/seedu/realtime/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"hoang227":5,"-":15}},{"path":"src/test/java/seedu/realtime/logic/commands/FindClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.CARL;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.ELLE;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.FIONA;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.getTypicalRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"public class FindClientCommandTest {","lastModifiedDate":"2022-10-30"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    private Model model \u003d new ModelManager(getTypicalRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        FindClientCommand findFirstCommand \u003d new FindClientCommand(firstPredicate);","lastModifiedDate":"2022-10-30"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        FindClientCommand findSecondCommand \u003d new FindClientCommand(secondPredicate);","lastModifiedDate":"2022-10-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        FindClientCommand findFirstCommandCopy \u003d new FindClientCommand(firstPredicate);","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-10-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    public void execute_zeroKeywords_noClientFound() {","lastModifiedDate":"2022-10-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        FindClientCommand command \u003d new FindClientCommand(predicate);","lastModifiedDate":"2022-10-30"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        expectedModel.updateFilteredClientList(predicate);","lastModifiedDate":"2022-10-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredClientList());","lastModifiedDate":"2022-10-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"    public void execute_multipleKeywords_multipleClientsFound() {","lastModifiedDate":"2022-10-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        FindClientCommand command \u003d new FindClientCommand(predicate);","lastModifiedDate":"2022-10-30"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        expectedModel.updateFilteredClientList(predicate);","lastModifiedDate":"2022-10-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredClientList());","lastModifiedDate":"2022-10-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"hoang227":26,"-":57}},{"path":"src/test/java/seedu/realtime/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"hoang227":5,"-":15}},{"path":"src/test/java/seedu/realtime/logic/commands/ViewClientListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.getTypicalRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.FIRST_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"public class ViewClientListCommandTest {","lastModifiedDate":"2022-10-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        model \u003d new ModelManager(getTypicalRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"        expectedModel \u003d new ModelManager(model.getRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(new ViewClientListCommand(), model, ViewClientListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        showClientAtIndex(model, FIRST_INDEX);","lastModifiedDate":"2022-11-04"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(new ViewClientListCommand(), model, ViewClientListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"hoang227":14,"-":25}},{"path":"src/test/java/seedu/realtime/logic/commands/ViewListingsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.showListingAtIndex;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.FIRST_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalListings.getTypicalRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"public class ViewListingsCommandTest {","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    private Model model;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    @BeforeEach","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public void setUp() {","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        model \u003d new ModelManager(getTypicalRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"        expectedModel \u003d new ModelManager(model.getRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(new ViewListingsCommand(), model, ViewListingsCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        showListingAtIndex(model, FIRST_INDEX);","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(new ViewListingsCommand(), model, ViewListingsCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"hoang227":39}},{"path":"src/test/java/seedu/realtime/logic/parser/AddClientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.AddClientCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Email;","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Phone;","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.ClientBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"public class AddClientCommandParserTest {","lastModifiedDate":"2022-10-30"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    private AddClientCommandParser parser \u003d new AddClientCommandParser();","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        Client expectedClient \u003d new ClientBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddClientCommand(expectedClient));","lastModifiedDate":"2022-10-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddClientCommand(expectedClient));","lastModifiedDate":"2022-10-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddClientCommand(expectedClient));","lastModifiedDate":"2022-10-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddClientCommand(expectedClient));","lastModifiedDate":"2022-10-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddClientCommand(expectedClient));","lastModifiedDate":"2022-10-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        Client expectedClientMultipleTags \u003d new ClientBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddClientCommand(expectedClientMultipleTags));","lastModifiedDate":"2022-10-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"        Client expectedClient \u003d new ClientBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"                new AddClientCommand(expectedClient));","lastModifiedDate":"2022-10-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClientCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"hoang227":52,"-":89}},{"path":"src/test/java/seedu/realtime/logic/parser/AddOfferCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_LISTING_ID;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_OFFER_PRICE;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.LISTING_ID_DESC_AMY;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.LISTING_ID_DESC_BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.OFFER_PRICE_DESC_AMY;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.OFFER_PRICE_DESC_BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_LISTING_ID_1;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PRICE_1;","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.testutil.TypicalOffers.AMY;","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.logic.commands.AddOfferCommand;","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.offer.Price;","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.testutil.OfferBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"public class AddOfferCommandParserTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"    private AddOfferCommandParser parser \u003d new AddOfferCommandParser();","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"        Offer expectedOffer \u003d new OfferBuilder(AMY).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + LISTING_ID_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"            + OFFER_PRICE_DESC_AMY, new AddOfferCommand(expectedOffer));","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + NAME_DESC_AMY + LISTING_ID_DESC_AMY","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"            + OFFER_PRICE_DESC_AMY, new AddOfferCommand(expectedOffer));","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"        // multiple listing IDs - last listing ID accepted","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + LISTING_ID_DESC_BOB + LISTING_ID_DESC_AMY","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"            + OFFER_PRICE_DESC_AMY, new AddOfferCommand(expectedOffer));","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"        // multiple offer prices - last offer prices accepted","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + LISTING_ID_DESC_AMY + OFFER_PRICE_DESC_BOB","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"            + OFFER_PRICE_DESC_AMY, new AddOfferCommand(expectedOffer));","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOfferCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"        // missing name prefix","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + LISTING_ID_DESC_BOB + OFFER_PRICE_DESC_BOB,","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"                expectedMessage);","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"        // missing offer price prefix","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + LISTING_ID_DESC_BOB + VALID_PRICE_1, expectedMessage);","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"        // missing listing ID prefix","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + OFFER_PRICE_DESC_BOB + VALID_LISTING_ID_1, expectedMessage);","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"        // all prefixes missing","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"jeromehjj"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_LISTING_ID_1 + VALID_PRICE_1, expectedMessage);","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"jeromehjj"},"content":"        // invalid name","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"jeromehjj"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + LISTING_ID_DESC_AMY + OFFER_PRICE_DESC_AMY,","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"jeromehjj"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"jeromehjj"},"content":"        // invalid listing ID","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"jeromehjj"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_LISTING_ID + OFFER_PRICE_DESC_BOB,","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"jeromehjj"},"content":"                ListingId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"jeromehjj"},"content":"        // invalid offer price","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"jeromehjj"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + LISTING_ID_DESC_BOB + INVALID_OFFER_PRICE,","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"jeromehjj"},"content":"                Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"jeromehjj"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"jeromehjj"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + LISTING_ID_DESC_BOB + INVALID_OFFER_PRICE,","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"jeromehjj"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"jeromehjj"},"content":"        // non-empty preamble","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"jeromehjj"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + LISTING_ID_DESC_BOB","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"jeromehjj"},"content":"            + OFFER_PRICE_DESC_BOB, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOfferCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"jeromehjj":95}},{"path":"src/test/java/seedu/realtime/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"hoang227":1,"-":149}},{"path":"src/test/java/seedu/realtime/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.Command;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"hoang227":3,"-":36}},{"path":"src/test/java/seedu/realtime/logic/parser/DeleteClientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.FIRST_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.DeleteClientCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"public class DeleteClientCommandParserTest {","lastModifiedDate":"2022-10-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    private DeleteClientCommandParser parser \u003d new DeleteClientCommandParser();","lastModifiedDate":"2022-10-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, \"1\", new DeleteClientCommand(FIRST_INDEX));","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"                        DeleteClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"hoang227":10,"Isaaclhy00":2,"-":22}},{"path":"src/test/java/seedu/realtime/logic/parser/DeleteOfferCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.testutil.TypicalIndexes.FIRST_INDEX;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.logic.commands.DeleteOfferCommand;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":" * outside of the DeleteOfferCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":" * same path through the DeleteOfferCommand, and therefore we test only one of them.","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"public class DeleteOfferCommandParserTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"    private DeleteOfferCommandParser parser \u003d new DeleteOfferCommandParser();","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"    public void parse_validArgs_returnsDeleteOfferCommand() {","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"        assertParseSuccess(parser, \"1\", new DeleteOfferCommand(FIRST_INDEX));","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteOfferCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"jeromehjj":33}},{"path":"src/test/java/seedu/realtime/logic/parser/EditClientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.FIRST_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.SECOND_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.THIRD_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditClientCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditClientCommand.EditClientDescriptor;","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Email;","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Phone;","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"public class EditClientCommandParserTest {","lastModifiedDate":"2022-10-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditClientCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    private EditClientCommandParser parser \u003d new EditClientCommandParser();","lastModifiedDate":"2022-10-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, \"1\", EditClientCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Client} being edited,","lastModifiedDate":"2022-10-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"        Index targetIndex \u003d SECOND_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"        EditClientCommand expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"        Index targetIndex \u003d FIRST_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"        EditClientCommand expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"        Index targetIndex \u003d THIRD_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"        EditClientCommand expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"hoang227"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":146,"author":{"gitId":"hoang227"},"content":"        expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"hoang227"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":152,"author":{"gitId":"hoang227"},"content":"        expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"hoang227"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":158,"author":{"gitId":"hoang227"},"content":"        expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"hoang227"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":164,"author":{"gitId":"hoang227"},"content":"        expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"hoang227"},"content":"        Index targetIndex \u003d FIRST_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"hoang227"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"hoang227"},"content":"        EditClientCommand expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"hoang227"},"content":"        Index targetIndex \u003d FIRST_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"hoang227"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":189,"author":{"gitId":"hoang227"},"content":"        EditClientCommand expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"hoang227"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"hoang227"},"content":"        expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"hoang227"},"content":"        Index targetIndex \u003d THIRD_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"hoang227"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-10-30"},{"lineNumber":207,"author":{"gitId":"hoang227"},"content":"        EditClientCommand expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"hoang227":73,"-":138}},{"path":"src/test/java/seedu/realtime/logic/parser/EditOfferCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_LISTING_ID;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_OFFER_PRICE;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.LISTING_ID_DESC_AMY;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.LISTING_ID_DESC_BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.OFFER_PRICE_DESC_AMY;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.OFFER_PRICE_DESC_BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_LISTING_ID_1;","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_LISTING_ID_2;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PRICE_1;","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PRICE_2;","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.testutil.TypicalIndexes.FIRST_INDEX;","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.testutil.TypicalIndexes.SECOND_INDEX;","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.testutil.TypicalIndexes.THIRD_INDEX;","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.logic.commands.EditOfferCommand;","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.offer.Price;","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.testutil.EditOfferDescriptorBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"public class EditOfferCommandParserTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"        String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditOfferCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"    private EditOfferCommandParser parser \u003d new EditOfferCommandParser();","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"        // no index specified","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"        // no field specified","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"        assertParseFailure(parser, \"1\", EditOfferCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"        // no index and no field specified","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"        // negative index","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"        // zero index","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"jeromehjj"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"        assertParseFailure(parser, \"1\" + INVALID_OFFER_PRICE, Price.MESSAGE_CONSTRAINTS); // invalid price","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"        assertParseFailure(parser, \"1\" + INVALID_LISTING_ID, ListingId.MESSAGE_CONSTRAINTS); // invalid listing ID","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"jeromehjj"},"content":"        // invalid offer price followed by valid listing ID","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"jeromehjj"},"content":"        assertParseFailure(parser, \"1\" + INVALID_OFFER_PRICE + LISTING_ID_DESC_AMY, Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"jeromehjj"},"content":"        // valid price followed by invalid price. The test case for invalid price followed by valid price","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"jeromehjj"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"jeromehjj"},"content":"        assertParseFailure(parser, \"1\" + OFFER_PRICE_DESC_BOB + INVALID_OFFER_PRICE, Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"jeromehjj"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"jeromehjj"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_OFFER_PRICE + VALID_LISTING_ID_1,","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"jeromehjj"},"content":"            Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"jeromehjj"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"jeromehjj"},"content":"        Index targetIndex \u003d SECOND_INDEX;","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"jeromehjj"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_BOB + OFFER_PRICE_DESC_BOB + LISTING_ID_DESC_BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand.EditOfferDescriptor descriptor \u003d new EditOfferDescriptorBuilder().withBuyer(VALID_NAME_BOB)","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"jeromehjj"},"content":"            .withOfferPrice(VALID_PRICE_2).withListing(VALID_LISTING_ID_2).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand expectedCommand \u003d new EditOfferCommand(targetIndex, descriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"jeromehjj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":97,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":99,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"jeromehjj"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":101,"author":{"gitId":"jeromehjj"},"content":"        Index targetIndex \u003d FIRST_INDEX;","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"jeromehjj"},"content":"        String userInput \u003d targetIndex.getOneBased() + OFFER_PRICE_DESC_BOB + NAME_DESC_BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":103,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":104,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand.EditOfferDescriptor descriptor \u003d new EditOfferDescriptorBuilder().withOfferPrice(VALID_PRICE_2)","lastModifiedDate":"2022-11-06"},{"lineNumber":105,"author":{"gitId":"jeromehjj"},"content":"            .withBuyer(VALID_NAME_BOB).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":106,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand expectedCommand \u003d new EditOfferCommand(targetIndex, descriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":107,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":108,"author":{"gitId":"jeromehjj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":109,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":110,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":112,"author":{"gitId":"jeromehjj"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":113,"author":{"gitId":"jeromehjj"},"content":"        // name","lastModifiedDate":"2022-11-06"},{"lineNumber":114,"author":{"gitId":"jeromehjj"},"content":"        Index targetIndex \u003d THIRD_INDEX;","lastModifiedDate":"2022-11-06"},{"lineNumber":115,"author":{"gitId":"jeromehjj"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2022-11-06"},{"lineNumber":116,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand.EditOfferDescriptor descriptor \u003d new EditOfferDescriptorBuilder()","lastModifiedDate":"2022-11-06"},{"lineNumber":117,"author":{"gitId":"jeromehjj"},"content":"                .withBuyer(VALID_NAME_AMY).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":118,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand expectedCommand \u003d new EditOfferCommand(targetIndex, descriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":119,"author":{"gitId":"jeromehjj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":120,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":121,"author":{"gitId":"jeromehjj"},"content":"        // offer price","lastModifiedDate":"2022-11-06"},{"lineNumber":122,"author":{"gitId":"jeromehjj"},"content":"        userInput \u003d targetIndex.getOneBased() + OFFER_PRICE_DESC_AMY;","lastModifiedDate":"2022-11-06"},{"lineNumber":123,"author":{"gitId":"jeromehjj"},"content":"        descriptor \u003d new EditOfferDescriptorBuilder().withOfferPrice(VALID_PRICE_1).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":124,"author":{"gitId":"jeromehjj"},"content":"        expectedCommand \u003d new EditOfferCommand(targetIndex, descriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":125,"author":{"gitId":"jeromehjj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":126,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":127,"author":{"gitId":"jeromehjj"},"content":"        // listing ID","lastModifiedDate":"2022-11-06"},{"lineNumber":128,"author":{"gitId":"jeromehjj"},"content":"        userInput \u003d targetIndex.getOneBased() + LISTING_ID_DESC_AMY;","lastModifiedDate":"2022-11-06"},{"lineNumber":129,"author":{"gitId":"jeromehjj"},"content":"        descriptor \u003d new EditOfferDescriptorBuilder().withListing(VALID_LISTING_ID_1).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":130,"author":{"gitId":"jeromehjj"},"content":"        expectedCommand \u003d new EditOfferCommand(targetIndex, descriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":131,"author":{"gitId":"jeromehjj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":132,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":133,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":134,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":135,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":136,"author":{"gitId":"jeromehjj"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-11-06"},{"lineNumber":137,"author":{"gitId":"jeromehjj"},"content":"        Index targetIndex \u003d FIRST_INDEX;","lastModifiedDate":"2022-11-06"},{"lineNumber":138,"author":{"gitId":"jeromehjj"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY + LISTING_ID_DESC_AMY + OFFER_PRICE_DESC_AMY","lastModifiedDate":"2022-11-06"},{"lineNumber":139,"author":{"gitId":"jeromehjj"},"content":"            + NAME_DESC_AMY + LISTING_ID_DESC_AMY + OFFER_PRICE_DESC_AMY","lastModifiedDate":"2022-11-06"},{"lineNumber":140,"author":{"gitId":"jeromehjj"},"content":"            + NAME_DESC_BOB + LISTING_ID_DESC_BOB + OFFER_PRICE_DESC_BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":141,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":142,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand.EditOfferDescriptor descriptor \u003d new EditOfferDescriptorBuilder().withBuyer(VALID_NAME_BOB)","lastModifiedDate":"2022-11-06"},{"lineNumber":143,"author":{"gitId":"jeromehjj"},"content":"                .withListing(VALID_LISTING_ID_2).withOfferPrice(VALID_PRICE_2).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":144,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand expectedCommand \u003d new EditOfferCommand(targetIndex, descriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":145,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":146,"author":{"gitId":"jeromehjj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":147,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":148,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":149,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":150,"author":{"gitId":"jeromehjj"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":151,"author":{"gitId":"jeromehjj"},"content":"        // no other valid values specified","lastModifiedDate":"2022-11-06"},{"lineNumber":152,"author":{"gitId":"jeromehjj"},"content":"        Index targetIndex \u003d FIRST_INDEX;","lastModifiedDate":"2022-11-06"},{"lineNumber":153,"author":{"gitId":"jeromehjj"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_OFFER_PRICE + OFFER_PRICE_DESC_BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":154,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand.EditOfferDescriptor descriptor \u003d new EditOfferDescriptorBuilder()","lastModifiedDate":"2022-11-06"},{"lineNumber":155,"author":{"gitId":"jeromehjj"},"content":"                .withOfferPrice(VALID_PRICE_2).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":156,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand expectedCommand \u003d new EditOfferCommand(targetIndex, descriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":157,"author":{"gitId":"jeromehjj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":158,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":159,"author":{"gitId":"jeromehjj"},"content":"        // other valid values specified","lastModifiedDate":"2022-11-06"},{"lineNumber":160,"author":{"gitId":"jeromehjj"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_BOB + LISTING_ID_DESC_BOB + OFFER_PRICE_DESC_BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":161,"author":{"gitId":"jeromehjj"},"content":"        descriptor \u003d new EditOfferDescriptorBuilder().withBuyer(VALID_NAME_BOB).withListing(VALID_LISTING_ID_2)","lastModifiedDate":"2022-11-06"},{"lineNumber":162,"author":{"gitId":"jeromehjj"},"content":"            .withOfferPrice(VALID_PRICE_2).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":163,"author":{"gitId":"jeromehjj"},"content":"        expectedCommand \u003d new EditOfferCommand(targetIndex, descriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":164,"author":{"gitId":"jeromehjj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":165,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":166,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"jeromehjj":166}},{"path":"src/test/java/seedu/realtime/logic/parser/FindClientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.FindClientCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"public class FindClientCommandParserTest {","lastModifiedDate":"2022-10-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    private FindClientCommandParser parser \u003d new FindClientCommandParser();","lastModifiedDate":"2022-10-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"                        FindClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        FindClientCommand expectedFindClientCommand \u003d","lastModifiedDate":"2022-10-30"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"                new FindClientCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-30"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindClientCommand);","lastModifiedDate":"2022-10-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindClientCommand);","lastModifiedDate":"2022-10-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"hoang227":13,"Isaaclhy00":2,"-":21}},{"path":"src/test/java/seedu/realtime/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.FIRST_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.offer.Price;","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Email;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Phone;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"    private static final String INVALID_PRICE \u003d \"-1\";","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"    private static final String INVALID_LISTING_ID \u003d \" \";","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"    private static final String VALID_PRICE \u003d \"123456\";","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"    private static final String VALID_LISTING_ID \u003d \"BEDOK_SOUTH\";","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        assertEquals(FIRST_INDEX, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-11-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        assertEquals(FIRST_INDEX, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-11-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":203,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":204,"author":{"gitId":"jeromehjj"},"content":"    public void parsePrice_null_throwsNullPointerException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":205,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePrice((String) null));","lastModifiedDate":"2022-11-06"},{"lineNumber":206,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":207,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":208,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":209,"author":{"gitId":"jeromehjj"},"content":"    public void parsePrice_invalidValue_throwsParseException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":210,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePrice(INVALID_PRICE));","lastModifiedDate":"2022-11-06"},{"lineNumber":211,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":212,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":213,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":214,"author":{"gitId":"jeromehjj"},"content":"    public void parsePrice_validValueWithoutWhitespace_returnsPrice() throws Exception {","lastModifiedDate":"2022-11-06"},{"lineNumber":215,"author":{"gitId":"jeromehjj"},"content":"        Price expectedPhone \u003d new Price(VALID_PRICE);","lastModifiedDate":"2022-11-06"},{"lineNumber":216,"author":{"gitId":"jeromehjj"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePrice(VALID_PHONE));","lastModifiedDate":"2022-11-06"},{"lineNumber":217,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":218,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":219,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":220,"author":{"gitId":"jeromehjj"},"content":"    public void parsePrice_validValueWithWhitespace_returnsTrimmedPrice() throws Exception {","lastModifiedDate":"2022-11-06"},{"lineNumber":221,"author":{"gitId":"jeromehjj"},"content":"        String priceWithWhitespace \u003d WHITESPACE + VALID_PRICE + WHITESPACE;","lastModifiedDate":"2022-11-06"},{"lineNumber":222,"author":{"gitId":"jeromehjj"},"content":"        Price expectedPrice \u003d new Price(VALID_PRICE);","lastModifiedDate":"2022-11-06"},{"lineNumber":223,"author":{"gitId":"jeromehjj"},"content":"        assertEquals(expectedPrice, ParserUtil.parsePrice(priceWithWhitespace));","lastModifiedDate":"2022-11-06"},{"lineNumber":224,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":225,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":226,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":227,"author":{"gitId":"jeromehjj"},"content":"    public void parseListingId_null_throwsNullPointerException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":228,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseListingId((String) null));","lastModifiedDate":"2022-11-06"},{"lineNumber":229,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":230,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":231,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":232,"author":{"gitId":"jeromehjj"},"content":"    public void parseListingId_invalidValue_throwsParseException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":233,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseListingId(INVALID_LISTING_ID));","lastModifiedDate":"2022-11-06"},{"lineNumber":234,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":235,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":236,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":237,"author":{"gitId":"jeromehjj"},"content":"    public void parseListingId_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2022-11-06"},{"lineNumber":238,"author":{"gitId":"jeromehjj"},"content":"        ListingId expectedListingId \u003d new ListingId(VALID_LISTING_ID);","lastModifiedDate":"2022-11-06"},{"lineNumber":239,"author":{"gitId":"jeromehjj"},"content":"        assertEquals(expectedListingId, ParserUtil.parseListingId(VALID_LISTING_ID));","lastModifiedDate":"2022-11-06"},{"lineNumber":240,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":241,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":242,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":243,"author":{"gitId":"jeromehjj"},"content":"    public void parseListingId_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2022-11-06"},{"lineNumber":244,"author":{"gitId":"jeromehjj"},"content":"        String listingIdWithWhitespace \u003d WHITESPACE + VALID_LISTING_ID + WHITESPACE;","lastModifiedDate":"2022-11-06"},{"lineNumber":245,"author":{"gitId":"jeromehjj"},"content":"        ListingId expectedListingId \u003d new ListingId(VALID_LISTING_ID);","lastModifiedDate":"2022-11-06"},{"lineNumber":246,"author":{"gitId":"jeromehjj"},"content":"        assertEquals(expectedListingId, ParserUtil.parseListingId(listingIdWithWhitespace));","lastModifiedDate":"2022-11-06"},{"lineNumber":247,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"jeromehjj":52,"hoang227":12,"-":184}},{"path":"src/test/java/seedu/realtime/logic/parser/RealTimeParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.FIRST_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.AddClientCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.logic.commands.AddOfferCommand;","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.ClearCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.DeleteClientCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.logic.commands.DeleteOfferCommand;","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditClientCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditClientCommand.EditClientDescriptor;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.logic.commands.EditOfferCommand;","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.logic.commands.EditOfferCommand.EditOfferDescriptor;","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.ExitCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.FindClientCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.HelpCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.ViewClientListCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.ClientBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.ClientUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.testutil.EditOfferDescriptorBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.testutil.OfferBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.testutil.OfferUtil;","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"public class RealTimeParserTest {","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    private final RealTimeParser parser \u003d new RealTimeParser();","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"    public void parseCommand_addClient() throws Exception {","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2022-10-30"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        AddClientCommand command \u003d (AddClientCommand) parser.parseCommand(ClientUtil.getAddCommand(client));","lastModifiedDate":"2022-10-30"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        assertEquals(new AddClientCommand(client), command);","lastModifiedDate":"2022-10-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"    public void parseCommand_addOffer() throws Exception {","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"        Offer offer \u003d new OfferBuilder().build();","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"        AddOfferCommand command \u003d (AddOfferCommand) parser.parseCommand(OfferUtil.getAddCommand(offer));","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"        assertEquals(new AddOfferCommand(offer), command);","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"    public void parseCommand_deleteClient() throws Exception {","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        DeleteClientCommand command \u003d (DeleteClientCommand) parser.parseCommand(","lastModifiedDate":"2022-10-30"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"                DeleteClientCommand.COMMAND_WORD + \" \" + FIRST_INDEX.getOneBased());","lastModifiedDate":"2022-11-04"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        assertEquals(new DeleteClientCommand(FIRST_INDEX), command);","lastModifiedDate":"2022-11-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"    public void parseCommand_deleteOffer() throws Exception {","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"        DeleteOfferCommand command \u003d (DeleteOfferCommand) parser.parseCommand(","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"                DeleteOfferCommand.COMMAND_WORD + \" \" + FIRST_INDEX.getOneBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"jeromehjj"},"content":"        assertEquals(new DeleteOfferCommand(FIRST_INDEX), command);","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"jeromehjj"},"content":"    public void parseCommand_editClient() throws Exception {","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2022-10-30"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(client).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        EditClientCommand command \u003d (EditClientCommand) parser.parseCommand(EditClientCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-30"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"                + FIRST_INDEX.getOneBased() + \" \" + ClientUtil.getEditClientDescriptorDetails(descriptor));","lastModifiedDate":"2022-11-04"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        assertEquals(new EditClientCommand(FIRST_INDEX, descriptor), command);","lastModifiedDate":"2022-11-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"jeromehjj"},"content":"    public void parseCommand_editOffer() throws Exception {","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"jeromehjj"},"content":"        Offer offer \u003d new OfferBuilder().build();","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"jeromehjj"},"content":"        EditOfferDescriptor descriptor \u003d new EditOfferDescriptorBuilder(offer).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"jeromehjj"},"content":"        EditOfferCommand command \u003d (EditOfferCommand) parser.parseCommand(EditOfferCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"jeromehjj"},"content":"                + FIRST_INDEX.getOneBased() + \" \" + OfferUtil.getEditOfferDescriptorDetails(descriptor));","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"jeromehjj"},"content":"        assertEquals(new EditOfferCommand(FIRST_INDEX, descriptor), command);","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        FindClientCommand command \u003d (FindClientCommand) parser.parseCommand(","lastModifiedDate":"2022-10-30"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"                FindClientCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-10-30"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        assertEquals(new FindClientCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"        assertTrue(parser.parseCommand(ViewClientListCommand.COMMAND_WORD) instanceof ViewClientListCommand);","lastModifiedDate":"2022-10-30"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"        assertTrue(parser.parseCommand(ViewClientListCommand.COMMAND_WORD + \" 3\") instanceof ViewClientListCommand);","lastModifiedDate":"2022-10-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jeromehjj":34,"hoang227":38,"-":60}},{"path":"src/test/java/seedu/realtime/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.ALICE;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.BENSON;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.testutil.TypicalOffers.AMY;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.GuiSettings;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.RealTimeBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertEquals(new RealTime(), new RealTime(modelManager.getRealTime()));","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        userPrefs.setRealTimeFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        userPrefs.setRealTimeFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    public void setRealTimeFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setRealTimeFilePath(null));","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"    public void setRealTimeFilePath_validPath_setsRealTimeFilePath() {","lastModifiedDate":"2022-11-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        modelManager.setRealTimeFilePath(path);","lastModifiedDate":"2022-11-05"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        assertEquals(path, modelManager.getRealTimeFilePath());","lastModifiedDate":"2022-11-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"    public void hasClient_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasClient(null));","lastModifiedDate":"2022-11-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"    public void hasClient_clientNotInRealTime_returnsFalse() {","lastModifiedDate":"2022-11-05"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        assertFalse(modelManager.hasClient(ALICE));","lastModifiedDate":"2022-11-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    public void hasClient_clientInRealTime_returnsTrue() {","lastModifiedDate":"2022-11-05"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"        modelManager.addClient(ALICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        assertTrue(modelManager.hasClient(ALICE));","lastModifiedDate":"2022-11-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"    public void getFilteredClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredClientList().remove(0));","lastModifiedDate":"2022-11-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":95,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"jeromehjj"},"content":"    public void hasOffer_nullOffer_throwsNullPointerException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":97,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasOffer(null));","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":99,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":101,"author":{"gitId":"jeromehjj"},"content":"    public void hasOffer_offerNotInRealTime_returnsFalse() {","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(modelManager.hasOffer(AMY));","lastModifiedDate":"2022-11-06"},{"lineNumber":103,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":104,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":105,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":106,"author":{"gitId":"jeromehjj"},"content":"    public void hasOffer_offerInRealTime_returnsTrue() {","lastModifiedDate":"2022-11-06"},{"lineNumber":107,"author":{"gitId":"jeromehjj"},"content":"        modelManager.addOffer(AMY);","lastModifiedDate":"2022-11-06"},{"lineNumber":108,"author":{"gitId":"jeromehjj"},"content":"        assertTrue(modelManager.hasOffer(AMY));","lastModifiedDate":"2022-11-06"},{"lineNumber":109,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":110,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":112,"author":{"gitId":"jeromehjj"},"content":"    public void getFilteredOfferList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":113,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredOfferList().remove(0));","lastModifiedDate":"2022-11-06"},{"lineNumber":114,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":115,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"        RealTime realTime \u003d new RealTimeBuilder().withClient(ALICE).withClient(BENSON).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"        RealTime differentRealTime \u003d new RealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"        modelManager \u003d new ModelManager(realTime, userPrefs);","lastModifiedDate":"2022-11-05"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(realTime, userPrefs);","lastModifiedDate":"2022-11-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"hoang227"},"content":"        // different realTime -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"        //assertFalse(modelManager.equals(new ModelManager(differentRealTime, userPrefs)));","lastModifiedDate":"2022-11-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"Gavzzz"},"content":"        //String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-21"},{"lineNumber":141,"author":{"gitId":"hoang227"},"content":"        //modelManager.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-11-05"},{"lineNumber":142,"author":{"gitId":"hoang227"},"content":"        //assertFalse(modelManager.equals(new ModelManager(realTime, userPrefs)));","lastModifiedDate":"2022-11-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":145,"author":{"gitId":"hoang227"},"content":"        modelManager.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-11-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"hoang227"},"content":"        differentUserPrefs.setRealTimeFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":150,"author":{"gitId":"hoang227"},"content":"        assertFalse(modelManager.equals(new ModelManager(realTime, differentUserPrefs)));","lastModifiedDate":"2022-11-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"jeromehjj":22,"hoang227":35,"-":94,"Gavzzz":1}},{"path":"src/test/java/seedu/realtime/model/RealTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.getTypicalRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.meeting.Meeting;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.PersonBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"public class RealTimeTest {","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    private final RealTime realTime \u003d new RealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        assertEquals(Collections.emptyList(), realTime.getPersonList());","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e realTime.resetData(null));","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    public void resetData_withValidReadOnlyRealTime_replacesData() {","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        RealTime newData \u003d getTypicalRealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        realTime.resetData(newData);","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        assertEquals(newData, realTime);","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"Gavzzz"},"content":"    /*@Test","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"Isaaclhy00"},"content":"        List\u003cListing\u003e newListings \u003d Arrays.asList();","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"        List\u003cOffer\u003e newOffers \u003d Arrays.asList();","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        RealTimeStub newData \u003d new RealTimeStub(newPersons, newListings, newOffers);","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e realTime.resetData(newData));","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"Isaaclhy00"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"Isaaclhy00"},"content":"    public void resetData_withDuplicateListings_throwsDuplicateListingException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"Isaaclhy00"},"content":"        // Two Listings with the same identity fields","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"Isaaclhy00"},"content":"        Listing editedHouse \u003d new ListingBuilder().build();","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"Isaaclhy00"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"Isaaclhy00"},"content":"        List\u003cListing\u003e newListings \u003d Arrays.asList(editedHouse, editedHouse);","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"        List\u003cOffer\u003e newOffers \u003d Arrays.asList();","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        RealTimeStub newData \u003d new RealTimeStub(newPersons, newListings, newOffers);","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        assertThrows(DuplicateListingException.class, () -\u003e realTime.resetData(newData));","lastModifiedDate":"2022-11-05"},{"lineNumber":70,"author":{"gitId":"Gavzzz"},"content":"    }*/","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e realTime.hasPerson(null));","lastModifiedDate":"2022-11-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"    public void hasPerson_personNotInRealTime_returnsFalse() {","lastModifiedDate":"2022-11-05"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        assertFalse(realTime.hasPerson(ALICE));","lastModifiedDate":"2022-11-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"    public void hasPerson_personInRealTime_returnsTrue() {","lastModifiedDate":"2022-11-05"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        realTime.addPerson(ALICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"        assertTrue(realTime.hasPerson(ALICE));","lastModifiedDate":"2022-11-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"    public void hasPerson_personWithSameIdentityFieldsInRealTime_returnsTrue() {","lastModifiedDate":"2022-11-05"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        realTime.addPerson(ALICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        assertTrue(realTime.hasPerson(editedAlice));","lastModifiedDate":"2022-11-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e realTime.getPersonList().remove(0));","lastModifiedDate":"2022-11-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"     * A stub ReadOnlyRealTime whose persons list can violate interface constraints.","lastModifiedDate":"2022-11-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"    private static class RealTimeStub implements ReadOnlyRealTime {","lastModifiedDate":"2022-11-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"Isaaclhy00"},"content":"        private final ObservableList\u003cListing\u003e listings \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"jeromehjj"},"content":"        private final ObservableList\u003cOffer\u003e offers \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"ama-chi"},"content":"        private final ObservableList\u003cMeeting\u003e meetings \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"        RealTimeStub(Collection\u003cPerson\u003e persons,","lastModifiedDate":"2022-11-05"},{"lineNumber":111,"author":{"gitId":"ama-chi"},"content":"                     Collection\u003cListing\u003e listings,","lastModifiedDate":"2022-10-24"},{"lineNumber":112,"author":{"gitId":"ama-chi"},"content":"                     Collection\u003cOffer\u003e offers,","lastModifiedDate":"2022-10-24"},{"lineNumber":113,"author":{"gitId":"ama-chi"},"content":"                     Collection\u003cMeeting\u003e meetings) {","lastModifiedDate":"2022-10-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"Isaaclhy00"},"content":"            this.listings.setAll(listings);","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"jeromehjj"},"content":"            this.offers.setAll(offers);","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"ama-chi"},"content":"            this.meetings.setAll(meetings);","lastModifiedDate":"2022-10-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":124,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"Gavzzz"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":126,"author":{"gitId":"Gavzzz"},"content":"        public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2022-10-21"},{"lineNumber":127,"author":{"gitId":"Gavzzz"},"content":"            return null;","lastModifiedDate":"2022-10-21"},{"lineNumber":128,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":129,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":130,"author":{"gitId":"Isaaclhy00"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"Isaaclhy00"},"content":"        public ObservableList\u003cListing\u003e getListingList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"Isaaclhy00"},"content":"            return listings;","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"jeromehjj"},"content":"        @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"jeromehjj"},"content":"        public ObservableList\u003cOffer\u003e getOfferList() {","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"jeromehjj"},"content":"            return offers;","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":140,"author":{"gitId":"ama-chi"},"content":"        @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":141,"author":{"gitId":"ama-chi"},"content":"        public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2022-10-24"},{"lineNumber":142,"author":{"gitId":"ama-chi"},"content":"            return meetings;","lastModifiedDate":"2022-10-24"},{"lineNumber":143,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"jeromehjj":9,"hoang227":37,"ama-chi":10,"Isaaclhy00":16,"-":66,"Gavzzz":7}},{"path":"src/test/java/seedu/realtime/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    public void setRealTimeFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setRealTimeFilePath(null));","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"hoang227":4,"-":17}},{"path":"src/test/java/seedu/realtime/model/listing/ListingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PRICE_1;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_GARDEN;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_POOL;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalListings.ALICE;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalListings.BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.ListingBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"public class ListingTest {","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        Listing listing \u003d new ListingBuilder().build();","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e listing.getTags().remove(0));","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    public void isSameListing() {","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        assertTrue(ALICE.isSameListing(ALICE));","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.isSameListing(null));","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        // same id, all other attributes different -\u003e returns true","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        Listing editedAlice \u003d new ListingBuilder(ALICE).withOwner(VALID_NAME_BOB)","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"                .withAddress(VALID_ADDRESS_BOB).withAskingPrice(VALID_PRICE_1).withTags(VALID_TAG_POOL).build();","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        assertTrue(ALICE.isSameListing(editedAlice));","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        // different id, all other attributes same -\u003e returns true","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        editedAlice \u003d new ListingBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        assertTrue(ALICE.isSameListing(editedAlice));","lastModifiedDate":"2022-11-01"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        // same address, all other attributes different -\u003e returns true","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        editedAlice \u003d new ListingBuilder(ALICE).withId(VALID_ID_BOB).withOwner(VALID_NAME_BOB)","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"                .withAskingPrice(VALID_PRICE_1).withTags(VALID_TAG_POOL).build();","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        assertTrue(ALICE.isSameListing(editedAlice));","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        // different address, all other attributes same -\u003e returns true","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        editedAlice \u003d new ListingBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-11-01"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        assertTrue(ALICE.isSameListing(editedAlice));","lastModifiedDate":"2022-11-01"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        // different id, different address, all other attributes same -\u003e return false","lastModifiedDate":"2022-11-01"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        editedAlice \u003d new ListingBuilder(ALICE).withId(VALID_ID_BOB).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-11-01"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.isSameListing(editedAlice));","lastModifiedDate":"2022-11-01"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        // id differs in case, address diffrent in case, all other attributes same -\u003e returns false","lastModifiedDate":"2022-11-01"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        Listing editedBob \u003d new ListingBuilder(BOB).withId(VALID_ID_BOB.toUpperCase())","lastModifiedDate":"2022-11-01"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"                .withAddress(VALID_ADDRESS_BOB.toUpperCase()).build();","lastModifiedDate":"2022-11-01"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        assertFalse(BOB.isSameListing(editedBob));","lastModifiedDate":"2022-11-01"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        // id and address has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-11-01"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        String idWithTrailingSpaces \u003d VALID_ID_BOB + \" \";","lastModifiedDate":"2022-11-01"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        String addressWithTrailingSpaces \u003d VALID_ADDRESS_BOB + \" \";","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        editedBob \u003d new ListingBuilder(BOB).withId(idWithTrailingSpaces)","lastModifiedDate":"2022-11-01"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"                .withAddress(addressWithTrailingSpaces).build();","lastModifiedDate":"2022-11-01"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        assertFalse(BOB.isSameListing(editedBob));","lastModifiedDate":"2022-11-01"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    public void equals() {","lastModifiedDate":"2022-11-01"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-01"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        Listing aliceCopy \u003d new ListingBuilder(ALICE).build();","lastModifiedDate":"2022-11-01"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2022-11-01"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-01"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2022-11-01"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-01"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2022-11-01"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-11-01"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"        // different listing -\u003e returns false","lastModifiedDate":"2022-11-01"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2022-11-01"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        // different id different address -\u003e returns false","lastModifiedDate":"2022-11-01"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        Listing editedAlice \u003d new ListingBuilder(ALICE).withId(\"bob\").withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-11-01"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-11-01"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        // different id same address -\u003e returns true","lastModifiedDate":"2022-11-01"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        editedAlice \u003d new ListingBuilder(ALICE).withId(\"bob\").build();","lastModifiedDate":"2022-11-01"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"        assertTrue(ALICE.equals(editedAlice));","lastModifiedDate":"2022-11-01"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        // different address same id -\u003e returns true","lastModifiedDate":"2022-11-01"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        editedAlice \u003d new ListingBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-11-01"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        assertTrue(ALICE.equals(editedAlice));","lastModifiedDate":"2022-11-01"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"        // different owner -\u003e returns true","lastModifiedDate":"2022-11-01"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        editedAlice \u003d new ListingBuilder(ALICE).withOwner(VALID_NAME_BOB).build();","lastModifiedDate":"2022-11-01"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"        assertTrue(ALICE.equals(editedAlice));","lastModifiedDate":"2022-11-01"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        // different asking price -\u003e returns true","lastModifiedDate":"2022-11-01"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"        editedAlice \u003d new ListingBuilder(ALICE).withAskingPrice(VALID_PRICE_1).build();","lastModifiedDate":"2022-11-01"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        assertTrue(ALICE.equals(editedAlice));","lastModifiedDate":"2022-11-01"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"        // different tags -\u003e returns true","lastModifiedDate":"2022-11-01"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"        editedAlice \u003d new ListingBuilder(ALICE).withTags(VALID_TAG_GARDEN).build();","lastModifiedDate":"2022-11-01"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"        assertTrue(ALICE.equals(editedAlice));","lastModifiedDate":"2022-11-01"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"hoang227":113}},{"path":"src/test/java/seedu/realtime/model/meeting/MeetingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ama-chi"},"content":"package seedu.realtime.model.meeting;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"ama-chi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"ama-chi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"ama-chi"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_DATETIME_2;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"ama-chi"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"ama-chi"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"ama-chi"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_CHILDREN;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"ama-chi"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_CONTRACT;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"ama-chi"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"ama-chi"},"content":"import static seedu.realtime.testutil.TypicalMeetings.ALICE;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"ama-chi"},"content":"import static seedu.realtime.testutil.TypicalMeetings.BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"ama-chi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"ama-chi"},"content":"import seedu.realtime.testutil.MeetingBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"ama-chi"},"content":"public class MeetingTest {","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"ama-chi"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"ama-chi"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"ama-chi"},"content":"        Meeting meeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"ama-chi"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e meeting.getTags().remove(0));","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"ama-chi"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"ama-chi"},"content":"    public void isSameMeeting() {","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"ama-chi"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"ama-chi"},"content":"        assertTrue(ALICE.isSameMeeting(ALICE));","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"ama-chi"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"ama-chi"},"content":"        assertFalse(ALICE.isSameMeeting(null));","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"ama-chi"},"content":"        // same address id, all other attributes different -\u003e returns false","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"ama-chi"},"content":"        Meeting editedAlice \u003d new MeetingBuilder(ALICE)","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"ama-chi"},"content":"                .withClient(VALID_NAME_BOB)","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"ama-chi"},"content":"                .withDateTime(VALID_DATETIME_2)","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"ama-chi"},"content":"                .withTags(VALID_TAG_CONTRACT)","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"ama-chi"},"content":"                .build();","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"ama-chi"},"content":"        assertFalse(ALICE.isSameMeeting(editedAlice));","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"ama-chi"},"content":"        // different address id, all other attributes same -\u003e returns false","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"ama-chi"},"content":"        editedAlice \u003d new MeetingBuilder(ALICE).withListing(VALID_ID_BOB).build();","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"ama-chi"},"content":"        assertFalse(ALICE.isSameMeeting(editedAlice));","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"ama-chi"},"content":"        // different time -\u003e returns false","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"ama-chi"},"content":"        editedAlice \u003d new MeetingBuilder(ALICE).withDateTime(VALID_DATETIME_2).build();","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"ama-chi"},"content":"        assertFalse(ALICE.isSameMeeting(editedAlice));","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"ama-chi"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"ama-chi"},"content":"        editedAlice \u003d new MeetingBuilder(ALICE).withClient(VALID_NAME_BOB).build();","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"ama-chi"},"content":"        assertFalse(ALICE.isSameMeeting(editedAlice));","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"ama-chi"},"content":"        // different tags -\u003e returns true","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"ama-chi"},"content":"        editedAlice \u003d new MeetingBuilder(ALICE).withTags(VALID_TAG_CONTRACT, VALID_TAG_CHILDREN).build();","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"ama-chi"},"content":"        assertTrue(ALICE.isSameMeeting(editedAlice));","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"ama-chi"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"ama-chi"},"content":"    public void equals() {","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"ama-chi"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"ama-chi"},"content":"        Meeting aliceCopy \u003d new MeetingBuilder(ALICE).build();","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"ama-chi"},"content":"        assertTrue(ALICE.isSameMeeting(aliceCopy));","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":67,"author":{"gitId":"ama-chi"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"ama-chi"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"ama-chi"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"ama-chi"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":73,"author":{"gitId":"ama-chi"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-11-07"},{"lineNumber":74,"author":{"gitId":"ama-chi"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2022-11-07"},{"lineNumber":75,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":76,"author":{"gitId":"ama-chi"},"content":"        // different meeting -\u003e returns false","lastModifiedDate":"2022-11-07"},{"lineNumber":77,"author":{"gitId":"ama-chi"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":79,"author":{"gitId":"ama-chi"},"content":"        // different address id -\u003e returns false","lastModifiedDate":"2022-11-07"},{"lineNumber":80,"author":{"gitId":"ama-chi"},"content":"        Meeting editedAlice \u003d new MeetingBuilder(ALICE).withListing(VALID_ID_BOB).build();","lastModifiedDate":"2022-11-07"},{"lineNumber":81,"author":{"gitId":"ama-chi"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-11-07"},{"lineNumber":82,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":83,"author":{"gitId":"ama-chi"},"content":"        // different time -\u003e returns false","lastModifiedDate":"2022-11-07"},{"lineNumber":84,"author":{"gitId":"ama-chi"},"content":"        editedAlice \u003d new MeetingBuilder(ALICE).withDateTime(VALID_DATETIME_2).build();","lastModifiedDate":"2022-11-07"},{"lineNumber":85,"author":{"gitId":"ama-chi"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-11-07"},{"lineNumber":86,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":87,"author":{"gitId":"ama-chi"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-11-07"},{"lineNumber":88,"author":{"gitId":"ama-chi"},"content":"        editedAlice \u003d new MeetingBuilder(ALICE).withClient(VALID_NAME_BOB).build();","lastModifiedDate":"2022-11-07"},{"lineNumber":89,"author":{"gitId":"ama-chi"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-11-07"},{"lineNumber":90,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":91,"author":{"gitId":"ama-chi"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-11-07"},{"lineNumber":92,"author":{"gitId":"ama-chi"},"content":"        editedAlice \u003d new MeetingBuilder(ALICE).withTags(VALID_TAG_CONTRACT, VALID_TAG_CHILDREN).build();","lastModifiedDate":"2022-11-07"},{"lineNumber":93,"author":{"gitId":"ama-chi"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-11-07"},{"lineNumber":94,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":95,"author":{"gitId":"ama-chi"},"content":"}","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"ama-chi":95}},{"path":"src/test/java/seedu/realtime/model/offer/OfferTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package seedu.realtime.model.offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_LISTING_ID_BEDOK;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PRICE_1;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.testutil.TypicalOffers.ALICE;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.testutil.TypicalOffers.BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.testutil.OfferBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"public class OfferTest {","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"    public void isSameOffer() {","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"        assertTrue(ALICE.isSameOffer(ALICE));","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(ALICE.isSameOffer(null));","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        Offer editedAlice \u003d new OfferBuilder(ALICE).withOfferPrice(\"1234567\").withListing(\"1234\").build();","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(ALICE.isSameOffer(editedAlice));","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"        editedAlice \u003d new OfferBuilder(ALICE).withBuyer(VALID_NAME_AMY).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(ALICE.isSameOffer(editedAlice));","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"        Offer editedBob \u003d new OfferBuilder(BOB).withBuyer(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"        assertTrue(BOB.isSameOffer(editedBob));","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"        editedBob \u003d new OfferBuilder(BOB).withBuyer(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(BOB.isSameOffer(editedBob));","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"    public void equals() {","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"        Offer aliceCopy \u003d new OfferBuilder(ALICE).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2022-11-05"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2022-11-05"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2022-11-05"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"        // different Offer -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"        Offer editedAlice \u003d new OfferBuilder(ALICE).withBuyer(VALID_NAME_BOB).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"        // different offer Price -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"        editedAlice \u003d new OfferBuilder(ALICE).withOfferPrice(VALID_PRICE_1).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":70,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-11-05"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"        // different listing ID -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"        editedAlice \u003d new OfferBuilder(ALICE).withListing(VALID_LISTING_ID_BEDOK).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-11-05"},{"lineNumber":75,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":76,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":77,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"jeromehjj":77}},{"path":"src/test/java/seedu/realtime/model/offer/PriceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package seedu.realtime.model.offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"public class PriceTest {","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Price(null));","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"        String invalidPrice \u003d \"\";","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Price(invalidPrice));","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"    public void isValidPrice() {","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"        // null price","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(NullPointerException.class, () -\u003e Price.isValidPrice(null));","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"        // invalid prices","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(Price.isValidPrice(\"\")); // empty string","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(Price.isValidPrice(\" \")); // spaces only","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(Price.isValidPrice(\"-1\")); // negative price","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(Price.isValidPrice(\"hello\")); // non-numeric","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(Price.isValidPrice(\"123p123\")); // alphabets within digits","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(Price.isValidPrice(\"123 123\")); // spaces within digits","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(Price.isValidPrice(\"123.3123\")); // symbols within digits","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"        // valid prices","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"        assertTrue(Price.isValidPrice(\"0\")); // price starts with 0","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"        assertTrue(Price.isValidPrice(\"123456789\")); // numeric only","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"        assertTrue(Price.isValidPrice(\"010\")); // starts with 0","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"jeromehjj":41}},{"path":"src/test/java/seedu/realtime/model/offer/UniqueOfferListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package seedu.realtime.model.offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_LISTING_ID_1;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PRICE_3;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.testutil.TypicalOffers.ALICE;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.testutil.TypicalOffers.BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.testutil.TypicalOffers.HOON;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.testutil.TypicalOffers.IDA;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"import java.util.Collections;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"import java.util.List;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.offer.exceptions.DuplicateOfferException;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.offer.exceptions.OfferNotFoundException;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.testutil.OfferBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"public class UniqueOfferListTest {","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"    private final UniqueOfferList uniqueOfferList \u003d new UniqueOfferList();","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"    public void contains_nullOffer_throwsNullPointerException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOfferList.contains(null));","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"    public void contains_offerNotInList_returnsFalse() {","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"        assertFalse(uniqueOfferList.contains(IDA));","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"    public void contains_offerInList_returnsTrue() {","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"        uniqueOfferList.add(HOON);","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"        assertTrue(uniqueOfferList.contains(HOON));","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"    public void contains_offerWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"        uniqueOfferList.add(ALICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"        Offer editedAlice \u003d new OfferBuilder(ALICE).withListing(VALID_LISTING_ID_1).withOfferPrice(VALID_PRICE_3)","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"                .build();","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"        assertTrue(uniqueOfferList.contains(editedAlice));","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"    public void add_nullOffer_throwsNullPointerException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOfferList.add(null));","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"    public void add_duplicateOffer_throwsDuplicateOfferException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"        uniqueOfferList.add(ALICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(DuplicateOfferException.class, () -\u003e uniqueOfferList.add(ALICE));","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"    public void setOffer_nullTargetOffer_throwsNullPointerException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOfferList.setOffer(null, ALICE));","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"    public void setOffer_nullEditedOffer_throwsNullPointerException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":70,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOfferList.setOffer(ALICE, null));","lastModifiedDate":"2022-11-05"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"    public void setOffer_targetOfferNotInList_throwsOfferNotFoundException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":75,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(OfferNotFoundException.class, () -\u003e uniqueOfferList.setOffer(ALICE, ALICE));","lastModifiedDate":"2022-11-05"},{"lineNumber":76,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":77,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":78,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":79,"author":{"gitId":"jeromehjj"},"content":"    public void setOffer_editedOfferIsSameOffer_success() {","lastModifiedDate":"2022-11-05"},{"lineNumber":80,"author":{"gitId":"jeromehjj"},"content":"        uniqueOfferList.add(ALICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":81,"author":{"gitId":"jeromehjj"},"content":"        uniqueOfferList.setOffer(ALICE, ALICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":82,"author":{"gitId":"jeromehjj"},"content":"        UniqueOfferList expectedUniqueOfferList \u003d new UniqueOfferList();","lastModifiedDate":"2022-11-05"},{"lineNumber":83,"author":{"gitId":"jeromehjj"},"content":"        expectedUniqueOfferList.add(ALICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":84,"author":{"gitId":"jeromehjj"},"content":"        assertEquals(expectedUniqueOfferList, uniqueOfferList);","lastModifiedDate":"2022-11-05"},{"lineNumber":85,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":86,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":87,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":88,"author":{"gitId":"jeromehjj"},"content":"    public void setOffer_editedOfferHasSameIdentity_success() {","lastModifiedDate":"2022-11-05"},{"lineNumber":89,"author":{"gitId":"jeromehjj"},"content":"        uniqueOfferList.add(ALICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":90,"author":{"gitId":"jeromehjj"},"content":"        Offer editedAlice \u003d new OfferBuilder(ALICE).withListing(VALID_LISTING_ID_1).withOfferPrice(VALID_PRICE_3)","lastModifiedDate":"2022-11-05"},{"lineNumber":91,"author":{"gitId":"jeromehjj"},"content":"                .build();","lastModifiedDate":"2022-11-05"},{"lineNumber":92,"author":{"gitId":"jeromehjj"},"content":"        uniqueOfferList.setOffer(ALICE, editedAlice);","lastModifiedDate":"2022-11-05"},{"lineNumber":93,"author":{"gitId":"jeromehjj"},"content":"        UniqueOfferList expectedUniqueOfferList \u003d new UniqueOfferList();","lastModifiedDate":"2022-11-05"},{"lineNumber":94,"author":{"gitId":"jeromehjj"},"content":"        expectedUniqueOfferList.add(editedAlice);","lastModifiedDate":"2022-11-05"},{"lineNumber":95,"author":{"gitId":"jeromehjj"},"content":"        assertEquals(expectedUniqueOfferList, uniqueOfferList);","lastModifiedDate":"2022-11-05"},{"lineNumber":96,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":97,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":98,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":99,"author":{"gitId":"jeromehjj"},"content":"    public void setOffer_editedOfferHasDifferentIdentity_success() {","lastModifiedDate":"2022-11-05"},{"lineNumber":100,"author":{"gitId":"jeromehjj"},"content":"        uniqueOfferList.add(ALICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":101,"author":{"gitId":"jeromehjj"},"content":"        uniqueOfferList.setOffer(ALICE, BOB);","lastModifiedDate":"2022-11-05"},{"lineNumber":102,"author":{"gitId":"jeromehjj"},"content":"        UniqueOfferList expectedUniqueOfferList \u003d new UniqueOfferList();","lastModifiedDate":"2022-11-05"},{"lineNumber":103,"author":{"gitId":"jeromehjj"},"content":"        expectedUniqueOfferList.add(BOB);","lastModifiedDate":"2022-11-05"},{"lineNumber":104,"author":{"gitId":"jeromehjj"},"content":"        assertEquals(expectedUniqueOfferList, uniqueOfferList);","lastModifiedDate":"2022-11-05"},{"lineNumber":105,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":106,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":107,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":108,"author":{"gitId":"jeromehjj"},"content":"    public void setOffer_editedOfferHasNonUniqueIdentity_throwsDuplicateOfferException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":109,"author":{"gitId":"jeromehjj"},"content":"        uniqueOfferList.add(ALICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":110,"author":{"gitId":"jeromehjj"},"content":"        uniqueOfferList.add(BOB);","lastModifiedDate":"2022-11-05"},{"lineNumber":111,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(DuplicateOfferException.class, () -\u003e uniqueOfferList.setOffer(ALICE, BOB));","lastModifiedDate":"2022-11-05"},{"lineNumber":112,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":113,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":114,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":115,"author":{"gitId":"jeromehjj"},"content":"    public void remove_nullOffer_throwsNullPointerException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":116,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOfferList.remove(null));","lastModifiedDate":"2022-11-05"},{"lineNumber":117,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":118,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":119,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":120,"author":{"gitId":"jeromehjj"},"content":"    public void remove_offerDoesNotExist_throwsOfferNotFoundException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":121,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(OfferNotFoundException.class, () -\u003e uniqueOfferList.remove(ALICE));","lastModifiedDate":"2022-11-05"},{"lineNumber":122,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":123,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":124,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":125,"author":{"gitId":"jeromehjj"},"content":"    public void remove_existingOffer_removesOffer() {","lastModifiedDate":"2022-11-05"},{"lineNumber":126,"author":{"gitId":"jeromehjj"},"content":"        uniqueOfferList.add(ALICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":127,"author":{"gitId":"jeromehjj"},"content":"        uniqueOfferList.remove(ALICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":128,"author":{"gitId":"jeromehjj"},"content":"        UniqueOfferList expectedUniqueOfferList \u003d new UniqueOfferList();","lastModifiedDate":"2022-11-05"},{"lineNumber":129,"author":{"gitId":"jeromehjj"},"content":"        assertEquals(expectedUniqueOfferList, uniqueOfferList);","lastModifiedDate":"2022-11-05"},{"lineNumber":130,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":131,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":132,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":133,"author":{"gitId":"jeromehjj"},"content":"    public void setOffers_nullUniqueOfferList_throwsNullPointerException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":134,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOfferList.setOffers((UniqueOfferList) null));","lastModifiedDate":"2022-11-05"},{"lineNumber":135,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":136,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":137,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":138,"author":{"gitId":"jeromehjj"},"content":"    public void setOffers_uniqueOfferList_replacesOwnListWithProvidedUniqueOfferList() {","lastModifiedDate":"2022-11-05"},{"lineNumber":139,"author":{"gitId":"jeromehjj"},"content":"        uniqueOfferList.add(ALICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":140,"author":{"gitId":"jeromehjj"},"content":"        UniqueOfferList expectedUniqueOfferList \u003d new UniqueOfferList();","lastModifiedDate":"2022-11-05"},{"lineNumber":141,"author":{"gitId":"jeromehjj"},"content":"        expectedUniqueOfferList.add(BOB);","lastModifiedDate":"2022-11-05"},{"lineNumber":142,"author":{"gitId":"jeromehjj"},"content":"        uniqueOfferList.setOffers(expectedUniqueOfferList);","lastModifiedDate":"2022-11-05"},{"lineNumber":143,"author":{"gitId":"jeromehjj"},"content":"        assertEquals(expectedUniqueOfferList, uniqueOfferList);","lastModifiedDate":"2022-11-05"},{"lineNumber":144,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":145,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":146,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":147,"author":{"gitId":"jeromehjj"},"content":"    public void setOffers_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":148,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOfferList.setOffers((List\u003cOffer\u003e) null));","lastModifiedDate":"2022-11-05"},{"lineNumber":149,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":150,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":151,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":152,"author":{"gitId":"jeromehjj"},"content":"    public void setOffers_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-11-05"},{"lineNumber":153,"author":{"gitId":"jeromehjj"},"content":"        uniqueOfferList.add(ALICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":154,"author":{"gitId":"jeromehjj"},"content":"        List\u003cOffer\u003e offerList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-11-05"},{"lineNumber":155,"author":{"gitId":"jeromehjj"},"content":"        uniqueOfferList.setOffers(offerList);","lastModifiedDate":"2022-11-05"},{"lineNumber":156,"author":{"gitId":"jeromehjj"},"content":"        UniqueOfferList expectedUniqueOfferList \u003d new UniqueOfferList();","lastModifiedDate":"2022-11-05"},{"lineNumber":157,"author":{"gitId":"jeromehjj"},"content":"        expectedUniqueOfferList.add(BOB);","lastModifiedDate":"2022-11-05"},{"lineNumber":158,"author":{"gitId":"jeromehjj"},"content":"        assertEquals(expectedUniqueOfferList, uniqueOfferList);","lastModifiedDate":"2022-11-05"},{"lineNumber":159,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":160,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":161,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":162,"author":{"gitId":"jeromehjj"},"content":"    public void setOffers_listWithDuplicateOffers_throwsDuplicateOfferException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":163,"author":{"gitId":"jeromehjj"},"content":"        List\u003cOffer\u003e listWithDuplicateOffers \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":164,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(DuplicateOfferException.class, () -\u003e uniqueOfferList.setOffers(listWithDuplicateOffers));","lastModifiedDate":"2022-11-05"},{"lineNumber":165,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":166,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":167,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":168,"author":{"gitId":"jeromehjj"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":169,"author":{"gitId":"jeromehjj"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-11-05"},{"lineNumber":170,"author":{"gitId":"jeromehjj"},"content":"            -\u003e uniqueOfferList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-11-05"},{"lineNumber":171,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":172,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"jeromehjj":172}},{"path":"src/test/java/seedu/realtime/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"hoang227":2,"-":34}},{"path":"src/test/java/seedu/realtime/model/person/ClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-30"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-30"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.ALICE;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-30"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.ClientBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"public class ClientTest {","lastModifiedDate":"2022-10-30"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-30"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2022-10-30"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e client.getTags().remove(0));","lastModifiedDate":"2022-10-30"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    public void isSameClient() {","lastModifiedDate":"2022-10-30"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-30"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertTrue(ALICE.isSameClient(ALICE));","lastModifiedDate":"2022-10-30"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-30"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.isSameClient(null));","lastModifiedDate":"2022-10-30"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2022-10-30"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-30"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertTrue(ALICE.isSameClient(editedAlice));","lastModifiedDate":"2022-10-30"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-30"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.isSameClient(editedAlice));","lastModifiedDate":"2022-10-30"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-30"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        Client editedBob \u003d new ClientBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"Gavzzz"},"content":"        assertTrue(BOB.isSameClient(editedBob));","lastModifiedDate":"2022-11-04"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-30"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2022-10-30"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        editedBob \u003d new ClientBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        assertFalse(BOB.isSameClient(editedBob));","lastModifiedDate":"2022-10-30"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    public void equals() {","lastModifiedDate":"2022-10-30"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-30"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        Client aliceCopy \u003d new ClientBuilder(ALICE).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2022-10-30"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-30"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2022-10-30"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-30"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2022-10-30"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-10-30"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2022-10-30"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-10-30"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2022-10-30"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-30"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-30"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-10-30"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-30"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-10-30"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-30"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2022-10-30"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-30"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-10-30"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-30"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-30"}],"authorContributionMap":{"hoang227":90,"Gavzzz":1}},{"path":"src/test/java/seedu/realtime/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"hoang227":2,"-":66}},{"path":"src/test/java/seedu/realtime/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.ClientBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-10-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-10-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-10-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"hoang227":10,"-":65}},{"path":"src/test/java/seedu/realtime/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"hoang227":2,"-":38}},{"path":"src/test/java/seedu/realtime/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.PersonBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jeromehjj":2,"hoang227":10,"-":79}},{"path":"src/test/java/seedu/realtime/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"hoang227":2,"-":38}},{"path":"src/test/java/seedu/realtime/model/person/UniqueClientListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.ALICE;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import java.util.Collections;","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.exceptions.ClientNotFoundException;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.exceptions.DuplicateClientException;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.ClientBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"public class UniqueClientListTest {","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    private final UniqueClientList uniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    public void contains_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.contains(null));","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    public void contains_clientNotInList_returnsFalse() {","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        assertFalse(uniqueClientList.contains(ALICE));","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    public void contains_clientInList_returnsTrue() {","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        assertTrue(uniqueClientList.contains(ALICE));","lastModifiedDate":"2022-11-01"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    public void contains_clientWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"                .build();","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        assertTrue(uniqueClientList.contains(editedAlice));","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    public void add_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.add(null));","lastModifiedDate":"2022-11-01"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"    public void add_duplicateClient_throwsDuplicateClientException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-11-01"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.add(ALICE));","lastModifiedDate":"2022-11-01"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"    public void setClient_nullTargetClient_throwsNullPointerException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClient(null, ALICE));","lastModifiedDate":"2022-11-01"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"    public void setClient_nullEditedClient_throwsNullPointerException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClient(ALICE, null));","lastModifiedDate":"2022-11-01"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    public void setClient_targetClientNotInList_throwsClientNotFoundException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        assertThrows(ClientNotFoundException.class, () -\u003e uniqueClientList.setClient(ALICE, ALICE));","lastModifiedDate":"2022-11-01"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"    public void setClient_editedClientIsSameClient_success() {","lastModifiedDate":"2022-11-01"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-11-01"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        uniqueClientList.setClient(ALICE, ALICE);","lastModifiedDate":"2022-11-01"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-11-01"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        expectedUniqueClientList.add(ALICE);","lastModifiedDate":"2022-11-01"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-11-01"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    public void setClient_editedClientHasSameIdentity_success() {","lastModifiedDate":"2022-11-01"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-11-01"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-11-01"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"                .build();","lastModifiedDate":"2022-11-01"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        uniqueClientList.setClient(ALICE, editedAlice);","lastModifiedDate":"2022-11-01"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-11-01"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"        expectedUniqueClientList.add(editedAlice);","lastModifiedDate":"2022-11-01"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-11-01"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"    public void setClient_editedClientHasDifferentIdentity_success() {","lastModifiedDate":"2022-11-01"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-11-01"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        uniqueClientList.setClient(ALICE, BOB);","lastModifiedDate":"2022-11-01"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-11-01"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2022-11-01"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-11-01"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"    public void setClient_editedClientHasNonUniqueIdentity_throwsDuplicateClientException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-11-01"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"        uniqueClientList.add(BOB);","lastModifiedDate":"2022-11-01"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.setClient(ALICE, BOB));","lastModifiedDate":"2022-11-01"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"    public void remove_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.remove(null));","lastModifiedDate":"2022-11-01"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"    public void remove_clientDoesNotExist_throwsClientNotFoundException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"        assertThrows(ClientNotFoundException.class, () -\u003e uniqueClientList.remove(ALICE));","lastModifiedDate":"2022-11-01"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"    public void remove_existingClient_removesClient() {","lastModifiedDate":"2022-11-01"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-11-01"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"        uniqueClientList.remove(ALICE);","lastModifiedDate":"2022-11-01"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-11-01"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-11-01"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"    public void setClients_nullUniqueClientList_throwsNullPointerException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClients((UniqueClientList) null));","lastModifiedDate":"2022-11-01"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":136,"author":{"gitId":"hoang227"},"content":"    public void setClients_uniqueClientList_replacesOwnListWithProvidedUniqueClientList() {","lastModifiedDate":"2022-11-01"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-11-01"},{"lineNumber":138,"author":{"gitId":"hoang227"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-11-01"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2022-11-01"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"        uniqueClientList.setClients(expectedUniqueClientList);","lastModifiedDate":"2022-11-01"},{"lineNumber":141,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-11-01"},{"lineNumber":142,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":143,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":144,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":145,"author":{"gitId":"hoang227"},"content":"    public void setClients_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":146,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClients((List\u003cClient\u003e) null));","lastModifiedDate":"2022-11-01"},{"lineNumber":147,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":148,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":149,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":150,"author":{"gitId":"hoang227"},"content":"    public void setClients_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-11-01"},{"lineNumber":151,"author":{"gitId":"hoang227"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-11-01"},{"lineNumber":152,"author":{"gitId":"hoang227"},"content":"        List\u003cClient\u003e clientList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-11-01"},{"lineNumber":153,"author":{"gitId":"hoang227"},"content":"        uniqueClientList.setClients(clientList);","lastModifiedDate":"2022-11-01"},{"lineNumber":154,"author":{"gitId":"hoang227"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-11-01"},{"lineNumber":155,"author":{"gitId":"hoang227"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2022-11-01"},{"lineNumber":156,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-11-01"},{"lineNumber":157,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":158,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":159,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":160,"author":{"gitId":"hoang227"},"content":"    public void setClients_listWithDuplicateClients_throwsDuplicateClientException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":161,"author":{"gitId":"hoang227"},"content":"        List\u003cClient\u003e listWithDuplicateClients \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-11-01"},{"lineNumber":162,"author":{"gitId":"hoang227"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.setClients(listWithDuplicateClients));","lastModifiedDate":"2022-11-01"},{"lineNumber":163,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":164,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":165,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":166,"author":{"gitId":"hoang227"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":167,"author":{"gitId":"hoang227"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-11-01"},{"lineNumber":168,"author":{"gitId":"hoang227"},"content":"                -\u003e uniqueClientList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-11-01"},{"lineNumber":169,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":170,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"hoang227":170}},{"path":"src/test/java/seedu/realtime/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.PersonBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"hoang227":9,"-":161}},{"path":"src/test/java/seedu/realtime/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"hoang227":2,"-":24}},{"path":"src/test/java/seedu/realtime/storage/JsonAdaptedClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.storage.JsonAdaptedClient.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.BENSON;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Email;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Phone;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"public class JsonAdaptedClientTest {","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"    public void toModelType_validClientDetails_returnsClient() throws Exception {","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(BENSON);","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        assertEquals(BENSON, client.toModelType());","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedClient(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedClient(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2022-11-05"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-11-05"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-11-05"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-11-05"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2022-11-05"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2022-11-05"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-11-05"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-11-05"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2022-11-05"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2022-11-05"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-11-05"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-11-05"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2022-11-05"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2022-11-05"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, client::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"hoang227":110}},{"path":"src/test/java/seedu/realtime/storage/JsonAdaptedListingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.storage.JsonAdaptedListing.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalListings.BENSON;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Price;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"public class JsonAdaptedListingTest {","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_ID \u003d \" \";","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_ASKING_PRICE \u003d \"-1\";","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_ID \u003d BENSON.getId().toString();","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_ASKING_PRICE \u003d BENSON.getAskingPrice().toString();","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"    public void toModelType_validListingDetails_returnsListing() throws Exception {","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedListing listing \u003d new JsonAdaptedListing(BENSON);","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        assertEquals(BENSON, listing.toModelType());","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    public void toModelType_invalidId_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedListing listing \u003d","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedListing(INVALID_ID, VALID_ADDRESS, VALID_NAME, VALID_ASKING_PRICE, VALID_TAGS);","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d ListingId.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, listing::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    public void toModelType_nullId_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedListing listing \u003d new JsonAdaptedListing(null, VALID_ADDRESS,","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"                VALID_NAME, VALID_ASKING_PRICE, VALID_TAGS);","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ListingId.class.getSimpleName());","lastModifiedDate":"2022-11-05"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, listing::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedListing listing \u003d","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedListing(VALID_ID, INVALID_ADDRESS, VALID_NAME, VALID_ASKING_PRICE, VALID_TAGS);","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, listing::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedListing listing \u003d new JsonAdaptedListing(VALID_ID, null, VALID_ADDRESS,","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"                VALID_ASKING_PRICE, VALID_TAGS);","lastModifiedDate":"2022-11-05"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2022-11-05"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, listing::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedListing listing \u003d","lastModifiedDate":"2022-11-05"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedListing(VALID_ID, VALID_ADDRESS, INVALID_NAME, VALID_ASKING_PRICE, VALID_TAGS);","lastModifiedDate":"2022-11-05"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-11-05"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, listing::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedListing listing \u003d new JsonAdaptedListing(VALID_ID, VALID_ADDRESS, null,","lastModifiedDate":"2022-11-05"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"                VALID_ASKING_PRICE, VALID_TAGS);","lastModifiedDate":"2022-11-05"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2022-11-05"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, listing::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"    public void toModelType_invalidAskingPrice_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedListing listing \u003d","lastModifiedDate":"2022-11-05"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedListing(VALID_ID, VALID_ADDRESS, VALID_NAME, INVALID_ASKING_PRICE, VALID_TAGS);","lastModifiedDate":"2022-11-05"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d Price.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-11-05"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, listing::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"    public void toModelType_nullAskingPrice_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedListing listing \u003d new JsonAdaptedListing(VALID_ID, VALID_ADDRESS,","lastModifiedDate":"2022-11-05"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"                VALID_NAME, null, VALID_TAGS);","lastModifiedDate":"2022-11-05"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Price.class.getSimpleName());","lastModifiedDate":"2022-11-05"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, listing::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-11-05"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-11-05"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedListing listing \u003d","lastModifiedDate":"2022-11-05"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedListing(VALID_ID, VALID_ADDRESS, VALID_NAME, VALID_ASKING_PRICE, invalidTags);","lastModifiedDate":"2022-11-05"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, listing::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"hoang227":114}},{"path":"src/test/java/seedu/realtime/storage/JsonAdaptedOfferTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.storage.JsonAdaptedOffer.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalOffers.BENSON;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Price;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"public class JsonAdaptedOfferTest {","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_BUYER \u003d \"R@chel\";","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_LISTING \u003d \" \";","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_OFFER_PRICE \u003d \"-1\";","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_BUYER \u003d BENSON.getClient().toString();","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_LISTING \u003d BENSON.getListing().toString();","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_OFFER_PRICE \u003d BENSON.getOfferPrice().toString();","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public void toModelType_validOfferDetails_returnsOffer() throws Exception {","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedOffer offer \u003d new JsonAdaptedOffer(BENSON);","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"        assertEquals(BENSON, offer.toModelType());","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    public void toModelType_invalidBuyer_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedOffer offer \u003d","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedOffer(INVALID_BUYER, VALID_LISTING, VALID_OFFER_PRICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, offer::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    public void toModelType_nullBuyer_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedOffer offer \u003d new JsonAdaptedOffer(null, VALID_LISTING, VALID_OFFER_PRICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, offer::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    public void toModelType_invalidListing_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedOffer offer \u003d","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedOffer(VALID_BUYER, INVALID_LISTING, VALID_OFFER_PRICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d ListingId.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, offer::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    public void toModelType_nullListing_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedOffer offer \u003d new JsonAdaptedOffer(VALID_BUYER, null, VALID_OFFER_PRICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ListingId.class.getSimpleName());","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, offer::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    public void toModelType_invalidOfferPrice_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedOffer offer \u003d","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedOffer(VALID_BUYER, VALID_LISTING, INVALID_OFFER_PRICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d Price.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, offer::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"    public void toModelType_nullOfferPrice_throwsIllegalValueException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedOffer offer \u003d new JsonAdaptedOffer(VALID_BUYER, VALID_LISTING, null);","lastModifiedDate":"2022-11-05"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Price.class.getSimpleName());","lastModifiedDate":"2022-11-05"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, offer::toModelType);","lastModifiedDate":"2022-11-05"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"hoang227":73}},{"path":"src/test/java/seedu/realtime/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Email;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Phone;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"            new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"            new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"hoang227":25,"-":85}},{"path":"src/test/java/seedu/realtime/storage/JsonRealTimeStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.HOON;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.IDA;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.getTypicalRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import java.io.IOException;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.RealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"public class JsonRealTimeStorageTest {","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonRealTimeStorageTest\");","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"    @TempDir","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    public Path testFolder;","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    public void readRealTime_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e readRealTime(null));","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    private java.util.Optional\u003cReadOnlyRealTime\u003e readRealTime(String filePath) throws Exception {","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        return new JsonRealTimeStorage(Paths.get(filePath)).readRealTime(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"                : null;","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        assertFalse(readRealTime(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        assertThrows(DataConversionException.class, () -\u003e readRealTime(\"notJsonFormatRealTime.json\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    public void readRealTime_invalidPersonRealTime_throwDataConversionException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        assertThrows(DataConversionException.class, () -\u003e readRealTime(\"invalidPersonRealTime.json\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"    public void readRealTime_invalidAndValidPersonRealTime_throwDataConversionException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        assertThrows(DataConversionException.class, () -\u003e readRealTime(\"invalidAndValidPersonRealTime.json\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    public void readAndSaveRealTime_allInOrder_success() throws Exception {","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        Path filePath \u003d testFolder.resolve(\"TempRealTime.json\");","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        RealTime original \u003d getTypicalRealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        JsonRealTimeStorage jsonRealTimeStorage \u003d new JsonRealTimeStorage(filePath);","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-11-05"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        jsonRealTimeStorage.saveRealTime(original, filePath);","lastModifiedDate":"2022-11-05"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        ReadOnlyRealTime readBack \u003d jsonRealTimeStorage.readRealTime(filePath).get();","lastModifiedDate":"2022-11-05"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        assertEquals(original, new RealTime(readBack));","lastModifiedDate":"2022-11-05"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-11-05"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2022-11-05"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        jsonRealTimeStorage.saveRealTime(original, filePath);","lastModifiedDate":"2022-11-05"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        readBack \u003d jsonRealTimeStorage.readRealTime(filePath).get();","lastModifiedDate":"2022-11-05"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        assertEquals(original, new RealTime(readBack));","lastModifiedDate":"2022-11-05"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-11-05"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2022-11-05"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"        jsonRealTimeStorage.saveRealTime(original); // file path not specified","lastModifiedDate":"2022-11-05"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        readBack \u003d jsonRealTimeStorage.readRealTime().get(); // file path not specified","lastModifiedDate":"2022-11-05"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"        assertEquals(original, new RealTime(readBack));","lastModifiedDate":"2022-11-05"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"    public void saveRealTime_nullRealTime_throwsNullPointerException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveRealTime(null, \"SomeFile.json\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"     * Saves {@code realTime} at the specified {@code filePath}.","lastModifiedDate":"2022-11-05"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"    private void saveRealTime(ReadOnlyRealTime realTime, String filePath) {","lastModifiedDate":"2022-11-05"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        try {","lastModifiedDate":"2022-11-05"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"            new JsonRealTimeStorage(Paths.get(filePath))","lastModifiedDate":"2022-11-05"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"                    .saveRealTime(realTime, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-11-05"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-11-05"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-11-05"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-11-05"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"    public void saveRealTime_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveRealTime(new RealTime(), null));","lastModifiedDate":"2022-11-05"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"hoang227":110}},{"path":"src/test/java/seedu/realtime/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"//","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"//import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"//import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"//import seedu.address.model.realTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"//import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"//public class JsonSerializableRealTimeTest {","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"//","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableRealTimeTest\");","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"//    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsRealTime.json\");","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"//    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonRealTime.json\");","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"//    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonRealTime.json\");","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"    // TODO implement testing","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"//    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"//    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"//        JsonSerializableRealTime dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"//                JsonSerializableRealTime.class).get();","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"//        realTime realTimeFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"//        realTime typicalPersonsRealTime \u003d TypicalPersons.getTypicalRealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"//        assertEquals(realTimeFromFile, typicalPersonsRealTime);","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"//    }","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"//","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"//    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"//    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"//        JsonSerializableRealTime dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"//                JsonSerializableRealTime.class).get();","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"//        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"//    }","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"//","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"//    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"//    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"//        JsonSerializableRealTime dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"//                JsonSerializableRealTime.class).get();","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"//        assertThrows(IllegalValueException.class, JsonSerializableRealTime.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"//                dataFromFile::toModelType);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"//    }","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"//","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"//}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"jeromehjj":30,"hoang227":17,"-":1}},{"path":"src/test/java/seedu/realtime/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.GuiSettings;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        userPrefs.setRealTimeFilePath(Paths.get(\"realTime.json\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"hoang227":6,"-":117}},{"path":"src/test/java/seedu/realtime/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.getTypicalRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.GuiSettings;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.RealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        JsonRealTimeStorage realTimeStorage \u003d new JsonRealTimeStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        storageManager \u003d new StorageManager(realTimeStorage, userPrefsStorage);","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    public void realTimeReadSave() throws Exception {","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"         * {@link JsonRealTimeStorage} class.","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonRealTimeStorageTest} class.","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        RealTime original \u003d getTypicalRealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        storageManager.saveRealTime(original);","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        ReadOnlyRealTime retrieved \u003d storageManager.readRealTime().get();","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        assertEquals(original, new RealTime(retrieved));","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    public void getRealTimeFilePath() {","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        assertNotNull(storageManager.getRealTimeFilePath());","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hoang227":17,"-":51}},{"path":"src/test/java/seedu/realtime/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"hoang227":1,"-":33}},{"path":"src/test/java/seedu/realtime/testutil/ClientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Email;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Phone;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.util.SampleDataUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":" * A utility class to help with building Client objects.","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"public class ClientBuilder {","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"    private Name name;","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"    private Phone phone;","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"    private Email email;","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"    private Address address;","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"     * Creates a {@code ClientBuilder} with the default details.","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"    public ClientBuilder() {","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"Gavzzz"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"Gavzzz"},"content":"     * Initializes the ClientBuilder with the data of {@code clientToCopy}.","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"Gavzzz"},"content":"    public ClientBuilder(Client clientToCopy) {","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"Gavzzz"},"content":"        name \u003d clientToCopy.getName();","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"Gavzzz"},"content":"        phone \u003d clientToCopy.getPhone();","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"Gavzzz"},"content":"        email \u003d clientToCopy.getEmail();","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"Gavzzz"},"content":"        address \u003d clientToCopy.getAddress();","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"        tags \u003d new HashSet\u003c\u003e(clientToCopy.getTags());","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"     * Sets the {@code Name} of the {@code Client} that we are building.","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"Gavzzz"},"content":"    public ClientBuilder withName(String name) {","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"Gavzzz"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"Gavzzz"},"content":"        return this;","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"Gavzzz"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Client} that we are building.","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"Gavzzz"},"content":"    public ClientBuilder withTags(String ... tags) {","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"Gavzzz"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"Gavzzz"},"content":"        return this;","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"Gavzzz"},"content":"     * Sets the {@code Address} of the {@code Client} that we are building.","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"Gavzzz"},"content":"    public ClientBuilder withAddress(String address) {","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"Gavzzz"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"Gavzzz"},"content":"        return this;","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"Gavzzz"},"content":"     * Sets the {@code Phone} of the {@code Client} that we are building.","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"Gavzzz"},"content":"    public ClientBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"Gavzzz"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"Gavzzz"},"content":"        return this;","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"Gavzzz"},"content":"     * Sets the {@code Email} of the {@code Client} that we are building.","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"Gavzzz"},"content":"    public ClientBuilder withEmail(String email) {","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"Gavzzz"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"Gavzzz"},"content":"        return this;","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"Gavzzz"},"content":"    public Client build() {","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"Gavzzz"},"content":"        return new Client(name, phone, email, address, tags);","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"hoang227":8,"Gavzzz":88}},{"path":"src/test/java/seedu/realtime/testutil/ClientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-30"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.AddClientCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditClientCommand.EditClientDescriptor;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-30"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":" * A utility class for Client.","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-30"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"public class ClientUtil {","lastModifiedDate":"2022-10-30"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-30"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"     * Returns an add command string for adding the {@code client}.","lastModifiedDate":"2022-10-30"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-30"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public static String getAddCommand(Client client) {","lastModifiedDate":"2022-10-30"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        return AddClientCommand.COMMAND_WORD + \" \" + getClientDetails(client);","lastModifiedDate":"2022-10-30"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-30"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"     * Returns the part of command string for the given {@code client}\u0027s details.","lastModifiedDate":"2022-10-30"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-30"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    public static String getClientDetails(Client client) {","lastModifiedDate":"2022-10-30"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-30"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        sb.append(PREFIX_NAME + client.getName().fullName + \" \");","lastModifiedDate":"2022-10-30"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        sb.append(PREFIX_PHONE + client.getPhone().value + \" \");","lastModifiedDate":"2022-10-30"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        sb.append(PREFIX_EMAIL + client.getEmail().value + \" \");","lastModifiedDate":"2022-10-30"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        sb.append(PREFIX_ADDRESS + client.getAddress().value + \" \");","lastModifiedDate":"2022-10-30"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        client.getTags().stream().forEach(","lastModifiedDate":"2022-10-30"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2022-10-30"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        );","lastModifiedDate":"2022-10-30"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-30"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-30"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"     * Returns the part of command string for the given {@code EditClientDescriptor}\u0027s details.","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-30"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    public static String getEditClientDescriptorDetails(EditClientDescriptor descriptor) {","lastModifiedDate":"2022-10-30"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-30"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-10-30"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2022-10-30"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2022-10-30"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2022-10-30"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2022-10-30"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2022-10-30"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2022-10-30"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2022-10-30"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"            } else {","lastModifiedDate":"2022-10-30"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2022-10-30"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"            }","lastModifiedDate":"2022-10-30"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-30"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-30"}],"authorContributionMap":{"hoang227":62}},{"path":"src/test/java/seedu/realtime/testutil/EditClientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-30"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-30"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-30"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditClientCommand.EditClientDescriptor;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Email;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Phone;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-30"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":" * A utility class to help with building EditClientDescriptor objects.","lastModifiedDate":"2022-10-30"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"public class EditClientDescriptorBuilder {","lastModifiedDate":"2022-10-30"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    private EditClientDescriptor descriptor;","lastModifiedDate":"2022-10-30"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    public EditClientDescriptorBuilder() {","lastModifiedDate":"2022-10-30"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        descriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2022-10-30"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    public EditClientDescriptorBuilder(EditClientDescriptor descriptor) {","lastModifiedDate":"2022-10-30"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        this.descriptor \u003d new EditClientDescriptor(descriptor);","lastModifiedDate":"2022-10-30"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-30"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"     * Returns an {@code EditClientDescriptor} with fields containing {@code client}\u0027s details","lastModifiedDate":"2022-10-30"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-30"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    public EditClientDescriptorBuilder(Client client) {","lastModifiedDate":"2022-10-30"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        descriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2022-10-30"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        descriptor.setName(client.getName());","lastModifiedDate":"2022-10-30"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        descriptor.setPhone(client.getPhone());","lastModifiedDate":"2022-10-30"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        descriptor.setEmail(client.getEmail());","lastModifiedDate":"2022-10-30"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        descriptor.setAddress(client.getAddress());","lastModifiedDate":"2022-10-30"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        descriptor.setTags(client.getTags());","lastModifiedDate":"2022-10-30"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-30"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code Name} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2022-10-30"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    public EditClientDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-30"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-10-30"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-10-30"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-30"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code Phone} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2022-10-30"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-30"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    public EditClientDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-30"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-10-30"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-10-30"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-30"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code Email} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2022-10-30"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-30"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    public EditClientDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-10-30"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2022-10-30"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-10-30"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-30"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code Address} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2022-10-30"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-30"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    public EditClientDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2022-10-30"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2022-10-30"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-10-30"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-30"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditClientDescriptor}","lastModifiedDate":"2022-10-30"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"     * that we are building.","lastModifiedDate":"2022-10-30"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-30"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"    public EditClientDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-30"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-30"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-10-30"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-10-30"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"    public EditClientDescriptor build() {","lastModifiedDate":"2022-10-30"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"        return descriptor;","lastModifiedDate":"2022-10-30"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-30"}],"authorContributionMap":{"hoang227":87}},{"path":"src/test/java/seedu/realtime/testutil/EditListingDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import java.util.Set;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditListingCommand.EditListingDescriptor;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Price;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":" * A utility class to help with building EditListingDescriptor objects.","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"public class EditListingDescriptorBuilder {","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    private EditListingDescriptor descriptor;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    public EditListingDescriptorBuilder() {","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        descriptor \u003d new EditListingDescriptor();","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    public EditListingDescriptorBuilder(EditListingDescriptor descriptor) {","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        this.descriptor \u003d new EditListingDescriptor(descriptor);","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"     * Returns an {@code EditListingDescriptor} with fields containing {@code listing}\u0027s details","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    public EditListingDescriptorBuilder(Listing listing) {","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        descriptor \u003d new EditListingDescriptor();","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        descriptor.setId(listing.getId());","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        descriptor.setName(listing.getName());","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        descriptor.setAddress(listing.getAddress());","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        descriptor.setAskingPrice(listing.getAskingPrice());","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        descriptor.setTags(listing.getTags());","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code Name} of the {@code EditListingDescriptor} that we are building.","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    public EditListingDescriptorBuilder withId(String id) {","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        descriptor.setId(new ListingId(id));","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code Name} of the {@code EditListingDescriptor} that we are building.","lastModifiedDate":"2022-11-05"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    public EditListingDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-11-05"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code Address} of the {@code EditListingDescriptor} that we are building.","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    public EditListingDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code Address} of the {@code EditListingDescriptor} that we are building.","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    public EditListingDescriptorBuilder withAskingPrice(String askingPrice) {","lastModifiedDate":"2022-11-05"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        descriptor.setAskingPrice(new Price(askingPrice));","lastModifiedDate":"2022-11-05"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-11-05"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditListingDescriptor}","lastModifiedDate":"2022-11-05"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"     * that we are building.","lastModifiedDate":"2022-11-05"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"    public EditListingDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-11-05"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-11-05"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-11-05"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-11-05"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"    public EditListingDescriptor build() {","lastModifiedDate":"2022-11-05"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"        return descriptor;","lastModifiedDate":"2022-11-05"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"hoang227":87}},{"path":"src/test/java/seedu/realtime/testutil/EditOfferDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.logic.commands.EditOfferCommand.EditOfferDescriptor;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.offer.Price;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":" * A utility class to help with building EditOfferDescriptor objects.","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"public class EditOfferDescriptorBuilder {","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"    private EditOfferDescriptor descriptor;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    public EditOfferDescriptorBuilder() {","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"        descriptor \u003d new EditOfferDescriptor();","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"    public EditOfferDescriptorBuilder(EditOfferDescriptor descriptor) {","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"        this.descriptor \u003d new EditOfferDescriptor(descriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"     * Returns an {@code EditOfferDescriptor} with fields containing {@code offer}\u0027s details","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"    public EditOfferDescriptorBuilder(Offer offer) {","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"        descriptor \u003d new EditOfferDescriptor();","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        descriptor.setName(offer.getClient());","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"        descriptor.setOfferPrice(offer.getOfferPrice());","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"        descriptor.setListing(offer.getListing());","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"     * Sets the {@code Name} of the {@Code EditOfferDescriptor} that we are building.","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"    public EditOfferDescriptorBuilder withBuyer(String name) {","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"        return this;","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"     * Sets the {@code Price} of the {@code EditOfferDescriptor} that we are building.","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"    public EditOfferDescriptorBuilder withOfferPrice(String price) {","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"        descriptor.setOfferPrice(new Price(price));","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"        return this;","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"     * Sets the {@code Listing ID} of the {@code EditOfferDescriptor} that we are building.","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"    public EditOfferDescriptorBuilder withListing(String listingId) {","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"        descriptor.setListing(new ListingId(listingId));","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"        return this;","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"    public EditOfferDescriptor build() {","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"        return descriptor;","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"jeromehjj":61}},{"path":"src/test/java/seedu/realtime/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Email;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Phone;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"hoang227":8,"-":79}},{"path":"src/test/java/seedu/realtime/testutil/ListingBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import java.util.Set;","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Price;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.util.SampleDataUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":" * A utility class to help with building Listing objects.","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"public class ListingBuilder {","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String DEFAULT_ID \u003d \"House\";","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    public static final String DEFAULT_CLIENT \u003d \"John Doe\";","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"    public static final String DEFAULT_ASKING_PRICE \u003d \"1\";","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"    private ListingId id;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"    private Address address;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"    private Name owner;","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"    private Price askingPrice;","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"     * Creates a {@code ListingBuilder} with the default details.","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"    public ListingBuilder() {","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        id \u003d new ListingId(DEFAULT_ID);","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        owner \u003d new Name(DEFAULT_CLIENT);","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        askingPrice \u003d new Price(DEFAULT_ASKING_PRICE);","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"     * Initializes the ListingBuilder with the data of {@code ListingToCopy}.","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"    public ListingBuilder(Listing listingToCopy) {","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        id \u003d listingToCopy.getId();","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"        address \u003d listingToCopy.getAddress();","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"        owner \u003d listingToCopy.getName();","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"Isaaclhy00"},"content":"        askingPrice \u003d listingToCopy.getAskingPrice();","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        tags \u003d new HashSet\u003c\u003e(listingToCopy.getTags());","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"Isaaclhy00"},"content":"     * Sets the {@code id} of the {@code Listing} that we are building.","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"    public ListingBuilder withId(String id) {","lastModifiedDate":"2022-11-01"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        this.id \u003d new ListingId(id);","lastModifiedDate":"2022-11-01"},{"lineNumber":57,"author":{"gitId":"Isaaclhy00"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"Isaaclhy00"},"content":"     * Sets the {@code owner} of the {@code Listing} that we are building.","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    public ListingBuilder withOwner(String owner) {","lastModifiedDate":"2022-11-01"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        this.owner \u003d new Name(owner);","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"Isaaclhy00"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"Isaaclhy00"},"content":"     * Sets the {@code askingPrice} of the {@code Listing} that we are building.","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    public ListingBuilder withAskingPrice(String askingPrice) {","lastModifiedDate":"2022-11-01"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        this.askingPrice \u003d new Price(askingPrice);","lastModifiedDate":"2022-11-01"},{"lineNumber":73,"author":{"gitId":"Isaaclhy00"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"Isaaclhy00"},"content":"     * Sets the {@code Address} of the {@code Listing} that we are building.","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"Isaaclhy00"},"content":"    public ListingBuilder withAddress(String address) {","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"Isaaclhy00"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"Isaaclhy00"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code Tag} of the {@code Listing} that we are building.","lastModifiedDate":"2022-11-01"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"    public ListingBuilder withTags(String ... tags) {","lastModifiedDate":"2022-11-01"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-11-01"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-11-01"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"     * Builds a listing","lastModifiedDate":"2022-11-01"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":96,"author":{"gitId":"Isaaclhy00"},"content":"    public Listing build() {","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        Listing listing \u003d new Listing(id, address, owner, askingPrice);","lastModifiedDate":"2022-11-01"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        listing.addTags(tags);","lastModifiedDate":"2022-11-01"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        return listing;","lastModifiedDate":"2022-11-01"},{"lineNumber":100,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"jeromehjj":2,"hoang227":41,"Isaaclhy00":59}},{"path":"src/test/java/seedu/realtime/testutil/MeetingBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ama-chi"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"ama-chi"},"content":"import static seedu.realtime.logic.parser.ParserUtil.DATETIME_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"ama-chi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"ama-chi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"ama-chi"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"ama-chi"},"content":"import java.util.Set;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"ama-chi"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"ama-chi"},"content":"import seedu.realtime.model.meeting.Meeting;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"ama-chi"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"ama-chi"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"ama-chi"},"content":"import seedu.realtime.model.util.SampleDataUtil;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"ama-chi"},"content":"/**","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"ama-chi"},"content":" * A utility class to help with building Meeting objects.","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"ama-chi"},"content":" */","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"ama-chi"},"content":"public class MeetingBuilder {","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"ama-chi"},"content":"    public static final String DEFAULT_NAME \u003d \"John Doe\";","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"ama-chi"},"content":"    public static final String DEFAULT_ID \u003d \"1\";","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"ama-chi"},"content":"    public static final String DEFAULT_DATETIME \u003d \"2022-10-12 12:00\";","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"ama-chi"},"content":"    private DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(DATETIME_FORMAT);","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"ama-chi"},"content":"    private Name client;","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"ama-chi"},"content":"    private ListingId listing;","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"ama-chi"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"ama-chi"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"ama-chi"},"content":"     * Creates a {@code MeetingBuilder} with the default details.","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"ama-chi"},"content":"    public MeetingBuilder() {","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"ama-chi"},"content":"        client \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"ama-chi"},"content":"        listing \u003d new ListingId(DEFAULT_ID);","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"ama-chi"},"content":"        dateTime \u003d LocalDateTime.parse(DEFAULT_DATETIME, format);","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"ama-chi"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"ama-chi"},"content":"     * Initializes the MeetingBuilder with data of {@code toCopy}.","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"ama-chi"},"content":"    public MeetingBuilder(Meeting toCopy) {","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"ama-chi"},"content":"        client \u003d toCopy.getClient();","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"ama-chi"},"content":"        listing \u003d toCopy.getListing();","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"ama-chi"},"content":"        dateTime \u003d toCopy.getdateTime();","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"ama-chi"},"content":"        tags \u003d new HashSet\u003c\u003e(toCopy.getTags());","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"ama-chi"},"content":"     * Sets the {@code client} of the {@code Meeting} that we are building/","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"ama-chi"},"content":"    public MeetingBuilder withClient(String client) {","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"ama-chi"},"content":"        this.client \u003d new Name(client);","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"ama-chi"},"content":"        return this;","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"ama-chi"},"content":"     * Sets the {@code listing} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"ama-chi"},"content":"    public MeetingBuilder withListing(String id) {","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"ama-chi"},"content":"        this.listing \u003d new ListingId(id);","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"ama-chi"},"content":"        return this;","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":67,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"ama-chi"},"content":"     * Sets the {@code dateTime} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"ama-chi"},"content":"    public MeetingBuilder withDateTime(String dateTime) {","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"ama-chi"},"content":"        this.dateTime \u003d LocalDateTime.parse(dateTime, format);","lastModifiedDate":"2022-11-07"},{"lineNumber":73,"author":{"gitId":"ama-chi"},"content":"        return this;","lastModifiedDate":"2022-11-07"},{"lineNumber":74,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":75,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":76,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-11-07"},{"lineNumber":77,"author":{"gitId":"ama-chi"},"content":"     * Sets the {@code Tag} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-11-07"},{"lineNumber":79,"author":{"gitId":"ama-chi"},"content":"    public MeetingBuilder withTags(String ... tags) {","lastModifiedDate":"2022-11-07"},{"lineNumber":80,"author":{"gitId":"ama-chi"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-11-07"},{"lineNumber":81,"author":{"gitId":"ama-chi"},"content":"        return this;","lastModifiedDate":"2022-11-07"},{"lineNumber":82,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":83,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":84,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-11-07"},{"lineNumber":85,"author":{"gitId":"ama-chi"},"content":"     * Builds a Meeting.","lastModifiedDate":"2022-11-07"},{"lineNumber":86,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-11-07"},{"lineNumber":87,"author":{"gitId":"ama-chi"},"content":"    public Meeting build() {","lastModifiedDate":"2022-11-07"},{"lineNumber":88,"author":{"gitId":"ama-chi"},"content":"        return new Meeting(client, listing, dateTime);","lastModifiedDate":"2022-11-07"},{"lineNumber":89,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":90,"author":{"gitId":"ama-chi"},"content":"}","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"ama-chi":90}},{"path":"src/test/java/seedu/realtime/testutil/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.GuiSettings;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.meeting.Meeting;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":" * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    public Path getRealTimeFilePath() {","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    public void setRealTimeFilePath(Path realTimeFilePath) {","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2022-11-01"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    public void addListing(Listing listing) {","lastModifiedDate":"2022-11-01"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    public void addOffer(Offer offer) {","lastModifiedDate":"2022-11-01"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    public Person getPerson(Name name) {","lastModifiedDate":"2022-11-01"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"    public Listing getListing(ListingId id) {","lastModifiedDate":"2022-11-01"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        return new ListingBuilder().build();","lastModifiedDate":"2022-11-01"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"    public Offer getOffer(Name name, Address address) {","lastModifiedDate":"2022-11-01"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    public void setRealTime(ReadOnlyRealTime newData) {","lastModifiedDate":"2022-11-05"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"    public ReadOnlyRealTime getRealTime() {","lastModifiedDate":"2022-11-05"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2022-11-01"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"    public boolean hasListing(Listing listing) {","lastModifiedDate":"2022-11-01"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"    public boolean hasOffer(Offer offer) {","lastModifiedDate":"2022-11-01"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2022-11-01"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"    public void deleteListingsOwnedBy(Client target) {","lastModifiedDate":"2022-11-01"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"    public void deleteMeetingsWith(Client target) {","lastModifiedDate":"2022-11-01"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"    public void deleteOffersMadeBy(Client target) {","lastModifiedDate":"2022-11-01"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"    public void deleteListing(Listing target) {","lastModifiedDate":"2022-11-01"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":136,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"    public void deleteOffer(Offer offer) {","lastModifiedDate":"2022-11-01"},{"lineNumber":138,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method shoud not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":141,"author":{"gitId":"hoang227"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-11-01"},{"lineNumber":142,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":143,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":144,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":145,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":146,"author":{"gitId":"hoang227"},"content":"    public void setListing(Listing target, Listing editedListing) {","lastModifiedDate":"2022-11-01"},{"lineNumber":147,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":148,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":149,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":150,"author":{"gitId":"hoang227"},"content":"    public void deleteOffersFor(Listing target) {","lastModifiedDate":"2022-11-01"},{"lineNumber":151,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":152,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":153,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":154,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":155,"author":{"gitId":"hoang227"},"content":"    public void deleteMeetingsAbout(Listing target) {","lastModifiedDate":"2022-11-01"},{"lineNumber":156,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":157,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":158,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":159,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":160,"author":{"gitId":"hoang227"},"content":"    public void setOffer(Offer target, Offer editedOffer) {","lastModifiedDate":"2022-11-01"},{"lineNumber":161,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":162,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":163,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":164,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":165,"author":{"gitId":"hoang227"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-11-01"},{"lineNumber":166,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":167,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":168,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":169,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":170,"author":{"gitId":"hoang227"},"content":"    public ObservableList\u003cListing\u003e getFilteredListingList() {","lastModifiedDate":"2022-11-01"},{"lineNumber":171,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":172,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":173,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":174,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":175,"author":{"gitId":"hoang227"},"content":"    public ObservableList\u003cOffer\u003e getFilteredOfferList() {","lastModifiedDate":"2022-11-01"},{"lineNumber":176,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":177,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":178,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":179,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":180,"author":{"gitId":"hoang227"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-11-01"},{"lineNumber":181,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":182,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":183,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":184,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":185,"author":{"gitId":"hoang227"},"content":"    public void updateFilteredListingList(Predicate\u003cListing\u003e predicate) {","lastModifiedDate":"2022-11-01"},{"lineNumber":186,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":187,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":188,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":189,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":190,"author":{"gitId":"hoang227"},"content":"    public void updateFilteredOfferList(Predicate\u003cOffer\u003e predicate) {","lastModifiedDate":"2022-11-01"},{"lineNumber":191,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":192,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":193,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":194,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":195,"author":{"gitId":"hoang227"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2022-11-01"},{"lineNumber":196,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":197,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":198,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":199,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":200,"author":{"gitId":"hoang227"},"content":"    public void addMeeting(Meeting meeting) {","lastModifiedDate":"2022-11-01"},{"lineNumber":201,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":202,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":203,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":204,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":205,"author":{"gitId":"hoang227"},"content":"    public void deleteMeeting(Meeting meeting) {","lastModifiedDate":"2022-11-01"},{"lineNumber":206,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":207,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":208,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":209,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":210,"author":{"gitId":"hoang227"},"content":"    public Meeting getMeeting(Name name, Address address) {","lastModifiedDate":"2022-11-01"},{"lineNumber":211,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":212,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":213,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":214,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":215,"author":{"gitId":"hoang227"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2022-11-01"},{"lineNumber":216,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":217,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":218,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":219,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":220,"author":{"gitId":"hoang227"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2022-11-01"},{"lineNumber":221,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":222,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":223,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":224,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":225,"author":{"gitId":"hoang227"},"content":"    public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2022-11-01"},{"lineNumber":226,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":227,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":228,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":229,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":230,"author":{"gitId":"hoang227"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2022-11-01"},{"lineNumber":231,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":232,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":233,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":234,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":235,"author":{"gitId":"hoang227"},"content":"    public void deleteClient(Client target) {","lastModifiedDate":"2022-11-01"},{"lineNumber":236,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":237,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":238,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":239,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":240,"author":{"gitId":"hoang227"},"content":"    public void addClient(Client client) {","lastModifiedDate":"2022-11-01"},{"lineNumber":241,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":242,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":243,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":244,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":245,"author":{"gitId":"hoang227"},"content":"    public Client getClient(Name name) {","lastModifiedDate":"2022-11-01"},{"lineNumber":246,"author":{"gitId":"hoang227"},"content":"        return new ClientBuilder().build();","lastModifiedDate":"2022-11-01"},{"lineNumber":247,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":248,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":249,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":250,"author":{"gitId":"hoang227"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-11-01"},{"lineNumber":251,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":252,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":253,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":254,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":255,"author":{"gitId":"hoang227"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2022-11-01"},{"lineNumber":256,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":257,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":258,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":259,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":260,"author":{"gitId":"hoang227"},"content":"    public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2022-11-01"},{"lineNumber":261,"author":{"gitId":"hoang227"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-01"},{"lineNumber":262,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":263,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"hoang227":263}},{"path":"src/test/java/seedu/realtime/testutil/OfferBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Price;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":" * A utility class to help with building Offer objects.","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"public class OfferBuilder {","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    public static final String DEFAULT_NAME \u003d \"John Doe\";","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"    public static final String DEFAULT_ID \u003d \"1\";","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    public static final String DEFAULT_OFFER_PRICE \u003d \"1\";","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    private Name buyer;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    private ListingId listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    private Price offerPrice;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"     * Creates a {@code OfferBuilder} with the default details.","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public OfferBuilder() {","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        buyer \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"        listing \u003d new ListingId(DEFAULT_ID);","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        offerPrice \u003d new Price(DEFAULT_OFFER_PRICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"     * Initializes the OfferBuilder with the data of {@code OfferToCopy}.","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    public OfferBuilder(Offer offerToCopy) {","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        buyer \u003d offerToCopy.getClient();","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        listing \u003d offerToCopy.getListing();","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        offerPrice \u003d offerToCopy.getOfferPrice();","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code id} of the {@code Offer} that we are building.","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    public OfferBuilder withBuyer(String buyer) {","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        this.buyer \u003d new Name(buyer);","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code owner} of the {@code Offer} that we are building.","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    public OfferBuilder withListing(String id) {","lastModifiedDate":"2022-11-05"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        this.listing \u003d new ListingId(id);","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code askingPrice} of the {@code Offer} that we are building.","lastModifiedDate":"2022-11-05"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    public OfferBuilder withOfferPrice(String offerPrice) {","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        this.offerPrice \u003d new Price(offerPrice);","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"     * Builds a offer","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    public Offer build() {","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        return new Offer(buyer, listing, offerPrice);","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"hoang227":70}},{"path":"src/test/java/seedu/realtime/testutil/OfferUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_LISTING_ID;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_OFFER;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.logic.commands.AddOfferCommand;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.logic.commands.EditOfferCommand.EditOfferDescriptor;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":" * A utility class for Offer","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"public class OfferUtil {","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"     * Returns an add command string for adding the {@code offer}.","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"    public static String getAddCommand(Offer offer) {","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"        return AddOfferCommand.COMMAND_WORD + \" \" + getOfferDetails(offer);","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"     * Returns the part of command string for the given {@code offer}\u0027s details.","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"    public static String getOfferDetails(Offer offer) {","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"        sb.append(PREFIX_NAME + offer.getClient().fullName + \" \");","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        sb.append(PREFIX_LISTING_ID + offer.getListing().value + \" \");","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"        sb.append(PREFIX_OFFER + offer.getOfferPrice().value + \" \");","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"        return sb.toString();","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"     * Returns the part of command string for the give {@code EditOfferDescriptor}\u0027s details.","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"    public static String getEditOfferDescriptorDetails(EditOfferDescriptor descriptor) {","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"        descriptor.getOfferPrice().ifPresent(offerPrice -\u003e sb.append(PREFIX_OFFER).append(offerPrice).append(\" \"));","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"        descriptor.getListing().ifPresent(listingId -\u003e sb.append(PREFIX_LISTING_ID).append(listingId).append(\" \"));","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"        return sb.toString();","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"jeromehjj":44}},{"path":"src/test/java/seedu/realtime/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Email;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Phone;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.util.SampleDataUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"hoang227":8,"-":88}},{"path":"src/test/java/seedu/realtime/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"        return AddPersonCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"hoang227":10,"Isaaclhy00":1,"-":51}},{"path":"src/test/java/seedu/realtime/testutil/RealTimeBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.RealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":" * A utility class to help with building RealTime objects.","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":" *     {@code realTime rt \u003d new RealTimeBuilder().withClient(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"public class RealTimeBuilder {","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"    private RealTime realTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    public RealTimeBuilder() {","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"        realTime \u003d new RealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    public RealTimeBuilder(RealTime realTime) {","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"        this.realTime \u003d realTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"     * Adds a new {@code Client} to the {@code RealTime} that we are building.","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    public RealTimeBuilder withClient(Client client) {","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        realTime.addClient(client);","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"     * Adds a new {@code Offer} to the {@code RealTime} that we are building.","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"    public RealTimeBuilder withOffer(Offer offer) {","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"        realTime.addOffer(offer);","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"        return this;","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    public RealTime build() {","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        return realTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"jeromehjj":9,"hoang227":34}},{"path":"src/test/java/seedu/realtime/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hoang227":1,"-":71}},{"path":"src/test/java/seedu/realtime/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"     * Returns the client in the {@code model}\u0027s client list at {@code index}.","lastModifiedDate":"2022-11-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    public static Person getClient(Model model, Index index) {","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        return model.getFilteredClientList().get(index.getZeroBased());","lastModifiedDate":"2022-11-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hoang227":7,"-":48}},{"path":"src/test/java/seedu/realtime/testutil/TypicalClients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.RealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":" * A utility class containing a list of {@code Client} objects to be used in tests.","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"public class TypicalClients {","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    public static final Client ALICE \u003d new ClientBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        .withPhone(\"94351253\")","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        .withTags(\"friends\").build();","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    public static final Client BENSON \u003d new ClientBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    public static final Client CARL \u003d new ClientBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"    public static final Client DANIEL \u003d new ClientBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    public static final Client ELLE \u003d new ClientBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    public static final Client FIONA \u003d new ClientBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    public static final Client GEORGE \u003d new ClientBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    // Manually added","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    public static final Client HOON \u003d new ClientBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    public static final Client IDA \u003d new ClientBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    // Manually added - Client\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    public static final Client AMY \u003d new ClientBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    public static final Client BOB \u003d new ClientBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        .build();","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    private TypicalClients() {} // prevents instantiation","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"     * Returns an {@code RealTime} with all the typical Clients.","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    public static RealTime getTypicalRealTime() {","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        RealTime rt \u003d new RealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        for (Client client : getTypicalClients()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"            rt.addClient(client);","lastModifiedDate":"2022-11-05"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        return rt;","lastModifiedDate":"2022-11-05"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"    public static List\u003cClient\u003e getTypicalClients() {","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"hoang227":76}},{"path":"src/test/java/seedu/realtime/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"    public static final Index FIRST_INDEX \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"    public static final Index SECOND_INDEX \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    public static final Index THIRD_INDEX \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"hoang227":5,"-":7}},{"path":"src/test/java/seedu/realtime/testutil/TypicalListingId.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.ListingId;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":" * A utility class containing a list of {@code ListingId} objects to be used in tests.","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"public class TypicalListingId {","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"    public static final ListingId ID_FIRST_LISTING \u003d new ListingId(\"1\");","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"    public static final ListingId ID_SECOND_LISTING \u003d new ListingId(\"2\");","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    public static final ListingId ID_THIRD_LISTING \u003d new ListingId(\"3\");","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"hoang227":12}},{"path":"src/test/java/seedu/realtime/testutil/TypicalListings.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_4_BEDROOM;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_GARDEN;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_POOL;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.RealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.listing.Listing;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":" * A utility class containing a list of {@code Listing} objects to be used in tests.","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"public class TypicalListings {","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    public static final Listing ALICE \u003d new ListingBuilder().withId(\"1\").withOwner(\"Alice Pauline\")","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withAskingPrice(\"1000000\")","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"            .withTags(\"4bedroom\").build();","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    public static final Listing BENSON \u003d new ListingBuilder().withId(\"2\").withOwner(\"Benson Meier\")","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withAskingPrice(\"200000\")","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"            .withTags(\"pool\", \"backyard\").build();","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    public static final Listing CARL \u003d new ListingBuilder().withId(\"3\").withOwner(\"Carl Kurz\")","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"            .withAddress(\"wall street\").withAskingPrice(\"500000\").build();","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    public static final Listing DANIEL \u003d new ListingBuilder().withId(\"4\").withOwner(\"Daniel Meier\")","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"            .withAddress(\"10th street\").withAskingPrice(\"5000000\").withTags(\"mansion\").build();","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    public static final Listing ELLE \u003d new ListingBuilder().withId(\"5\").withOwner(\"Elle Meyer\")","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"            .withAddress(\"michegan ave\").withAskingPrice(\"900000\").build();","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    public static final Listing FIONA \u003d new ListingBuilder().withId(\"6\").withOwner(\"Fiona Kunz\")","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"            .withAddress(\"little tokyo\").withAskingPrice(\"2000000\").build();","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    public static final Listing GEORGE \u003d new ListingBuilder().withId(\"7\").withOwner(\"George Best\")","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"            .withAddress(\"4th street\").withAskingPrice(\"5000000\").build();","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    // Manually added","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    public static final Listing HOON \u003d new ListingBuilder().withOwner(\"Hoon Meier\")","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"            .withAddress(\"little india\").build();","lastModifiedDate":"2022-11-01"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    public static final Listing IDA \u003d new ListingBuilder().withOwner(\"Ida Mueller\")","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"            .withAddress(\"chicago ave\").build();","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    // Manually added - Listing\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"    public static final Listing AMY \u003d new ListingBuilder().withOwner(VALID_NAME_AMY)","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"            .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_4_BEDROOM).build();","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    public static final Listing BOB \u003d new ListingBuilder().withOwner(VALID_NAME_BOB)","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"            .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_POOL, VALID_TAG_GARDEN)","lastModifiedDate":"2022-11-01"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"            .build();","lastModifiedDate":"2022-11-01"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-11-01"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"    private TypicalListings() {} // prevents instantiation","lastModifiedDate":"2022-11-01"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"     * Returns an {@code RealTime} with all the typical Listings.","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    public static RealTime getTypicalRealTime() {","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        RealTime rt \u003d new RealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        for (Listing listing : getTypicalListings()) {","lastModifiedDate":"2022-11-01"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"            rt.addListing(listing);","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        return rt;","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"    public static List\u003cListing\u003e getTypicalListings() {","lastModifiedDate":"2022-11-01"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2022-11-01"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"hoang227":71}},{"path":"src/test/java/seedu/realtime/testutil/TypicalMeetings.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ama-chi"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"ama-chi"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_DATETIME_1;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"ama-chi"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_DATETIME_2;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"ama-chi"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"ama-chi"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"ama-chi"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"ama-chi"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"ama-chi"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_CHILDREN;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"ama-chi"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_CONTRACT;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"ama-chi"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_VIEWING;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"ama-chi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"ama-chi"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"ama-chi"},"content":"import java.util.List;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"ama-chi"},"content":"import seedu.realtime.model.RealTime;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"ama-chi"},"content":"import seedu.realtime.model.meeting.Meeting;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"ama-chi"},"content":"/**","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"ama-chi"},"content":" * A utility class containing a list of {@code Meeting} objects to be used in tests.","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"ama-chi"},"content":" */","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"ama-chi"},"content":"public class TypicalMeetings {","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"ama-chi"},"content":"    public static final Meeting ALICE \u003d new MeetingBuilder()","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"ama-chi"},"content":"            .withClient(\"Alice Pauline\")","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"ama-chi"},"content":"            .withListing(\"1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"ama-chi"},"content":"            .withDateTime(\"2022-10-24 12:00\")","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"ama-chi"},"content":"            .withTags(\"viewing\")","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"ama-chi"},"content":"            .build();","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"ama-chi"},"content":"    public static final Meeting BENSON \u003d new MeetingBuilder()","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"ama-chi"},"content":"            .withClient(\"Benson Meier\")","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"ama-chi"},"content":"            .withListing(\"2\")","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"ama-chi"},"content":"            .withDateTime(\"2022-10-25 12:00\")","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"ama-chi"},"content":"            .withTags(\"contractSigning\")","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"ama-chi"},"content":"            .build();","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"ama-chi"},"content":"    public static final Meeting CARL \u003d new MeetingBuilder()","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"ama-chi"},"content":"            .withClient(\"Carl Kurz\")","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"ama-chi"},"content":"            .withListing(\"3\")","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"ama-chi"},"content":"            .withDateTime(\"2022-10-21 08:00\")","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"ama-chi"},"content":"            .withTags(\"viewing\", \"withChildren\")","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"ama-chi"},"content":"            .build();","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"ama-chi"},"content":"    public static final Meeting DANIEL \u003d new MeetingBuilder()","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"ama-chi"},"content":"            .withClient(\"Daniel Meier\")","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"ama-chi"},"content":"            .withListing(\"4\")","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"ama-chi"},"content":"            .withDateTime(\"2023-01-01 13:00\")","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"ama-chi"},"content":"            .build();","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"ama-chi"},"content":"    public static final Meeting ELLE \u003d new MeetingBuilder()","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"ama-chi"},"content":"            .withClient(\"Elle Meyer\")","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"ama-chi"},"content":"            .withListing(\"5\")","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"ama-chi"},"content":"            .withDateTime(\"2020-09-30 12:00\")","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"ama-chi"},"content":"            .withTags(\"contractSigning\", \"toughClient\")","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"ama-chi"},"content":"            .build();","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"ama-chi"},"content":"    public static final Meeting FIONA \u003d new MeetingBuilder()","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"ama-chi"},"content":"            .withClient(\"Fiona Kunz\")","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"ama-chi"},"content":"            .withListing(\"6\")","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"ama-chi"},"content":"            .withDateTime(\"2023-02-28 24:00\")","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"ama-chi"},"content":"            .build();","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"ama-chi"},"content":"    public static final Meeting GEORGE \u003d new MeetingBuilder()","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"ama-chi"},"content":"            .withClient(\"George Best\")","lastModifiedDate":"2022-11-07"},{"lineNumber":67,"author":{"gitId":"ama-chi"},"content":"            .withListing(\"7\")","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"ama-chi"},"content":"            .withDateTime(\"2025-09-15 23:59\")","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"ama-chi"},"content":"            .build();","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"ama-chi"},"content":"    // Manually added","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"ama-chi"},"content":"    public static final Meeting HOON \u003d new MeetingBuilder().withClient(\"Hoon Meier\").build();","lastModifiedDate":"2022-11-07"},{"lineNumber":73,"author":{"gitId":"ama-chi"},"content":"    public static final Meeting IDA \u003d new MeetingBuilder().withClient(\"Ida Mueller\").build();","lastModifiedDate":"2022-11-07"},{"lineNumber":74,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":75,"author":{"gitId":"ama-chi"},"content":"    // Manually added - Meeting details found in {@code CommandTestUtil}","lastModifiedDate":"2022-11-07"},{"lineNumber":76,"author":{"gitId":"ama-chi"},"content":"    public static final Meeting AMY \u003d new MeetingBuilder()","lastModifiedDate":"2022-11-07"},{"lineNumber":77,"author":{"gitId":"ama-chi"},"content":"            .withClient(VALID_NAME_AMY)","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"ama-chi"},"content":"            .withListing(VALID_ID_AMY)","lastModifiedDate":"2022-11-07"},{"lineNumber":79,"author":{"gitId":"ama-chi"},"content":"            .withDateTime(VALID_DATETIME_1)","lastModifiedDate":"2022-11-07"},{"lineNumber":80,"author":{"gitId":"ama-chi"},"content":"            .withTags(VALID_TAG_VIEWING)","lastModifiedDate":"2022-11-07"},{"lineNumber":81,"author":{"gitId":"ama-chi"},"content":"            .build();","lastModifiedDate":"2022-11-07"},{"lineNumber":82,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":83,"author":{"gitId":"ama-chi"},"content":"    public static final Meeting BOB \u003d new MeetingBuilder()","lastModifiedDate":"2022-11-07"},{"lineNumber":84,"author":{"gitId":"ama-chi"},"content":"            .withClient(VALID_NAME_BOB)","lastModifiedDate":"2022-11-07"},{"lineNumber":85,"author":{"gitId":"ama-chi"},"content":"            .withListing(VALID_ID_BOB)","lastModifiedDate":"2022-11-07"},{"lineNumber":86,"author":{"gitId":"ama-chi"},"content":"            .withDateTime(VALID_DATETIME_2)","lastModifiedDate":"2022-11-07"},{"lineNumber":87,"author":{"gitId":"ama-chi"},"content":"            .withTags(VALID_TAG_CONTRACT, VALID_TAG_CHILDREN)","lastModifiedDate":"2022-11-07"},{"lineNumber":88,"author":{"gitId":"ama-chi"},"content":"            .build();","lastModifiedDate":"2022-11-07"},{"lineNumber":89,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":90,"author":{"gitId":"ama-chi"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-11-07"},{"lineNumber":91,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":92,"author":{"gitId":"ama-chi"},"content":"    private TypicalMeetings() {} // prevents instantiation","lastModifiedDate":"2022-11-07"},{"lineNumber":93,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":94,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-11-07"},{"lineNumber":95,"author":{"gitId":"ama-chi"},"content":"     * Returns a {@code RealTime} with all the typical Meetings.","lastModifiedDate":"2022-11-07"},{"lineNumber":96,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-11-07"},{"lineNumber":97,"author":{"gitId":"ama-chi"},"content":"    public static RealTime getTypicalRealTime() {","lastModifiedDate":"2022-11-07"},{"lineNumber":98,"author":{"gitId":"ama-chi"},"content":"        RealTime rt \u003d new RealTime();","lastModifiedDate":"2022-11-07"},{"lineNumber":99,"author":{"gitId":"ama-chi"},"content":"        for (Meeting meeting : getTypicalMeetings()) {","lastModifiedDate":"2022-11-07"},{"lineNumber":100,"author":{"gitId":"ama-chi"},"content":"            rt.addMeeting(meeting);","lastModifiedDate":"2022-11-07"},{"lineNumber":101,"author":{"gitId":"ama-chi"},"content":"        }","lastModifiedDate":"2022-11-07"},{"lineNumber":102,"author":{"gitId":"ama-chi"},"content":"        return rt;","lastModifiedDate":"2022-11-07"},{"lineNumber":103,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":104,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":105,"author":{"gitId":"ama-chi"},"content":"    public static List\u003cMeeting\u003e getTypicalMeetings() {","lastModifiedDate":"2022-11-07"},{"lineNumber":106,"author":{"gitId":"ama-chi"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2022-11-07"},{"lineNumber":107,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":108,"author":{"gitId":"ama-chi"},"content":"}","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"ama-chi":108}},{"path":"src/test/java/seedu/realtime/testutil/TypicalOffers.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_LISTING_ID_1;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_LISTING_ID_2;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PRICE_1;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PRICE_2;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.RealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.offer.Offer;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":" * A utility class containing a list of {@code Offer} objects to be used in tests.","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"public class TypicalOffers {","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    public static final Offer ALICE \u003d new OfferBuilder().withBuyer(\"Alice Pauline\")","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"            .withListing(\"1\").withOfferPrice(\"1000000\").build();","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public static final Offer BENSON \u003d new OfferBuilder().withBuyer(\"Benson Meier\")","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"            .withOfferPrice(\"200000\").build();","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    public static final Offer CARL \u003d new OfferBuilder().withListing(\"3\").withBuyer(\"Carl Kurz\")","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"            .withOfferPrice(\"500000\").build();","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    public static final Offer DANIEL \u003d new OfferBuilder().withListing(\"4\").withBuyer(\"Daniel Meier\")","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"            .withOfferPrice(\"5000000\").build();","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    public static final Offer ELLE \u003d new OfferBuilder().withListing(\"5\").withBuyer(\"Elle Meyer\")","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"            .withOfferPrice(\"900000\").build();","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    public static final Offer FIONA \u003d new OfferBuilder().withListing(\"6\").withBuyer(\"Fiona Kunz\")","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"            .withOfferPrice(\"2000000\").build();","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    public static final Offer GEORGE \u003d new OfferBuilder().withListing(\"7\").withBuyer(\"George Best\")","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"            .withOfferPrice(\"5000000\").build();","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    // Manually added","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    public static final Offer HOON \u003d new OfferBuilder().withBuyer(\"Hoon Meier\")","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"            .build();","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    public static final Offer IDA \u003d new OfferBuilder().withBuyer(\"Listinga Mueller\")","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"            .build();","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    // Manually added - Offer\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    public static final Offer AMY \u003d new OfferBuilder().withBuyer(VALID_NAME_AMY)","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"            .withListing(VALID_LISTING_ID_1).withOfferPrice(VALID_PRICE_1).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    public static final Offer BOB \u003d new OfferBuilder().withBuyer(VALID_NAME_BOB)","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"            .withListing(VALID_LISTING_ID_2).withOfferPrice(VALID_PRICE_2).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    private TypicalOffers() {} // prevents instantiation","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"     * Returns an {@code RealTime} with all the typical Offers.","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"    public static RealTime getTypicalRealTime() {","lastModifiedDate":"2022-11-05"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        RealTime rt \u003d new RealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        for (Offer offer : getTypicalOffers()) {","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"            rt.addOffer(offer);","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        return rt;","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    public static List\u003cOffer\u003e getTypicalOffers() {","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"jeromehjj":4,"hoang227":63}},{"path":"src/test/java/seedu/realtime/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.RealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        .withPhone(\"94351253\")","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"     * Returns an {@code RealTime} with all the typical persons.","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    public static RealTime getTypicalRealTime() {","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        RealTime rt \u003d new RealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"            rt.addPerson(person);","lastModifiedDate":"2022-11-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        return rt;","lastModifiedDate":"2022-11-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"hoang227":20,"-":56}},{"path":"src/test/java/seedu/realtime/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.ui;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"hoang227":1,"-":34}},{"path":"src/test/java/seedu/realtime/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.ui;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.MainApp;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"hoang227":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"\u003c?import seedu.realtime.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"hoang227":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"\u003cfx:root type\u003d\"seedu.realtime.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"hoang227":1,"-":5}},{"path":"src/test/test/java/seedu/realtime/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"public class AppParametersTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":58}},{"path":"src/test/test/java/seedu/realtime/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.core;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"public class ConfigTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    public void equalsMethod() {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":27}},{"path":"src/test/test/java/seedu/realtime/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.core;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"public class VersionTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        // boundary at 0","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        // normal values","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        // big numbers","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        Version one;","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        Version another;","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        // Tests equality","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        // Tests different patch","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        // Tests different minor","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        // Tests different major","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"        Version one;","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"        Version another;","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":135}},{"path":"src/test/test/java/seedu/realtime/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.core.index;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"public class IndexTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"        // invalid index","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"        // check equality using the same base","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        // invalid index","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        // check equality using the same base","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":60}},{"path":"src/test/test/java/seedu/realtime/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.util;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"public class AppUtilTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":36}},{"path":"src/test/test/java/seedu/realtime/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.util;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        // no arguments","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"        // any non-empty argument list","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        // null reference","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        // null reference","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        // empty list","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        // list with all non-null elements","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":108}},{"path":"src/test/test/java/seedu/realtime/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.util;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Config;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    @TempDir","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public Path tempDir;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        return config;","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        //Try saving when the file exists","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"                                  : null;","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":116}},{"path":"src/test/test/java/seedu/realtime/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.util;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"public class FileUtilTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    public void isValidPath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"        // valid path","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"        // invalid path","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":23}},{"path":"src/test/test/java/seedu/realtime/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.util;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.SerializableTestClass;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.TestUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"public class JsonUtilTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":45}},{"path":"src/test/test/java/seedu/realtime/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.commons.util;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"public class StringUtilTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        // EP: empty strings","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        // EP: not a number","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"        // EP: zero","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        // EP: zero as prefix","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        // EP: signed numbers","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        // EP: numbers with white space","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    /*","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"    /*","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"     *   - any word","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"     *   - empty string","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"     *   - one word","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"     *   - multiple words","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"     *   - last word in sentence","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"     *   - middle word in sentence","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"     *   - matches multiple words","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        // Empty sentence","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"        // Matches a partial word only","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"    /*","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":143}},{"path":"src/test/test/java/seedu/realtime/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.AddCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.CommandResult;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.ListCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.storage.JsonRealTimeStorage;","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.storage.StorageManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.PersonBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        JsonRealTimeStorage realTimeStorage \u003d","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"                new JsonRealTimeStorage(temporaryFolder.resolve(\"realTime.json\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        StorageManager storage \u003d new StorageManager(realTimeStorage, userPrefsStorage);","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        // Setup LogicManager with JsonRealTimeIoExceptionThrowingStub","lastModifiedDate":"2022-11-05"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        JsonRealTimeStorage realTimeStorage \u003d","lastModifiedDate":"2022-11-05"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"                new JsonRealTimeIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionRealTime.json\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        StorageManager storage \u003d new StorageManager(realTimeStorage, userPrefsStorage);","lastModifiedDate":"2022-11-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(model.getRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"hoang227"},"content":"    private static class JsonRealTimeIoExceptionThrowingStub extends JsonRealTimeStorage {","lastModifiedDate":"2022-11-05"},{"lineNumber":153,"author":{"gitId":"hoang227"},"content":"        private JsonRealTimeIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-11-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"hoang227"},"content":"        public void saveRealTime(ReadOnlyRealTime realTime, Path filePath) throws IOException {","lastModifiedDate":"2022-11-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":34,"-":128}},{"path":"src/test/test/java/seedu/realtime/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.getTypicalRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.ClientBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"public class AddClientCommandIntegrationTest {","lastModifiedDate":"2022-10-30"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    private Model model;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        model \u003d new ModelManager(getTypicalRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    public void execute_newClient_success() {","lastModifiedDate":"2022-10-30"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-10-30"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(model.getRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        expectedModel.addClient(validClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(new AddCommand(validClient), model,","lastModifiedDate":"2022-10-30"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validClient), expectedModel);","lastModifiedDate":"2022-10-30"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    public void execute_duplicateClient_throwsCommandException() {","lastModifiedDate":"2022-10-30"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        Client clientInList \u003d model.getRealTime().getClientList().get(0);","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(new AddCommand(clientInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-30"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":45}},{"path":"src/test/test/java/seedu/realtime/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.GuiSettings;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.realTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.ClientBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"public class AddClientCommandTest {","lastModifiedDate":"2022-10-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    public void constructor_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-10-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    public void execute_clientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-30"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        ModelStubAcceptingClientAdded modelStub \u003d new ModelStubAcceptingClientAdded();","lastModifiedDate":"2022-10-30"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-10-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        CommandResult commandResult \u003d new AddCommand(validClient).execute(modelStub);","lastModifiedDate":"2022-10-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validClient), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-30"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        assertEquals(Arrays.asList(validClient), modelStub.clientsAdded);","lastModifiedDate":"2022-10-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    public void execute_duplicateClient_throwsCommandException() {","lastModifiedDate":"2022-10-30"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-10-30"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        AddCommand addCommand \u003d new AddCommand(validClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        ModelStub modelStub \u003d new ModelStubWithClient(validClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        Client alice \u003d new ClientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-10-30"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        Client bob \u003d new ClientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-10-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-10-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        public Path getRealTimeFilePath() {","lastModifiedDate":"2022-11-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        public void setRealTimeFilePath(Path realTimeFilePath) {","lastModifiedDate":"2022-11-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2022-10-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"        public void setRealTime(ReadOnlyRealTime newData) {","lastModifiedDate":"2022-11-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"        public ReadOnlyRealTime getRealTime() {","lastModifiedDate":"2022-11-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2022-10-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"        public void deleteClient(Client target) {","lastModifiedDate":"2022-10-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"        public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-10-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"hoang227"},"content":"        public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2022-10-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"hoang227"},"content":"        public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2022-10-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"hoang227"},"content":"     * A Model stub that contains a single client.","lastModifiedDate":"2022-10-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"hoang227"},"content":"    private class ModelStubWithClient extends ModelStub {","lastModifiedDate":"2022-10-30"},{"lineNumber":156,"author":{"gitId":"hoang227"},"content":"        private final Client client;","lastModifiedDate":"2022-10-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"hoang227"},"content":"        ModelStubWithClient(Client client) {","lastModifiedDate":"2022-10-30"},{"lineNumber":159,"author":{"gitId":"hoang227"},"content":"            requireNonNull(client);","lastModifiedDate":"2022-10-30"},{"lineNumber":160,"author":{"gitId":"hoang227"},"content":"            this.client \u003d client;","lastModifiedDate":"2022-10-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"hoang227"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2022-10-30"},{"lineNumber":165,"author":{"gitId":"hoang227"},"content":"            requireNonNull(client);","lastModifiedDate":"2022-10-30"},{"lineNumber":166,"author":{"gitId":"hoang227"},"content":"            return this.client.isSameClient(client);","lastModifiedDate":"2022-10-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"hoang227"},"content":"     * A Model stub that always accept the client being added.","lastModifiedDate":"2022-10-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"hoang227"},"content":"    private class ModelStubAcceptingClientAdded extends ModelStub {","lastModifiedDate":"2022-10-30"},{"lineNumber":174,"author":{"gitId":"hoang227"},"content":"        final ArrayList\u003cClient\u003e clientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"hoang227"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2022-10-30"},{"lineNumber":178,"author":{"gitId":"hoang227"},"content":"            requireNonNull(client);","lastModifiedDate":"2022-10-30"},{"lineNumber":179,"author":{"gitId":"hoang227"},"content":"            return clientsAdded.stream().anyMatch(client::isSameClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"hoang227"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2022-10-30"},{"lineNumber":184,"author":{"gitId":"hoang227"},"content":"            requireNonNull(client);","lastModifiedDate":"2022-10-30"},{"lineNumber":185,"author":{"gitId":"hoang227"},"content":"            clientsAdded.add(client);","lastModifiedDate":"2022-10-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":189,"author":{"gitId":"hoang227"},"content":"        public ReadOnlyRealTime getRealTime() {","lastModifiedDate":"2022-11-05"},{"lineNumber":190,"author":{"gitId":"hoang227"},"content":"            return new realTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":55,"-":139}},{"path":"src/test/test/java/seedu/realtime/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.getTypicalRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.realTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"public class ClearCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    public void execute_emptyRealTime_success() {","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public void execute_nonEmptyRealTime_success() {","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        Model model \u003d new ModelManager(getTypicalRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        expectedModel.setRealTime(new realTime());","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":32}},{"path":"src/test/test/java/seedu/realtime/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"public class CommandResultTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    public void hashcode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":54}},{"path":"src/test/test/java/seedu/realtime/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.realTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    public static final EditCommand.EditClientDescriptor DESC_AMY;","lastModifiedDate":"2022-10-30"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    public static final EditCommand.EditClientDescriptor DESC_BOB;","lastModifiedDate":"2022-10-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        DESC_AMY \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        DESC_BOB \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"     * - the address book, filtered client list and selected client in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        realTime expectedRealTime \u003d new realTime(actualModel.getRealTime());","lastModifiedDate":"2022-11-05"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"        List\u003cClient\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredClientList());","lastModifiedDate":"2022-10-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedRealTime, actualModel.getRealTime());","lastModifiedDate":"2022-11-05"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredClientList());","lastModifiedDate":"2022-10-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"     * Updates {@code model}\u0027s filtered list to show only the client at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"    public static void showClientAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-30"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredClientList().size());","lastModifiedDate":"2022-10-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"        Client client \u003d model.getFilteredClientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-30"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"        final String[] splitName \u003d client.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-30"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"        model.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"        assertEquals(1, model.getFilteredClientList().size());","lastModifiedDate":"2022-10-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":30,"-":98}},{"path":"src/test/test/java/seedu/realtime/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.getTypicalRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Messages;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"public class DeleteClientCommandTest {","lastModifiedDate":"2022-10-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    private Model model \u003d new ModelManager(getTypicalRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, clientToDelete);","lastModifiedDate":"2022-10-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        expectedModel.deleteClient(clientToDelete);","lastModifiedDate":"2022-10-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        showClientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, clientToDelete);","lastModifiedDate":"2022-10-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(model.getRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        expectedModel.deleteClient(clientToDelete);","lastModifiedDate":"2022-10-30"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        showNoClient(expectedModel);","lastModifiedDate":"2022-10-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        showClientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getRealTime().getClientList().size());","lastModifiedDate":"2022-11-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-10-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"    private void showNoClient(Model model) {","lastModifiedDate":"2022-10-30"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        model.updateFilteredClientList(p -\u003e false);","lastModifiedDate":"2022-10-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        assertTrue(model.getFilteredClientList().isEmpty());","lastModifiedDate":"2022-10-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":32,"-":77}},{"path":"src/test/test/java/seedu/realtime/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.getTypicalRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.Messages;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.realTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Client;","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.ClientBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"public class EditClientCommandTest {","lastModifiedDate":"2022-10-30"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    private Model model \u003d new ModelManager(getTypicalRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        Client editedClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-10-30"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(editedClient).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(new realTime(model.getRealTime()), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        expectedModel.setClient(model.getFilteredClientList().get(0), editedClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        Index indexLastClient \u003d Index.fromOneBased(model.getFilteredClientList().size());","lastModifiedDate":"2022-10-30"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        Client lastClient \u003d model.getFilteredClientList().get(indexLastClient.getZeroBased());","lastModifiedDate":"2022-10-30"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        ClientBuilder clientInList \u003d new ClientBuilder(lastClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        Client editedClient \u003d clientInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-30"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-30"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastClient, descriptor);","lastModifiedDate":"2022-10-30"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(new realTime(model.getRealTime()), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        expectedModel.setClient(lastClient, editedClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditClientDescriptor());","lastModifiedDate":"2022-10-30"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        Client editedClient \u003d model.getFilteredClientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-30"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(new realTime(model.getRealTime()), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"        showClientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-30"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        Client clientInFilteredList \u003d model.getFilteredClientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-30"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        Client editedClient \u003d new ClientBuilder(clientInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"                new EditClientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-30"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(new realTime(model.getRealTime()), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"        expectedModel.setClient(model.getFilteredClientList().get(0), editedClient);","lastModifiedDate":"2022-10-30"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"    public void execute_duplicateClientUnfilteredList_failure() {","lastModifiedDate":"2022-10-30"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"        Client firstClient \u003d model.getFilteredClientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-30"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(firstClient).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"    public void execute_duplicateClientFilteredList_failure() {","lastModifiedDate":"2022-10-30"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"        showClientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-30"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"        // edit client in filtered list into a duplicate in address book","lastModifiedDate":"2022-10-30"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"        Client clientInList \u003d model.getRealTime().getClientList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-11-05"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"                new EditClientDescriptorBuilder(clientInList).build());","lastModifiedDate":"2022-10-30"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"    public void execute_invalidClientIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-30"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2022-10-30"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"hoang227"},"content":"    public void execute_invalidClientIndexFilteredList_failure() {","lastModifiedDate":"2022-10-30"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"        showClientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-30"},{"lineNumber":138,"author":{"gitId":"hoang227"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getRealTime().getClientList().size());","lastModifiedDate":"2022-11-05"},{"lineNumber":141,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"hoang227"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"hoang227"},"content":"                new EditClientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-30"},{"lineNumber":144,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"hoang227"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"hoang227"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"hoang227"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"hoang227"},"content":"        EditClientDescriptor copyDescriptor \u003d new EditClientDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-30"},{"lineNumber":154,"author":{"gitId":"hoang227"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"hoang227"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"hoang227"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"hoang227"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"hoang227"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"hoang227"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"hoang227"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"hoang227"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"hoang227"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"hoang227"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"hoang227"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"hoang227"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":173}},{"path":"src/test/test/java/seedu/realtime/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"public class EditClientDescriptorTest {","lastModifiedDate":"2022-10-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        EditClientDescriptor descriptorWithSameValues \u003d new EditClientDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        EditClientDescriptor editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":17,"-":41}},{"path":"src/test/test/java/seedu/realtime/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"public class ExitCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":20}},{"path":"src/test/test/java/seedu/realtime/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.CARL;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.ELLE;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.FIONA;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.getTypicalRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"public class FindClientCommandTest {","lastModifiedDate":"2022-10-30"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    private Model model \u003d new ModelManager(getTypicalRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-10-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    public void execute_zeroKeywords_noClientFound() {","lastModifiedDate":"2022-10-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        expectedModel.updateFilteredClientList(predicate);","lastModifiedDate":"2022-10-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredClientList());","lastModifiedDate":"2022-10-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"    public void execute_multipleKeywords_multipleClientsFound() {","lastModifiedDate":"2022-10-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        expectedModel.updateFilteredClientList(predicate);","lastModifiedDate":"2022-10-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredClientList());","lastModifiedDate":"2022-10-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":21,"-":62}},{"path":"src/test/test/java/seedu/realtime/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"public class HelpCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    public void execute_help_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":20}},{"path":"src/test/test/java/seedu/realtime/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.commands;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalClients.getTypicalRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ModelManager;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"public class ListClientCommandTest {","lastModifiedDate":"2022-10-30"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    private Model model;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        model \u003d new ModelManager(getTypicalRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"        expectedModel \u003d new ModelManager(model.getRealTime(), new UserPrefs());","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        showClientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-30"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":39}},{"path":"src/test/test/java/seedu/realtime/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.AddCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Email;","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Phone;","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.PersonBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":38,"-":103}},{"path":"src/test/test/java/seedu/realtime/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        // Verify the last value is returned","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        // Preamble present","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        // No preamble","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        // Only two arguments are present","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"        // All three arguments are present","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"hoang227"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"    public void equalsMethod() {","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"hoang227"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"hoang227"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"hoang227"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"hoang227"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"hoang227"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":150}},{"path":"src/test/test/java/seedu/realtime/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.Command;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"            parser.parse(userInput);","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":39}},{"path":"src/test/test/java/seedu/realtime/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.DeleteCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":6,"-":26}},{"path":"src/test/test/java/seedu/realtime/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Email;","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Phone;","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2022-10-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":40,"-":171}},{"path":"src/test/test/java/seedu/realtime/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.FindCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":6,"-":28}},{"path":"src/test/test/java/seedu/realtime/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Email;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Phone;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":10,"-":186}},{"path":"src/test/test/java/seedu/realtime/logic/parser/RealTimeParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.logic.parser;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.AddCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.ClearCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.DeleteCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.ExitCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.FindCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.HelpCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.ListCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.PersonBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.PersonUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"public class RealTimeParserTest {","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    private final RealTimeParser parser \u003d new RealTimeParser();","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":24,"-":77}},{"path":"src/test/test/java/seedu/realtime/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.getTypicalRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.PersonBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"public class RealTimeTest {","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    private final realTime realTime \u003d new realTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        assertEquals(Collections.emptyList(), realTime.getPersonList());","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e realTime.resetData(null));","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    public void resetData_withValidReadOnlyRealTime_replacesData() {","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        realTime newData \u003d getTypicalRealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        realTime.resetData(newData);","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        assertEquals(newData, realTime);","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"                .build();","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        RealTimeStub newData \u003d new RealTimeStub(newPersons);","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e realTime.resetData(newData));","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e realTime.hasPerson(null));","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    public void hasPerson_personNotInRealTime_returnsFalse() {","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        assertFalse(realTime.hasPerson(ALICE));","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"    public void hasPerson_personInRealTime_returnsTrue() {","lastModifiedDate":"2022-11-05"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        realTime.addPerson(ALICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        assertTrue(realTime.hasPerson(ALICE));","lastModifiedDate":"2022-11-05"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"    public void hasPerson_personWithSameIdentityFieldsInRealTime_returnsTrue() {","lastModifiedDate":"2022-11-05"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        realTime.addPerson(ALICE);","lastModifiedDate":"2022-11-05"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"                .build();","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        assertTrue(realTime.hasPerson(editedAlice));","lastModifiedDate":"2022-11-05"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e realTime.getPersonList().remove(0));","lastModifiedDate":"2022-11-05"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"     * A stub ReadOnlyRealTime whose persons list can violate interface constraints.","lastModifiedDate":"2022-11-05"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"    private static class RealTimeStub implements ReadOnlyRealTime {","lastModifiedDate":"2022-11-05"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"        RealTimeStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2022-11-05"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"            return persons;","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":102}},{"path":"src/test/test/java/seedu/realtime/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.GuiSettings;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.RealTimeBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertEquals(new realTime(), new realTime(modelManager.getRealTime()));","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        userPrefs.setRealTimeFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        userPrefs.setRealTimeFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    public void setRealTimeFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setRealTimeFilePath(null));","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    public void setRealTimeFilePath_validPath_setsRealTimeFilePath() {","lastModifiedDate":"2022-11-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        modelManager.setRealTimeFilePath(path);","lastModifiedDate":"2022-11-05"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        assertEquals(path, modelManager.getRealTimeFilePath());","lastModifiedDate":"2022-11-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"    public void hasPerson_personNotInRealTime_returnsFalse() {","lastModifiedDate":"2022-11-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    public void hasPerson_personInRealTime_returnsTrue() {","lastModifiedDate":"2022-11-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        realTime realTime \u003d new RealTimeBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        realTime differentRealTime \u003d new realTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"        modelManager \u003d new ModelManager(realTime, userPrefs);","lastModifiedDate":"2022-11-05"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(realTime, userPrefs);","lastModifiedDate":"2022-11-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"        // different realTime -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentRealTime, userPrefs)));","lastModifiedDate":"2022-11-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"        assertFalse(modelManager.equals(new ModelManager(realTime, userPrefs)));","lastModifiedDate":"2022-11-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"        differentUserPrefs.setRealTimeFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"        assertFalse(modelManager.equals(new ModelManager(realTime, differentUserPrefs)));","lastModifiedDate":"2022-11-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":27,"-":105}},{"path":"src/test/test/java/seedu/realtime/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"public class UserPrefsTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    public void setRealTimeFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setRealTimeFilePath(null));","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":21}},{"path":"src/test/test/java/seedu/realtime/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"public class AddressTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    public void isValidAddress() {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"        // null address","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        // invalid addresses","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        // valid addresses","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":36}},{"path":"src/test/test/java/seedu/realtime/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"public class EmailTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    public void isValidEmail() {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"        // null email","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        // blank email","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        // missing parts","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        // invalid parts","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        // valid email","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":68}},{"path":"src/test/test/java/seedu/realtime/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.PersonBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":2,"-":73}},{"path":"src/test/test/java/seedu/realtime/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"public class NameTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    public void isValidName() {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"        // null name","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        // invalid name","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        // valid name","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":40}},{"path":"src/test/test/java/seedu/realtime/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.PersonBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":10,"-":81}},{"path":"src/test/test/java/seedu/realtime/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"public class PhoneTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    public void isValidPhone() {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"        // null phone number","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        // invalid phone numbers","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        // valid phone numbers","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":40}},{"path":"src/test/test/java/seedu/realtime/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.person;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.PersonBuilder;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"                .build();","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"                .build();","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"hoang227"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"hoang227"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"hoang227"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"hoang227"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"hoang227"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"hoang227"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"hoang227"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"hoang227"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"hoang227"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"hoang227"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"hoang227"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"hoang227"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"hoang227"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":170}},{"path":"src/test/test/java/seedu/realtime/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.model.tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"public class TagTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    public void isValidTagName() {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        // null tag name","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":26}},{"path":"src/test/test/java/seedu/realtime/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Email;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Phone;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":9,"-":101}},{"path":"src/test/test/java/seedu/realtime/storage/JsonRealTimeStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.HOON;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.IDA;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.getTypicalRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.realTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"public class JsonRealTimeStorageTest {","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonRealTimeStorageTest\");","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"    @TempDir","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    public void readRealTime_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e readRealTime(null));","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    private java.util.Optional\u003cReadOnlyRealTime\u003e readRealTime(String filePath) throws Exception {","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        return new JsonRealTimeStorage(Paths.get(filePath)).readRealTime(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"                : null;","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        assertFalse(readRealTime(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        assertThrows(DataConversionException.class, () -\u003e readRealTime(\"notJsonFormatRealTime.json\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    public void readRealTime_invalidPersonRealTime_throwDataConversionException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        assertThrows(DataConversionException.class, () -\u003e readRealTime(\"invalidPersonRealTime.json\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"    public void readRealTime_invalidAndValidPersonRealTime_throwDataConversionException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        assertThrows(DataConversionException.class, () -\u003e readRealTime(\"invalidAndValidPersonRealTime.json\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    public void readAndSaveRealTime_allInOrder_success() throws Exception {","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        Path filePath \u003d testFolder.resolve(\"TempRealTime.json\");","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        RealTime original \u003d getTypicalRealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        JsonRealTimeStorage jsonRealTimeStorage \u003d new JsonRealTimeStorage(filePath);","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        jsonRealTimeStorage.saveRealTime(original, filePath);","lastModifiedDate":"2022-11-05"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        ReadOnlyRealTime readBack \u003d jsonRealTimeStorage.readRealTime(filePath).get();","lastModifiedDate":"2022-11-05"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        assertEquals(original, new realTime(readBack));","lastModifiedDate":"2022-11-05"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        jsonRealTimeStorage.saveRealTime(original, filePath);","lastModifiedDate":"2022-11-05"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        readBack \u003d jsonRealTimeStorage.readRealTime(filePath).get();","lastModifiedDate":"2022-11-05"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        assertEquals(original, new realTime(readBack));","lastModifiedDate":"2022-11-05"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"        jsonRealTimeStorage.saveRealTime(original); // file path not specified","lastModifiedDate":"2022-11-05"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        readBack \u003d jsonRealTimeStorage.readRealTime().get(); // file path not specified","lastModifiedDate":"2022-11-05"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"        assertEquals(original, new realTime(readBack));","lastModifiedDate":"2022-11-05"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"    public void saveRealTime_nullRealTime_throwsNullPointerException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveRealTime(null, \"SomeFile.json\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"     * Saves {@code RealTime} at the specified {@code filePath}.","lastModifiedDate":"2022-11-05"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"    private void saveRealTime(ReadOnlyRealTime realTime, String filePath) {","lastModifiedDate":"2022-11-05"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"            new JsonRealTimeStorage(Paths.get(filePath))","lastModifiedDate":"2022-11-05"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"                    .saveRealTime(realTime, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-11-05"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"    public void saveRealTime_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveRealTime(new RealTime(), null));","lastModifiedDate":"2022-11-05"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":110}},{"path":"src/test/test/java/seedu/realtime/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.util.JsonUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.realTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.testutil.TypicalPersons;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"public class JsonSerializableRealTimeTest {","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableRealTimeTest\");","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsRealTime.json\");","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonRealTime.json\");","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonRealTime.json\");","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        JsonSerializableRealTime dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"                JsonSerializableRealTime.class).get();","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        RealTime realTimeFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        RealTime typicalPersonsRealTime \u003d TypicalPersons.getTypicalRealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertEquals(realTimeFromFile, typicalPersonsRealTime);","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        JsonSerializableRealTime dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"                JsonSerializableRealTime.class).get();","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        JsonSerializableRealTime dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"                JsonSerializableRealTime.class).get();","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableRealTime.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":47}},{"path":"src/test/test/java/seedu/realtime/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.GuiSettings;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    @TempDir","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"                : null;","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        userPrefs.setRealTimeFilePath(Paths.get(\"realTime.json\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        return userPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"        //Try saving when the file exists","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":123}},{"path":"src/test/test/java/seedu/realtime/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.storage;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.TypicalPersons.getTypicalRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.GuiSettings;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.realTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.ReadOnlyRealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.UserPrefs;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"public class StorageManagerTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    @TempDir","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        JsonRealTimeStorage realTimeStorage \u003d new JsonRealTimeStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        storageManager \u003d new StorageManager(realTimeStorage, userPrefsStorage);","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        /*","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"         */","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    public void realTimeReadSave() throws Exception {","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        /*","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"         * {@link JsonRealTimeStorage} class.","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonRealTimeStorageTest} class.","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"         */","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        realTime original \u003d getTypicalRealTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        storageManager.saveRealTime(original);","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        ReadOnlyRealTime retrieved \u003d storageManager.readRealTime().get();","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        assertEquals(original, new realTime(retrieved));","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    public void getRealTimeFilePath() {","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        assertNotNull(storageManager.getRealTimeFilePath());","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":68}},{"path":"src/test/test/java/seedu/realtime/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"public class Assert {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"            Executable executable) {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":34}},{"path":"src/test/test/java/seedu/realtime/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Email;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Phone;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":8,"-":79}},{"path":"src/test/test/java/seedu/realtime/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Address;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Email;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Name;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Phone;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.util.SampleDataUtil;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"public class PersonBuilder {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    private Name name;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"    private Phone phone;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    private Email email;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    private Address address;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    public PersonBuilder() {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"    public Person build() {","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":96}},{"path":"src/test/test/java/seedu/realtime/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.AddCommand;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.tag.Tag;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":10,"-":52}},{"path":"src/test/test/java/seedu/realtime/testutil/RealTimeBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.RealTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":" * A utility class to help with building RealTime objects.","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":" *     {@code RealTime rt \u003d new RealTimeBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"public class RealTimeBuilder {","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    private RealTime realTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    public RealTimeBuilder() {","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"        RealTime \u003d new realTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    public RealTimeBuilder(RealTime realTime) {","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"        this.realTime \u003d realTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"     * Adds a new {@code Person} to the {@code RealTime} that we are building.","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    public RealTimeBuilder withPerson(Person person) {","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        realTime.addPerson(person);","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    public RealTime build() {","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        return realTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":34}},{"path":"src/test/test/java/seedu/realtime/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"public class SerializableTestClass {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"            + \"  }%n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"            + \"}\");","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    private String name;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"    public void setTestValues() {","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    public String getName() {","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        return name;","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":72}},{"path":"src/test/test/java/seedu/realtime/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.Model;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":4,"-":51}},{"path":"src/test/test/java/seedu/realtime/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.commons.core.index.Index;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":2,"-":10}},{"path":"src/test/test/java/seedu/realtime/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.testutil;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.realTime;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.model.person.Person;","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"     * Returns an {@code realTime} with all the typical persons.","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    public static realTime getTypicalRealTime() {","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        realTime ab \u003d new realTime();","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":16,"-":60}},{"path":"src/test/test/java/seedu/realtime/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.ui;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"public class TestFxmlObject {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    private String text;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"        setText(text);","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    public String getText() {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"        return text;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public void setText(String text) {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        this.text \u003d text;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":35}},{"path":"src/test/test/java/seedu/realtime/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.realtime.ui;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.realtime.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import java.net.URL;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.realtime.MainApp;","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"public class UiPartTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    @TempDir","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        return testFileUrl;","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"     * UiPart used for testing.","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"        @FXML","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"            super(fxmlFileName);","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":114}},{"path":"src/test/test/resources/view/UiPartTest/invalidFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"Not a valid FXML file","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":1}},{"path":"src/test/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"\u003c?import seedu.realtime.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":4}},{"path":"src/test/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"\u003cfx:root type\u003d\"seedu.realtime.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":6}}]
