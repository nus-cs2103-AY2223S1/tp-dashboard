[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W15-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W15-2/tp/actions)","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W15-2/tp/branch/master/graph/badge.svg?token\u003dH2G32SVMDR)](https://codecov.io/gh/AY2223S1-CS2103T-W15-2/tp)","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"# REal-Time","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"REal-Time is a desktop application for managing your client viewings and scheduling your meetings.","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"Interface (GUI).","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"* For the detailed documentation of this project, ","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"see the **[REal-Time Website](https://ay2223s1-cs2103t-w15-2.github.io/tp/)**.","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"**Acknowledgements**","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"jeromehjj":13,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"### Jerome Hoo Jun Jie","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"\u003cimg src\u003d\"images/jeromehjj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"[[github](http://github.com/jeromehjj)]","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"[[portfolio](team/jeromehjj.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"* Role: Developer","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"* Responsibilities: _To be determined_","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"### Isaac Li Haoyang","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"\u003cimg src\u003d\"images/isaaclhy00.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"[[github](http://github.com/isaaclhy00)]","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"[[portfolio](team/isaaclhy00.md)]","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"* Role: Developer","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"* Responsibilities: _To be determined_","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"### Nguyen Minh Hoang","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"\u003cimg src\u003d\"images/hoang227.png.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"[[github](http://github.com/hoang227)] ","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"[[portfolio](team/hoang227.md)]","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"* Responsibilities: _To be determined_","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"ama-chi"},"content":"### Amadeus Chi Song yi","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"ama-chi"},"content":"\u003cimg src\u003d\"images/ama-chi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"ama-chi"},"content":"[[github](http://github.com/ama-chi)]","lastModifiedDate":"2022-10-01"},{"lineNumber":48,"author":{"gitId":"ama-chi"},"content":"[[portfolio](team/ama-chi.md)]","lastModifiedDate":"2022-10-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"ama-chi"},"content":"* Responsibilities: _To be determined_","lastModifiedDate":"2022-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"### Gavin Cho","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Gavzzz"},"content":"\u003cimg src\u003d\"images/gavzzz.png.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"Gavzzz"},"content":"[[github](http://github.com/gavzzz)]","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"Gavzzz"},"content":"[[portfolio](team/gavzzz.md)]","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jeromehjj":6,"hoang227":5,"ama-chi":5,"Isaaclhy00":7,"-":34,"Gavzzz":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"ama-chi"},"content":"**Target user profile**: Real Estate Agents","lastModifiedDate":"2022-10-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"ama-chi"},"content":"**Value propositions**: ","lastModifiedDate":"2022-10-04"},{"lineNumber":267,"author":{"gitId":"ama-chi"},"content":"* manage clients faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-10-04"},{"lineNumber":268,"author":{"gitId":"ama-chi"},"content":"* Real-Estate agents with many clients may struggle to juggle their viewings and manage meetings.","lastModifiedDate":"2022-10-04"},{"lineNumber":269,"author":{"gitId":"ama-chi"},"content":"* Track properties to their owners as well as potential buyers","lastModifiedDate":"2022-10-04"},{"lineNumber":270,"author":{"gitId":"ama-chi"},"content":"* Centralised place to store client information, what they are looking for","lastModifiedDate":"2022-10-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                 | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"ama-chi"},"content":"| -------- |--------------------------------------------|------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-10-04"},{"lineNumber":279,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions       | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | add a new person             |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person              | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | find a person by name        | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name         | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"ama-chi"},"content":"| `*`      | intermediate user                          | view reminders               | be informed of urgent meetings                                         |","lastModifiedDate":"2022-10-04"},{"lineNumber":286,"author":{"gitId":"ama-chi"},"content":"| `*`      | intermediate user                          | reorder the list             | place important contacts near the top                                  |","lastModifiedDate":"2022-10-04"},{"lineNumber":287,"author":{"gitId":"ama-chi"},"content":"| `*`      | user                                       | save my data                 | store my data for future use                                           |","lastModifiedDate":"2022-10-04"},{"lineNumber":288,"author":{"gitId":"ama-chi"},"content":"| `*`      | intermediate user                          | filter the list              | easily view clients of a specific type                                 |","lastModifiedDate":"2022-10-04"},{"lineNumber":289,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"ama-chi"},"content":"**Use case: reorder the list**","lastModifiedDate":"2022-10-04"},{"lineNumber":298,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":299,"author":{"gitId":"ama-chi"},"content":"**MSS**","lastModifiedDate":"2022-10-04"},{"lineNumber":300,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":301,"author":{"gitId":"ama-chi"},"content":"1.  User requests to list persons","lastModifiedDate":"2022-10-04"},{"lineNumber":302,"author":{"gitId":"ama-chi"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2022-10-04"},{"lineNumber":303,"author":{"gitId":"ama-chi"},"content":"3.  User requests to switch a specific person in the list with another","lastModifiedDate":"2022-10-04"},{"lineNumber":304,"author":{"gitId":"ama-chi"},"content":"4.  AddressBook swaps their index","lastModifiedDate":"2022-10-04"},{"lineNumber":305,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":306,"author":{"gitId":"ama-chi"},"content":"    Use case ends.","lastModifiedDate":"2022-10-04"},{"lineNumber":307,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":308,"author":{"gitId":"ama-chi"},"content":"**Extensions**","lastModifiedDate":"2022-10-04"},{"lineNumber":309,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":310,"author":{"gitId":"ama-chi"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-10-04"},{"lineNumber":311,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":312,"author":{"gitId":"ama-chi"},"content":"  Use case ends.","lastModifiedDate":"2022-10-04"},{"lineNumber":313,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":314,"author":{"gitId":"ama-chi"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-10-04"},{"lineNumber":315,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":316,"author":{"gitId":"ama-chi"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2022-10-04"},{"lineNumber":317,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":318,"author":{"gitId":"ama-chi"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-10-04"},{"lineNumber":319,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":320,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":321,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"ama-chi"},"content":"4. Application should start in under a few seconds.","lastModifiedDate":"2022-10-04"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ama-chi":37,"-":374}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ama-chi"},"content":"REal-Time is a **desktop app for real estate agents to manage client contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, REal-Time can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"1. Download the latest `REal-Time.jar` from [here](https://github.com/AY2223S1-CS2103T-W15-2/tp/releases).","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-02-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jeromehjj":1,"ama-chi":1,"-":190}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"jeromehjj"},"content":"    content: \"REal-Time\";","lastModifiedDate":"2022-10-03"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"jeromehjj":1,"-":294}},{"path":"docs/team/ama-chi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ama-chi"},"content":"###Overview","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"ama-chi"},"content":"### Summary of Contributions","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"ama-chi"},"content":"**Code contributed:** [RepoSense Link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dama-chi\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"ama-chi"},"content":"**Enhancements implemented:** _to be added soon_","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"ama-chi"},"content":"**Contributions to the UG:** _to be added soon_","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"ama-chi"},"content":"**Contributions to the DG:** _to be added soon_","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"ama-chi"},"content":"**Contributions to team based tasks:** _to be added soon_","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"ama-chi"},"content":"**Review/mentoring contributions:** _to be added soon_","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"ama-chi"},"content":"**Contributions beyond the project team:** _to be added soon_","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"ama-chi":17}},{"path":"docs/team/gavzzz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"# Overview","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"## Summary of Contributions","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"**Code contributed:** [RepoSense Link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dgavzzz\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"**Enhancements implemented:** *to be added soon*","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"**Contributions to the UG:** *to be added soon*","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"**Contributions to the DG:** *to be added soon*","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"**Contributions to team based tasks:** *to be added soon*","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"**Review/mentoring contributions:** *to be added soon*","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"**Contributions beyond the project team:** *to be added soon*","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"Gavzzz":19}},{"path":"docs/team/hoang227.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"## Overview","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"### Summary of Contributions","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"**Code contributed:** [RepoSense Link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dama-chi\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"**Enhancements implemented:** _to be added soon_","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"**Contributions to the UG:** _to be added soon_","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"**Contributions to the DG:** _to be added soon_","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"**Contributions to team based tasks:** _to be added soon_","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"**Review/mentoring contributions:** _to be added soon_","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"**Contributions beyond the project team:** _to be added soon_","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"hoang227":16}},{"path":"docs/team/isaaclhy00.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"### Overview","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"### Summary of Contributions","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"**Code contributed:** [RepoSense Link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003djeroomehjj\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16)","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"**Enhancements implemented:** _to be added soon_","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"**Contributions to the UG:** _to be added soon_","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"**Contributions to the DG:** _to be added soon_","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"**Contributions to team based tasks:** _to be added soon_","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"**Review/mentoring contributions:** _to be added soon_","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"**Contributions beyond the project team:** _to be added soon_","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"Isaaclhy00":17}},{"path":"docs/team/jeromehjj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"### Overview","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"### Summary of Contributions","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"**Code contributed:** [RepoSense Link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003djeromehjj\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16)","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"**Enhancements implemented:** _to be added soon_","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"**Contributions to the UG:** _to be added soon_","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"**Contributions to the DG:** _to be added soon_","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"**Contributions to team based tasks:** _to be added soon_","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"**Review/mentoring contributions:** _to be added soon_","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"**Contributions beyond the project team:** _to be added soon_","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"jeromehjj":17}},{"path":"src/main/java/seedu/address/logic/commands/AddListingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASKING_PRICE;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.listing.Listing;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":" * Adds a person to the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"public class AddListingCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    public static final String COMMAND_WORD \u003d \"addlist\";","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a listing to the address book. \"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"            + PREFIX_ADDRESS + \"ADRESS \"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"            + PREFIX_ASKING_PRICE + \"ASKING PRICE \"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"            + PREFIX_NAME + \"Bob \"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"            + PREFIX_ASKING_PRICE + \"600000\";","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New listing added: %1$s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    public static final String MESSAGE_DUPLICATE_LISTING \u003d \"This listing already exists in the address book\";","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    private final Listing toAdd;","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    public AddListingCommand(Listing listing) {","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        requireNonNull(listing);","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        toAdd \u003d listing;","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        if (model.hasListing(toAdd)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_LISTING);","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        model.addListing(toAdd);","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"                || (other instanceof AddListingCommand // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"                \u0026\u0026 toAdd.equals(((AddListingCommand) other).toAdd));","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"hoang227":61}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"        Remark updatedRemark \u003d personToEdit.getRemark(); // edit command does not allow editing remarks","lastModifiedDate":"2022-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRemark, updatedTags);","lastModifiedDate":"2022-09-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"hoang227":3,"-":225}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    private final Index index;","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    private final Remark remark;","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"     * @param index  of the person in the filtered person list to edit the remark","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-09-28"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2022-09-28"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2022-09-28"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2022-09-28"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2022-09-28"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2022-09-28"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2022-09-28"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2022-09-28"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-09-28"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-28"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"        // short circuit if same object","lastModifiedDate":"2022-09-28"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"            return true;","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-09-28"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2022-09-28"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"            return false;","lastModifiedDate":"2022-09-28"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        // state check","lastModifiedDate":"2022-09-28"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2022-09-28"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-09-28"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2022-09-28"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"hoang227":98}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        Remark remark \u003d new Remark(\"\"); // add command does not allow adding remarks straight away","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        Person person \u003d new Person(name, phone, email, address, remark, tagList);","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"hoang227":3,"-":59}},{"path":"src/main/java/seedu/address/logic/parser/AddListingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASKING_PRICE;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.AddListingCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.listing.Listing;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"public class AddListingCommandParser implements Parser\u003cAddListingCommand\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"     * Parses the given {@code String} of arguments in the context of the AddListingCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"     * and returns an AddListingCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    public AddListingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ADDRESS, PREFIX_NAME, PREFIX_ASKING_PRICE);","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ADDRESS, PREFIX_NAME, PREFIX_ASKING_PRICE)","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddListingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        Integer askingPrice \u003d ParserUtil.parseAskingPrice(Integer.parseInt(argMultimap","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"                .getValue(PREFIX_ASKING_PRICE).get()));","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        Listing listing \u003d new Listing(address, name, askingPrice);","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        return new AddListingCommand(listing);","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"hoang227":55}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        return values.isEmpty() ? Optional.empty()","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"                : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"hoang227":3,"-":59}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"    public static final Prefix PREFIX_ASKING_PRICE \u003d new Prefix(\"ap/\");","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"hoang227":2,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"     * Parses {@code int askingPrice} into a {@code Integer}.","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"    public static Integer parseAskingPrice(int askingPrice) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"        requireNonNull(askingPrice);","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"        if (askingPrice \u003c 0) {","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"            throw new ParseException(\"Asking Price can\u0027t be negative\");","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"        return askingPrice;","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"hoang227":11,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":" * Parses input arguments and creates a new RemarkCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"     * Parses the given {@code String} of arguments in the context of the RemarkCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"     * and returns an RemarkCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"                PREFIX_REMARK);","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        Index index;","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        try {","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"                    RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        return new RemarkCommand(index, new Remark(remark));","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"hoang227":42}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.listing.Listing;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.listing.UniqueListingList;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    private final UniqueListingList listings;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        listings \u003d new UniqueListingList();","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    public AddressBook() {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"     * Replaces the contents of the listing list with {@code listings}.","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"     * {@code listings} must not contain duplicate listings.","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"    public void setListings(List\u003cListing\u003e listings) {","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        this.listings.setListings(listings);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        try {","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"            setListings(newData.getListingList());","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"     * Returns true if a listing with the same identity as {@code listing} exists in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"    public boolean hasListing(Listing listing) {","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        requireNonNull(listing);","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        return listings.contains(listing);","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"     * Adds a listing to the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"     * The listing must not already exist in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"    public void addListing(Listing l) {","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"        listings.add(l);","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"     * Replaces the given listing {@code target} in the list with {@code editedListing}.","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"     * The listing identity of {@code editedListing} must not be the same","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"     * as another existing listing in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"    public void setListing(Listing target, Listing editedListing) {","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"        requireNonNull(editedListing);","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"        listings.setListing(target, editedListing);","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"hoang227"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"hoang227"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"hoang227"},"content":"    public void removeListing(Listing key) {","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"hoang227"},"content":"        listings.remove(key);","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"hoang227"},"content":"        if (listings.asUnmodifiableObservableList().isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":154,"author":{"gitId":"hoang227"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":155,"author":{"gitId":"hoang227"},"content":"            return listings.asUnmodifiableObservableList().size() + \" listings\";","lastModifiedDate":"2022-10-09"},{"lineNumber":156,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":165,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":166,"author":{"gitId":"hoang227"},"content":"    public ObservableList\u003cListing\u003e getListingList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":167,"author":{"gitId":"hoang227"},"content":"        return listings.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-09"},{"lineNumber":168,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":169,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"hoang227"},"content":"        if (listings.asUnmodifiableObservableList().isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                    || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                    \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":176,"author":{"gitId":"hoang227"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":177,"author":{"gitId":"hoang227"},"content":"            return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":178,"author":{"gitId":"hoang227"},"content":"                    || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":179,"author":{"gitId":"hoang227"},"content":"                    \u0026\u0026 listings.equals(((AddressBook) other).listings));","lastModifiedDate":"2022-10-09"},{"lineNumber":180,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":185,"author":{"gitId":"hoang227"},"content":"        if (listings.asUnmodifiableObservableList().isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":187,"author":{"gitId":"hoang227"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":188,"author":{"gitId":"hoang227"},"content":"            return listings.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":189,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hoang227":73,"-":118}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.listing.Listing;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    Predicate\u003cListing\u003e PREDICATE_SHOW_ALL_LISTINGS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"    boolean hasListing(Listing listing);","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"     * Deletes the given listing.","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"     * The listing must exist in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"    void deleteListing(Listing target);","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"     * Adds the given listing.","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"     * {@code listing} must not already exist in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    void addListing(Listing listing);","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"     * Replaces the given listing {@code target} with {@code editedListing}.","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"     * The listing identity of {@code editedListing} must not be the same as another","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"     * existing listing in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"    void setListing(Listing target, Listing editedListing);","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"    /** Returns an unmodifiable view of the filtered listing list */","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"    ObservableList\u003cListing\u003e getFilteredListingList();","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"     * Updates the filter of the filtered listing list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"    void updateFilteredListingList(Predicate\u003cListing\u003e predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"hoang227":33,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.listing.Listing;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    private final FilteredList\u003cListing\u003e filteredLists;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        filteredLists \u003d new FilteredList\u003c\u003e(this.addressBook.getListingList());","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"    public boolean hasListing(Listing listing) {","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"        requireNonNull(listing);","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        return addressBook.hasListing(listing);","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"    public void deleteListing(Listing target) {","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"        addressBook.removeListing(target);","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"    public void addListing(Listing listing) {","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"        addressBook.addListing(listing);","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"        updateFilteredListingList(PREDICATE_SHOW_ALL_LISTINGS);","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"    public void setListing(Listing target, Listing editedListing) {","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"hoang227"},"content":"        requireAllNonNull(target, editedListing);","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"hoang227"},"content":"        addressBook.setListing(target, editedListing);","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"hoang227"},"content":"    public ObservableList\u003cListing\u003e getFilteredListingList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"hoang227"},"content":"        return filteredLists;","lastModifiedDate":"2022-10-09"},{"lineNumber":155,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":156,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":163,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":164,"author":{"gitId":"hoang227"},"content":"    public void updateFilteredListingList(Predicate\u003cListing\u003e predicate) {","lastModifiedDate":"2022-10-09"},{"lineNumber":165,"author":{"gitId":"hoang227"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":166,"author":{"gitId":"hoang227"},"content":"        filteredLists.setPredicate(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":167,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":168,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":185,"author":{"gitId":"hoang227"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-10-09"},{"lineNumber":186,"author":{"gitId":"hoang227"},"content":"                \u0026\u0026 filteredLists.equals(other.filteredLists);","lastModifiedDate":"2022-10-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hoang227":40,"-":149}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.listing.Listing;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"     * Returns an unmodifiable view of the listings list.","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"     * This list will not contain any duplicate listings.","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    ObservableList\u003cListing\u003e getListingList();","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hoang227":7,"-":17}},{"path":"src/main/java/seedu/address/model/listing/Listing.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.model.listing;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"ama-chi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"ama-chi"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.offer.Offer;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"ama-chi"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"ama-chi"},"content":" * Listing object contains a currently listed property, its owner, asking price, and offers and clients.","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"ama-chi"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"public class Listing {","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    private final Address address;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    private final Name owner;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    private final int askingPrice;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    private final List\u003cPerson\u003e interestedClients;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    private final List\u003cOffer\u003e currentOffers;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"ama-chi"},"content":"     ** Constructor for Listing","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"ama-chi"},"content":"     * @param address Address","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"ama-chi"},"content":"     * @param owner Person","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"ama-chi"},"content":"     * @param askingPrice int","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    public Listing(Address address, Name owner, int askingPrice) {","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        this.owner \u003d owner;","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        this.askingPrice \u003d askingPrice;","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        interestedClients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        currentOffers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"ama-chi"},"content":"     * Getter for address.","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"ama-chi"},"content":"     * @return Address","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    public Address getAddress() {","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        return address;","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"ama-chi"},"content":"     * Getter for owner.","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"ama-chi"},"content":"     * @return Person","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"    public Name getOwner() {","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        return owner;","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"ama-chi"},"content":"     * Getter for asking price.","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"ama-chi"},"content":"     * @return int","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"    public int getAskingPrice() {","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        return askingPrice;","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"ama-chi"},"content":"     * Getter for a list of interested clients.","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"ama-chi"},"content":"     * @return List(Person)","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    public List\u003cPerson\u003e getInterestedClients() {","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        return interestedClients;","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"ama-chi"},"content":"     * Getter for a list of Offers.","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"ama-chi"},"content":"     * @return List(Offer)","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    public List\u003cOffer\u003e getCurrentOffers() {","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        return currentOffers;","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"     * Returns true if both listings have the same address.","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"     * This defines a weaker notion of equality between two listings.","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"    public boolean isSameListing(Listing otherListing) {","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"        if (otherListing \u003d\u003d this) {","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"            return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        return otherListing !\u003d null","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"                \u0026\u0026 otherListing.getAddress().equals(getAddress());","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"ama-chi"},"content":"     * String representation of Listing.","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"ama-chi"},"content":"     * @return String","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"        builder.append(\"; Adress: \")","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"                .append(getAddress())","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"                .append(\"; Owner: \")","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"                .append(getOwner())","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"                .append(\"; Asking Price: \")","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"                .append(getAskingPrice());","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"        List\u003cPerson\u003e interstedClients \u003d getInterestedClients();","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"        if (!interstedClients.isEmpty()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"            builder.append(\"; Interested Clients: \");","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"            interstedClients.forEach(builder::append);","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"        List\u003cOffer\u003e currentOffers \u003d getCurrentOffers();","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"        if (!currentOffers.isEmpty()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"            builder.append(\"; Current Offers: \");","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"            currentOffers.forEach(builder::append);","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"hoang227":81,"ama-chi":36}},{"path":"src/main/java/seedu/address/model/listing/UniqueListingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.model.listing;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":" * A list of listings that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":" * A listing is considered unique by comparing using {@code Listing#isSameListing(Listing)}. As such, adding and","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":" * updating of listings uses Listing#isSameListing(Listing) for equality to ensure that the listing being added or","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":" * updated is unique in terms of identity in the UniqueListingList. However, the removal of a listing uses","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":" * Listing#equals(Object) to ensure that the listing with exactly the same fields will be removed.","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":" *","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":" * @see Listing#isSameListing(Listing)","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"public class UniqueListingList implements Iterable\u003cListing\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    private final ObservableList\u003cListing\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    private final ObservableList\u003cListing\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"     * Returns true if the list contains an equivalent listing as the given argument.","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    public boolean contains(Listing toCheck) {","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        return internalList.stream().anyMatch(toCheck::isSameListing);","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"     * Adds a listing to the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"     * The listing must not already exist in the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    public void add(Listing toAdd) {","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"     * Replaces the listing {@code target} in the list with {@code editedListing}.","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"     * The listing identity of {@code editedListing} must not be the same as another existing listing in the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"    public void setListing(Listing target, Listing editedListing) {","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        requireAllNonNull(target, editedListing);","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        if (!target.isSameListing(editedListing) \u0026\u0026 contains(editedListing)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        internalList.set(index, editedListing);","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"     * Removes the equivalent listing from the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"     * The listing must exist in the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"    public void remove(Listing toRemove) {","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    public void setListings(UniqueListingList replacement) {","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"     * Replaces the contents of this list with {@code listings}.","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"     * {@code listings} must not contain duplicate listings.","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"    public void setListings(List\u003cListing\u003e listings) {","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"        requireAllNonNull(listings);","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        if (!listingsAreUnique(listings)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        internalList.setAll(listings);","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"    public ObservableList\u003cListing\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"    public Iterator\u003cListing\u003e iterator() {","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"            || (other instanceof UniqueListingList // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"            \u0026\u0026 internalList.equals(((UniqueListingList) other).internalList));","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"     * Returns true if {@code persons} contains only unique listings.","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"    private boolean listingsAreUnique(List\u003cListing\u003e persons) {","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"                if (persons.get(i).isSameListing(persons.get(j))) {","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"                    return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"                }","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"        return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"hoang227":137}},{"path":"src/main/java/seedu/address/model/meeting/Meeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ama-chi"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"ama-chi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"ama-chi"},"content":"import seedu.address.model.listing.Listing;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"ama-chi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"ama-chi"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"ama-chi"},"content":" * Meeting class is a meeting a client has at a listing on a specific dateTime.","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"ama-chi"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"ama-chi"},"content":"public class Meeting {","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"ama-chi"},"content":"     * Date and Time of meeting.","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"ama-chi"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"ama-chi"},"content":"     * Client involved in the meeting.","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"ama-chi"},"content":"    private final Person client;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"ama-chi"},"content":"     * Listing involved in the meeting.","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"ama-chi"},"content":"    private final Listing listing;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"ama-chi"},"content":"     * Constructor for meeting.","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"ama-chi"},"content":"     * @param client Person","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"ama-chi"},"content":"     * @param listing Listing","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"ama-chi"},"content":"     * @param dateTime dateTime","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"ama-chi"},"content":"    public Meeting(Person client, Listing listing, LocalDateTime dateTime) {","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"ama-chi"},"content":"        this.client \u003d client;","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"ama-chi"},"content":"        this.listing \u003d listing;","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"ama-chi"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"ama-chi"},"content":"     * Getter for client.","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"ama-chi"},"content":"     * @return Person","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"ama-chi"},"content":"    public Person getClient() {","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"ama-chi"},"content":"        return client;","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"ama-chi"},"content":"     * Getter for listing.","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"ama-chi"},"content":"     * @return Listing","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"ama-chi"},"content":"    public Listing getListing() {","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"ama-chi"},"content":"        return listing;","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"ama-chi"},"content":"     * Getter for date time.","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"ama-chi"},"content":"     * @return LocalDatetime","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"ama-chi"},"content":"    public LocalDateTime getdateTime() {","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"ama-chi"},"content":"        return dateTime;","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"ama-chi"},"content":"     * String representation of meeting.","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"ama-chi"},"content":"     * @return String","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"ama-chi"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"ama-chi"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"ama-chi"},"content":"        return String.format(\"%s is meeting at %s on %s\", client.getName(), listing.getAddress(), dateTime);","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"ama-chi"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"ama-chi":70}},{"path":"src/main/java/seedu/address/model/offer/Offer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.model.offer;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"ama-chi"},"content":"import seedu.address.model.listing.Listing;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"ama-chi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"ama-chi"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"ama-chi"},"content":" * Offer Class represents a clients offer for a listing, containing an offer price.","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"ama-chi"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"public class Offer {","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"ama-chi"},"content":"     * Client making the offer.","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"ama-chi"},"content":"    private final Person person;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"ama-chi"},"content":"     * Listing the offer is for.","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"ama-chi"},"content":"    private final Listing listing;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"ama-chi"},"content":"     * Price client is offering.","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"ama-chi"},"content":"    private final int offerPrice;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"ama-chi"},"content":"     * Constructor for offer object.","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"ama-chi"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"ama-chi"},"content":"     * @param client Person","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"ama-chi"},"content":"     * @param listing Listing","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"ama-chi"},"content":"     * @param offerPrice int","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"ama-chi"},"content":"    public Offer(Person client, Listing listing, int offerPrice) {","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"ama-chi"},"content":"        this.person \u003d client;","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"ama-chi"},"content":"        this.listing \u003d listing;","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"ama-chi"},"content":"        this.offerPrice \u003d offerPrice;","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"ama-chi"},"content":"     * Getter for client.","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"ama-chi"},"content":"     * @return Person","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"ama-chi"},"content":"    public Person getClient() {","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"ama-chi"},"content":"        return person;","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"ama-chi"},"content":"     * Getter for listing.","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"ama-chi"},"content":"     * @return Listing","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"ama-chi"},"content":"    public Listing getListing() {","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"ama-chi"},"content":"        return listing;","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"ama-chi"},"content":"     * Getter for offer price.","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"ama-chi"},"content":"     * @return int","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"ama-chi"},"content":"    public int getOfferPrice() {","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"ama-chi"},"content":"        return offerPrice;","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"ama-chi"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"ama-chi"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"ama-chi"},"content":"     * String representation of offer.","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"ama-chi"},"content":"     * @return String","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"ama-chi"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"ama-chi"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"ama-chi"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"ama-chi"},"content":"        return String.format(\"%s is offering $%s for %s\",","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"ama-chi"},"content":"                this.person.getName(), this.offerPrice, this.listing.getAddress());","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"ama-chi"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"hoang227":4,"ama-chi":66}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"    private final Remark remark;","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"    public Remark getRemark() {","lastModifiedDate":"2022-09-28"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        return remark;","lastModifiedDate":"2022-09-28"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"                .append(getAddress())","lastModifiedDate":"2022-09-28"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"                .append(\" Remark: \")","lastModifiedDate":"2022-09-28"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"                .append(getRemark());","lastModifiedDate":"2022-09-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hoang227":10,"-":120}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"public class Remark {","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    public final String value;","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    public Remark(String remark) {","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        requireNonNull(remark);","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"        value \u003d remark;","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public String toString() {","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        return value;","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        return value.hashCode();","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"hoang227":39}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), EMPTY_REMARK,","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), EMPTY_REMARK,","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), EMPTY_REMARK,","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), EMPTY_REMARK,","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), EMPTY_REMARK,","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), EMPTY_REMARK,","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"hoang227":10,"-":54}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    private final String remark;","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"                             @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2022-09-28"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2022-09-28"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2022-09-28"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelRemark, modelTags);","lastModifiedDate":"2022-09-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"hoang227":12,"-":107}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    @FXML","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    private Label remark;","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        remark.setText(person.getRemark().value);","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"hoang227":7,"-":77}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hoang227":1,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.listing.Listing;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"        public void addListing(Listing listing) {","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"hoang227"},"content":"        public boolean hasListing(Listing listing) {","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"hoang227"},"content":"        public void deleteListing(Listing target) {","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"hoang227"},"content":"        public void setListing(Listing target, Listing editedListing) {","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"hoang227"},"content":"        public ObservableList\u003cListing\u003e getFilteredListingList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"hoang227"},"content":"        public void updateFilteredListingList(Predicate\u003cListing\u003e predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"hoang227":31,"-":194}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    public static final String VALID_REMARK_AMY \u003d \"\";","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    public static final String VALID_REMARK_BOB \u003d \"\";","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"hoang227":3,"-":128}},{"path":"src/test/java/seedu/address/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"public class RemarkCommandTest {","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(REMARK_STUB).build();","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    public void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(\"\").build();","lastModifiedDate":"2022-09-28"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"            new Remark(editedPerson.getRemark().toString()));","lastModifiedDate":"2022-09-28"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-09-28"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2022-09-28"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"            .withRemark(REMARK_STUB).build();","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2022-09-28"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-09-28"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-09-28"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-09-28"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-09-28"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-09-28"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-09-28"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-09-28"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-09-28"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-09-28"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2022-09-28"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-09-28"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-09-28"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-09-28"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-09-28"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2022-09-28"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-09-28"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"hoang227":105}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.listing.Listing;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        private final ObservableList\u003cListing\u003e listings \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        public ObservableList\u003cListing\u003e getListingList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"            return listings;","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"hoang227":7,"-":88}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-09-28"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2022-09-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2022-09-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2022-09-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-09-28"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2022-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, invalidTags);","lastModifiedDate":"2022-09-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"hoang227":14,"-":101}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public static final String DEFAULT_REMARK \u003d \"She likes aardvarks.\";","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    private Remark remark;","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2022-09-28"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2022-09-28"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2022-09-28"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-09-28"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"        return new Person(name, phone, email, address, remark, tags);","lastModifiedDate":"2022-09-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"hoang227":14,"-":95}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"            .withPhone(\"94351253\").withRemark(\"She likes aardvarks.\")","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withRemark(\"He can\u0027t take beer!\")","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"hoang227":2,"-":74}},{"path":"src/test/test/java/seedu/address/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"public class AppParametersTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":58}},{"path":"src/test/test/java/seedu/address/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"public class ConfigTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    public void equalsMethod() {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":27}},{"path":"src/test/test/java/seedu/address/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"public class VersionTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        // boundary at 0","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        // normal values","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        // big numbers","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        Version one;","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        Version another;","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        // Tests equality","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        // Tests different patch","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        // Tests different minor","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        // Tests different major","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"        Version one;","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"        Version another;","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":135}},{"path":"src/test/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"public class IndexTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"        // invalid index","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"        // check equality using the same base","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        // invalid index","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        // check equality using the same base","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":60}},{"path":"src/test/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"public class AppUtilTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":36}},{"path":"src/test/test/java/seedu/address/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        // no arguments","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"        // any non-empty argument list","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        // null reference","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        // null reference","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        // empty list","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        // list with all non-null elements","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":108}},{"path":"src/test/test/java/seedu/address/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    @TempDir","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public Path tempDir;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        return config;","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        //Try saving when the file exists","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"                                  : null;","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":116}},{"path":"src/test/test/java/seedu/address/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"public class FileUtilTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    public void isValidPath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"        // valid path","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"        // invalid path","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":23}},{"path":"src/test/test/java/seedu/address/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.address.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.address.testutil.TestUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"public class JsonUtilTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":45}},{"path":"src/test/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"public class StringUtilTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        // EP: empty strings","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        // EP: not a number","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"        // EP: zero","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        // EP: zero as prefix","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        // EP: signed numbers","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        // EP: numbers with white space","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    /*","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"    /*","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"     *   - any word","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"     *   - empty string","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"     *   - one word","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"     *   - multiple words","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"     *   - last word in sentence","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"     *   - middle word in sentence","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"     *   - matches multiple words","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        // Empty sentence","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"        // Matches a partial word only","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"    /*","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":143}},{"path":"src/test/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"public class LogicManagerTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    @TempDir","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    private Logic logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        // Execute add command","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"            String expectedMessage) {","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"hoang227"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"hoang227"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"hoang227"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"hoang227"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"hoang227"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"hoang227"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"hoang227"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"hoang227"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"hoang227"},"content":"            super(filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"hoang227"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"hoang227"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":162}},{"path":"src/test/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    private Model model;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":45}},{"path":"src/test/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"public class AddCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"hoang227"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"hoang227"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"hoang227"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"hoang227"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"hoang227"},"content":"        private final Person person;","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"hoang227"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"hoang227"},"content":"            requireNonNull(person);","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"hoang227"},"content":"            this.person \u003d person;","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"hoang227"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"hoang227"},"content":"            requireNonNull(person);","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"hoang227"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"hoang227"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"hoang227"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"hoang227"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"hoang227"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"hoang227"},"content":"            requireNonNull(person);","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"hoang227"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"hoang227"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"hoang227"},"content":"            requireNonNull(person);","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"hoang227"},"content":"            personsAdded.add(person);","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":189,"author":{"gitId":"hoang227"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"hoang227"},"content":"            return new AddressBook();","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":194}},{"path":"src/test/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"public class ClearCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":32}},{"path":"src/test/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"public class CommandResultTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    public void hashcode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":54}},{"path":"src/test/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"public class CommandTestUtil {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    static {","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"            Model expectedModel) {","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"            Model expectedModel) {","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"        // only do so by copying its components.","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":128}},{"path":"src/test/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":109}},{"path":"src/test/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"public class EditCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"hoang227"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"hoang227"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"hoang227"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"hoang227"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"hoang227"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"hoang227"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"hoang227"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"hoang227"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"hoang227"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"hoang227"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"hoang227"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"hoang227"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"hoang227"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"hoang227"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"hoang227"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"hoang227"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"hoang227"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"hoang227"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"hoang227"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"hoang227"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"hoang227"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":173}},{"path":"src/test/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":58}},{"path":"src/test/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"public class ExitCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":20}},{"path":"src/test/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"public class FindCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":83}},{"path":"src/test/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"public class HelpCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    public void execute_help_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":20}},{"path":"src/test/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"public class ListCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    private Model model;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":39}},{"path":"src/test/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"                .build();","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        // zero tags","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        // missing name prefix","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        // missing phone prefix","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        // missing email prefix","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"        // missing address prefix","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        // all prefixes missing","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"        // invalid name","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"        // invalid phone","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"        // invalid email","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"        // invalid address","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"        // invalid tag","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"hoang227"},"content":"        // non-empty preamble","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"hoang227"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":141}},{"path":"src/test/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":101}},{"path":"src/test/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        // Verify the last value is returned","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        // Preamble present","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        // No preamble","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        // Only two arguments are present","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"        // All three arguments are present","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"hoang227"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"    public void equalsMethod() {","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"hoang227"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"hoang227"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"hoang227"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"hoang227"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"hoang227"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":150}},{"path":"src/test/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"            parser.parse(userInput);","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":39}},{"path":"src/test/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":32}},{"path":"src/test/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        // no index specified","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        // no field specified","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        // no index and no field specified","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        // negative index","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        // zero index","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"hoang227"},"content":"        // name","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"hoang227"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"hoang227"},"content":"        // phone","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"hoang227"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"hoang227"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"hoang227"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"hoang227"},"content":"        // email","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"hoang227"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"hoang227"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"hoang227"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"hoang227"},"content":"        // address","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"hoang227"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"hoang227"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"hoang227"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"hoang227"},"content":"        // tags","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"hoang227"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"hoang227"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"hoang227"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"hoang227"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"hoang227"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"hoang227"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"hoang227"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"hoang227"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"hoang227"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"hoang227"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"hoang227"},"content":"                .build();","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"hoang227"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"hoang227"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"hoang227"},"content":"        // no other valid values specified","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"hoang227"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"hoang227"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"hoang227"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":189,"author":{"gitId":"hoang227"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"hoang227"},"content":"        // other valid values specified","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"hoang227"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"hoang227"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"hoang227"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"hoang227"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":197,"author":{"gitId":"hoang227"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":199,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":200,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":201,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":202,"author":{"gitId":"hoang227"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":203,"author":{"gitId":"hoang227"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":204,"author":{"gitId":"hoang227"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2022-10-10"},{"lineNumber":205,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":206,"author":{"gitId":"hoang227"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":207,"author":{"gitId":"hoang227"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":208,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":209,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":210,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":211,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":211}},{"path":"src/test/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":34}},{"path":"src/test/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"public class ParserUtilTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        // No whitespaces","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"hoang227"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"hoang227"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"hoang227"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"hoang227"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"hoang227"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"hoang227"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"hoang227"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"hoang227"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"hoang227"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"hoang227"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"hoang227"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"hoang227"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"hoang227"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"hoang227"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"hoang227"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"hoang227"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":189,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"hoang227"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"hoang227"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"hoang227"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":196}},{"path":"src/test/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"public class AddressBookTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"                .build();","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"                .build();","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"            return persons;","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":102}},{"path":"src/test/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"public class ModelManagerTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":132}},{"path":"src/test/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"public class UserPrefsTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":21}},{"path":"src/test/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"public class AddressTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    public void isValidAddress() {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"        // null address","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        // invalid addresses","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        // valid addresses","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":36}},{"path":"src/test/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"public class EmailTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    public void isValidEmail() {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"        // null email","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        // blank email","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        // missing parts","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        // invalid parts","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        // valid email","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":68}},{"path":"src/test/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        // One keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":75}},{"path":"src/test/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"public class NameTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    public void isValidName() {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"        // null name","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        // invalid name","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        // valid name","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":40}},{"path":"src/test/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"public class PersonTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    public void isSamePerson() {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":91}},{"path":"src/test/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"public class PhoneTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    public void isValidPhone() {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"        // null phone number","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        // invalid phone numbers","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        // valid phone numbers","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":40}},{"path":"src/test/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"                .build();","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"                .build();","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"hoang227"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"hoang227"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"hoang227"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"hoang227"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"hoang227"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"hoang227"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"hoang227"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"hoang227"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"hoang227"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"hoang227"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"hoang227"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"hoang227"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"hoang227"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"hoang227"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"hoang227"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"hoang227"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"hoang227"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"hoang227"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":170}},{"path":"src/test/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"public class TagTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    public void isValidTagName() {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"        // null tag name","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":26}},{"path":"src/test/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":110}},{"path":"src/test/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"    @TempDir","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"                : null;","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":110}},{"path":"src/test/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":47}},{"path":"src/test/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    @TempDir","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"                : null;","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"        return userPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"hoang227"},"content":"        //Try saving when the file exists","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"hoang227"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"hoang227"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"hoang227"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"hoang227"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":123}},{"path":"src/test/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"public class StorageManagerTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    @TempDir","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        /*","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"         */","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        /*","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"         */","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":68}},{"path":"src/test/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    public AddressBook build() {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        return addressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":34}},{"path":"src/test/test/java/seedu/address/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"public class Assert {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"            Executable executable) {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":34}},{"path":"src/test/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"     * that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"        return descriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":87}},{"path":"src/test/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"public class PersonBuilder {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    private Name name;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"    private Phone phone;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    private Email email;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    private Address address;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    public PersonBuilder() {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"    public Person build() {","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":96}},{"path":"src/test/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":" * A utility class for Person.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"public class PersonUtil {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        );","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"            } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":62}},{"path":"src/test/test/java/seedu/address/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"public class SerializableTestClass {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"            + \"  }%n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"            + \"}\");","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    private String name;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"    public void setTestValues() {","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    public String getName() {","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        return name;","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":72}},{"path":"src/test/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":" * A utility class for test cases.","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"public class TestUtil {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":55}},{"path":"src/test/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"public class TypicalIndexes {","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":12}},{"path":"src/test/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"public class TypicalPersons {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    // Manually added","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"            .build();","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"            ab.addPerson(person);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"        return ab;","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":76}},{"path":"src/test/test/java/seedu/address/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"public class TestFxmlObject {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"    private String text;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"        setText(text);","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    public String getText() {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"        return text;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    public void setText(String text) {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"        this.text \u003d text;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":35}},{"path":"src/test/test/java/seedu/address/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"hoang227"},"content":"import java.net.URL;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"hoang227"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"hoang227"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"hoang227"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"hoang227"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"hoang227"},"content":"public class UiPartTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"hoang227"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"hoang227"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"hoang227"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"hoang227"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"hoang227"},"content":"    @TempDir","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"hoang227"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"hoang227"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"hoang227"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"hoang227"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"hoang227"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"hoang227"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"hoang227"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"hoang227"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"hoang227"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"hoang227"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"hoang227"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"hoang227"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"hoang227"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"hoang227"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"hoang227"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"hoang227"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"hoang227"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"hoang227"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"hoang227"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"hoang227"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"hoang227"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"hoang227"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"hoang227"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"hoang227"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"hoang227"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"hoang227"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"hoang227"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"hoang227"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"hoang227"},"content":"        return testFileUrl;","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"hoang227"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"hoang227"},"content":"     * UiPart used for testing.","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"hoang227"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"hoang227"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"hoang227"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"hoang227"},"content":"        @FXML","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"hoang227"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"hoang227"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"hoang227"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"hoang227"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"hoang227"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"hoang227"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"hoang227"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"hoang227"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"hoang227"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"hoang227"},"content":"            super(fxmlFileName);","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"hoang227"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"hoang227"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"hoang227"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"hoang227"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":114}},{"path":"src/test/test/resources/view/UiPartTest/invalidFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"Not a valid FXML file","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":1}},{"path":"src/test/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"\u003c?import seedu.address.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":4}},{"path":"src/test/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hoang227"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"hoang227"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"hoang227"},"content":"\u003cfx:root type\u003d\"seedu.address.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"hoang227"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"hoang227"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"hoang227"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"hoang227":6}}]
