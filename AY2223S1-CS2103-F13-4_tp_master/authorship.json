[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yeehaoo"},"content":"# _Healthcare Xpress_ [![Java CI](https://github.com/AY2223S1-CS2103-F13-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103-F13-4/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"yeehaoo"},"content":"* This is an **address log application for medical staff**.\u003cbr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"yeehaoo"},"content":"  * for medical administrators to lookup patient details and forward them to the relevant attending nurses or physicians","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"yeehaoo"},"content":"  * for medical administrators to keep track of which nurses are assigned to which patients","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"yeehaoo"},"content":"  * for medical administrators to label patients with specific conditions so precautions can be taken by attending staff if needed","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"yeehaoo"},"content":"* As most commands are inputed with the keyboard, it is best suited for a medical administrator who is familiar with CLI Applications.","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"yeehaoo"},"content":"* However, due to its intuitive design, beginners can expect to pick it up very quickly.","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"yeehaoo"},"content":"* For the detailed documentation of this project, see the **[Healthcare Xpress Product Website](https://ay2223s1-cs2103-f13-4.github.io/tp/)**.","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"yeehaoo"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"yeehaoo":10,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"run {","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"xhphoong":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"yeehaoo"},"content":"### John Benedict Yan","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"yeehaoo"},"content":"\u003cimg src\u003d\"images/johnbenedictyan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"yeehaoo"},"content":"[[github](https://github.com/johnbenedictyan)]","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"yeehaoo"},"content":"[[portfolio](team/johnbenedictyan.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"yeehaoo"},"content":"* Role: Team Lead and Code Quality In-Charge","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"yeehaoo"},"content":"* Responsibilities: Commons","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"yeehaoo"},"content":"### Phoong Xiang Han","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"yeehaoo"},"content":"\u003cimg src\u003d\"images/xhphoong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"yeehaoo"},"content":"[[github](http://github.com/xhphoong)]","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"yeehaoo"},"content":"[[portfolio](team/xhphoong.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"yeehaoo"},"content":"* Role: Documentation In-Charge","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"yeehaoo"},"content":"* Responsibilities: Logic","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"yeehaoo"},"content":"### Yee Hao","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"yeehaoo"},"content":"\u003cimg src\u003d\"images/yeehaoo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"yeehaoo"},"content":"[[github](http://github.com/yeehaoo)] [[portfolio](team/yeehaoo.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"yeehaoo"},"content":"* Role: Deliverables and deadlines, and Scheduling and tracking In-Charge","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"yeehaoo"},"content":"* Responsibilities: Model","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"yeehaoo"},"content":"### Malcolm Low","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"yeehaoo"},"content":"\u003cimg src\u003d\"images/mlzt2000.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"yeehaoo"},"content":"[[github](http://github.com/mlzt2000)]","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"yeehaoo"},"content":"[[portfolio](team/mlzt2000.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"yeehaoo"},"content":"* Role: Integration In-Charge","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"yeehaoo"},"content":"* Responsibilities: User Interface","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"yeehaoo"},"content":"### Lim Zhan Feng","lastModifiedDate":"2022-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"yeehaoo"},"content":"\u003cimg src\u003d\"images/lolfoollors.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"yeehaoo"},"content":"[[github](http://github.com/lolfoollors)]","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"yeehaoo"},"content":"[[portfolio](team/lolfoollors.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"yeehaoo"},"content":"* Role: Testing In-Charge","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"yeehaoo"},"content":"* Responsibilities: Storage","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"yeehaoo":29,"-":30}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"xhphoong"},"content":"### Proposed Add feature","lastModifiedDate":"2022-10-20"},{"lineNumber":158,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"xhphoong"},"content":"#### Proposed Implementation for adding a patient","lastModifiedDate":"2022-10-20"},{"lineNumber":160,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":161,"author":{"gitId":"xhphoong"},"content":"The add patient mechanism is facilitated by `Patient`, `AddCommandParser`,`AddCommand`, `Model`, `AddressBook` and `UniquePersonList`.","lastModifiedDate":"2022-10-20"},{"lineNumber":162,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":163,"author":{"gitId":"xhphoong"},"content":"`Patient` extends from `Person`. A `Patient` have the `Person` attributes and a `dateTimeList`. This is shown in the diagram below:","lastModifiedDate":"2022-10-20"},{"lineNumber":164,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":165,"author":{"gitId":"xhphoong"},"content":"![PatientClassDiagram](images/PatientClassDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":166,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":167,"author":{"gitId":"xhphoong"},"content":"The `AddCommandParser` will take in the input and extract out different information respectively and create a `Patient`.","lastModifiedDate":"2022-10-20"},{"lineNumber":168,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":169,"author":{"gitId":"xhphoong"},"content":"The `AddCommand` will then be executed and add the `Patient` to the `Model`\u0027s `AddressBook`\u0027s `UniquePersonList`.","lastModifiedDate":"2022-10-20"},{"lineNumber":170,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":171,"author":{"gitId":"xhphoong"},"content":"Given below is an example usage scenario and how the add patient mechanism behaves at each step.","lastModifiedDate":"2022-10-20"},{"lineNumber":172,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":173,"author":{"gitId":"xhphoong"},"content":"Step 1. The user executes `Add c/P n/Lily g/F p/91103813 a/ABC STREET 111 e/lily@gmail.com t/heartDisease dt/2022-10-10T15:20` command to add a new patient that requires nurse\u0027s home-visit.","lastModifiedDate":"2022-10-20"},{"lineNumber":174,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":175,"author":{"gitId":"xhphoong"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The `c/P` is needed to indicate that the person added is a patient.`Name`, `Gender`, `Phone`, `Address`, `Email` is compulsory but `Tag` and `DateTime` has been made optional. The `n/`, `g/`, `p/` ... are the prefixes used to extract different details\u0027 field of the patient.","lastModifiedDate":"2022-10-20"},{"lineNumber":176,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":177,"author":{"gitId":"xhphoong"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":178,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":179,"author":{"gitId":"xhphoong"},"content":"Step 2. The `AddressBookParser` will parse the user command to return an `AddCommandParser` with the patient\u0027s details.","lastModifiedDate":"2022-10-20"},{"lineNumber":180,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":181,"author":{"gitId":"xhphoong"},"content":"Step 3. The `AddCommandParser` will parse the respective patient\u0027s details using fixed prefixes and check their validity. The `Uid` for the patient will also be generated and used along with the parsed patient\u0027s details to create a patient if all the inputs are valid. Then, it returns an `AddCommand` with the patient created.","lastModifiedDate":"2022-10-20"},{"lineNumber":182,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":183,"author":{"gitId":"xhphoong"},"content":"Step 4. The `AddCommand` will be executed and the patient will be added to the `Model`\u0027s `AddressBook`\u0027s `UniquePersonList`. In the `UniquePersonList`, potential duplication will be checked.","lastModifiedDate":"2022-10-20"},{"lineNumber":184,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":185,"author":{"gitId":"xhphoong"},"content":"The following sequence diagram shows how the add patient operation works:","lastModifiedDate":"2022-10-20"},{"lineNumber":186,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":187,"author":{"gitId":"xhphoong"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** For simplification purpose, `c/P n/Lily g/F p/91103813 a/ABC STREET 111 e/lily@gmail.com t/heartDisease dt/2022-10-10T15:20` will be written as userInput and all the parsed patient\u0027s details will be written as patientDetails.","lastModifiedDate":"2022-10-20"},{"lineNumber":188,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":189,"author":{"gitId":"xhphoong"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":190,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":191,"author":{"gitId":"xhphoong"},"content":"![AddSequenceDiagram](images/AddSequenceDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":192,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":193,"author":{"gitId":"xhphoong"},"content":"Step 5. The `LogicManager` will then call `saveAddressBook()` to store the new updated `AddressBook` so that the data of the new patient can be retrieved later.","lastModifiedDate":"2022-10-20"},{"lineNumber":194,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":195,"author":{"gitId":"xhphoong"},"content":"The following activity diagram summarizes what happens when a user executes an add patient command:","lastModifiedDate":"2022-10-20"},{"lineNumber":196,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":197,"author":{"gitId":"xhphoong"},"content":"![AddPatientActivityDiagram](images/AddPatientActivityDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":198,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":199,"author":{"gitId":"xhphoong"},"content":"#### Design considerations:","lastModifiedDate":"2022-10-20"},{"lineNumber":200,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":201,"author":{"gitId":"xhphoong"},"content":"**Aspect: How to deal with duplication:**","lastModifiedDate":"2022-10-20"},{"lineNumber":202,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":203,"author":{"gitId":"xhphoong"},"content":"* **Alternative 1:** Check the name. If the name is the same, then shows duplicate error and that patient would not be added.","lastModifiedDate":"2022-10-20"},{"lineNumber":204,"author":{"gitId":"xhphoong"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2022-10-20"},{"lineNumber":205,"author":{"gitId":"xhphoong"},"content":"    * Cons: If the 2 different patients have the exact same name, the user would not be able to add that patient.","lastModifiedDate":"2022-10-20"},{"lineNumber":206,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":207,"author":{"gitId":"xhphoong"},"content":"* **Alternative 2:** Check the name. If the name is the same, then shows duplicate warning but that patient would still be added.","lastModifiedDate":"2022-10-20"},{"lineNumber":208,"author":{"gitId":"xhphoong"},"content":"    * Pros: If the 2 different patients have the exact same name, the user would still be able to add that patient. At the same time, it will show potential duplication to the user.","lastModifiedDate":"2022-10-20"},{"lineNumber":209,"author":{"gitId":"xhphoong"},"content":"    * Cons: The user have to manually check whether it is the same person and delete it if it is a duplication.","lastModifiedDate":"2022-10-20"},{"lineNumber":210,"author":{"gitId":"xhphoong"},"content":"    * Cons: The user might miss out the duplicated patients.","lastModifiedDate":"2022-10-20"},{"lineNumber":211,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":212,"author":{"gitId":"xhphoong"},"content":"**Aspect: The home-visit `DateTime` input:**","lastModifiedDate":"2022-10-20"},{"lineNumber":213,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":214,"author":{"gitId":"xhphoong"},"content":"* **Alternative 1:** The `DateTime` input is in the format of `YYYY-MM-DDTHH:mm` and it can in any time.","lastModifiedDate":"2022-10-20"},{"lineNumber":215,"author":{"gitId":"xhphoong"},"content":"    * Pros: More specific date and time recorded for the patient.","lastModifiedDate":"2022-10-20"},{"lineNumber":216,"author":{"gitId":"xhphoong"},"content":"    * Pros: More flexible in the home visit date and time that a patient can choose.","lastModifiedDate":"2022-10-20"},{"lineNumber":217,"author":{"gitId":"xhphoong"},"content":"    * Cons: It is hard to determine/check time crashes when assigning a home-visit `DateTime` to a nurse.","lastModifiedDate":"2022-10-20"},{"lineNumber":218,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":219,"author":{"gitId":"xhphoong"},"content":"* **Alternative 2:** The `DateTime` input will be in the format of `YYYY-MM-DD` and slot. The slot will have fixed starting time and fixed duration.","lastModifiedDate":"2022-10-20"},{"lineNumber":220,"author":{"gitId":"xhphoong"},"content":"    * Pros: It is easy to determine/check time crashes when assigning a home-visit `DateTime` slot to a nurse.","lastModifiedDate":"2022-10-20"},{"lineNumber":221,"author":{"gitId":"xhphoong"},"content":"    * Cons: Less flexible in the home visit date and time that a patient can choose.","lastModifiedDate":"2022-10-20"},{"lineNumber":222,"author":{"gitId":"xhphoong"},"content":"    ","lastModifiedDate":"2022-10-20"},{"lineNumber":223,"author":{"gitId":"mlzt2000"},"content":"### \\[Proposed\\] Mark feature","lastModifiedDate":"2022-10-22"},{"lineNumber":224,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":225,"author":{"gitId":"mlzt2000"},"content":"#### Proposed implementation for marking Appointments between Nurses and Patients","lastModifiedDate":"2022-10-22"},{"lineNumber":226,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":227,"author":{"gitId":"mlzt2000"},"content":"The marking mechanism is facilitated by `Appointment`, `VisitStatus`, LogicManager`, `AddressBookParser`, `MarkCommandParser`, `MarkCommand`, `Model`, `AddressBook`, and `UniquePersonList`","lastModifiedDate":"2022-10-22"},{"lineNumber":228,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":229,"author":{"gitId":"mlzt2000"},"content":"`Appointment` is an association class between Nurse and Patient, and also keeps track of the date and time of the appointment, and if the Patient has been visited by the Nurse.","lastModifiedDate":"2022-10-22"},{"lineNumber":230,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":231,"author":{"gitId":"mlzt2000"},"content":"![AppointmentClassDiagram](images/AppointmentClassDiagram.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":232,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":233,"author":{"gitId":"mlzt2000"},"content":"The `AddressBookParser` will take in user input and recognise it as a `MarkCommand`, and pass on the user input to `MarkCommandParser`","lastModifiedDate":"2022-10-22"},{"lineNumber":234,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":235,"author":{"gitId":"mlzt2000"},"content":"`MarkCommandParser` will then identify the appointment of interest, by parsing the index given by the user.","lastModifiedDate":"2022-10-22"},{"lineNumber":236,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":237,"author":{"gitId":"mlzt2000"},"content":"Should the index provided by the user be valid, the `MarkCommand` returned by the `MarkCommandParser` will create a marked version of the `Appointment` specified by the user.","lastModifiedDate":"2022-10-22"},{"lineNumber":238,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":239,"author":{"gitId":"mlzt2000"},"content":"Upon execution, the `MarkCommand` will replace the `Appointment` with the marked version.","lastModifiedDate":"2022-10-22"},{"lineNumber":240,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":241,"author":{"gitId":"mlzt2000"},"content":"Given blow is an example usage scenario and how the mark mechanism works.","lastModifiedDate":"2022-10-22"},{"lineNumber":242,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":243,"author":{"gitId":"mlzt2000"},"content":"Step 1. The user enters the command `mark id/1` command to mark the appointment at index 1 as visited.","lastModifiedDate":"2022-10-22"},{"lineNumber":244,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":245,"author":{"gitId":"mlzt2000"},"content":"Step 2. The `AddressBookParser` will parse the user command and pass the input to the `MarkCommandParser`","lastModifiedDate":"2022-10-22"},{"lineNumber":246,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":247,"author":{"gitId":"mlzt2000"},"content":"Step 3. The `MarkCommandParser` will parse the index, and ensure that the index is present. It will then return a `MarkCommand` with the index.","lastModifiedDate":"2022-10-22"},{"lineNumber":248,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":249,"author":{"gitId":"mlzt2000"},"content":"Step 4. The `MarkCommand` will execute, and change the `VisitStatus` of the `Appointment` to reflect that the `Patient` has been visited.","lastModifiedDate":"2022-10-22"},{"lineNumber":250,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":251,"author":{"gitId":"mlzt2000"},"content":"The following sequence diagram shows how marking an appointment works:","lastModifiedDate":"2022-10-22"},{"lineNumber":252,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":253,"author":{"gitId":"mlzt2000"},"content":"![MarkSequenceDiagram](images/MarkSequenceDiagram.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":254,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":255,"author":{"gitId":"mlzt2000"},"content":"The following activity diagram shows what happens when a user marks an appointment as visited.","lastModifiedDate":"2022-10-22"},{"lineNumber":256,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":257,"author":{"gitId":"mlzt2000"},"content":"![MarkActivityDiagram](images/MarkActivityDiagram.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":258,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":259,"author":{"gitId":"mlzt2000"},"content":"#### Design considerations","lastModifiedDate":"2022-10-22"},{"lineNumber":260,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":261,"author":{"gitId":"mlzt2000"},"content":"** Aspect: Marking Appointments that are already marked: **","lastModifiedDate":"2022-10-22"},{"lineNumber":262,"author":{"gitId":"mlzt2000"},"content":"* **Alternative 1:** Print and error message to inform the user that the Appointment has already been marked.","lastModifiedDate":"2022-10-22"},{"lineNumber":263,"author":{"gitId":"mlzt2000"},"content":"  * Pros: User will be made aware that they have probably erroneously marked the wrong Appointment, and make the necessary correction.","lastModifiedDate":"2022-10-22"},{"lineNumber":264,"author":{"gitId":"mlzt2000"},"content":"  * Cons: More difficult to implement, requires more thorough testing.","lastModifiedDate":"2022-10-22"},{"lineNumber":265,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":266,"author":{"gitId":"mlzt2000"},"content":"* **Alternative 2:** Make no changes and raise no exceptions.","lastModifiedDate":"2022-10-22"},{"lineNumber":267,"author":{"gitId":"mlzt2000"},"content":"  * Pros: Easier to implement and test.","lastModifiedDate":"2022-10-22"},{"lineNumber":268,"author":{"gitId":"mlzt2000"},"content":"  * Cons: User may have erroneously marked the wrong Appointment, and may not notice.","lastModifiedDate":"2022-10-22"},{"lineNumber":269,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":270,"author":{"gitId":"yeehaoo"},"content":"### List feature","lastModifiedDate":"2022-10-22"},{"lineNumber":271,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":272,"author":{"gitId":"yeehaoo"},"content":"#### Implementation for listing patients and nurses based on specified criteria","lastModifiedDate":"2022-10-22"},{"lineNumber":273,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":274,"author":{"gitId":"yeehaoo"},"content":"The list user function is primarily facilitated by `ListCommandParser`,`ListCommand`. `Model` and `Person` are also involved.","lastModifiedDate":"2022-10-22"},{"lineNumber":275,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":276,"author":{"gitId":"yeehaoo"},"content":"`ListCommandParser` takes in user input and extracts the specified criteria that the user wants.","lastModifiedDate":"2022-10-22"},{"lineNumber":277,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":278,"author":{"gitId":"yeehaoo"},"content":"The criteria are then passed to `ListCommand` which will create a `Predicate` based on the given criteria.","lastModifiedDate":"2022-10-22"},{"lineNumber":279,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":280,"author":{"gitId":"yeehaoo"},"content":"This `Predicate` is passed to `Model`, which will filter and display the enrolled users who match the given criteria.","lastModifiedDate":"2022-10-22"},{"lineNumber":281,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":282,"author":{"gitId":"yeehaoo"},"content":"Given below is an example usage scenario and how the list function behaves at each step. It is illustrated with the following sequence diagram:","lastModifiedDate":"2022-10-22"},{"lineNumber":283,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":284,"author":{"gitId":"yeehaoo"},"content":"![ListSequenceDiagram](images/ListSequenceDiagram.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":285,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":286,"author":{"gitId":"yeehaoo"},"content":"Step 1. The user executes `list c/n g/f` to list all female nurses.","lastModifiedDate":"2022-10-22"},{"lineNumber":287,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":288,"author":{"gitId":"yeehaoo"},"content":"Step 2. `AddressBookParser` parses the user command to return a `ListCommandParser` with the given criteria.","lastModifiedDate":"2022-10-22"},{"lineNumber":289,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":290,"author":{"gitId":"yeehaoo"},"content":"Step 3. The `ListCommandParser` parses the criteria using fixed prefixes and check their validity. Then, it returns an `ListCommand` with the criteria `category\u003dN, gender\u003dF`.","lastModifiedDate":"2022-10-22"},{"lineNumber":291,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":292,"author":{"gitId":"yeehaoo"},"content":"Step 4. The `ListCommand` will be executed and a `Predicate` of `category\u003dN, gender\u003dF` is created and passed to `Model`.","lastModifiedDate":"2022-10-22"},{"lineNumber":293,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":294,"author":{"gitId":"yeehaoo"},"content":"Step 5. `Model` applies the `Predicate` and filters the list of enrolled users, displaying all female nurses only.","lastModifiedDate":"2022-10-22"},{"lineNumber":295,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":296,"author":{"gitId":"yeehaoo"},"content":"The following activity diagram summarizes what happens when a user executes the list command:","lastModifiedDate":"2022-10-22"},{"lineNumber":297,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":298,"author":{"gitId":"yeehaoo"},"content":"![ListActivityDiagram](images/ListActivityDiagram.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":299,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":300,"author":{"gitId":"yeehaoo"},"content":"#### Design considerations:","lastModifiedDate":"2022-10-22"},{"lineNumber":301,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":302,"author":{"gitId":"yeehaoo"},"content":"**Aspect: Dealing with one invalid input amoung multiple valid inputs:**","lastModifiedDate":"2022-10-22"},{"lineNumber":303,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":304,"author":{"gitId":"yeehaoo"},"content":"* **Alternative 1:** Verify validity of all inputs. If an input is invalid, ignore it and list based on the other given inputs.","lastModifiedDate":"2022-10-22"},{"lineNumber":305,"author":{"gitId":"yeehaoo"},"content":"    * Pros: It might be more convenient for the user in certain circumstances where exact criteria matching is not vital.","lastModifiedDate":"2022-10-22"},{"lineNumber":306,"author":{"gitId":"yeehaoo"},"content":"    * Cons: The user might think that the returned list fits the given criteria exactly, which might lead to user errors.","lastModifiedDate":"2022-10-22"},{"lineNumber":307,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":308,"author":{"gitId":"yeehaoo"},"content":"* **Alternative 2:** Verify validity of all inputs. If an input is invalid, do not process the command.","lastModifiedDate":"2022-10-22"},{"lineNumber":309,"author":{"gitId":"yeehaoo"},"content":"    * Pros: If a list is returned then the user can be sure that all returned users match the given criteria exactly.","lastModifiedDate":"2022-10-22"},{"lineNumber":310,"author":{"gitId":"yeehaoo"},"content":"    * Cons: Possibly inefficient if exact matching is not vital.","lastModifiedDate":"2022-10-22"},{"lineNumber":311,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":312,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":403,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":404,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":405,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":406,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"johnbenedictyan"},"content":"* medical administrator who has a need to manage a significant number of patients and nurses","lastModifiedDate":"2022-09-29"},{"lineNumber":417,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"johnbenedictyan"},"content":"* can type fast with precision","lastModifiedDate":"2022-09-29"},{"lineNumber":419,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":420,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"johnbenedictyan"},"content":"**Value proposition**: manage patient nurse relations faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-09-29"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"johnbenedictyan"},"content":"| Priority | As a …                | I can …                                                                                                  | So that …                                                                                                                                       |","lastModifiedDate":"2022-09-29"},{"lineNumber":430,"author":{"gitId":"johnbenedictyan"},"content":"|----------|-----------------------|----------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-29"},{"lineNumber":431,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | export a current week’s schedule for nurses so that                                                      | they can check their schedules independently                                                                                                    |","lastModifiedDate":"2022-10-02"},{"lineNumber":432,"author":{"gitId":"johnbenedictyan"},"content":"| `* * *`  | medical administrator | quickly add the details of a patients that require home visits so that                                   | retrieve them later                                                                                                                             |","lastModifiedDate":"2022-10-02"},{"lineNumber":433,"author":{"gitId":"johnbenedictyan"},"content":"| `* * *`  | medical administrator | quickly add the details of the nurse                                                                     | retrieve them later for matching                                                                                                                |","lastModifiedDate":"2022-10-02"},{"lineNumber":434,"author":{"gitId":"johnbenedictyan"},"content":"| `* * *`  | medical administrator | add the health conditions (eg heart disease, asthma, paralysed etc) of the patients as tags              | use this information to match the patient with the respective nurse that has experience in dealing with such disease                            |","lastModifiedDate":"2022-10-02"},{"lineNumber":435,"author":{"gitId":"johnbenedictyan"},"content":"| `* *`    | medical administrator | add a list of diseases that the nurse dealt with before as tags                                          | give them the appropriate patient for a home visit                                                                                              |","lastModifiedDate":"2022-10-02"},{"lineNumber":436,"author":{"gitId":"johnbenedictyan"},"content":"| `* * *`  | medical administrator | add patients to the existing list of patients that the nurse is going to home visit for the current week | use it to create the schedule for the nurse                                                                                                     |","lastModifiedDate":"2022-09-29"},{"lineNumber":437,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | add the availability of the nurse                                                                        | use this information to assign the patient to them                                                                                              |","lastModifiedDate":"2022-09-29"},{"lineNumber":438,"author":{"gitId":"johnbenedictyan"},"content":"| `* * *`  | medical administrator | add the date (and time + duration) of home visit appointments for the patient                            | schedule the nurses accordingly                                                                                                                 |","lastModifiedDate":"2022-09-29"},{"lineNumber":439,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | add next of kin particulars for a patient                                                                | inform them in case of any emergency                                                                                                            |","lastModifiedDate":"2022-09-29"},{"lineNumber":440,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | add the contact details of the patient\u0027s attending physician                                             | liaise with them regarding the patient\u0027s treatments and how the patient responds to them                                                        |","lastModifiedDate":"2022-09-29"},{"lineNumber":441,"author":{"gitId":"johnbenedictyan"},"content":"| `* *`    | medical administrator | add patients\u0027 critical information                                                                       | quickly identify any essential information that needs to be taken note of during scheduling                                                     |","lastModifiedDate":"2022-10-02"},{"lineNumber":442,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | store a nurse\u0027s schedule in a specific folder with the nurse’s name as the individual file’s name        |                                                                                                                                                 |","lastModifiedDate":"2022-09-29"},{"lineNumber":443,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | create a file with the nurse\u0027s name for later storage of the schedule                                    |                                                                                                                                                 |","lastModifiedDate":"2022-09-29"},{"lineNumber":444,"author":{"gitId":"johnbenedictyan"},"content":"| `* * *`  | medical administrator | store all the information of the patient and nurse in respective files                                   |                                                                                                                                                 |","lastModifiedDate":"2022-09-29"},{"lineNumber":445,"author":{"gitId":"johnbenedictyan"},"content":"| `* * *`  | medical administrator | delete a patient who no longer requires home visits                                                      | I do not need to include them in the scheduled exercise                                                                                         |","lastModifiedDate":"2022-09-29"},{"lineNumber":446,"author":{"gitId":"johnbenedictyan"},"content":"| `* * *`  | medical administrator | delete the nurse that is no longer in this department                                                    | I would not schedule an unavailable nurse                                                                                                       |","lastModifiedDate":"2022-09-29"},{"lineNumber":447,"author":{"gitId":"johnbenedictyan"},"content":"| `* *`    | medical administrator | check how many patients are not yet scheduled for the current week ( /for a certain period)              | I know whether I have finished scheduling                                                                                                       |","lastModifiedDate":"2022-09-29"},{"lineNumber":448,"author":{"gitId":"johnbenedictyan"},"content":"| `* *`    | medical administrator | check the list of unscheduled patients                                                                   | schedule them now                                                                                                                               |","lastModifiedDate":"2022-09-29"},{"lineNumber":449,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | check the list of nurses not going for a home visit on a specific date                                   | if one of the nurses suddenly falls sick, I have to schedule her assigned patient with the other available nurse quickly                        |","lastModifiedDate":"2022-09-29"},{"lineNumber":450,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | assess a patient\u0027s details by name and update their personal information or health condition             | if there are any changes, edit them accordingly                                                                                                 |","lastModifiedDate":"2022-09-29"},{"lineNumber":451,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | assess a patient’s details by name and change their home visit’s date/ time                              | if the patient suddenly wants to change their appointment date/ time, also change it accordingly                                                |","lastModifiedDate":"2022-09-29"},{"lineNumber":452,"author":{"gitId":"johnbenedictyan"},"content":"| `* * *`  | medical administrator | mark a patient as scheduled                                                                              | prevent scheduling a patient twice                                                                                                              |","lastModifiedDate":"2022-09-29"},{"lineNumber":453,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | also unmark a patient as unscheduled                                                                     | if the patient changes the date for the home visits, I will remember to schedule the patient again by unmarking it                              |","lastModifiedDate":"2022-10-02"},{"lineNumber":454,"author":{"gitId":"johnbenedictyan"},"content":"| `* * *`  | medical administrator | mark a nurse as fully scheduled                                                                          | I will not match the nurse with the remaining patients since their home visit schedule is already full                                          |","lastModifiedDate":"2022-09-29"},{"lineNumber":455,"author":{"gitId":"johnbenedictyan"},"content":"| `* *`    | medical administrator | also unmark a nurse as not-fully scheduled                                                               | if one of their patients suddenly reschedules the dates, unmark the nurse and match the nurse with the remaining patients till it is full again |","lastModifiedDate":"2022-09-29"},{"lineNumber":456,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | manage recurring home visits                                                                             | I do not need to keep updating the date/time of the home visits                                                                                 |","lastModifiedDate":"2022-09-29"},{"lineNumber":457,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | create a one-week schedule that contains the list of all the required patient details for a nurse        | save it and export/send it to the nurse                                                                                                         |","lastModifiedDate":"2022-09-29"},{"lineNumber":458,"author":{"gitId":"johnbenedictyan"},"content":"| `* *`    | medical administrator | check whether there are time crashes in a nurse\u0027s schedule                                               | if a time crash is detected, reschedule it again                                                                                                |","lastModifiedDate":"2022-10-02"},{"lineNumber":459,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | check whether there are duplicate patients                                                               | the duplication can be detected and removed even if I accidentally add a patient into the system more than once                                 |","lastModifiedDate":"2022-09-29"},{"lineNumber":460,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | sort the list of patients by home visit date                                                             | I know which patient I need to schedule first                                                                                                   |","lastModifiedDate":"2022-09-29"},{"lineNumber":461,"author":{"gitId":"johnbenedictyan"},"content":"| `* * *`  | medical administrator | find patients by keywords/name (such as diabetic patient, Kent Ridge etc)                                | search the patients by keyword and assign them to the nurses                                                                                    |","lastModifiedDate":"2022-09-29"},{"lineNumber":462,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | create location tags to label the patients                                                               | group them by labels and assign the groups to the nurses                                                                                        |","lastModifiedDate":"2022-10-02"},{"lineNumber":463,"author":{"gitId":"johnbenedictyan"},"content":"| `* *`    | medical administrator | give patients different priorities                                                                       | if a patient’s condition is more serious, I need to assign more nurses / more experienced nurses to the patient’s home visits                   |","lastModifiedDate":"2022-10-02"},{"lineNumber":464,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | archive the patient records                                                                              | there is still a record of the patient after deletion                                                                                           |","lastModifiedDate":"2022-09-29"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"xhphoong"},"content":"(For all use cases below, the **System** is the `Healthcare Xpress` and the **Actor** is the `medical administrator`, unless specified otherwise)","lastModifiedDate":"2022-09-29"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"xhphoong"},"content":"**Use case: UC01 - List Patients / Nurses**","lastModifiedDate":"2022-10-01"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"xhphoong"},"content":"1. Medical administrator requests to list patients,nurses or both with or without specifications.","lastModifiedDate":"2022-10-01"},{"lineNumber":477,"author":{"gitId":"xhphoong"},"content":"2. Healthcare Xpress shows a list of patients/nurses that satisfy the specifications.","lastModifiedDate":"2022-10-01"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"xhphoong"},"content":"* 1a. The given inputs/specifications are invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"xhphoong"},"content":"    * 1a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"xhphoong"},"content":"* 1b. The given specifications are nurses and areas only.","lastModifiedDate":"2022-10-01"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"xhphoong"},"content":"    * 1b1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"xhphoong"},"content":"* 1c. There are no patients/nurses that satisfy the specifications.","lastModifiedDate":"2022-10-01"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"xhphoong"},"content":"    * 1c1. Healthcare Xpress shows a blank list.","lastModifiedDate":"2022-10-01"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"xhphoong"},"content":"      Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator choose to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":501,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":502,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":503,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":504,"author":{"gitId":"xhphoong"},"content":"**Use case: UC02 - Find a Specific Patient / Nurse**","lastModifiedDate":"2022-10-01"},{"lineNumber":505,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":506,"author":{"gitId":"xhphoong"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":507,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":508,"author":{"gitId":"xhphoong"},"content":"1. Medical administrator requests to find a specific patient/nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":509,"author":{"gitId":"xhphoong"},"content":"2. Healthcare Xpress shows that specific patient/nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":510,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":511,"author":{"gitId":"xhphoong"},"content":"   Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":512,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":513,"author":{"gitId":"xhphoong"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":514,"author":{"gitId":"xhphoong"},"content":"* 1a. The given inputs are invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":515,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":516,"author":{"gitId":"xhphoong"},"content":"    * 1a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":517,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":518,"author":{"gitId":"xhphoong"},"content":"      Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":519,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":520,"author":{"gitId":"xhphoong"},"content":"* 1b. There is not only one patient/nurse that can match the find inputs.","lastModifiedDate":"2022-10-01"},{"lineNumber":521,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":522,"author":{"gitId":"xhphoong"},"content":"    * 1b1. Healthcare Xpress returns a list of patients/nurses that matched and the first one being the most matched.","lastModifiedDate":"2022-10-01"},{"lineNumber":523,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":524,"author":{"gitId":"xhphoong"},"content":"      Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":525,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":526,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator choose to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":527,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":528,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":529,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":530,"author":{"gitId":"xhphoong"},"content":"**Use case: UC03 - Delete a Patient / Nurse**","lastModifiedDate":"2022-10-01"},{"lineNumber":531,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":532,"author":{"gitId":"xhphoong"},"content":"**MSS**","lastModifiedDate":"2022-10-01"},{"lineNumber":533,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":534,"author":{"gitId":"xhphoong"},"content":"1. Medical administrator requests to \u003cins\u003elist patients / nurses (UC01)\u003c/ins\u003e or \u003cins\u003efind a specific patient / nurse (UC02)\u003c/ins\u003e.","lastModifiedDate":"2022-10-01"},{"lineNumber":535,"author":{"gitId":"xhphoong"},"content":"2. Medical administrator requests to delete a patient/nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":536,"author":{"gitId":"xhphoong"},"content":"3. Healthcare Xpress deletes the patient/nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":537,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":538,"author":{"gitId":"xhphoong"},"content":"   Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":539,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":540,"author":{"gitId":"xhphoong"},"content":"**Extensions**","lastModifiedDate":"2022-10-01"},{"lineNumber":541,"author":{"gitId":"xhphoong"},"content":"* 2a. The given id number is invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":542,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":543,"author":{"gitId":"xhphoong"},"content":"    * 2a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":544,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":545,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":546,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":547,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator chooses to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":548,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":549,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":551,"author":{"gitId":"xhphoong"},"content":"**Use case: UC04 - Mark a Patient**","lastModifiedDate":"2022-10-01"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":553,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":555,"author":{"gitId":"xhphoong"},"content":"1.  Medical administrator requests to \u003cins\u003elist patients / nurses (UC01)\u003c/ins\u003e or \u003cins\u003efind a specific patient / nurse (UC02)\u003c/ins\u003e.","lastModifiedDate":"2022-10-01"},{"lineNumber":556,"author":{"gitId":"xhphoong"},"content":"2.  Medical administrator requests to mark a specific patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":557,"author":{"gitId":"xhphoong"},"content":"3.  Healthcare Xpress marks the patient as visited.","lastModifiedDate":"2022-10-01"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":559,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":561,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":562,"author":{"gitId":"xhphoong"},"content":"* 1a. Only nurse/nurses are shown.","lastModifiedDate":"2022-10-01"},{"lineNumber":563,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":564,"author":{"gitId":"xhphoong"},"content":"    * 1a1. Medical administrator requests to mark a nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":565,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":566,"author":{"gitId":"xhphoong"},"content":"    * 1a2. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":567,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":568,"author":{"gitId":"xhphoong"},"content":"      Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":569,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":570,"author":{"gitId":"xhphoong"},"content":"* 2a. The given id number is invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":572,"author":{"gitId":"xhphoong"},"content":"    * 2a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":573,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":574,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":575,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":576,"author":{"gitId":"xhphoong"},"content":"* 2b. The given id number is not a patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":577,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":578,"author":{"gitId":"xhphoong"},"content":"    * 2b1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":579,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":580,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":581,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":582,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator chooses to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":584,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":586,"author":{"gitId":"xhphoong"},"content":"**Use case: UC05 - Edit a Patient / Nurse**","lastModifiedDate":"2022-10-01"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":588,"author":{"gitId":"xhphoong"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":590,"author":{"gitId":"xhphoong"},"content":"1.  Medical administrator requests to \u003cins\u003elist patients / nurses (UC01)\u003c/ins\u003e or \u003cins\u003efind a specific patient / nurse (UC02)\u003c/ins\u003e.","lastModifiedDate":"2022-10-01"},{"lineNumber":591,"author":{"gitId":"xhphoong"},"content":"2.  Medical administrator requests to edit a patient / nurse and provides the details to be edited.","lastModifiedDate":"2022-10-01"},{"lineNumber":592,"author":{"gitId":"xhphoong"},"content":"3.  Healthcare Xpress edits the specific details of the patient / nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":594,"author":{"gitId":"xhphoong"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":595,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":596,"author":{"gitId":"xhphoong"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":597,"author":{"gitId":"xhphoong"},"content":"* 2a. The given id number is invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":598,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":599,"author":{"gitId":"xhphoong"},"content":"    * 2a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":600,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":601,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":602,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":603,"author":{"gitId":"xhphoong"},"content":"* 2b. The given details to be edited is invalid / in wrong format.","lastModifiedDate":"2022-10-01"},{"lineNumber":604,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":605,"author":{"gitId":"xhphoong"},"content":"    * 2b1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":606,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":607,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":608,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":609,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator chooses to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":610,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":611,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":612,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":613,"author":{"gitId":"xhphoong"},"content":"**Use case: UC06 - Add Tag / Tags to a Patient / Nurse**","lastModifiedDate":"2022-10-01"},{"lineNumber":614,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":615,"author":{"gitId":"xhphoong"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":616,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":617,"author":{"gitId":"xhphoong"},"content":"1.  Medical administrator requests to \u003cins\u003elist patients / nurses (UC01)\u003c/ins\u003e or \u003cins\u003efind a specific patient / nurse (UC02)\u003c/ins\u003e.","lastModifiedDate":"2022-10-01"},{"lineNumber":618,"author":{"gitId":"xhphoong"},"content":"2.  Medical administrator requests to add a tag / many tags to a patient / nurse and provides each tag\u0027s details.","lastModifiedDate":"2022-10-01"},{"lineNumber":619,"author":{"gitId":"xhphoong"},"content":"3.  Healthcare Xpress adds the tag / tags of specific details to the patient / nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":620,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":621,"author":{"gitId":"xhphoong"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":622,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":623,"author":{"gitId":"xhphoong"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":624,"author":{"gitId":"xhphoong"},"content":"* 2a. The given id number is invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":625,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":626,"author":{"gitId":"xhphoong"},"content":"    * 2a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":627,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":628,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":629,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":630,"author":{"gitId":"xhphoong"},"content":"* 2b. The given details is invalid / in the wrong format.","lastModifiedDate":"2022-10-01"},{"lineNumber":631,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":632,"author":{"gitId":"xhphoong"},"content":"    * 2b1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":633,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":634,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":635,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":636,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator chooses to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":637,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":638,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":639,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":640,"author":{"gitId":"xhphoong"},"content":"**Use case: UC07 - Delete a Specific Tag / Many Tags from a Patient / Nurse**","lastModifiedDate":"2022-10-01"},{"lineNumber":641,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":642,"author":{"gitId":"xhphoong"},"content":"**MSS**","lastModifiedDate":"2022-10-01"},{"lineNumber":643,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":644,"author":{"gitId":"xhphoong"},"content":"1.  Medical administrator requests to \u003cins\u003elist patients / nurses (UC01)\u003c/ins\u003e or \u003cins\u003efind a specific patient / nurse (UC02)\u003c/ins\u003e.","lastModifiedDate":"2022-10-01"},{"lineNumber":645,"author":{"gitId":"xhphoong"},"content":"2.  Medical administrator requests to delete a specific tag / many tags from a patient / nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":646,"author":{"gitId":"xhphoong"},"content":"3.  Healthcare Xpress deletes the tag / tags from the patient / nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":647,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":648,"author":{"gitId":"xhphoong"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":649,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":650,"author":{"gitId":"xhphoong"},"content":"**Extensions**","lastModifiedDate":"2022-10-01"},{"lineNumber":651,"author":{"gitId":"xhphoong"},"content":"* 2a. The given id number is invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":652,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":653,"author":{"gitId":"xhphoong"},"content":"    * 2a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":654,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":655,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":656,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":657,"author":{"gitId":"xhphoong"},"content":"* 2b. The given index of the tag / tags is out of bound.","lastModifiedDate":"2022-10-01"},{"lineNumber":658,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":659,"author":{"gitId":"xhphoong"},"content":"    * 2b2. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":660,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":661,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":662,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":663,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator chooses to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":664,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":665,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":666,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":667,"author":{"gitId":"xhphoong"},"content":"**Use case: UC08 - Add a Home-Visit Date and Time to a Patient**","lastModifiedDate":"2022-10-01"},{"lineNumber":668,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":669,"author":{"gitId":"xhphoong"},"content":"**MSS**","lastModifiedDate":"2022-10-01"},{"lineNumber":670,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":671,"author":{"gitId":"xhphoong"},"content":"1.  Medical administrator requests to \u003cins\u003elist patients / nurses (UC01)\u003c/ins\u003e or \u003cins\u003efind a specific patient / nurse (UC02)\u003c/ins\u003e.","lastModifiedDate":"2022-10-01"},{"lineNumber":672,"author":{"gitId":"xhphoong"},"content":"2.  Medical administrator requests to add a date and time with or without recurring status to a patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":673,"author":{"gitId":"xhphoong"},"content":"3.  Healthcare Xpress add the date and time for home-visits to the patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":674,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":675,"author":{"gitId":"xhphoong"},"content":"    Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":676,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":677,"author":{"gitId":"xhphoong"},"content":"**Extensions**","lastModifiedDate":"2022-10-01"},{"lineNumber":678,"author":{"gitId":"xhphoong"},"content":"* 1a. Only nurse/nurses are shown.","lastModifiedDate":"2022-10-01"},{"lineNumber":679,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":680,"author":{"gitId":"xhphoong"},"content":"    * 1a1. Medical administrator request to add a date and time to the nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":681,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":682,"author":{"gitId":"xhphoong"},"content":"    * 1a2. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":683,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":684,"author":{"gitId":"xhphoong"},"content":"      Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":685,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":686,"author":{"gitId":"xhphoong"},"content":"* 2a. The given id number is invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":687,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":688,"author":{"gitId":"xhphoong"},"content":"    * 2a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":689,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":690,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":691,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":692,"author":{"gitId":"xhphoong"},"content":"* 2b. The given id number is not a patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":693,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":694,"author":{"gitId":"xhphoong"},"content":"    * 2b1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":695,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":696,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":697,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":698,"author":{"gitId":"xhphoong"},"content":"* 2c. The given date and time is invalid or in wrong format.","lastModifiedDate":"2022-10-01"},{"lineNumber":699,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":700,"author":{"gitId":"xhphoong"},"content":"    * 2c1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":701,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":702,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":703,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":704,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator chooses to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":705,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":706,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":707,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":708,"author":{"gitId":"xhphoong"},"content":"**Use case: UC09 - Delete a Home-Visit Date and Time from a Patient**","lastModifiedDate":"2022-10-01"},{"lineNumber":709,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":710,"author":{"gitId":"xhphoong"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":711,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":712,"author":{"gitId":"xhphoong"},"content":"1.  Medical administrator requests to \u003cins\u003elist patients / nurses (UC01)\u003c/ins\u003e or \u003cins\u003efind a specific patient / nurse (UC02)\u003c/ins\u003e.","lastModifiedDate":"2022-10-01"},{"lineNumber":713,"author":{"gitId":"xhphoong"},"content":"2.  Medical administrator requests to delete date and time from a patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":714,"author":{"gitId":"xhphoong"},"content":"3.  Healthcare Xpress deletes the date and time for home-visits from the patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":715,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":716,"author":{"gitId":"xhphoong"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":717,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":718,"author":{"gitId":"xhphoong"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":719,"author":{"gitId":"xhphoong"},"content":"* 1a. Only nurse/nurses are shown.","lastModifiedDate":"2022-10-01"},{"lineNumber":720,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":721,"author":{"gitId":"xhphoong"},"content":"    * 1a1. Medical administrator request to delete a date and time from the nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":722,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":723,"author":{"gitId":"xhphoong"},"content":"    * 1a2. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":724,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":725,"author":{"gitId":"xhphoong"},"content":"      Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":726,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":727,"author":{"gitId":"xhphoong"},"content":"* 2a. The given id number is invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":728,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":729,"author":{"gitId":"xhphoong"},"content":"    * 2a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":730,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":731,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":732,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":733,"author":{"gitId":"xhphoong"},"content":"* 2b. The given id number is not a patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":734,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":735,"author":{"gitId":"xhphoong"},"content":"    * 2b1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":736,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":737,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":738,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":739,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator chooses to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":740,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":741,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":742,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":743,"author":{"gitId":"xhphoong"},"content":"**Use case: UC10 - Update a Home-Visit Date and Time for a Patient**","lastModifiedDate":"2022-10-01"},{"lineNumber":744,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":745,"author":{"gitId":"xhphoong"},"content":"**MSS**","lastModifiedDate":"2022-10-01"},{"lineNumber":746,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":747,"author":{"gitId":"xhphoong"},"content":"1.  Medical administrator requests to \u003cins\u003elist patients / nurses (UC01)\u003c/ins\u003e or \u003cins\u003efind a specific patient / nurse (UC02)\u003c/ins\u003e.","lastModifiedDate":"2022-10-01"},{"lineNumber":748,"author":{"gitId":"xhphoong"},"content":"2.  Medical administrator requests to update date and time from a patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":749,"author":{"gitId":"xhphoong"},"content":"3.  Healthcare Xpress updates the date and time for home-visits from the patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":750,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":751,"author":{"gitId":"xhphoong"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":752,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":753,"author":{"gitId":"xhphoong"},"content":"**Extensions**","lastModifiedDate":"2022-10-01"},{"lineNumber":754,"author":{"gitId":"xhphoong"},"content":"* 1a. Only nurse/nurses are shown.","lastModifiedDate":"2022-10-01"},{"lineNumber":755,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":756,"author":{"gitId":"xhphoong"},"content":"    * 1a1. Medical administrator request to update a date and time from the nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":757,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":758,"author":{"gitId":"xhphoong"},"content":"    * 1a2. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":759,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":760,"author":{"gitId":"xhphoong"},"content":"      Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":761,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":762,"author":{"gitId":"xhphoong"},"content":"* 2a. The given id number is invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":763,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":764,"author":{"gitId":"xhphoong"},"content":"    * 2a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":765,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":766,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":767,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":768,"author":{"gitId":"xhphoong"},"content":"* 2b. The given id number is not a patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":769,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":770,"author":{"gitId":"xhphoong"},"content":"    * 2b1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":771,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":772,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":773,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":774,"author":{"gitId":"xhphoong"},"content":"* 2c. The new date and time given is invalid or in wrong format.","lastModifiedDate":"2022-10-01"},{"lineNumber":775,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":776,"author":{"gitId":"xhphoong"},"content":"    * 2c1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":777,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":778,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":779,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":780,"author":{"gitId":"xhphoong"},"content":"* 2d. The patient has been assigned to a nurse and the new updated date and time crashes with that nurse existing schedule.","lastModifiedDate":"2022-10-01"},{"lineNumber":781,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":782,"author":{"gitId":"xhphoong"},"content":"    * 2d2. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":783,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":784,"author":{"gitId":"xhphoong"},"content":"      Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":785,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":786,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator choose to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":787,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":788,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":789,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":790,"author":{"gitId":"xhphoong"},"content":"**Use case: UC11 - Assign a patient to the nurse**","lastModifiedDate":"2022-10-01"},{"lineNumber":791,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":792,"author":{"gitId":"xhphoong"},"content":"**MSS**","lastModifiedDate":"2022-10-01"},{"lineNumber":793,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":794,"author":{"gitId":"xhphoong"},"content":"1.  Medical administrator requests to \u003cins\u003elist patients / nurses (UC01)\u003c/ins\u003e or \u003cins\u003efind a specific patient / nurse (UC02)\u003c/ins\u003e.","lastModifiedDate":"2022-10-01"},{"lineNumber":795,"author":{"gitId":"xhphoong"},"content":"2.  Medical administrator requests to assign a patient to a nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":796,"author":{"gitId":"xhphoong"},"content":"3.  Healthcare Xpress assigns the patient to the nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":797,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":798,"author":{"gitId":"xhphoong"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":799,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":800,"author":{"gitId":"xhphoong"},"content":"**Extensions**","lastModifiedDate":"2022-10-01"},{"lineNumber":801,"author":{"gitId":"xhphoong"},"content":"* 2a. Any given id number is invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":802,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":803,"author":{"gitId":"xhphoong"},"content":"    * 2a1. Healthcare Xpress shows an error message.              ","lastModifiedDate":"2022-10-01"},{"lineNumber":804,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":805,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":806,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":807,"author":{"gitId":"xhphoong"},"content":"* 2b. The given id numbers are both patients or nurses.","lastModifiedDate":"2022-10-01"},{"lineNumber":808,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":809,"author":{"gitId":"xhphoong"},"content":"    * 2b1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":810,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":811,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":812,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":813,"author":{"gitId":"xhphoong"},"content":"* 2c. The given id number\u0027s nurse has another home-visit at the same date and time.","lastModifiedDate":"2022-10-01"},{"lineNumber":814,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":815,"author":{"gitId":"xhphoong"},"content":"    * 2c1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":816,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":817,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":818,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":819,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, Medical administrator chooses to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":820,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":821,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":822,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":823,"author":{"gitId":"xhphoong"},"content":"**Use case: UC12 - Remove a patient / all patients from a nurse**","lastModifiedDate":"2022-10-01"},{"lineNumber":824,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":825,"author":{"gitId":"xhphoong"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":826,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":827,"author":{"gitId":"xhphoong"},"content":"1.  Medical administrator requests to \u003cins\u003elist patients / nurses (UC01)\u003c/ins\u003e or \u003cins\u003efind a specific patient / nurse (UC02)\u003c/ins\u003e.","lastModifiedDate":"2022-10-01"},{"lineNumber":828,"author":{"gitId":"xhphoong"},"content":"2.  Medical administrator requests to remove a patient or all patients from a nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":829,"author":{"gitId":"xhphoong"},"content":"3.  Healthcare Xpress removes the patient / all patients from the nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":830,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":831,"author":{"gitId":"xhphoong"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":832,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":833,"author":{"gitId":"xhphoong"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":834,"author":{"gitId":"xhphoong"},"content":"* 2a. Any given id number is invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":835,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":836,"author":{"gitId":"xhphoong"},"content":"    * 2a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":837,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":838,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":839,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":840,"author":{"gitId":"xhphoong"},"content":"* 2b. One given id number is not a nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":841,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":842,"author":{"gitId":"xhphoong"},"content":"    * 2b1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":843,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":844,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":845,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":846,"author":{"gitId":"xhphoong"},"content":"* 2c. Two given id numbers is both patients or both nurses.","lastModifiedDate":"2022-10-01"},{"lineNumber":847,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":848,"author":{"gitId":"xhphoong"},"content":"    * 2c1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":849,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":850,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":851,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":852,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator choose to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":853,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":854,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":855,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":856,"author":{"gitId":"xhphoong"},"content":"**Use case: UC13 - Swap a patient\u0027s nurse**","lastModifiedDate":"2022-10-01"},{"lineNumber":857,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":858,"author":{"gitId":"xhphoong"},"content":"**MSS**","lastModifiedDate":"2022-10-01"},{"lineNumber":859,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":860,"author":{"gitId":"xhphoong"},"content":"1.  Medical administrator requests to \u003cins\u003elist patients / nurses (UC01)\u003c/ins\u003e or \u003cins\u003efind a specific patient / nurse (UC02)\u003c/ins\u003e.","lastModifiedDate":"2022-10-01"},{"lineNumber":861,"author":{"gitId":"xhphoong"},"content":"2.  Medical administrator requests to swap a patient\u0027s nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":862,"author":{"gitId":"xhphoong"},"content":"3.  Healthcare Xpress swaps the patient\u0027s nurse to a new nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":863,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":864,"author":{"gitId":"xhphoong"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":865,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":866,"author":{"gitId":"xhphoong"},"content":"**Extensions**","lastModifiedDate":"2022-10-01"},{"lineNumber":867,"author":{"gitId":"xhphoong"},"content":"* 2a. Any given id number is invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":868,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":869,"author":{"gitId":"xhphoong"},"content":"    * 2a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":870,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":871,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":872,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":873,"author":{"gitId":"xhphoong"},"content":"* 2b. The three given id numbers do not belong to two nurses and one patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":874,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":875,"author":{"gitId":"xhphoong"},"content":"    * 2b1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":876,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":877,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":878,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":879,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator choose to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":880,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":881,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":882,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":883,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":884,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":885,"author":{"gitId":"mlzt2000"},"content":"1. Technical Requirements:","lastModifiedDate":"2022-09-30"},{"lineNumber":886,"author":{"gitId":"mlzt2000"},"content":"    1. The application should work on any _mainstream OS_, such as Windows, Linux, and macOS, as long as it has Java `11` or above installed.","lastModifiedDate":"2022-09-30"},{"lineNumber":887,"author":{"gitId":"mlzt2000"},"content":"    2. The application should be compatible with both _32-bit_ and _64-bit_ environments.","lastModifiedDate":"2022-09-30"},{"lineNumber":888,"author":{"gitId":"mlzt2000"},"content":"2. Performance Requirements:","lastModifiedDate":"2022-09-30"},{"lineNumber":889,"author":{"gitId":"mlzt2000"},"content":"    1. Should be able to hold up to _10000 patients and nurses_ without noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-10-03"},{"lineNumber":890,"author":{"gitId":"mlzt2000"},"content":"    2. The application should be able to launch within _5 seconds_.","lastModifiedDate":"2022-09-30"},{"lineNumber":891,"author":{"gitId":"mlzt2000"},"content":"    3. The application should be able to respond to each command within _1 second_.","lastModifiedDate":"2022-09-30"},{"lineNumber":892,"author":{"gitId":"mlzt2000"},"content":"3. Quality requirements:","lastModifiedDate":"2022-09-30"},{"lineNumber":893,"author":{"gitId":"mlzt2000"},"content":"    1. A user with above average typing speed for regular English text (i.e. not code, not system admin commands)","lastModifiedDate":"2022-09-30"},{"lineNumber":894,"author":{"gitId":"mlzt2000"},"content":"       should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-09-30"},{"lineNumber":895,"author":{"gitId":"mlzt2000"},"content":"    2. A user with minimal knowledge on how to operate text-based applications should be able to quickly learn how to use it.","lastModifiedDate":"2022-09-30"},{"lineNumber":896,"author":{"gitId":"mlzt2000"},"content":"4. Constraints:","lastModifiedDate":"2022-09-30"},{"lineNumber":897,"author":{"gitId":"mlzt2000"},"content":"    1. Each version of the application should be _backwards compatible_ with data produced by earlier versions.","lastModifiedDate":"2022-09-30"},{"lineNumber":898,"author":{"gitId":"mlzt2000"},"content":"    2. Specifications of dates and times should be compliant with ISO 8601 standard, and in the GMT+8 time zone.","lastModifiedDate":"2022-09-30"},{"lineNumber":899,"author":{"gitId":"mlzt2000"},"content":"5. Project Scope:","lastModifiedDate":"2022-09-30"},{"lineNumber":900,"author":{"gitId":"mlzt2000"},"content":"    1. The application is not required to handle the printing of the patient-nurse visitation schedule.","lastModifiedDate":"2022-09-30"},{"lineNumber":901,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":902,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":903,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":904,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":905,"author":{"gitId":"xhphoong"},"content":"* **Medical Administrator**: A person who oversees, plan, direct, and coordinate home-visits for patients.","lastModifiedDate":"2022-10-03"},{"lineNumber":906,"author":{"gitId":"xhphoong"},"content":"* **Patients**: A person receiving or registered to receive home visits due to special needs.","lastModifiedDate":"2022-10-03"},{"lineNumber":907,"author":{"gitId":"xhphoong"},"content":"* **Nurses**: A person trained to care for the sick or infirm, especially trained to do home-visiting.","lastModifiedDate":"2022-10-03"},{"lineNumber":908,"author":{"gitId":"xhphoong"},"content":"* **Healthcare Xpress**: A desktop app for managing patients that require home-visits.","lastModifiedDate":"2022-10-03"},{"lineNumber":909,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":910,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":911,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":912,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":913,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":914,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":915,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":916,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":917,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":918,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":919,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":920,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":921,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":922,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":923,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":924,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":925,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":926,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":927,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":928,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":929,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":930,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":931,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":932,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":933,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":934,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":935,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":936,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":937,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":938,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":939,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":940,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":941,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":942,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":943,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":944,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":945,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":946,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":947,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":948,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":949,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":950,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":951,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":952,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":953,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":954,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":955,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":956,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":957,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":958,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":959,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":960,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":961,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":962,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":963,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"xhphoong":450,"johnbenedictyan":39,"yeehaoo":41,"-":370,"mlzt2000":63}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"Healthcare Xpress is a **desktop app for managing patients that require home-visits and nurses, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Healthcare Xpress can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"1. Download the latest [healthcarexpress.jar](https://github.com/AY2223S1-CS2103-F13-4/tp/releases).","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your Healthcare Xpress Book.","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"   ![Ui](images/UiV1.3.png)","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"   * **`add`**`add c/N n/Jane p/98723432 e/jason@example.com g/F t/Asthma` : Adds a nurse named `Jane` to the Healthcare Xpress book.","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"   * **`add`** **`c/P n/John p/98765432 e/john@example.com g/M a/Bishan street, block","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"     123, #01-01 t/Asthma ds/2022-12-12,3`** : Adds a patient named **`John`** to Healthcare Xpress book.","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"   * **`assign`** **`id/1 id/3 dsi/1`** : Assigns the first dateslot of the patient with id of 3 to thhe nurse with id of 1.","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"   * **`delete`**`id/3` : Deletes the nurse of patient with an id of 3.","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"**:information_source: Additional information:**\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"* The HomeVisits is the homevisits that the nurse have to attend to and it is displayed in the format of `Date and Time : [UID] Patient Uid`. This cannot be added using the add command. It can only be added using the assign command. ","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"* The HomeVisits DateSlot is the home visit date slot of the patient and it is displayed in the format of `[ ][ ] Date and Time`. ","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"* The first bracket is to indicate whether this date slot has been assigned to a nurse. (Blank - not assigned, A - assigned). ","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"* The second bracket is to indicate whether this date slot has pass and visited. (Blank - the date slot has not pass, V - the date slot has pass and autochange to visited, FV - the date slot has pass but fail to visit).","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"![help message](images/Help.png)","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"### Adding a nurse or patient: `add`","lastModifiedDate":"2022-09-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"1. Adds a patient to the Healthcare Xpress book.","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"Format: `add c/P n/NAME p/PHONE_NUMBER e/EMAIL g/GENDER a/ADDRESS [t/TAG]…​ [ds/DATE_AND_SLOT]…​`","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":":bulb:**Tips:**","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"* A patient can have any number of tags (including 0).","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"* A patient can have any number of home-visit date and slot (including 0).","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"xhphoong"},"content":"* Date and slot need to be in the format of `yyyy-MM-dd,SLOT_NUMBER`, eg `2022-11-11,2`.","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"* The slot timing is fixed and slot is range from 10am to 4pm.","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"xhphoong"},"content":"* **Slot 1: 10am, Slot 2: 12pm, Slot 3: 2pm, Slot 4: 4pm.** The `SLOT_NUMBER` can only be from 1 to 4.","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"xhphoong"},"content":"* To add a patient, type `c/P` specifically.","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"xhphoong"},"content":"* `add c/P n/John p/98765432 e/john@example.com g/M a/Bishan street, block 123, #01-01 t/asthma ds/2022-12-12,4`","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"xhphoong"},"content":"* `add c/P n/Jackson g/M t/heartDisease a/Bishan Street 32, Singapore 291038 #04-11 p/9019390 e/jackson@gmail.com ds/2022-11-11,3 ds/2022-12-12,3`","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"xhphoong"},"content":"![add patient](images/AddPatient.png)","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"xhphoong"},"content":"2. Adds a nurse to the Healthcare Xpress book","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"xhphoong"},"content":"Format:`add c/N n/NAME p/PHONE_NUMBER e/EMAIL g/GENDER a/ADDRESS [t/TAG]…​ [ud/UNAVAILABLE_DATE]…​`","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"xhphoong"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"xhphoong"},"content":":bulb:**Tips**:","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"xhphoong"},"content":"* A nurse can have any number of tags (including 0).","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"xhphoong"},"content":"* A nurse can have any number of unavailable date (including 0). ","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"xhphoong"},"content":"* The unavailable date must be in `yyyy-MM-dd` format, eg `2022-11-11`. ","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"xhphoong"},"content":"* You may type it in any order.","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"xhphoong"},"content":"* To add a nurse, type `c/N` specifically.","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"xhphoong"},"content":"* `add c/N n/Jason p/98723432 e/jason@example.com g/M a/Blk 855 Woodlands Street 83, Singapore 730855, block 123, #01-01 t/asthma ud/2022-11-11`","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"xhphoong"},"content":"* `add c/N n/Lily g/F p/92091883 e/lily@gmail.com ud/2022-11-11 a/Woodland Street 21 Block 211 #01-02 t/heartDiseaseSpecialist`","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"xhphoong"},"content":"![add nurse](images/AddNurse.png)","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"yeehaoo"},"content":"### Listing nurses or patients : `list`","lastModifiedDate":"2022-10-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"yeehaoo"},"content":"Shows a list of specified nurses or patients, or all nurses and patients if no specifications were provided.","lastModifiedDate":"2022-10-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"mlzt2000"},"content":"Format: `list [c/CATEGORY] [t/TAG] [g/GENDER] [a/ADDRESS] [as/ASSIGNED] [v/VISITSTATUS]`","lastModifiedDate":"2022-10-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"yeehaoo"},"content":"Examples:","lastModifiedDate":"2022-10-02"},{"lineNumber":146,"author":{"gitId":"xhphoong"},"content":"* `list c/P t/DIABETIC g/M` - Lists all male diabetic patients enrolled in the database.","lastModifiedDate":"2022-10-14"},{"lineNumber":147,"author":{"gitId":"xhphoong"},"content":"* `list c/P a/Bugis t/heartDisease` - List all patients tagged with heart disease in the Bugis region.","lastModifiedDate":"2022-10-14"},{"lineNumber":148,"author":{"gitId":"mlzt2000"},"content":"* `list c/P as/true` - List all patients that have all required timeslots assigned to a nurse.","lastModifiedDate":"2022-10-28"},{"lineNumber":149,"author":{"gitId":"mlzt2000"},"content":"* `list c/P as/false` - List all patients that have at least 1 timeslot without an assigned nurse.","lastModifiedDate":"2022-10-28"},{"lineNumber":150,"author":{"gitId":"mlzt2000"},"content":"* `list c/N as/true` - List all nurses that have all timeslots fully assigned to an appointment.","lastModifiedDate":"2022-10-28"},{"lineNumber":151,"author":{"gitId":"mlzt2000"},"content":"* `list c/N as/false` - List all nurses that have at least 1 timeslot not assigned to an appointment.","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"mlzt2000"},"content":"* `list c/P v/true` - List all patients that have been visited by nurses in all their scheduled appointments.","lastModifiedDate":"2022-10-28"},{"lineNumber":153,"author":{"gitId":"mlzt2000"},"content":"* `list c/P v/false` - List all patients that have at least one appointment that has yet to be visited by a nurse.","lastModifiedDate":"2022-10-28"},{"lineNumber":154,"author":{"gitId":"mlzt2000"},"content":"* `list c/N v/true` - List all nurses that have visited all scheduled appointments in the upcoming week.","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"mlzt2000"},"content":"* `list c/N v/false` - List all nurses that have at least one scheduled appointment pending a visit in the upcoming week.","lastModifiedDate":"2022-10-28"},{"lineNumber":156,"author":{"gitId":"xhphoong"},"content":"* `list c/N` - Lists all nurses enrolled in the database.","lastModifiedDate":"2022-10-28"},{"lineNumber":157,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":158,"author":{"gitId":"xhphoong"},"content":"![list nurse](images/ListNurse.png)","lastModifiedDate":"2022-10-28"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2022-10-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"xhphoong"},"content":"Edits an existing person in the Healthcare Xpress book.","lastModifiedDate":"2022-10-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"xhphoong"},"content":"Format: `edit id/ID [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​ [ds/DATE_AND_SLOT]…​ [dsi/DATE_AND_SLOT_INDEX]…​ [ud/UNAVAILABLE_DATE]…​ [udi/UNAVAILABLE_DATE]…​`","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"xhphoong"},"content":"* Edits the person with the specified `ID`.","lastModifiedDate":"2022-10-03"},{"lineNumber":167,"author":{"gitId":"xhphoong"},"content":"* The ID refers to the unique ID number shown in the displayed person list.","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"xhphoong"},"content":"* The ID **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"xhphoong"},"content":"* When **editing tags**, the **existing tags of the person will be removed** i.e adding of tags is not cumulative.","lastModifiedDate":"2022-10-28"},{"lineNumber":172,"author":{"gitId":"xhphoong"},"content":"* You can **remove all the person’s tags** by typing `t/` without specifying any tags after it.","lastModifiedDate":"2022-10-28"},{"lineNumber":173,"author":{"gitId":"xhphoong"},"content":"* The `DATE_AND_SLOT_INDEX` is the index of the date and slot list of a patient starting from 1.","lastModifiedDate":"2022-10-28"},{"lineNumber":174,"author":{"gitId":"xhphoong"},"content":"* When **editing date and slot**, there are **4 options**:","lastModifiedDate":"2022-10-28"},{"lineNumber":175,"author":{"gitId":"xhphoong"},"content":"  1. To delete all the existing date and slot of a patient: you can type `ds/` or `dsi/` or `ds/ dsi/` without specifying any date and slot or its index after it.","lastModifiedDate":"2022-10-28"},{"lineNumber":176,"author":{"gitId":"xhphoong"},"content":"  2. To delete a specific date and slot of a patient: you can type `ds/ dsi/TO_BE_DELETED_DATE_AND_TIME_INDEX` or `dsi/TO_BE_DELETED_DATE_AND_TIME_INDEX`. The to be deleted date and slot index is the index of the specific date and slot you want to delete.","lastModifiedDate":"2022-10-28"},{"lineNumber":177,"author":{"gitId":"xhphoong"},"content":"  3. To add a new date and slot of a patient: you can type `ds/NEW_DATE_AND_SLOT dsi/` or `ds/NEW_DATE_AND_SLOT`.","lastModifiedDate":"2022-10-28"},{"lineNumber":178,"author":{"gitId":"xhphoong"},"content":"  4. To change a specific date and slot of a patient: you can type `ds/UPDATE_DATE_AND_SLOT dsi/TO_BE_UPDATED_DATE_AND_SLOT_INDEX`. The date and slot at this index in the list will be updated to the new date and slot given by you.","lastModifiedDate":"2022-10-28"},{"lineNumber":179,"author":{"gitId":"xhphoong"},"content":"* You can only use `ds/` and `dsi/` for **patient**. Nurse do not have any home-visit date and slot.","lastModifiedDate":"2022-10-28"},{"lineNumber":180,"author":{"gitId":"xhphoong"},"content":"* The unavailable date works similar to the date and time edit excepts using different indicator `ud/` and `udi/` to indicate the date and the index.","lastModifiedDate":"2022-10-27"},{"lineNumber":181,"author":{"gitId":"xhphoong"},"content":"* The **unavailable date** is only applicable to **nurse**.","lastModifiedDate":"2022-10-28"},{"lineNumber":182,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":183,"author":{"gitId":"xhphoong"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2022-10-27"},{"lineNumber":184,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":185,"author":{"gitId":"xhphoong"},"content":"* When changing a date slot in the existing list, if the old date slot is assigned, it will be deassigned and the new date slot will be in \"not assigned status\".","lastModifiedDate":"2022-10-28"},{"lineNumber":186,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":187,"author":{"gitId":"xhphoong"},"content":"* When changing an unavailable date in the existing list or add a new unavailable date in the existing list from a nurse, the date slot assigned to that nurse will be checked against the unavailable date. If the date slot is on the same day with the unavailable date, it will auto deassign that date slot from the nurse. ","lastModifiedDate":"2022-10-28"},{"lineNumber":188,"author":{"gitId":"xhphoong"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"xhphoong"},"content":"*  `edit id/1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the nurse/patient with id 1 to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-10-14"},{"lineNumber":192,"author":{"gitId":"xhphoong"},"content":"*  `edit id/2 n/Betsy Crower t/` Edits the name of the nurse/patient with id 2 to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2022-10-14"},{"lineNumber":193,"author":{"gitId":"xhphoong"},"content":"*  `edit id/2 dti/1 dt/2022-12-11,1` Change the first date and time of the patient with id 2 to `2022-12-11,1`.","lastModifiedDate":"2022-10-27"},{"lineNumber":194,"author":{"gitId":"xhphoong"},"content":"*  `edit id/1 e/bsy@gmail.com ud/2022-12-10 p/9029901` Change the email to `bsy@gmail.com` and phone to `9029901` and add unavailable date `2022-12-10` to the nurse with id 1. ","lastModifiedDate":"2022-10-28"},{"lineNumber":195,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":196,"author":{"gitId":"xhphoong"},"content":"![edit](images/Edit.png)","lastModifiedDate":"2022-10-28"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2022-10-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"xhphoong"},"content":"* `find Jason` returns `Jason`","lastModifiedDate":"2022-10-28"},{"lineNumber":215,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":216,"author":{"gitId":"xhphoong"},"content":"![find](images/Find.png)","lastModifiedDate":"2022-10-28"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"johnbenedictyan"},"content":"### Deleting a nurse or a patient : `delete`","lastModifiedDate":"2022-10-02"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"johnbenedictyan"},"content":"Deletes the specified nurse or patient from the records system.","lastModifiedDate":"2022-10-02"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"xhphoong"},"content":"Format: `delete id/ID`","lastModifiedDate":"2022-10-14"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"johnbenedictyan"},"content":"* Deletes the nurse or patient with the specified `ID`.","lastModifiedDate":"2022-10-02"},{"lineNumber":225,"author":{"gitId":"johnbenedictyan"},"content":"* The ID refers to the unique ID number shown in the displayed person list.","lastModifiedDate":"2022-10-02"},{"lineNumber":226,"author":{"gitId":"johnbenedictyan"},"content":"* The ID **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-02"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"xhphoong"},"content":"* `list` followed by `delete id/2` deletes the nurse/patient with an id of 2.","lastModifiedDate":"2022-10-14"},{"lineNumber":230,"author":{"gitId":"xhphoong"},"content":"* `find Betsy` followed by `delete id/1` deletes the nurse/patient with an id of 1.","lastModifiedDate":"2022-10-14"},{"lineNumber":231,"author":{"gitId":"xhphoong"},"content":"* `delete id/10` deletes the nurse/patient with an id of 10.","lastModifiedDate":"2022-10-28"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"xhphoong"},"content":"![delete](images/Delete.png)","lastModifiedDate":"2022-10-28"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":235,"author":{"gitId":"xhphoong"},"content":"### Assigning a patient\u0027s homevisit date slot to a nurse : `assign`","lastModifiedDate":"2022-10-28"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":237,"author":{"gitId":"xhphoong"},"content":"Assign a specific patient\u0027s date slot/date slots to a nurse.","lastModifiedDate":"2022-10-27"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":239,"author":{"gitId":"xhphoong"},"content":"Format `assign id/NURSE_ID id/PATIENT_ID [dsi/DATE_AND_SLOT_INDEX]…​`","lastModifiedDate":"2022-10-27"},{"lineNumber":240,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":241,"author":{"gitId":"xhphoong"},"content":"* Assign the dateslots of the patient with the specified \u0027PATIENT_ID\u0027 to the nurse with the specified \u0027NURSE_ID\u0027.","lastModifiedDate":"2022-10-27"},{"lineNumber":242,"author":{"gitId":"xhphoong"},"content":"* The ID refers to the unique ID shown in the displayed person list.","lastModifiedDate":"2022-10-27"},{"lineNumber":243,"author":{"gitId":"xhphoong"},"content":"* The ID **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2022-10-27"},{"lineNumber":244,"author":{"gitId":"xhphoong"},"content":"* There **must be 2 IDs (only 2), 1 indicating a patient and 1 indicating a nurse**.","lastModifiedDate":"2022-10-27"},{"lineNumber":245,"author":{"gitId":"xhphoong"},"content":"* There is no specific order for the 2 IDs.","lastModifiedDate":"2022-10-27"},{"lineNumber":246,"author":{"gitId":"xhphoong"},"content":"* The assign command can have any number of date and slot index (including 0).","lastModifiedDate":"2022-10-27"},{"lineNumber":247,"author":{"gitId":"xhphoong"},"content":"* If the **\u0027DATE_AND_SLOT_INDEX\u0027 not indicated** (0), then all the date slot of the patients will be assigned to the nurse. ","lastModifiedDate":"2022-10-28"},{"lineNumber":248,"author":{"gitId":"xhphoong"},"content":"* If the **\u0027DATE_AND_SLOT_INDEX(ES)\u0027 is indicated**, then the date slot with the respective index(es) in the displayed dateslot list will be assigned to the nurse.","lastModifiedDate":"2022-10-28"},{"lineNumber":249,"author":{"gitId":"xhphoong"},"content":"* When assigning, it will check whether there are **time crashes** and check whether the nurse are **unavailable** on that day.","lastModifiedDate":"2022-10-28"},{"lineNumber":250,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":251,"author":{"gitId":"xhphoong"},"content":"Examples:","lastModifiedDate":"2022-10-27"},{"lineNumber":252,"author":{"gitId":"xhphoong"},"content":"* `assign id/1 id/2` assign all the date slots of patient with id of 2 to nurse with id of 1.","lastModifiedDate":"2022-10-27"},{"lineNumber":253,"author":{"gitId":"xhphoong"},"content":"* `assign id/2 id/1 dsi/2` assign the date slot with index 2 in the dateslot list of patient with id of 2 to nurse with id of 1.","lastModifiedDate":"2022-10-27"},{"lineNumber":254,"author":{"gitId":"xhphoong"},"content":"* `assign id/1 id/7 dsi/3` assign the third date slot in the dateslot list of patient with id 7 to nurse with id 1.","lastModifiedDate":"2022-10-28"},{"lineNumber":255,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":256,"author":{"gitId":"xhphoong"},"content":"![assign](images/Assign.png)","lastModifiedDate":"2022-10-28"},{"lineNumber":257,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":258,"author":{"gitId":"xhphoong"},"content":"### Deassigning a patient\u0027s homevisit date slot from a nurse : `deassign`","lastModifiedDate":"2022-10-28"},{"lineNumber":259,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":260,"author":{"gitId":"xhphoong"},"content":"Deassign a specific patient\u0027s date slot from a nurse.","lastModifiedDate":"2022-10-27"},{"lineNumber":261,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":262,"author":{"gitId":"xhphoong"},"content":"Format `deassign id/ID [dsi/DATE_AND_SLOT_INDEX]…​`","lastModifiedDate":"2022-10-27"},{"lineNumber":263,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":264,"author":{"gitId":"xhphoong"},"content":"* The \u0027ID\u0027 can be either a patient id or nurse id.","lastModifiedDate":"2022-10-27"},{"lineNumber":265,"author":{"gitId":"xhphoong"},"content":"* The deassign command can have any number of date and slot index (including 0).","lastModifiedDate":"2022-10-27"},{"lineNumber":266,"author":{"gitId":"xhphoong"},"content":"* If it is a **patient id and no date and slot index** indicated, it will deassign all the date slots of the patient from the respective nurse.","lastModifiedDate":"2022-10-28"},{"lineNumber":267,"author":{"gitId":"xhphoong"},"content":"* If it is a **patient id and date and slot index** indicated, it will deassign the specific date slots (with the date and slot index indicated) of the patient from the respective nurse.","lastModifiedDate":"2022-10-28"},{"lineNumber":268,"author":{"gitId":"xhphoong"},"content":"* If it is a **nurse id and no date and slot index** indicated, it will deassign all the homevisits of the nurse and the respective patient\u0027s date slot will change `not assigned` status.","lastModifiedDate":"2022-10-28"},{"lineNumber":269,"author":{"gitId":"xhphoong"},"content":"* If it is a **nurse id and no date and slot index** indicated, it will deassign the specific homevisits of the nurse (with the date and slot index indicated) and the respective patient\u0027s date slot will change `not assigned` status.","lastModifiedDate":"2022-10-28"},{"lineNumber":270,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":271,"author":{"gitId":"xhphoong"},"content":"Examples:","lastModifiedDate":"2022-10-27"},{"lineNumber":272,"author":{"gitId":"xhphoong"},"content":"* `deassign id/1` deassign all the date slots of nurse with id of 1.","lastModifiedDate":"2022-10-27"},{"lineNumber":273,"author":{"gitId":"xhphoong"},"content":"* `deassign id/2 dsi/2` deassign the date slot with index 2 in the dateslot list of patient with id of 2.","lastModifiedDate":"2022-10-27"},{"lineNumber":274,"author":{"gitId":"xhphoong"},"content":"* `deassign id/1 dsi/2` deasign the second home visits in the homevisit list of nurse with id of 1.","lastModifiedDate":"2022-10-28"},{"lineNumber":275,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":276,"author":{"gitId":"xhphoong"},"content":"![deassign](images/Deassign.png)","lastModifiedDate":"2022-10-28"},{"lineNumber":277,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":278,"author":{"gitId":"xhphoong"},"content":"### Unmarking a patient\u0027s dateslot as fail visited : `unmark`","lastModifiedDate":"2022-10-27"},{"lineNumber":279,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":280,"author":{"gitId":"xhphoong"},"content":"Unmarks a specific patient\u0027s specific dateslot in the records system as failed visited.","lastModifiedDate":"2022-10-27"},{"lineNumber":281,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":282,"author":{"gitId":"xhphoong"},"content":"Format: `unmark id/PATIENT_ID dsi/DATE_AND_SLOT_INDEX` ","lastModifiedDate":"2022-10-27"},{"lineNumber":283,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":284,"author":{"gitId":"xhphoong"},"content":"* Unmarks the patient with the specified \u0027ID\u0027 as having been failed visited.","lastModifiedDate":"2022-10-27"},{"lineNumber":285,"author":{"gitId":"xhphoong"},"content":"* The ID refers to the unique ID shown in the displayed person list.","lastModifiedDate":"2022-10-27"},{"lineNumber":286,"author":{"gitId":"xhphoong"},"content":"* The ID **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2022-10-27"},{"lineNumber":287,"author":{"gitId":"xhphoong"},"content":"* The ID **must belong to a patient**.","lastModifiedDate":"2022-10-27"},{"lineNumber":288,"author":{"gitId":"xhphoong"},"content":"* The **DATE_AND_SLOT_INDEX must be indicated** and can have only **1**.","lastModifiedDate":"2022-10-27"},{"lineNumber":289,"author":{"gitId":"xhphoong"},"content":"* The **date that is to be unmarked as failed visited must be date that have pass**. eg, if today is 2022-11-11, the date to be unmark as fail visited must be the date before 2022-11-11.","lastModifiedDate":"2022-10-27"},{"lineNumber":290,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":291,"author":{"gitId":"xhphoong"},"content":"Examples:","lastModifiedDate":"2022-10-27"},{"lineNumber":292,"author":{"gitId":"xhphoong"},"content":"* `unmark id/7 dsi/1` unmarks the dateslots of index 1 in the dateslot list of the patient with id of 7 as having been failed visited.","lastModifiedDate":"2022-10-28"},{"lineNumber":293,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":294,"author":{"gitId":"xhphoong"},"content":"![unmark](images/Unmark.png)","lastModifiedDate":"2022-10-28"},{"lineNumber":295,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":296,"author":{"gitId":"xhphoong"},"content":"### Undo unmarking a patient as visited : `undounmark`","lastModifiedDate":"2022-10-28"},{"lineNumber":297,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":298,"author":{"gitId":"xhphoong"},"content":"Undo Unmarks a specific patient\u0027s specific dateslot in the records system as having been visited.","lastModifiedDate":"2022-10-28"},{"lineNumber":299,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":300,"author":{"gitId":"xhphoong"},"content":"Format: `unmarkundo id/ID dsi/DATE_SLOT_INDEX`","lastModifiedDate":"2022-10-28"},{"lineNumber":301,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":302,"author":{"gitId":"xhphoong"},"content":"* Undo unmarks the specific dateslot with specified \u0027DATE_SLOT_INDEX\u0027 of a patient with the specified \u0027ID\u0027 as having been visited.","lastModifiedDate":"2022-10-28"},{"lineNumber":303,"author":{"gitId":"xhphoong"},"content":"* This feature is for user to undo the unmark fail visit date slot so that if you accidentally unmark a wrong patient\u0027s dateslot as failed visited status, you can undo it using this command and the dateslot will change to visited status.","lastModifiedDate":"2022-10-28"},{"lineNumber":304,"author":{"gitId":"xhphoong"},"content":"* The ID refers to the unique ID shown in the displayed person list.","lastModifiedDate":"2022-10-28"},{"lineNumber":305,"author":{"gitId":"xhphoong"},"content":"* The ID **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2022-10-28"},{"lineNumber":306,"author":{"gitId":"xhphoong"},"content":"* `list` or `find` operations can be performed first to get the ID of the desired patient.","lastModifiedDate":"2022-10-28"},{"lineNumber":307,"author":{"gitId":"xhphoong"},"content":"* If the \u0027Date_Slot_Index\u0027 gives a dateslot that has not pass or it is already in visit status, the system will not do anything.","lastModifiedDate":"2022-10-28"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-28"},{"lineNumber":310,"author":{"gitId":"xhphoong"},"content":"* `undounmark id/7 dsi/1` undo unmarks the first dateslot of the patient with id of 7 as having been visited.","lastModifiedDate":"2022-10-28"},{"lineNumber":311,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":312,"author":{"gitId":"xhphoong"},"content":"![undounmark](images/UndoUnmark.png)","lastModifiedDate":"2022-10-28"},{"lineNumber":313,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":314,"author":{"gitId":"johnbenedictyan"},"content":"### Check for similar persons : `checkSimilar`","lastModifiedDate":"2022-10-28"},{"lineNumber":315,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":316,"author":{"gitId":"johnbenedictyan"},"content":"Checks and returns a list of similar persons so that the user can check if any errors has been made in entries","lastModifiedDate":"2022-10-28"},{"lineNumber":317,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":318,"author":{"gitId":"johnbenedictyan"},"content":"Format: `checkSimilar`","lastModifiedDate":"2022-10-28"},{"lineNumber":319,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":320,"author":{"gitId":"xhphoong"},"content":"![checksimilar](images/checkSimilar.png)","lastModifiedDate":"2022-10-28"},{"lineNumber":321,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":322,"author":{"gitId":"yeehaoo"},"content":"### Updating a patient\u0027s emergency contact information: `updatecontact`","lastModifiedDate":"2022-10-27"},{"lineNumber":323,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":324,"author":{"gitId":"yeehaoo"},"content":"Updates a patient\u0027s contact information for next-of-kin or attending physician.","lastModifiedDate":"2022-10-27"},{"lineNumber":325,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":326,"author":{"gitId":"yeehaoo"},"content":"Format: `updatecontact id/PATIENT_ID c/CATEGORY n/CONTACT_NAME p/CONTACT_PHONE e/CONTACT_EMAIL`","lastModifiedDate":"2022-10-27"},{"lineNumber":327,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":328,"author":{"gitId":"yeehaoo"},"content":"* PATIENT_ID: Unique ID of the patient whose emergency contact is to be updated.","lastModifiedDate":"2022-10-27"},{"lineNumber":329,"author":{"gitId":"xhphoong"},"content":"* CATEGORY: Only accepts `K` for next-of-kin or `D` for attending physician.","lastModifiedDate":"2022-10-28"},{"lineNumber":330,"author":{"gitId":"yeehaoo"},"content":"* CONTACT_NAME: Name of the emergency contact.","lastModifiedDate":"2022-10-27"},{"lineNumber":331,"author":{"gitId":"yeehaoo"},"content":"* CONTACT_PHONE: Phone number of the emergency contact.","lastModifiedDate":"2022-10-27"},{"lineNumber":332,"author":{"gitId":"yeehaoo"},"content":"* CONTACT_EMAIL: Email address of the emergency contact.","lastModifiedDate":"2022-10-27"},{"lineNumber":333,"author":{"gitId":"xhphoong"},"content":"* Note: The UID must belong to a **patient**.","lastModifiedDate":"2022-10-28"},{"lineNumber":334,"author":{"gitId":"xhphoong"},"content":"* Note: Only `K` or `D` are accepted.","lastModifiedDate":"2022-10-28"},{"lineNumber":335,"author":{"gitId":"yeehaoo"},"content":"* Note: This command replaces the current next-of-kin or attending physician contact info, ","lastModifiedDate":"2022-10-27"},{"lineNumber":336,"author":{"gitId":"yeehaoo"},"content":"  * if there is already an existing one.","lastModifiedDate":"2022-10-27"},{"lineNumber":337,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":338,"author":{"gitId":"yeehaoo"},"content":"Examples:","lastModifiedDate":"2022-10-27"},{"lineNumber":339,"author":{"gitId":"xhphoong"},"content":"* `updatecontact id/3 c/K n/John Doe p/81234567 e/johndoe@example.com` ","lastModifiedDate":"2022-10-28"},{"lineNumber":340,"author":{"gitId":"yeehaoo"},"content":"  * updates NoK contact information for patient UID 3.","lastModifiedDate":"2022-10-27"},{"lineNumber":341,"author":{"gitId":"xhphoong"},"content":"* `updatecontact id/3 c/D n/kw p/9013890 e/kw@gmail.com` ","lastModifiedDate":"2022-10-28"},{"lineNumber":342,"author":{"gitId":"yeehaoo"},"content":"  * updates attending physician contact information for patient UID 3.","lastModifiedDate":"2022-10-27"},{"lineNumber":343,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":344,"author":{"gitId":"xhphoong"},"content":"![updatecontact](images/updatecontact.png)","lastModifiedDate":"2022-10-28"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":346,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"xhphoong"},"content":"HealthcareXpress data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":364,"author":{"gitId":"xhphoong"},"content":"HealthcareXpress data are saved as a JSON file `[JAR file location]/data/healthcarexpress.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-10-03"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":366,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":367,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":368,"author":{"gitId":"xhphoong"},"content":"* If your changes to the data file makes its format invalid, Healthcare Xpress book will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-10-27"},{"lineNumber":369,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":370,"author":{"gitId":"xhphoong"},"content":"* NOT RECOMMENDED : It is not recommended to change the \u0027date slot\u0027 of a patient and \u0027homevisits\u0027, \u0027unavailable date\u0027 and \u0027fully scheduled date\u0027 of a nurse in the file. The system is unable to check the correctness and whether there is time crash and other issues if you change it manually in the data file. ","lastModifiedDate":"2022-10-27"},{"lineNumber":371,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":373,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"xhphoong"},"content":"| Action            | Format, Examples                                                                                                                                                                                                               |","lastModifiedDate":"2022-10-28"},{"lineNumber":389,"author":{"gitId":"xhphoong"},"content":"|-------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-28"},{"lineNumber":390,"author":{"gitId":"xhphoong"},"content":"| **Add**           | `add c/N n/NAME p/PHONE_NUMBER e/EMAIL g/GENDER a/ADDRESS [t/TAG]…​ [ud/UNAVAILABLE_DATE]…​ ` \u003cbr\u003e e.g., `add c/N n/Jason p/98723432 e/jason@example.com g/M t/asthma a/Yishun Street 211, block 230, #03-03 ud/2022-11-11`    |","lastModifiedDate":"2022-10-28"},{"lineNumber":391,"author":{"gitId":"xhphoong"},"content":"| **Add**           | `add c/P n/NAME p/PHONE_NUMBER e/EMAIL g/GENDER a/ADDRESS [ds/DATE_AND_SLOT]…​  [t/TAG]…​` \u003cbr\u003e e.g., `add c/P n/John p/98765432 e/john@example.com g/M a/Bishan street, block 123, #01-01 t/Asthma ds/2022-12-12,2`           |","lastModifiedDate":"2022-10-28"},{"lineNumber":392,"author":{"gitId":"xhphoong"},"content":"| **Assign**        | `assign id/PATIENT_ID id/NURSE_ID [dsi/DATE_SLOT_INDEX]…​` \u003cbr\u003e e.g., `assign id/1 id/2 dsi/2`                                                                                                                                 |","lastModifiedDate":"2022-10-28"},{"lineNumber":393,"author":{"gitId":"xhphoong"},"content":"| **Clear**         | `clear`                                                                                                                                                                                                                        |","lastModifiedDate":"2022-10-28"},{"lineNumber":394,"author":{"gitId":"xhphoong"},"content":"| **Deassign**      | `deassign id/ID [dsi/DATE_SLOT_INDEX]…​` \u003cbr\u003e e.g., `deassign id/1 dsi/2`                                                                                                                                                      |","lastModifiedDate":"2022-10-28"},{"lineNumber":395,"author":{"gitId":"xhphoong"},"content":"| **Delete**        | `delete id/ID`\u003cbr\u003e e.g., `delete id/3`                                                                                                                                                                                         |","lastModifiedDate":"2022-10-28"},{"lineNumber":396,"author":{"gitId":"xhphoong"},"content":"| **Edit**          | `edit id/ID [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​ [ds/DATE_SLOT]…​ [dsi/DATE_SLOT_INDEX]…​ [ud/UNAVAILABLE_DATE]…​ [udi/UNAVAILABLE_DATE_INDEX]…​`\u003cbr\u003e e.g.,`edit id/2 n/James Lee e/jameslee@example.com` |","lastModifiedDate":"2022-10-28"},{"lineNumber":397,"author":{"gitId":"xhphoong"},"content":"| **Find**          | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                                                                                     |","lastModifiedDate":"2022-10-28"},{"lineNumber":398,"author":{"gitId":"xhphoong"},"content":"| **Help**          | `help`                                                                                                                                                                                                                         |","lastModifiedDate":"2022-10-28"},{"lineNumber":399,"author":{"gitId":"xhphoong"},"content":"| **List**          | `list [c/CATEGORY] [t/TAG] [g/GENDER] [a/ADDRESS] [as/ASSIGNED] [v/VISITSTATUS]`\u003cbr\u003e e.g., `list c/NURSE`                                                                                                                      |                                                                                                                                                                                         |","lastModifiedDate":"2022-10-28"},{"lineNumber":400,"author":{"gitId":"xhphoong"},"content":"| **Unmark**        | `unmark id/PATIENT_ID dsi/DATE_SLOT_INDEX` \u003cbr\u003e e.g., `unmark id/1 dsi/1`                                                                                                                                                      |","lastModifiedDate":"2022-10-28"},{"lineNumber":401,"author":{"gitId":"xhphoong"},"content":"| **UndoUnmark**    | `undounmark id/PATIENT_ID dsi/DATE_SLOT_INDEX` \u003cbr\u003e e.g., `undounmark id/1 dsi/1`                                                                                                                                              |","lastModifiedDate":"2022-10-28"},{"lineNumber":402,"author":{"gitId":"xhphoong"},"content":"| **checkSimilar**  | `checkSimilar`                                                                                                                                                                                                                 |","lastModifiedDate":"2022-10-28"},{"lineNumber":403,"author":{"gitId":"xhphoong"},"content":"| **UpdateContact** | `updatecontact id/PATIENT_ID c/CATEGORY n/CONTACT_NAME p/CONTACT_PHONE e/CONTACT_EMAIL` \u003cbr\u003e e.g., `updatecontact id/3 c/D n/Farihah p/2901939 e/hah@gmail.com`                                                                |","lastModifiedDate":"2022-10-28"},{"lineNumber":404,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":405,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"xhphoong":199,"johnbenedictyan":12,"yeehaoo":22,"-":161,"mlzt2000":9,"LolfoollorS":2}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"xhphoong"},"content":"    content: \"Healthcare Xpress\";","lastModifiedDate":"2022-10-03"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"xhphoong":1,"-":294}},{"path":"docs/diagrams/AddPatientActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"start","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":":User executes add patient command;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"if () then ([all the compulsory field are present])","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"    if () then ([all the field inputs are valid])","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"        if () then ([multiple inputs for a field])","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"            if () then ([isDateTime or isTag])","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"            : All the inputs will be accepted;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"            else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"            : Only the last input for that field will be accepted;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"            endif","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"        else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"        endif","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"        if () then ([there is potential duplication])","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"        : Show error message about the potential duplication;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"        else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"        :Add Patient into addressBook;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"        :Save the updated addressBook;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"        endif","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"    else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"    :Show error message about the invalid user input;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"    endif","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":":Show error message about the missing field;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"endif","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"stop","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"@enduml","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"xhphoong":31}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"!include style.puml","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"participant \"a:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"participant \"uid:Uid\" as Uid MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"participant \"p:Patient\" as Patient MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"[-\u003e LogicManager : execute(\"add userInput\")","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"activate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"add userInput\")","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"create AddCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"activate AddCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"deactivate AddCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"AddressBookParser -\u003e AddCommandParser : parse(\"userInput\")","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"activate AddCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"create Uid","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"AddCommandParser -\u003e Uid","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"activate Uid","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"Uid -\u003e AddCommandParser : uid","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"deactivate Uid","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"create Patient","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"AddCommandParser -\u003e Patient : uid, patientDetails","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"activate Patient","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"Patient -\u003e AddCommandParser : p","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"deactivate Patient","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"create AddCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"AddCommandParser -\u003e AddCommand : p","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"activate AddCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"AddCommand --\u003e AddCommandParser : a","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"deactivate AddCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"AddCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"deactivate AddCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"AddCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"destroy AddCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"LogicManager -\u003e AddCommand : execute()","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"activate AddCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"AddCommand -\u003e Model : addPerson(p)","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"activate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"deactivate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"create CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"activate CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"CommandResult --\u003e AddCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"AddCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"deactivate AddCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"@enduml","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"xhphoong":86}},{"path":"docs/diagrams/AppointmentClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mlzt2000"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"mlzt2000"},"content":"!include style.puml","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"mlzt2000"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"mlzt2000"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"mlzt2000"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"mlzt2000"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"mlzt2000"},"content":"    class Patient","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"mlzt2000"},"content":"    Class Nurse","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"mlzt2000"},"content":"    Class Appointment","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"mlzt2000"},"content":"    Patient \"1\" - \"0..1\" Nurse","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"mlzt2000"},"content":"    (Patient, Nurse) .. Appointment","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"mlzt2000"},"content":"    Class Slot","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"mlzt2000"},"content":"    Class VisitStatus","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"mlzt2000"},"content":"    Appointment --\u003e Slot","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"mlzt2000"},"content":"    Appointment --\u003e VisitStatus","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"mlzt2000"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"mlzt2000"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"mlzt2000":19}},{"path":"docs/diagrams/MarkActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mlzt2000"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"mlzt2000"},"content":"!include style.puml","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"mlzt2000"},"content":"start","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"mlzt2000"},"content":":User executes mark command;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"mlzt2000"},"content":"if () then ([index is present])","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"mlzt2000"},"content":"    if () then ([index is valid])","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"mlzt2000"},"content":"        if () then ([specified Appointment is unmarked])","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"mlzt2000"},"content":"            :Mark Appointment as visited;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"mlzt2000"},"content":"            :Save updated Appointment to Storage;","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"mlzt2000"},"content":"        else ([else])","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"mlzt2000"},"content":"            :Show error message about marking appointments that are already marked;","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"mlzt2000"},"content":"        endif","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"mlzt2000"},"content":"    else ([else])","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"mlzt2000"},"content":"        :Show error message about invalid index;","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"mlzt2000"},"content":"    endif","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"mlzt2000"},"content":"else ([else])","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"mlzt2000"},"content":"    :Show error message about missing index;","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"mlzt2000"},"content":"endif","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"mlzt2000"},"content":"stop","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"mlzt2000"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"mlzt2000":22}},{"path":"docs/diagrams/MarkSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mlzt2000"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"mlzt2000"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"mlzt2000"},"content":"!include style.puml","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"mlzt2000"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"mlzt2000"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"mlzt2000"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"mlzt2000"},"content":"participant \":MarkCommandParser\" as MarkCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"mlzt2000"},"content":"participant \"m:MarkCommand\" as MarkCommand LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"mlzt2000"},"content":"participant \":EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"mlzt2000"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"mlzt2000"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"mlzt2000"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"mlzt2000"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"mlzt2000"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"mlzt2000"},"content":"[-\u003e LogicManager : execute(\"mark 1\")","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"mlzt2000"},"content":"activate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"mlzt2000"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"mark 1\")","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"mlzt2000"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"mlzt2000"},"content":"create MarkCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"mlzt2000"},"content":"AddressBookParser -\u003e MarkCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"mlzt2000"},"content":"activate MarkCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"mlzt2000"},"content":"MarkCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"mlzt2000"},"content":"deactivate MarkCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"mlzt2000"},"content":"AddressBookParser -\u003e MarkCommandParser : parse(\"1\")","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"mlzt2000"},"content":"activate MarkCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"mlzt2000"},"content":"create MarkCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"mlzt2000"},"content":"MarkCommandParser -\u003e MarkCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"mlzt2000"},"content":"activate MarkCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"mlzt2000"},"content":"MarkCommand --\u003e MarkCommandParser : m","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"mlzt2000"},"content":"deactivate MarkCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"mlzt2000"},"content":"MarkCommandParser --\u003e AddressBookParser : m","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"mlzt2000"},"content":"deactivate MarkCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"mlzt2000"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"mlzt2000"},"content":"MarkCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"mlzt2000"},"content":"destroy MarkCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"mlzt2000"},"content":"AddressBookParser --\u003e LogicManager : m","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"mlzt2000"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"mlzt2000"},"content":"LogicManager -\u003e MarkCommand : execute()","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"mlzt2000"},"content":"activate MarkCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"mlzt2000"},"content":"Create EditCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"mlzt2000"},"content":"MarkCommand -\u003e EditCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"mlzt2000"},"content":"activate EditCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"mlzt2000"},"content":"EditCommand --\u003e MarkCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"mlzt2000"},"content":"deactivate EditCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"mlzt2000"},"content":"MarkCommand -\u003e EditCommand : execute()","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"mlzt2000"},"content":"activate EditCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"mlzt2000"},"content":"EditCommand -\u003e Model : setPerson()","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"mlzt2000"},"content":"activate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"mlzt2000"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"mlzt2000"},"content":"deactivate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"mlzt2000"},"content":"deactivate EditCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"mlzt2000"},"content":"create CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"mlzt2000"},"content":"MarkCommand -\u003e CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"mlzt2000"},"content":"activate CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"mlzt2000"},"content":"CommandResult --\u003e MarkCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"mlzt2000"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":78,"author":{"gitId":"mlzt2000"},"content":"MarkCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-22"},{"lineNumber":79,"author":{"gitId":"mlzt2000"},"content":"deactivate MarkCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":80,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":81,"author":{"gitId":"mlzt2000"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":82,"author":{"gitId":"mlzt2000"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":83,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":84,"author":{"gitId":"mlzt2000"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"mlzt2000":84}},{"path":"docs/diagrams/PatientClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"!include style.puml","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"Class Person","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"Class Address","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"Class DateTime","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"Class Gender","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"Class Email","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"Class Name","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"Class Patient","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"Class Phone","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"Class Tag","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"Class Uid","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"HiddenOutside ..\u003e Person","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"Person *--\u003e \"1\" Uid","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"Person *--\u003e \"1\" Gender","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"Person *--\u003e \"1\" Email","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"Person *--\u003e \"1\" Address","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"Patient -left-|\u003e Person","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"Patient *--\u003e \"*\" DateTime","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"Uid -[hidden]right-\u003e Name","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"Name -[hidden]right-\u003e Gender","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"Gender -[hidden]right-\u003e Phone","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"@enduml","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"xhphoong":40}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: AddressBook Level-3","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103-F13-4/tp/branch/master/graph/badge.svg?token\u003dC354PCI8TZ)](https://codecov.io/gh/AY2223S1-CS2103-F13-4/tp)","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"**AddressBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"xhphoong":1,"-":18}},{"path":"docs/team/johnbenedictyan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"---","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"layout: page","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"title: John Benedict\u0027s Project Portfolio Page","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"---","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"### Project: HealthCare Xpress","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"HealthCare Xpress is a desktop application that is to be used by medical administrator for managing patients that require home-visits and nurses. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"* **New Feature**: to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    * What it does: to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    * Justification: to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    * Highlights: to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    * Credits: to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"* **New Feature**: to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003djohnbenedictyan\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"* **Project management**:","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"* **Documentation**:","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"    * User Guide:","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"        * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"        * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"    * Developer Guide:","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"        * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"* **Community**:","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"* **Tools**:","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"johnbenedictyan":46}},{"path":"docs/team/lolfoollors.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"---","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"layout: page","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"title: lolfoollors\u0027s Project Portfolio Page","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"---","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"### Project: HealthCare Xpress","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"HealthCare Xpress is a desktop application that is to be used by medical administrator for managing patients that require home-visits and nurses. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"* **New Feature**: to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"    * What it does: to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"    * Justification: to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"    * Highlights: to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"    * Credits: to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"* **New Feature**: to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003day2223s1-cs2103-f13-4\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dlolfoollors\u0026tabRepo\u003dAY2223S1-CS2103-F13-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"* **Project management**:","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"LolfoollorS"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"LolfoollorS"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"LolfoollorS"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"LolfoollorS"},"content":"* **Documentation**:","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"LolfoollorS"},"content":"    * User Guide:","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"LolfoollorS"},"content":"        * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"LolfoollorS"},"content":"        * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"LolfoollorS"},"content":"    * Developer Guide:","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"LolfoollorS"},"content":"        * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"LolfoollorS"},"content":"* **Community**:","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"LolfoollorS"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"LolfoollorS"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"LolfoollorS"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"LolfoollorS"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"LolfoollorS"},"content":"* **Tools**:","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"LolfoollorS"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"LolfoollorS"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"LolfoollorS":46}},{"path":"docs/team/mlzt2000.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mlzt2000"},"content":"### Project: Healthcare Xpress","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"mlzt2000"},"content":"Healthcare Xpress is a desktop medical address book application used by medical administrators, for managing medical staff and patients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about *to be added*.","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"mlzt2000"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"mlzt2000"},"content":"* **New Feature:**","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"mlzt2000"},"content":"  * What it does: To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"mlzt2000"},"content":"  * Justification: To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"mlzt2000"},"content":"  * Highlights: To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"mlzt2000"},"content":"  * Credits: To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"mlzt2000"},"content":"* **Code Contributed:** [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dlow\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dmlzt2000\u0026tabRepo\u003dAY2223S1-CS2103-F13-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"mlzt2000"},"content":"* **Project Management:**","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"mlzt2000"},"content":"  * To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"mlzt2000"},"content":"* **Enhancements to existing features:**","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"mlzt2000"},"content":"    * To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"mlzt2000"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"mlzt2000"},"content":"    * To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"mlzt2000"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"mlzt2000"},"content":"    * User Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"mlzt2000"},"content":"        * To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"mlzt2000"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"mlzt2000"},"content":"        * To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"mlzt2000"},"content":"* **Community**:","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"mlzt2000"},"content":"    * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"mlzt2000"},"content":"    * Contributed to forum discussions (examples: to be added soon)","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"mlzt2000"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: to be added soon)","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"mlzt2000"},"content":"* **Tools**:","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"mlzt2000"},"content":"    * to be added soon.","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"mlzt2000"},"content":"    * to be added soon.","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"mlzt2000":43}},{"path":"docs/team/xhphoong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"title: xhphoong\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"### Project: HealthCare Xpress","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"HealthCare Xpress is a desktop application that is to be used by medical administrator for managing patients that require home-visits and nurses. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"* **New Feature**: to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"    * What it does: to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"    * Justification: to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"    * Highlights: to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"    * Credits: to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"* **New Feature**: to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dxhphoong\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"* **Project management**:","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"    * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"    * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"    * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"    * User Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"        * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"        * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"        * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"* **Community**:","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"    * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"    * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"    * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"    * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"* **Tools**:","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"    * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"    * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"xhphoong":46}},{"path":"docs/team/yeehaoo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yeehaoo"},"content":"### Project: Healthcare Xpress","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"yeehaoo"},"content":"Healthcare Xpress is a desktop medical address book application used by medical administrators, for managing medical staff and patients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about *to be added*.","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"yeehaoo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"yeehaoo"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"yeehaoo"},"content":"  * What it does: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"yeehaoo"},"content":"  * Justification: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"yeehaoo"},"content":"  * Highlights: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"yeehaoo"},"content":"  * Credits: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"yeehaoo"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003day2223s1-cs2103-f13-4\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dyeehaoo\u0026tabRepo\u003dAY2223S1-CS2103-F13-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"yeehaoo"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"yeehaoo"},"content":"  * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"yeehaoo"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"yeehaoo"},"content":"  * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"yeehaoo"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"yeehaoo"},"content":"  * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"yeehaoo"},"content":"    * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"yeehaoo"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"yeehaoo"},"content":"    * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"yeehaoo"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"yeehaoo"},"content":"  * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"yeehaoo"},"content":"  * Contributed to forum discussions (examples: to be added soon)","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"yeehaoo"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: to be added soon)","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"yeehaoo":30}},{"path":"src/main/java/seedu/address/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2018-04-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"        return configPath;","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"johnbenedictyan":8,"-":56}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":" * Error: JavaFX runtime components are missing, and are required to run this","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":" * application","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"johnbenedictyan":6,"-":20}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"johnbenedictyan"},"content":"     * book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"     * The data from the sample address book will be used instead if","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code storage}\u0027s address book is not found,","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"     * or an empty address book will be used instead if errors occur when reading","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code storage}\u0027s address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"johnbenedictyan"},"content":"        // Update config file in case it was missing to begin with or there are","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"johnbenedictyan"},"content":"        // new/unused fields","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs","lastModifiedDate":"2022-10-28"},{"lineNumber":142,"author":{"gitId":"johnbenedictyan"},"content":"     * file path,","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"johnbenedictyan"},"content":"        // Update prefs file in case it was missing to begin with or there are","lastModifiedDate":"2022-10-28"},{"lineNumber":164,"author":{"gitId":"johnbenedictyan"},"content":"        // new/unused fields","lastModifiedDate":"2022-10-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"johnbenedictyan":12,"-":177}},{"path":"src/main/java/seedu/address/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { // this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"        sb.append(\"Current log level : \").append(logLevel);","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"        sb.append(\"\\nPreference file Location : \").append(userPrefsFilePath);","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"johnbenedictyan":2,"-":61}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"     * position.","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { // this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"        sb.append(\"Width : \").append(windowWidth).append(\"\\n\");","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"        sb.append(\"Height : \").append(windowHeight).append(\"\\n\");","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"        sb.append(\"Position : \").append(windowCoordinates);","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"johnbenedictyan":5,"-":75}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":" * These loggers have been configured to output messages to the console and a","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":" * {@code .log} file by default,","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":" * at the {@code INFO} level. A new {@code .log} file with a new numbering will","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":" * be created after the log","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"     * changed\u003cbr\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"     * Logging levels for existing loggers will only be updated if the logger with","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"     * the same name","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"johnbenedictyan":10,"-":107}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The index provided is invalid\";","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_UID \u003d \"The person uid provided is invalid\";","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_INVALID_CATEGORY \u003d \"Invalid category detected!\";","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"yeehaoo"},"content":"    public static final String MESSAGE_UPDATECONTACT_INVALID_CATEGORY \u003d \"Contact info can only be set for patients.\";","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"yeehaoo"},"content":"    public static final String MESSAGE_UPDATECONTACT_INVALID_CONTACT_CATEGORY \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"yeehaoo"},"content":"            \"Contact must be a physician (category D) or next of kin (category N)\";","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xhphoong":3,"yeehaoo":3,"-":13}},{"path":"src/main/java/seedu/address/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"                versionMatcher.group(4) !\u003d null);","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"    public int getMajor() {","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"        return major;","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"    public int getMinor() {","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"        return minor;","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"    public int getPatch() {","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"        return patch;","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"        return isEarlyAccess;","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"johnbenedictyan":18,"-":99}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":" * {@code Index} should be used right from the start (when parsing in a new user","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" * input), so that if the current","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" * component wants to communicate with another component, it can send an","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":" * {@code Index} to avoid having to know what","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":" * base the other component is using for its index. However, after receiving the","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":" * {@code Index}, that component can","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":" * convert it back to an int if the index will not be passed to a different","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":" * component again.","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    private final int zeroBasedIndex;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"    public int getZeroBased() {","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"    public int getOneBased() {","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                        \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"xhphoong":1,"johnbenedictyan":18,"-":40}},{"path":"src/main/java/seedu/address/commons/core/index/ReverseIndexComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":" * Represents a comparator to compare index number to give a reverse order from high to low.","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"public class ReverseIndexComparator implements Comparator\u003cIndex\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"     * Compare the index number.","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"     * @param index1 the first index to be compared.","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"     * @param index2 the second index to be compared.","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"    public int compare(Index index1, Index index2) {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"        int index1No \u003d index1.getZeroBased();","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"        int index2No \u003d index2.getZeroBased();","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"        if (index1No \u003e index2No) {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"            return -1;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"        } else if (index1No \u003c index2No) {","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"            return 1;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"            return 0;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"xhphoong":28,"johnbenedictyan":2}},{"path":"src/main/java/seedu/address/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.exceptions;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"     * @param message should contain relevant information on the failed","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"     *                constraint(s)","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     * @param message should contain relevant information on the failed","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     *                constraint(s)","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param cause   of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"johnbenedictyan":4,"-":19}},{"path":"src/main/java/seedu/address/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"     * methods.","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"     * methods.","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"     *                                  {@code condition} is false.","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"johnbenedictyan":6,"-":39}},{"path":"src/main/java/seedu/address/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     * @see #requireAllNonNull(Collection)","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items}","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"     * is null.","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"johnbenedictyan":5,"-":33}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"     * {@link Paths#get(String)},","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"     * Creates a file if it does not exist along with its missing parent","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"     * directories.","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"     * Creates a file if it does not exist along with its missing parent","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"     * directories.","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"johnbenedictyan":8,"-":80}},{"path":"src/main/java/seedu/address/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"    private static final ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()}","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"     * object if the file is not found.","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"     * If any values are missing from the file, default values will be used, as long","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"     * as the file is a valid json file.","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param filePath                   cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"     *                                   structure in the class given here.","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e      The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"johnbenedictyan":11,"-":137}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"     * examples:","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param word     cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"        String[] wordsInPreppedSentence \u003d sentence.split(\"\\\\s+\");","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"        return t.getMessage() + \"\\n\" + sw;","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"     * whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"johnbenedictyan":10,"-":63}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns an unmodifiable view of the filtered list of persons","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"johnbenedictyan":4,"-":49}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code Storage}.","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText, model);","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"xhphoong":1,"johnbenedictyan":2,"-":79}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_SLOT;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNAVAILABLE_DATE;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a patient/nurse to the address book. \"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"            + PREFIX_CATEGORY + \"CATEGORY \"","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"            + \"If add patient, you can choose to add details:  \"","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"            + PREFIX_DATE_AND_SLOT + \"HOME_VISIT_DATE_AND_SLOT \\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"            + \"If add nurse, you can choose to add details: \"","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"            + PREFIX_UNAVAILABLE_DATE + \"UNAVAILABLE_DATE_TO_HOME_VISIT \\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"            + PREFIX_CATEGORY + \"P \"","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"            + PREFIX_GENDER + \"M \"","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"            + PREFIX_TAG + \"owesMoney \"","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"            + PREFIX_DATE_AND_SLOT + \"2022-11-11,2\";","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_INVALID_FIELD_NURSE \u003d \"The person to be added is a nurse, \"","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"            + \"should not have date and slot.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_INVALID_FIELD_PATIENT \u003d \"The person to be added is a patient, \"","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"            + \"should not have unavailable date.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New %1$s added: %2$s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This %1$s already exists in the address book\";","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String MESSAGE_SIMILAR_PERSON \u003d \"This %1$s is similar someone we found\"","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"            + \" in the address book: %2$s. We have added them anyways.\";","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_PERSON, toAdd.getCategoryIndicator()));","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"        if (model.findSimilarPerson(toAdd).isPresent()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"            model.addPerson(toAdd);","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"            return new CommandResult(String.format(MESSAGE_SIMILAR_PERSON, toAdd.getCategoryIndicator(),","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"                    model.findSimilarPerson(toAdd).get()));","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd.getCategoryIndicator(), toAdd));","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                        \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xhphoong":24,"johnbenedictyan":7,"-":61}},{"path":"src/main/java/seedu/address/logic/commands/AssignCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_SLOT_INDEX;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"import seedu.address.commons.core.index.ReverseIndexComparator;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateSlot;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.HomeVisit;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Nurse;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":" * Assigns a patient\u0027s home-visit dateslot to nurse.","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"public class AssignCommand extends Command {","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"    public static final String COMMAND_WORD \u003d \"assign\";","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Assign a patient\u0027s home visit dateslot to a nurse\"","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"            + \"by using the unique id number of the patient, nurse and the dateslot index.\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"            + \"Parameters: \" + PREFIX_UID + \"UID of a nurse (must be a positive integer) \"","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"            + PREFIX_UID + \"UID of a patient (must be a positive integer)\"","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"            + \"[\" + PREFIX_DATE_AND_SLOT_INDEX + \"DATE_AND_SLOT_INDEX] \\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"            + \"Example: \" + COMMAND_WORD + PREFIX_UID + \" 1 \"","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"            + PREFIX_UID + \"2\"","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"            + PREFIX_DATE_AND_SLOT_INDEX + \"1\";","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"%1$s \u0027s dateslot/dateslots assigned to %2$s.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_BOTH_NURSE \u003d \"The given uids are both nurses.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_BOTH_PATIENT \u003d \"The given uids are both patients.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_INVALID_DATESLOT \u003d \"The date slot %1$s has already passed.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_ASSIGNED_DATESLOT \u003d \"The date slot %1$s has been assigned already.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_OUTOFBOUND_DATESLOT_INDEX \u003d \"The date slot index given is out of bound.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_TIME_CRASHES \u003d \"There is already an exisiting homevisit in this dateslot %1$s.\"","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"            + \"Please assign another nurse\";","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_UNAVAILABLE_DATE \u003d \"The nurse is unavailable on this day %1$s. \"","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"            + \"Please assign another nurse\";","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"    private final Uid uid1;","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"    private final Uid uid2;","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"    private final List\u003cIndex\u003e dateslotIndex;","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"     * Creates an AssignCommand to assgin specific patient\u0027s date slot to a nurse.","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"    public AssignCommand(Uid uid1, Uid uid2, List\u003cIndex\u003e dateslotIndex) {","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(uid1);","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(uid2);","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(dateslotIndex);","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"        this.uid1 \u003d uid1;","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"        this.uid2 \u003d uid2;","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"        this.dateslotIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"        this.dateslotIndex.addAll(dateslotIndex);","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"        Optional\u003cPerson\u003e person1 \u003d lastShownList.stream().filter(p -\u003e p.getUid().equals(uid1)).findFirst();","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"        Optional\u003cPerson\u003e person2 \u003d lastShownList.stream().filter(p -\u003e p.getUid().equals(uid2)).findFirst();","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"        if (person1.isEmpty() || person2.isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_UID);","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"        Person personToBeEdit1 \u003d person1.get();","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"        Person personToBeEdit2 \u003d person2.get();","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"        Person patient \u003d getPatient(personToBeEdit1, personToBeEdit2);","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"        Person nurse \u003d getNurse(personToBeEdit1, personToBeEdit2);","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"        markAssign(model, patient, nurse);","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, patient.getUid().getUid(), nurse.getUid().getUid()));","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"    private Person getPatient(Person person1, Person person2) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"        Boolean isPerson1Patient \u003d person1.isPatient();","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"        Boolean isPerson2Patient \u003d person2.isPatient();","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"        if (isPerson1Patient \u0026\u0026 isPerson2Patient) {","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(MESSAGE_BOTH_PATIENT);","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"xhphoong"},"content":"        } else if (isPerson1Patient) {","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"            return person1;","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"        } else if (isPerson2Patient) {","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"            return person2;","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(MESSAGE_BOTH_NURSE);","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"xhphoong"},"content":"    private Person getNurse(Person person1, Person person2) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"johnbenedictyan"},"content":"        Boolean isPerson1Nurse \u003d person1.isNurse();","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"johnbenedictyan"},"content":"        Boolean isPerson2Nurse \u003d person2.isNurse();","lastModifiedDate":"2022-10-28"},{"lineNumber":111,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"xhphoong"},"content":"        if (isPerson1Nurse \u0026\u0026 isPerson2Nurse) {","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(MESSAGE_BOTH_NURSE);","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"xhphoong"},"content":"        } else if (isPerson1Nurse) {","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"xhphoong"},"content":"            return person1;","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"xhphoong"},"content":"        } else if (isPerson2Nurse) {","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"xhphoong"},"content":"            return person2;","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(MESSAGE_BOTH_PATIENT);","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"xhphoong"},"content":"    private void markAssign(Model model, Person patient, Person nurse) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"xhphoong"},"content":"        List\u003cDateSlot\u003e patientDateSlotList \u003d ((Patient) patient).getDatesSlots();","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"xhphoong"},"content":"        Long nurseUidNo \u003d nurse.getUid().getUid();","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"xhphoong"},"content":"        List\u003cHomeVisit\u003e nurseHomeVisitList \u003d ((Nurse) nurse).getHomeVisits();","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"xhphoong"},"content":"        List\u003cDate\u003e nurseFullyScheduledList \u003d ((Nurse) nurse).getFullyScheduledDates();","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"johnbenedictyan"},"content":"        List\u003cDateSlot\u003e updatedDateSlotList \u003d new ArrayList\u003c\u003e(patientDateSlotList);","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"johnbenedictyan"},"content":"        List\u003cHomeVisit\u003e updatedHomeVisitList \u003d new ArrayList\u003c\u003e(nurseHomeVisitList);","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"johnbenedictyan"},"content":"        List\u003cDate\u003e updatedFullyScheduledList \u003d new ArrayList\u003c\u003e(nurseFullyScheduledList);","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"xhphoong"},"content":"        if (dateslotIndex.isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"xhphoong"},"content":"            for (DateSlot dateslot : updatedDateSlotList) {","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"xhphoong"},"content":"                executeChecksAndActions(dateslot, updatedHomeVisitList, updatedFullyScheduledList,","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"xhphoong"},"content":"                        nurse, nurseUidNo, patient);","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"xhphoong"},"content":"            sortAndCheckIndexForPatient(updatedDateSlotList);","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":140,"author":{"gitId":"xhphoong"},"content":"            for (Index index : dateslotIndex) {","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"xhphoong"},"content":"                DateSlot dateSlot \u003d updatedDateSlotList.get(index.getZeroBased());","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"xhphoong"},"content":"                executeChecksAndActions(dateSlot, updatedHomeVisitList, updatedFullyScheduledList,","lastModifiedDate":"2022-10-27"},{"lineNumber":143,"author":{"gitId":"xhphoong"},"content":"                        nurse, nurseUidNo, patient);","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"xhphoong"},"content":"        editPatient(model, patient, updatedDateSlotList);","lastModifiedDate":"2022-10-27"},{"lineNumber":147,"author":{"gitId":"xhphoong"},"content":"        editNurse(model, nurse, updatedHomeVisitList, updatedFullyScheduledList);","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":149,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":150,"author":{"gitId":"xhphoong"},"content":"    private void checkInvalid(DateSlot dateSlot) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":151,"author":{"gitId":"johnbenedictyan"},"content":"        if (dateSlot.getHasVisited()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_DATESLOT, dateSlot.getDateSlotFormatted()));","lastModifiedDate":"2022-10-27"},{"lineNumber":153,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":154,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":155,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":156,"author":{"gitId":"xhphoong"},"content":"    private void checkAssigned(DateSlot dateSlot) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":157,"author":{"gitId":"johnbenedictyan"},"content":"        if (dateSlot.getHasAssigned()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":158,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(String.format(MESSAGE_ASSIGNED_DATESLOT, dateSlot.getDateSlotFormatted()));","lastModifiedDate":"2022-10-27"},{"lineNumber":159,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":160,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":161,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":162,"author":{"gitId":"xhphoong"},"content":"    private void checkCrashes(DateSlot dateSlot, List\u003cHomeVisit\u003e homeVisitList) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"xhphoong"},"content":"        Optional\u003cHomeVisit\u003e homeVisit \u003d homeVisitList.stream().filter(","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"xhphoong"},"content":"                h -\u003e h.getDateSlot().getDateTime().equals(dateSlot.getDateTime())).findFirst();","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"xhphoong"},"content":"        if (!homeVisit.isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":166,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(String.format(MESSAGE_TIME_CRASHES, dateSlot.getDateSlotFormatted()));","lastModifiedDate":"2022-10-27"},{"lineNumber":167,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":168,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":169,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":170,"author":{"gitId":"xhphoong"},"content":"    private void checkUnavailability(DateSlot dateSlot, Person nurse) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":171,"author":{"gitId":"xhphoong"},"content":"        List\u003cDate\u003e unavailabilityDateList \u003d ((Nurse) nurse).getUnavailableDates();","lastModifiedDate":"2022-10-27"},{"lineNumber":172,"author":{"gitId":"xhphoong"},"content":"        Optional\u003cDate\u003e date \u003d unavailabilityDateList.stream().filter(","lastModifiedDate":"2022-10-27"},{"lineNumber":173,"author":{"gitId":"xhphoong"},"content":"                d -\u003e d.getDate().equals(dateSlot.getDate())).findFirst();","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"xhphoong"},"content":"        if (!date.isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":175,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(String.format(MESSAGE_UNAVAILABLE_DATE, dateSlot.getDateSlotFormatted()));","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"xhphoong"},"content":"    private void createHomeVisit(DateSlot date, Person patient, List\u003cHomeVisit\u003e homeVisitList,","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"xhphoong"},"content":"            List\u003cDate\u003e updatedFullyScheduledDateList) {","lastModifiedDate":"2022-10-27"},{"lineNumber":181,"author":{"gitId":"johnbenedictyan"},"content":"        HomeVisit homeVisit \u003d new HomeVisit(date, patient.getUid().getUid());","lastModifiedDate":"2022-10-28"},{"lineNumber":182,"author":{"gitId":"xhphoong"},"content":"        homeVisitList.add(homeVisit);","lastModifiedDate":"2022-10-27"},{"lineNumber":183,"author":{"gitId":"xhphoong"},"content":"        LocalDate localdate \u003d date.getDate();","lastModifiedDate":"2022-10-27"},{"lineNumber":184,"author":{"gitId":"xhphoong"},"content":"        int frequencyCount \u003d 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":185,"author":{"gitId":"xhphoong"},"content":"        for (int i \u003d 0; i \u003c homeVisitList.size(); i++) {","lastModifiedDate":"2022-10-27"},{"lineNumber":186,"author":{"gitId":"xhphoong"},"content":"            LocalDate dateToCheck \u003d homeVisitList.get(i).getDateSlot().getDate();","lastModifiedDate":"2022-10-27"},{"lineNumber":187,"author":{"gitId":"xhphoong"},"content":"            if (dateToCheck.equals(localdate)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":188,"author":{"gitId":"xhphoong"},"content":"                frequencyCount++;","lastModifiedDate":"2022-10-27"},{"lineNumber":189,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":190,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":191,"author":{"gitId":"xhphoong"},"content":"        if (frequencyCount \u003d\u003d 4) {","lastModifiedDate":"2022-10-27"},{"lineNumber":192,"author":{"gitId":"xhphoong"},"content":"            updatedFullyScheduledDateList.add(new Date(localdate));","lastModifiedDate":"2022-10-27"},{"lineNumber":193,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":194,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":195,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":196,"author":{"gitId":"johnbenedictyan"},"content":"    private void editPatient(Model model, Person patient, List\u003cDateSlot\u003e dateSlotList) {","lastModifiedDate":"2022-10-28"},{"lineNumber":197,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":198,"author":{"gitId":"xhphoong"},"content":"        Uid uid \u003d patient.getUid();","lastModifiedDate":"2022-10-27"},{"lineNumber":199,"author":{"gitId":"xhphoong"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-27"},{"lineNumber":200,"author":{"gitId":"xhphoong"},"content":"        Optional\u003cPerson\u003e personToEdit \u003d lastShownList.stream().filter(p -\u003e p.getUid().equals(uid)).findFirst();","lastModifiedDate":"2022-10-27"},{"lineNumber":201,"author":{"gitId":"xhphoong"},"content":"        Person confirmedPersonToEdit \u003d personToEdit.get();","lastModifiedDate":"2022-10-27"},{"lineNumber":202,"author":{"gitId":"xhphoong"},"content":"        Person newPerson \u003d new Patient(confirmedPersonToEdit.getUid(), confirmedPersonToEdit.getName(),","lastModifiedDate":"2022-10-27"},{"lineNumber":203,"author":{"gitId":"xhphoong"},"content":"                confirmedPersonToEdit.getGender(), confirmedPersonToEdit.getPhone(), confirmedPersonToEdit.getEmail(),","lastModifiedDate":"2022-10-27"},{"lineNumber":204,"author":{"gitId":"xhphoong"},"content":"                confirmedPersonToEdit.getAddress(), confirmedPersonToEdit.getTags(), dateSlotList);","lastModifiedDate":"2022-10-27"},{"lineNumber":205,"author":{"gitId":"xhphoong"},"content":"        model.setPerson(confirmedPersonToEdit, newPerson);","lastModifiedDate":"2022-10-27"},{"lineNumber":206,"author":{"gitId":"xhphoong"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-27"},{"lineNumber":207,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":208,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":209,"author":{"gitId":"xhphoong"},"content":"    private void editNurse(Model model, Person nurse, List\u003cHomeVisit\u003e homeVisitList,","lastModifiedDate":"2022-10-27"},{"lineNumber":210,"author":{"gitId":"xhphoong"},"content":"            List\u003cDate\u003e fullyScheduledDateList) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":211,"author":{"gitId":"xhphoong"},"content":"        Uid uid \u003d nurse.getUid();","lastModifiedDate":"2022-10-27"},{"lineNumber":212,"author":{"gitId":"xhphoong"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2022-10-27"},{"lineNumber":213,"author":{"gitId":"xhphoong"},"content":"        editPersonDescriptor.setHomeVisits(homeVisitList);","lastModifiedDate":"2022-10-27"},{"lineNumber":214,"author":{"gitId":"xhphoong"},"content":"        editPersonDescriptor.setFullyScheduledDates(fullyScheduledDateList);","lastModifiedDate":"2022-10-27"},{"lineNumber":215,"author":{"gitId":"xhphoong"},"content":"        EditCommand editCommand1 \u003d new EditCommand(uid, editPersonDescriptor);","lastModifiedDate":"2022-10-27"},{"lineNumber":216,"author":{"gitId":"xhphoong"},"content":"        editCommand1.execute(model);","lastModifiedDate":"2022-10-27"},{"lineNumber":217,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":218,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"xhphoong"},"content":"    private void sortAndCheckIndexForPatient(List\u003cDateSlot\u003e dateSlotList) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":220,"author":{"gitId":"xhphoong"},"content":"        ReverseIndexComparator comp \u003d new ReverseIndexComparator();","lastModifiedDate":"2022-10-27"},{"lineNumber":221,"author":{"gitId":"xhphoong"},"content":"        dateslotIndex.sort(comp);","lastModifiedDate":"2022-10-27"},{"lineNumber":222,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":223,"author":{"gitId":"xhphoong"},"content":"        if (dateslotIndex.get(0).getZeroBased() \u003e\u003d dateSlotList.size()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":224,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(MESSAGE_OUTOFBOUND_DATESLOT_INDEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":225,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":226,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":227,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":228,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":229,"author":{"gitId":"xhphoong"},"content":"    private void executeChecksAndActions(DateSlot dateSlot, List\u003cHomeVisit\u003e homeVisitList,","lastModifiedDate":"2022-10-27"},{"lineNumber":230,"author":{"gitId":"xhphoong"},"content":"            List\u003cDate\u003e fullyScheduledDate,","lastModifiedDate":"2022-10-27"},{"lineNumber":231,"author":{"gitId":"xhphoong"},"content":"            Person nurse, Long nurseUidNo, Person patient) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":232,"author":{"gitId":"xhphoong"},"content":"        checkInvalid(dateSlot);","lastModifiedDate":"2022-10-27"},{"lineNumber":233,"author":{"gitId":"xhphoong"},"content":"        checkAssigned(dateSlot);","lastModifiedDate":"2022-10-27"},{"lineNumber":234,"author":{"gitId":"xhphoong"},"content":"        checkCrashes(dateSlot, homeVisitList);","lastModifiedDate":"2022-10-27"},{"lineNumber":235,"author":{"gitId":"xhphoong"},"content":"        checkUnavailability(dateSlot, nurse);","lastModifiedDate":"2022-10-27"},{"lineNumber":236,"author":{"gitId":"xhphoong"},"content":"        dateSlot.mark(nurseUidNo);","lastModifiedDate":"2022-10-27"},{"lineNumber":237,"author":{"gitId":"xhphoong"},"content":"        createHomeVisit(dateSlot, patient, homeVisitList, fullyScheduledDate);","lastModifiedDate":"2022-10-27"},{"lineNumber":238,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":239,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":240,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":241,"author":{"gitId":"xhphoong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-27"},{"lineNumber":242,"author":{"gitId":"xhphoong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-27"},{"lineNumber":243,"author":{"gitId":"xhphoong"},"content":"                || (other instanceof AssignCommand // instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":244,"author":{"gitId":"xhphoong"},"content":"                        \u0026\u0026 uid1.equals(((AssignCommand) other).uid1)","lastModifiedDate":"2022-10-27"},{"lineNumber":245,"author":{"gitId":"xhphoong"},"content":"                        \u0026\u0026 uid2.equals(((AssignCommand) other).uid2)","lastModifiedDate":"2022-10-27"},{"lineNumber":246,"author":{"gitId":"xhphoong"},"content":"                        \u0026\u0026 dateslotIndex.equals(((AssignCommand) other).dateslotIndex));","lastModifiedDate":"2022-10-27"},{"lineNumber":247,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":248,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":249,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"xhphoong":238,"johnbenedictyan":11}},{"path":"src/main/java/seedu/address/logic/commands/CheckSimilarCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":" * Finds and lists all persons in address book whose are similar.","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"public class CheckSimilarCommand extends Command {","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String COMMAND_WORD \u003d \"checkSimilar\";","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Returns persons that maybe similar\";","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"        ObservableList\u003cPerson\u003e personList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"        for (int i \u003d 0; i \u003c personList.size(); i++) {","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"            Person curr \u003d personList.get(i);","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"            Optional\u003cPerson\u003e similarPerson \u003d personList.stream()","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"                    .filter(x -\u003e x.isSimilarPerson(curr) \u0026\u0026 !x.isSamePerson(curr)).findAny();","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"            if (similarPerson.isPresent()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"                model.updateFilteredPersonList(x -\u003e x.isSamePerson(curr) || x.isSamePerson(similarPerson.get()));","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"                return new CommandResult(","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"                        String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"                String.format(\"No similar People Found!\"));","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"        return other \u003d\u003d this;","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"johnbenedictyan":43}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" * Represents a command with hidden internal logic and the ability to be","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" * executed.","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"johnbenedictyan":2,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"     * The application should exit.","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"johnbenedictyan":6,"-":69}},{"path":"src/main/java/seedu/address/logic/commands/DeassignCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_SLOT_INDEX;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"import seedu.address.commons.core.index.ReverseIndexComparator;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateSlot;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.HomeVisit;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Nurse;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":" * Deassigns a home-visit slot.","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"public class DeassignCommand extends Command {","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"    public static final String COMMAND_WORD \u003d \"deassign\";","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deassign home visit dateslot\"","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"            + \"by using the unique id number of the patient or the nurse and respective index.\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"            + \"Parameters: \" + PREFIX_UID + \"UID of a nurse/patient (must be a positive integer) \"","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"            + \"If it is a patient, to indicate the specific dateslot to be deassigned: \"","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"            + \"[\" + PREFIX_DATE_AND_SLOT_INDEX + \"DATE_AND_SLOT_INDEX] \\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"            + \"If it is a nurse, to indicate the specific homevisit to be deassigned: \"","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"            + \"[\" + PREFIX_DATE_AND_SLOT_INDEX + \"HOME_VISIT_INDEX] \\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"            + \"Example: \" + COMMAND_WORD + PREFIX_UID + \" 1 \"","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"            + PREFIX_DATE_AND_SLOT_INDEX + \"1\";","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"%1$s \u0027s dateslot/homevisit has been deassigned.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_INVALID_DATESLOT_OR_HOMEVISIT \u003d \"The dateslot/homevisit %1$s \"","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"            + \"has already passed.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_NOT_ASSIGNED_DATESLOT \u003d \"The dateslot %1$s has not been assigned.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_OUTOFBOUND_DATESLOT_INDEX \u003d \"The dateslot/homevisit index \"","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"            + \"given is out of bound.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"    private final Uid uid;","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"    private final List\u003cIndex\u003e dateslotOrHomevisitIndex;","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"     * Creates a DeassignCommand to deassgin specific patient\u0027s date slot or","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"     * specific nurse\u0027s home visit.","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"    public DeassignCommand(Uid uid, List\u003cIndex\u003e dateslotOrHomevisitIndex) {","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(uid);","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(dateslotOrHomevisitIndex);","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"        this.dateslotOrHomevisitIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"        this.dateslotOrHomevisitIndex.addAll(dateslotOrHomevisitIndex);","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"        Optional\u003cPerson\u003e person1 \u003d lastShownList.stream().filter(p -\u003e p.getUid().equals(uid)).findFirst();","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"        if (person1.isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_UID);","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"        Person personToBeEdit1 \u003d person1.get();","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"        if (personToBeEdit1 instanceof Patient) {","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"            unmarkAssignedPatient(model, personToBeEdit1, lastShownList);","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"        } else if (personToBeEdit1 instanceof Nurse) {","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"            unmarkAssignedNurse(model, personToBeEdit1, lastShownList);","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"            throw new IllegalArgumentException(Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, personToBeEdit1.getUid().getUid()));","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"    private void unmarkAssignedPatient(Model model, Person person, List\u003cPerson\u003e personList) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"        List\u003cDateSlot\u003e patientDateSlotList \u003d ((Patient) person).getDatesSlots();","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"        List\u003cDateSlot\u003e updatedDateSlotList \u003d new ArrayList\u003c\u003e(patientDateSlotList);","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"xhphoong"},"content":"        if (dateslotOrHomevisitIndex.isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"            for (DateSlot dateslot : updatedDateSlotList) {","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"                unmarkActionForPatient(model, dateslot, personList);","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"            sortAndCheckIndexForPatient(updatedDateSlotList);","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"            for (Index index : dateslotOrHomevisitIndex) {","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"                DateSlot dateSlot \u003d updatedDateSlotList.get(index.getZeroBased());","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"xhphoong"},"content":"                unmarkActionForPatient(model, dateSlot, personList);","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"        editPatient(model, person, updatedDateSlotList);","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"xhphoong"},"content":"    private void unmarkAssignedNurse(Model model, Person person, List\u003cPerson\u003e personList) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"xhphoong"},"content":"        List\u003cHomeVisit\u003e homeVisitsList \u003d ((Nurse) person).getHomeVisits();","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"johnbenedictyan"},"content":"        List\u003cHomeVisit\u003e updatedHomeVisitList \u003d new ArrayList\u003c\u003e(homeVisitsList);","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"xhphoong"},"content":"        List\u003cDate\u003e fullyScheduledList \u003d ((Nurse) person).getFullyScheduledDates();","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"johnbenedictyan"},"content":"        List\u003cDate\u003e updatedFullyScheduledDatesList \u003d new ArrayList\u003c\u003e(fullyScheduledList);","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"xhphoong"},"content":"        if (dateslotOrHomevisitIndex.isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"xhphoong"},"content":"            for (HomeVisit homeVisit : updatedHomeVisitList) {","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"xhphoong"},"content":"                unmarkActionForNurse(model, homeVisit, personList,","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"xhphoong"},"content":"                        updatedHomeVisitList, updatedFullyScheduledDatesList);","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"xhphoong"},"content":"                if (updatedHomeVisitList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"xhphoong"},"content":"                    break;","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"xhphoong"},"content":"                }","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"xhphoong"},"content":"            sortAndCheckIndexForNurse(updatedHomeVisitList);","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"xhphoong"},"content":"            for (Index index : dateslotOrHomevisitIndex) {","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"xhphoong"},"content":"                HomeVisit homeVisit \u003d updatedHomeVisitList.get(index.getZeroBased());","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"xhphoong"},"content":"                unmarkActionForNurse(model, homeVisit, personList,","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"xhphoong"},"content":"                        updatedHomeVisitList, updatedFullyScheduledDatesList);","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"xhphoong"},"content":"        editNurse(model, person, updatedHomeVisitList, updatedFullyScheduledDatesList);","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"xhphoong"},"content":"    private void sortAndCheckIndexForPatient(List\u003cDateSlot\u003e dateSlotList) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"xhphoong"},"content":"        ReverseIndexComparator comp \u003d new ReverseIndexComparator();","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"xhphoong"},"content":"        dateslotOrHomevisitIndex.sort(comp);","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"xhphoong"},"content":"        if (dateslotOrHomevisitIndex.get(0).getZeroBased() \u003e\u003d dateSlotList.size()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(MESSAGE_OUTOFBOUND_DATESLOT_INDEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":140,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":143,"author":{"gitId":"xhphoong"},"content":"    private void sortAndCheckIndexForNurse(List\u003cHomeVisit\u003e homeVisitsList) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"xhphoong"},"content":"        ReverseIndexComparator comp \u003d new ReverseIndexComparator();","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"xhphoong"},"content":"        dateslotOrHomevisitIndex.sort(comp);","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":147,"author":{"gitId":"xhphoong"},"content":"        if (dateslotOrHomevisitIndex.get(0).getZeroBased() \u003e\u003d homeVisitsList.size()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(MESSAGE_OUTOFBOUND_DATESLOT_INDEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":149,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":150,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":151,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":152,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":153,"author":{"gitId":"xhphoong"},"content":"    private void checkInvalid(DateSlot dateSlot) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":154,"author":{"gitId":"johnbenedictyan"},"content":"        if (dateSlot.getHasVisited()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_DATESLOT_OR_HOMEVISIT,","lastModifiedDate":"2022-10-27"},{"lineNumber":156,"author":{"gitId":"xhphoong"},"content":"                    dateSlot.getDateSlotFormatted()));","lastModifiedDate":"2022-10-27"},{"lineNumber":157,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":158,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":159,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":160,"author":{"gitId":"xhphoong"},"content":"    private void checkNotAssigned(DateSlot dateSlot) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":161,"author":{"gitId":"johnbenedictyan"},"content":"        if (!dateSlot.getHasAssigned()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":162,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(String.format(MESSAGE_NOT_ASSIGNED_DATESLOT,","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"xhphoong"},"content":"                    dateSlot.getDateSlotFormatted()));","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":166,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":167,"author":{"gitId":"xhphoong"},"content":"    private void removeHomeVisit(Model model, DateSlot dateSlot, List\u003cPerson\u003e personList) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":168,"author":{"gitId":"xhphoong"},"content":"        Long nurseUidNo \u003d dateSlot.getNurseUidNo();","lastModifiedDate":"2022-10-27"},{"lineNumber":169,"author":{"gitId":"xhphoong"},"content":"        Person nurse \u003d personList.stream().filter(p -\u003e p.getUid().getUid().equals(nurseUidNo)).findFirst().get();","lastModifiedDate":"2022-10-27"},{"lineNumber":170,"author":{"gitId":"xhphoong"},"content":"        List\u003cHomeVisit\u003e nurseHomeVisitList \u003d ((Nurse) nurse).getHomeVisits();","lastModifiedDate":"2022-10-27"},{"lineNumber":171,"author":{"gitId":"xhphoong"},"content":"        List\u003cDate\u003e nurseFullyScheduledList \u003d ((Nurse) nurse).getFullyScheduledDates();","lastModifiedDate":"2022-10-27"},{"lineNumber":172,"author":{"gitId":"johnbenedictyan"},"content":"        List\u003cHomeVisit\u003e updatedHomeVisitList \u003d new ArrayList\u003c\u003e(nurseHomeVisitList);","lastModifiedDate":"2022-10-28"},{"lineNumber":173,"author":{"gitId":"johnbenedictyan"},"content":"        List\u003cDate\u003e updatedFullyScheduledList \u003d new ArrayList\u003c\u003e(nurseFullyScheduledList);","lastModifiedDate":"2022-10-28"},{"lineNumber":174,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":175,"author":{"gitId":"xhphoong"},"content":"        HomeVisit homeVisitToBeDeleted \u003d updatedHomeVisitList.stream().filter(","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"xhphoong"},"content":"                h -\u003e h.getDateSlot().getDateTime().equals(dateSlot.getDateTime())).findFirst().get();","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"xhphoong"},"content":"        updatedHomeVisitList.remove(homeVisitToBeDeleted);","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"xhphoong"},"content":"        Optional\u003cDate\u003e dateToBeDeleted \u003d updatedFullyScheduledList.stream().filter(","lastModifiedDate":"2022-10-27"},{"lineNumber":181,"author":{"gitId":"xhphoong"},"content":"                h -\u003e h.getDate().equals(dateSlot.getDate())).findFirst();","lastModifiedDate":"2022-10-27"},{"lineNumber":182,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":183,"author":{"gitId":"xhphoong"},"content":"        if (!dateToBeDeleted.isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":184,"author":{"gitId":"xhphoong"},"content":"            updatedFullyScheduledList.remove(dateToBeDeleted.get());","lastModifiedDate":"2022-10-27"},{"lineNumber":185,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":186,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":187,"author":{"gitId":"xhphoong"},"content":"        editNurse(model, nurse, updatedHomeVisitList, updatedFullyScheduledList);","lastModifiedDate":"2022-10-27"},{"lineNumber":188,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":189,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":190,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":191,"author":{"gitId":"xhphoong"},"content":"    private void unmarkActionForPatient(Model model, DateSlot dateSlot, List\u003cPerson\u003e personList)","lastModifiedDate":"2022-10-27"},{"lineNumber":192,"author":{"gitId":"xhphoong"},"content":"            throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":193,"author":{"gitId":"xhphoong"},"content":"        checkInvalid(dateSlot);","lastModifiedDate":"2022-10-27"},{"lineNumber":194,"author":{"gitId":"xhphoong"},"content":"        checkNotAssigned(dateSlot);","lastModifiedDate":"2022-10-27"},{"lineNumber":195,"author":{"gitId":"xhphoong"},"content":"        removeHomeVisit(model, dateSlot, personList);","lastModifiedDate":"2022-10-27"},{"lineNumber":196,"author":{"gitId":"xhphoong"},"content":"        dateSlot.unmark();","lastModifiedDate":"2022-10-27"},{"lineNumber":197,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":198,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":199,"author":{"gitId":"xhphoong"},"content":"    private void unmarkActionForNurse(Model model, HomeVisit homeVisit, List\u003cPerson\u003e personList,","lastModifiedDate":"2022-10-27"},{"lineNumber":200,"author":{"gitId":"xhphoong"},"content":"            List\u003cHomeVisit\u003e homeVisitList,","lastModifiedDate":"2022-10-27"},{"lineNumber":201,"author":{"gitId":"xhphoong"},"content":"            List\u003cDate\u003e fullyScheduledList) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":202,"author":{"gitId":"xhphoong"},"content":"        DateSlot homeVisitToBeDeleted \u003d homeVisit.getDateSlot();","lastModifiedDate":"2022-10-27"},{"lineNumber":203,"author":{"gitId":"xhphoong"},"content":"        Long patientUidNo \u003d homeVisit.getHomeVisitPatientUidNo();","lastModifiedDate":"2022-10-27"},{"lineNumber":204,"author":{"gitId":"xhphoong"},"content":"        unmarkDateSlot(model, homeVisitToBeDeleted, patientUidNo, personList);","lastModifiedDate":"2022-10-27"},{"lineNumber":205,"author":{"gitId":"xhphoong"},"content":"        homeVisitList.remove(homeVisit);","lastModifiedDate":"2022-10-27"},{"lineNumber":206,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":207,"author":{"gitId":"xhphoong"},"content":"        Optional\u003cDate\u003e dateToBeDeleted \u003d fullyScheduledList.stream().filter(","lastModifiedDate":"2022-10-27"},{"lineNumber":208,"author":{"gitId":"xhphoong"},"content":"                h -\u003e h.getDate().equals(homeVisitToBeDeleted.getDate())).findFirst();","lastModifiedDate":"2022-10-27"},{"lineNumber":209,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":210,"author":{"gitId":"xhphoong"},"content":"        if (!dateToBeDeleted.isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":211,"author":{"gitId":"xhphoong"},"content":"            fullyScheduledList.remove(dateToBeDeleted.get());","lastModifiedDate":"2022-10-27"},{"lineNumber":212,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":213,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":214,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":215,"author":{"gitId":"xhphoong"},"content":"    private void unmarkDateSlot(Model model, DateSlot dateslot, Long patientUidNo, List\u003cPerson\u003e personList)","lastModifiedDate":"2022-10-27"},{"lineNumber":216,"author":{"gitId":"xhphoong"},"content":"            throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":217,"author":{"gitId":"xhphoong"},"content":"        Person patient \u003d personList.stream().filter(","lastModifiedDate":"2022-10-27"},{"lineNumber":218,"author":{"gitId":"xhphoong"},"content":"                p -\u003e p.getUid().getUid().equals(patientUidNo)).findFirst().get();","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"xhphoong"},"content":"        List\u003cDateSlot\u003e dateSlotList \u003d ((Patient) patient).getDatesSlots();","lastModifiedDate":"2022-10-27"},{"lineNumber":220,"author":{"gitId":"johnbenedictyan"},"content":"        List\u003cDateSlot\u003e updatedDateSlotList \u003d new ArrayList\u003c\u003e(dateSlotList);","lastModifiedDate":"2022-10-28"},{"lineNumber":221,"author":{"gitId":"xhphoong"},"content":"        DateSlot dateSlotToBeUnmarked \u003d updatedDateSlotList.stream().filter(","lastModifiedDate":"2022-10-27"},{"lineNumber":222,"author":{"gitId":"xhphoong"},"content":"                d -\u003e d.getDateTime().equals(dateslot.getDateTime())).findFirst().get();","lastModifiedDate":"2022-10-27"},{"lineNumber":223,"author":{"gitId":"xhphoong"},"content":"        dateSlotToBeUnmarked.unmark();","lastModifiedDate":"2022-10-27"},{"lineNumber":224,"author":{"gitId":"xhphoong"},"content":"        editPatient(model, patient, updatedDateSlotList);","lastModifiedDate":"2022-10-27"},{"lineNumber":225,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":226,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":227,"author":{"gitId":"johnbenedictyan"},"content":"    private void editPatient(Model model, Person patient, List\u003cDateSlot\u003e dateSlotList) {","lastModifiedDate":"2022-10-28"},{"lineNumber":228,"author":{"gitId":"xhphoong"},"content":"        Uid uid \u003d patient.getUid();","lastModifiedDate":"2022-10-27"},{"lineNumber":229,"author":{"gitId":"xhphoong"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-27"},{"lineNumber":230,"author":{"gitId":"xhphoong"},"content":"        Optional\u003cPerson\u003e personToEdit \u003d lastShownList.stream().filter(p -\u003e p.getUid().equals(uid)).findFirst();","lastModifiedDate":"2022-10-27"},{"lineNumber":231,"author":{"gitId":"xhphoong"},"content":"        Person confirmedPersonToEdit \u003d personToEdit.get();","lastModifiedDate":"2022-10-27"},{"lineNumber":232,"author":{"gitId":"xhphoong"},"content":"        Person newPerson \u003d new Patient(confirmedPersonToEdit.getUid(), confirmedPersonToEdit.getName(),","lastModifiedDate":"2022-10-27"},{"lineNumber":233,"author":{"gitId":"xhphoong"},"content":"                confirmedPersonToEdit.getGender(), confirmedPersonToEdit.getPhone(), confirmedPersonToEdit.getEmail(),","lastModifiedDate":"2022-10-27"},{"lineNumber":234,"author":{"gitId":"xhphoong"},"content":"                confirmedPersonToEdit.getAddress(), confirmedPersonToEdit.getTags(), dateSlotList);","lastModifiedDate":"2022-10-27"},{"lineNumber":235,"author":{"gitId":"xhphoong"},"content":"        model.setPerson(confirmedPersonToEdit, newPerson);","lastModifiedDate":"2022-10-27"},{"lineNumber":236,"author":{"gitId":"xhphoong"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-27"},{"lineNumber":237,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":238,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":239,"author":{"gitId":"xhphoong"},"content":"    private void editNurse(Model model, Person nurse, List\u003cHomeVisit\u003e homeVisitList,","lastModifiedDate":"2022-10-27"},{"lineNumber":240,"author":{"gitId":"xhphoong"},"content":"            List\u003cDate\u003e fullyScheduledDateList) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":241,"author":{"gitId":"xhphoong"},"content":"        Uid uid \u003d nurse.getUid();","lastModifiedDate":"2022-10-27"},{"lineNumber":242,"author":{"gitId":"xhphoong"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2022-10-27"},{"lineNumber":243,"author":{"gitId":"xhphoong"},"content":"        editPersonDescriptor.setHomeVisits(homeVisitList);","lastModifiedDate":"2022-10-27"},{"lineNumber":244,"author":{"gitId":"xhphoong"},"content":"        editPersonDescriptor.setFullyScheduledDates(fullyScheduledDateList);","lastModifiedDate":"2022-10-27"},{"lineNumber":245,"author":{"gitId":"xhphoong"},"content":"        EditCommand editCommand1 \u003d new EditCommand(uid, editPersonDescriptor);","lastModifiedDate":"2022-10-27"},{"lineNumber":246,"author":{"gitId":"xhphoong"},"content":"        editCommand1.execute(model);","lastModifiedDate":"2022-10-27"},{"lineNumber":247,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":248,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":249,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":250,"author":{"gitId":"xhphoong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-27"},{"lineNumber":251,"author":{"gitId":"xhphoong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-27"},{"lineNumber":252,"author":{"gitId":"xhphoong"},"content":"                || (other instanceof DeassignCommand // instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":253,"author":{"gitId":"xhphoong"},"content":"                        \u0026\u0026 uid.equals(((DeassignCommand) other).uid)","lastModifiedDate":"2022-10-27"},{"lineNumber":254,"author":{"gitId":"xhphoong"},"content":"                        \u0026\u0026 dateslotOrHomevisitIndex.equals(((DeassignCommand) other).dateslotOrHomevisitIndex));","lastModifiedDate":"2022-10-27"},{"lineNumber":255,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":256,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":257,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"xhphoong":246,"johnbenedictyan":11}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateSlot;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.HomeVisit;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Nurse;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":" * Deletes a patient/nurse identified using it\u0027s displayed index from the","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":" * address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"            + \": Deletes the patient/nurse identified by the unique id number used in the displayed person list.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"            + \"Parameters: UID (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_UID + \" 1\";","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted %1$s: %2$s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"    private final Uid targetUid;","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"    public DeleteCommand(Uid targetUid) {","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"        this.targetUid \u003d targetUid;","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"        Optional\u003cPerson\u003e personToDelete \u003d lastShownList.stream().filter(p -\u003e p.getUid().equals(targetUid)).findFirst();","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"        if (!personToDelete.isPresent()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_UID);","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"        Person confirmedPersonToDelete \u003d personToDelete.get();","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"        Boolean haveDeleted \u003d false;","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"        Boolean haveUnmark \u003d false;","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"        if (confirmedPersonToDelete instanceof Patient) {","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"            haveDeleted \u003d deleteRespectiveHomeVisit(model, confirmedPersonToDelete, lastShownList);","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"            haveUnmark \u003d unmarkRespectiveDateSlot(model, confirmedPersonToDelete, lastShownList);","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"        String extraMesssage \u003d \"\";","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"        if (haveDeleted) {","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"            extraMesssage \u003d \"The respective home visit has also been deleted.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"        if (haveUnmark) {","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"            extraMesssage \u003d \"The respective date slot has also been unmarked.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"        model.deletePerson(confirmedPersonToDelete);","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"                confirmedPersonToDelete.getCategoryIndicator(), confirmedPersonToDelete) + \" \" + extraMesssage);","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"                        \u0026\u0026 targetUid.equals(((DeleteCommand) other).targetUid)); // state check","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"    private Boolean deleteRespectiveHomeVisit(Model model, Person person, List\u003cPerson\u003e personList)","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"            throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"        boolean hasDeleted \u003d false;","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"        List\u003cDateSlot\u003e dateSlotList \u003d ((Patient) person).getDatesSlots();","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"        if (dateSlotList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"            return hasDeleted;","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"            for (DateSlot dateSlot : dateSlotList) {","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"                if (dateSlot.getHasAssigned()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"                    removeHomeVisit(model, dateSlot, personList);","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"                    hasDeleted \u003d true;","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"xhphoong"},"content":"                }","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"        return hasDeleted;","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"    private Boolean unmarkRespectiveDateSlot(Model model, Person person, List\u003cPerson\u003e personList)","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"            throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"xhphoong"},"content":"        boolean hasUnmarked \u003d false;","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"        List\u003cHomeVisit\u003e homeVisitList \u003d ((Nurse) person).getHomeVisits();","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"        if (homeVisitList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"            return hasUnmarked;","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"            for (HomeVisit homevisit : homeVisitList) {","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"xhphoong"},"content":"                Long patientUidNo \u003d homevisit.getHomeVisitPatientUidNo();","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"                DateSlot dateSlot \u003d homevisit.getDateSlot();","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"xhphoong"},"content":"                unmarkDateSlot(model, dateSlot, patientUidNo, personList);","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"xhphoong"},"content":"                hasUnmarked \u003d true;","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"xhphoong"},"content":"        return hasUnmarked;","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"xhphoong"},"content":"    private void removeHomeVisit(Model model, DateSlot dateSlot, List\u003cPerson\u003e personList) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"xhphoong"},"content":"        Long nurseUidNo \u003d dateSlot.getNurseUidNo();","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"xhphoong"},"content":"        Person nurse \u003d personList.stream().filter(p -\u003e p.getUid().getUid().equals(nurseUidNo)).findFirst().get();","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"xhphoong"},"content":"        List\u003cHomeVisit\u003e nurseHomeVisitList \u003d ((Nurse) nurse).getHomeVisits();","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"xhphoong"},"content":"        List\u003cDate\u003e nurseFullyScheduledList \u003d ((Nurse) nurse).getFullyScheduledDates();","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"johnbenedictyan"},"content":"        List\u003cHomeVisit\u003e updatedHomeVisitList \u003d new ArrayList\u003c\u003e(nurseHomeVisitList);","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"johnbenedictyan"},"content":"        List\u003cDate\u003e updatedFullyScheduledList \u003d new ArrayList\u003c\u003e(nurseFullyScheduledList);","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"xhphoong"},"content":"        HomeVisit homeVisitToBeDeleted \u003d updatedHomeVisitList.stream().filter(","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"xhphoong"},"content":"                h -\u003e h.getDateSlot().getDateTime().equals(dateSlot.getDateTime())).findFirst().get();","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"xhphoong"},"content":"        updatedHomeVisitList.remove(homeVisitToBeDeleted);","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"xhphoong"},"content":"        Optional\u003cDate\u003e dateToBeDeleted \u003d updatedFullyScheduledList.stream().filter(","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"xhphoong"},"content":"                h -\u003e h.getDate().equals(dateSlot.getDate())).findFirst();","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"xhphoong"},"content":"        if (!dateToBeDeleted.isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"xhphoong"},"content":"            updatedFullyScheduledList.remove(dateToBeDeleted.get());","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"xhphoong"},"content":"        editNurse(model, nurse, updatedHomeVisitList, updatedFullyScheduledList);","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"xhphoong"},"content":"    private void unmarkDateSlot(Model model, DateSlot dateslot, Long patientUidNo, List\u003cPerson\u003e personList)","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"xhphoong"},"content":"            throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"xhphoong"},"content":"        Person patient \u003d personList.stream().filter(","lastModifiedDate":"2022-10-27"},{"lineNumber":140,"author":{"gitId":"xhphoong"},"content":"                p -\u003e p.getUid().getUid().equals(patientUidNo)).findFirst().get();","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"xhphoong"},"content":"        List\u003cDateSlot\u003e dateSlotList \u003d ((Patient) patient).getDatesSlots();","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"johnbenedictyan"},"content":"        List\u003cDateSlot\u003e updatedDateSlotList \u003d new ArrayList\u003c\u003e(dateSlotList);","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"xhphoong"},"content":"        DateSlot dateSlotToBeUnmarked \u003d updatedDateSlotList.stream().filter(","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"xhphoong"},"content":"                d -\u003e d.getDateTime().equals(dateslot.getDateTime())).findFirst().get();","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"xhphoong"},"content":"        dateSlotToBeUnmarked.unmark();","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"xhphoong"},"content":"        editPatient(model, patient, updatedDateSlotList);","lastModifiedDate":"2022-10-27"},{"lineNumber":147,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":149,"author":{"gitId":"johnbenedictyan"},"content":"    private void editPatient(Model model, Person patient, List\u003cDateSlot\u003e dateSlotList) {","lastModifiedDate":"2022-10-28"},{"lineNumber":150,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":151,"author":{"gitId":"xhphoong"},"content":"        Uid uid \u003d patient.getUid();","lastModifiedDate":"2022-10-27"},{"lineNumber":152,"author":{"gitId":"xhphoong"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-27"},{"lineNumber":153,"author":{"gitId":"xhphoong"},"content":"        Optional\u003cPerson\u003e personToEdit \u003d lastShownList.stream().filter(p -\u003e p.getUid().equals(uid)).findFirst();","lastModifiedDate":"2022-10-27"},{"lineNumber":154,"author":{"gitId":"xhphoong"},"content":"        Person confirmedPersonToEdit \u003d personToEdit.get();","lastModifiedDate":"2022-10-27"},{"lineNumber":155,"author":{"gitId":"xhphoong"},"content":"        Person newPerson \u003d new Patient(confirmedPersonToEdit.getUid(), confirmedPersonToEdit.getName(),","lastModifiedDate":"2022-10-27"},{"lineNumber":156,"author":{"gitId":"xhphoong"},"content":"                confirmedPersonToEdit.getGender(), confirmedPersonToEdit.getPhone(), confirmedPersonToEdit.getEmail(),","lastModifiedDate":"2022-10-27"},{"lineNumber":157,"author":{"gitId":"xhphoong"},"content":"                confirmedPersonToEdit.getAddress(), confirmedPersonToEdit.getTags(), dateSlotList);","lastModifiedDate":"2022-10-27"},{"lineNumber":158,"author":{"gitId":"xhphoong"},"content":"        model.setPerson(confirmedPersonToEdit, newPerson);","lastModifiedDate":"2022-10-27"},{"lineNumber":159,"author":{"gitId":"xhphoong"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-27"},{"lineNumber":160,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":161,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":162,"author":{"gitId":"xhphoong"},"content":"    private void editNurse(Model model, Person nurse, List\u003cHomeVisit\u003e homeVisitList,","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"xhphoong"},"content":"            List\u003cDate\u003e fullyScheduledDateList) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"xhphoong"},"content":"        Uid uid \u003d nurse.getUid();","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"xhphoong"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2022-10-27"},{"lineNumber":166,"author":{"gitId":"xhphoong"},"content":"        editPersonDescriptor.setHomeVisits(homeVisitList);","lastModifiedDate":"2022-10-27"},{"lineNumber":167,"author":{"gitId":"xhphoong"},"content":"        editPersonDescriptor.setFullyScheduledDates(fullyScheduledDateList);","lastModifiedDate":"2022-10-27"},{"lineNumber":168,"author":{"gitId":"xhphoong"},"content":"        EditCommand editCommand1 \u003d new EditCommand(uid, editPersonDescriptor);","lastModifiedDate":"2022-10-27"},{"lineNumber":169,"author":{"gitId":"xhphoong"},"content":"        editCommand1.execute(model);","lastModifiedDate":"2022-10-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xhphoong":113,"johnbenedictyan":19,"-":39}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"mlzt2000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_SLOT;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_SLOT_INDEX;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"mlzt2000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"mlzt2000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNAVAILABLE_DATE;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNAVAILABLE_DATE_INDEX;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":18,"author":{"gitId":"mlzt2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"import seedu.address.commons.core.index.ReverseIndexComparator;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateSlot;","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"mlzt2000"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.HomeVisit;","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.NextOfKin;","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"mlzt2000"},"content":"import seedu.address.model.person.Nurse;","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"mlzt2000"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Physician;","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"mlzt2000"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the patient/nurse identified \"","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"            + \"by the unique id number used in the displayed person list.\"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"            + \"Parameters: UID (must be a positive integer) \"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"            + \"[\" + PREFIX_CATEGORY + \"CATEGORY] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"            + \"[\" + PREFIX_GENDER + \"GENDER] \"","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"            + \"Date and Slot are only applicable to patient and Date and Slot Index is used to indicate\"","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"            + \"the specific date and slot to be edited. \\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"            + \"[\" + PREFIX_DATE_AND_SLOT + \"DATE_AND_SLOT] \\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"            + \"[\" + PREFIX_DATE_AND_SLOT_INDEX + \"DATE_AND_SLOT_INDEX \\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"            + \"Unavailable Date are only applicable to nurse and Unavailable Date Index is used to indicate\"","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"            + \"the specific unavailable date to be edited. \\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"            + \"[\" + PREFIX_UNAVAILABLE_DATE + \"UNAVAILABLE_DATE] \\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"            + \"[\" + PREFIX_UNAVAILABLE_DATE_INDEX + \"UNAVAILABLE_DATE_INDEX] \\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"            + \"Example: \" + COMMAND_WORD + PREFIX_UID + \" 1 \"","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited %1$s: %2$s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This %1$s already exists in the address book.\";","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_NURSE_INVALID_DATESLOT_EDIT \u003d \"This uid gives a nurse \"","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"            + \"and there are no dates and slot (and their indexes) for nurse. \"","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"            + \"Please remove the date and slot field and its index field.\";","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_PATIENT_INVALID_UNAVAILABLE_DATE_EDIT \u003d \"This uid gives a patient \"","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"            + \"and there are no unavailable dates (and their indexes) for patient. \"","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"            + \"Please remove the unavailable dates field and its index field.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_INVALID_NUMBERS_OF_DATESLOT_AND_DATESLOTINDEX \u003d \"The dateSlot index \"","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"            + \"provided is more than the dateSlot provided.\" + \"Please remove the dateSlot index or add more dateSlot.\";","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_OUT_OF_BOUND_DATESLOTINDEX \u003d \"The dateSlot index given is out of bound \"","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"            + \"of the existing list.\" + \"Please retype another index that is within the range or left it empty.\";","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_INVALID_NUMBERS_OF_UNAVAILABLEDATES_AND_UNAVAILABLEDATESINDEX \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"            \"The unavailable date index \" + \"provided is more than the unavailable date provided.\"","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"                    + \"Please remove the unavailable date index or add more unavailable date.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_OUT_OF_BOUND_UNAVAILABLEDATESINDEX \u003d \"The unavailable date index \"","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"            + \"given is out of bound of the existing list.\"","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"            + \"Please retype another index that is within the range or left it empty.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"    private final Uid targetUid;","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"johnbenedictyan"},"content":"     * @param targetUid            Uid of the person in the filtered person list to","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"johnbenedictyan"},"content":"     *                             edit","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"LolfoollorS"},"content":"     * @param editPersonDescriptor Details to edit the person with","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"xhphoong"},"content":"    public EditCommand(Uid targetUid, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(targetUid);","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"xhphoong"},"content":"        this.targetUid \u003d targetUid;","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"xhphoong"},"content":"        Optional\u003cPerson\u003e personToEdit \u003d lastShownList.stream().filter(p -\u003e p.getUid().equals(targetUid)).findFirst();","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"mlzt2000"},"content":"        if (personToEdit.isEmpty()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":126,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_UID);","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":129,"author":{"gitId":"xhphoong"},"content":"        Person confirmedPersonToEdit \u003d personToEdit.get();","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"xhphoong"},"content":"        boolean haveDatesSlots \u003d editPersonDescriptor.getDatesSlots().isPresent();","lastModifiedDate":"2022-10-23"},{"lineNumber":132,"author":{"gitId":"xhphoong"},"content":"        boolean haveDateSlotIndexes \u003d editPersonDescriptor.getDateSlotIndexes().isPresent();","lastModifiedDate":"2022-10-23"},{"lineNumber":133,"author":{"gitId":"xhphoong"},"content":"        boolean haveUnavailableDates \u003d editPersonDescriptor.getUnavailableDates().isPresent();","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"xhphoong"},"content":"        boolean haveUnavailableDateIndexes \u003d editPersonDescriptor.getDateIndexes().isPresent();","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"xhphoong"},"content":"        boolean isNurse \u003d editPersonDescriptor.getCategory().equals(\"N\") || confirmedPersonToEdit instanceof Nurse;","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"xhphoong"},"content":"        if (isNurse) {","lastModifiedDate":"2022-10-23"},{"lineNumber":138,"author":{"gitId":"xhphoong"},"content":"            if (haveDateSlotIndexes || haveDatesSlots) {","lastModifiedDate":"2022-10-23"},{"lineNumber":139,"author":{"gitId":"xhphoong"},"content":"                throw new CommandException(MESSAGE_NURSE_INVALID_DATESLOT_EDIT);","lastModifiedDate":"2022-10-23"},{"lineNumber":140,"author":{"gitId":"mlzt2000"},"content":"            }","lastModifiedDate":"2022-10-15"},{"lineNumber":141,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"xhphoong"},"content":"            if (haveUnavailableDates || haveUnavailableDateIndexes) {","lastModifiedDate":"2022-10-27"},{"lineNumber":143,"author":{"gitId":"xhphoong"},"content":"                throw new CommandException(MESSAGE_PATIENT_INVALID_UNAVAILABLE_DATE_EDIT);","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"mlzt2000"},"content":"            }","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"xhphoong"},"content":"        Person editedPerson \u003d createEditedPerson(model, lastShownList, confirmedPersonToEdit, editPersonDescriptor);","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":149,"author":{"gitId":"xhphoong"},"content":"        if (!confirmedPersonToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"xhphoong"},"content":"                    confirmedPersonToEdit.getCategoryIndicator()));","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":154,"author":{"gitId":"xhphoong"},"content":"        model.setPerson(confirmedPersonToEdit, editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":156,"author":{"gitId":"xhphoong"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"xhphoong"},"content":"                confirmedPersonToEdit.getCategoryIndicator(), editedPerson));","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"xhphoong"},"content":"    public Person createEditedPerson(Model model, List\u003cPerson\u003e personList,","lastModifiedDate":"2022-10-27"},{"lineNumber":166,"author":{"gitId":"xhphoong"},"content":"            Person personToEdit, EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2022-10-27"},{"lineNumber":167,"author":{"gitId":"xhphoong"},"content":"            throws CommandException {","lastModifiedDate":"2022-10-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"LolfoollorS"},"content":"        Category updatedCategory \u003d editPersonDescriptor.getCategory().orElse(personToEdit.getCategory());","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"xhphoong"},"content":"        Uid uid \u003d editPersonDescriptor.getUid().orElse(personToEdit.getUid());","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"xhphoong"},"content":"        Gender updatedGender \u003d editPersonDescriptor.getGender().orElse(personToEdit.getGender());","lastModifiedDate":"2022-10-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"johnbenedictyan"},"content":"        if (personToEdit instanceof Patient \u0026\u0026 updatedCategory.isPatient()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":180,"author":{"gitId":"yeehaoo"},"content":"            Optional\u003cPhysician\u003e updatedPhysician \u003d editPersonDescriptor.getPhysician()","lastModifiedDate":"2022-10-23"},{"lineNumber":181,"author":{"gitId":"yeehaoo"},"content":"                    .orElse(((Patient) personToEdit).getAttendingPhysician());","lastModifiedDate":"2022-10-23"},{"lineNumber":182,"author":{"gitId":"yeehaoo"},"content":"            Optional\u003cNextOfKin\u003e updatedNextOfKin \u003d editPersonDescriptor.getNextOfKin()","lastModifiedDate":"2022-10-23"},{"lineNumber":183,"author":{"gitId":"yeehaoo"},"content":"                    .orElse(((Patient) personToEdit).getNextOfKin());","lastModifiedDate":"2022-10-23"},{"lineNumber":184,"author":{"gitId":"xhphoong"},"content":"            List\u003cDateSlot\u003e originalDateSlot \u003d ((Patient) personToEdit).getDatesSlots();","lastModifiedDate":"2022-10-23"},{"lineNumber":185,"author":{"gitId":"xhphoong"},"content":"            Optional\u003cList\u003cDateSlot\u003e\u003e toBeUpdateDateSlot \u003d editPersonDescriptor.getDatesSlots();","lastModifiedDate":"2022-10-23"},{"lineNumber":186,"author":{"gitId":"xhphoong"},"content":"            Optional\u003cList\u003cIndex\u003e\u003e toBeUpdateDateSlotIndexes \u003d editPersonDescriptor.getDateSlotIndexes();","lastModifiedDate":"2022-10-23"},{"lineNumber":187,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":188,"author":{"gitId":"xhphoong"},"content":"            List\u003cDateSlot\u003e updatedDateSlot \u003d createEditedDateSlotList(originalDateSlot,","lastModifiedDate":"2022-10-23"},{"lineNumber":189,"author":{"gitId":"xhphoong"},"content":"                    toBeUpdateDateSlot, toBeUpdateDateSlotIndexes, model, personList);","lastModifiedDate":"2022-10-27"},{"lineNumber":190,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":191,"author":{"gitId":"xhphoong"},"content":"            return new Patient(uid, updatedName, updatedGender, updatedPhone, updatedEmail,","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"xhphoong"},"content":"                    updatedAddress, updatedTags, updatedDateSlot,","lastModifiedDate":"2022-10-27"},{"lineNumber":193,"author":{"gitId":"yeehaoo"},"content":"                    updatedPhysician, updatedNextOfKin);","lastModifiedDate":"2022-10-20"},{"lineNumber":194,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":195,"author":{"gitId":"johnbenedictyan"},"content":"        } else if (updatedCategory.isPatient()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":196,"author":{"gitId":"yeehaoo"},"content":"            Optional\u003cPhysician\u003e updatedPhysician \u003d editPersonDescriptor.getPhysician()","lastModifiedDate":"2022-10-23"},{"lineNumber":197,"author":{"gitId":"yeehaoo"},"content":"                    .orElse(((Patient) personToEdit).getAttendingPhysician());","lastModifiedDate":"2022-10-23"},{"lineNumber":198,"author":{"gitId":"yeehaoo"},"content":"            Optional\u003cNextOfKin\u003e updatedNextOfKin \u003d editPersonDescriptor.getNextOfKin()","lastModifiedDate":"2022-10-23"},{"lineNumber":199,"author":{"gitId":"yeehaoo"},"content":"                    .orElse(((Patient) personToEdit).getNextOfKin());","lastModifiedDate":"2022-10-23"},{"lineNumber":200,"author":{"gitId":"xhphoong"},"content":"            List\u003cDateSlot\u003e updatedDateSlot \u003d editPersonDescriptor.getDatesSlots().orElse(null);","lastModifiedDate":"2022-10-23"},{"lineNumber":201,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":202,"author":{"gitId":"LolfoollorS"},"content":"            return new Patient(uid, updatedName, updatedGender, updatedPhone, updatedEmail,","lastModifiedDate":"2022-10-11"},{"lineNumber":203,"author":{"gitId":"xhphoong"},"content":"                    updatedAddress, updatedTags, updatedDateSlot,","lastModifiedDate":"2022-10-27"},{"lineNumber":204,"author":{"gitId":"yeehaoo"},"content":"                    updatedPhysician, updatedNextOfKin);","lastModifiedDate":"2022-10-20"},{"lineNumber":205,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":206,"author":{"gitId":"johnbenedictyan"},"content":"        } else if (personToEdit instanceof Nurse \u0026\u0026 updatedCategory.isNurse()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":207,"author":{"gitId":"xhphoong"},"content":"            List\u003cDate\u003e originalDate \u003d ((Nurse) personToEdit).getUnavailableDates();","lastModifiedDate":"2022-10-27"},{"lineNumber":208,"author":{"gitId":"xhphoong"},"content":"            Optional\u003cList\u003cDate\u003e\u003e toBeUpdateDate \u003d editPersonDescriptor.getUnavailableDates();","lastModifiedDate":"2022-10-27"},{"lineNumber":209,"author":{"gitId":"xhphoong"},"content":"            Optional\u003cList\u003cIndex\u003e\u003e toBeUpdateDateIndexes \u003d editPersonDescriptor.getDateIndexes();","lastModifiedDate":"2022-10-27"},{"lineNumber":210,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":211,"author":{"gitId":"xhphoong"},"content":"            List\u003cDate\u003e updatedUnavailableDate \u003d createEditedUnavailableDateList(originalDate, toBeUpdateDate,","lastModifiedDate":"2022-10-27"},{"lineNumber":212,"author":{"gitId":"xhphoong"},"content":"                    toBeUpdateDateIndexes, model, personList, personToEdit);","lastModifiedDate":"2022-10-27"},{"lineNumber":213,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":214,"author":{"gitId":"xhphoong"},"content":"            List\u003cDate\u003e updatedFullyScheduledDateList \u003d editPersonDescriptor.getFullyScheduledDates()","lastModifiedDate":"2022-10-27"},{"lineNumber":215,"author":{"gitId":"xhphoong"},"content":"                    .orElse(((Nurse) personToEdit).getFullyScheduledDates());","lastModifiedDate":"2022-10-27"},{"lineNumber":216,"author":{"gitId":"xhphoong"},"content":"            List\u003cHomeVisit\u003e updatedHomeVisitList \u003d editPersonDescriptor.getHomeVisits()","lastModifiedDate":"2022-10-27"},{"lineNumber":217,"author":{"gitId":"xhphoong"},"content":"                    .orElse(((Nurse) personToEdit).getHomeVisits());","lastModifiedDate":"2022-10-27"},{"lineNumber":218,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"xhphoong"},"content":"            return new Nurse(uid, updatedName, updatedGender, updatedPhone, updatedEmail, updatedAddress, updatedTags,","lastModifiedDate":"2022-10-27"},{"lineNumber":220,"author":{"gitId":"xhphoong"},"content":"                    updatedUnavailableDate, updatedHomeVisitList, updatedFullyScheduledDateList);","lastModifiedDate":"2022-10-27"},{"lineNumber":221,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":222,"author":{"gitId":"johnbenedictyan"},"content":"        } else if (updatedCategory.isNurse()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":223,"author":{"gitId":"xhphoong"},"content":"            List\u003cDate\u003e updatedUnavailableDate \u003d editPersonDescriptor.getUnavailableDates().orElse(null);","lastModifiedDate":"2022-10-27"},{"lineNumber":224,"author":{"gitId":"xhphoong"},"content":"            List\u003cHomeVisit\u003e updatedHomeVisitList \u003d editPersonDescriptor.getHomeVisits().orElse(null);","lastModifiedDate":"2022-10-27"},{"lineNumber":225,"author":{"gitId":"xhphoong"},"content":"            List\u003cDate\u003e updatedFullyScheduledDateList \u003d editPersonDescriptor.getFullyScheduledDates()","lastModifiedDate":"2022-10-27"},{"lineNumber":226,"author":{"gitId":"xhphoong"},"content":"                    .orElse(null);","lastModifiedDate":"2022-10-27"},{"lineNumber":227,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":228,"author":{"gitId":"xhphoong"},"content":"            return new Nurse(uid, updatedName, updatedGender, updatedPhone, updatedEmail, updatedAddress, updatedTags,","lastModifiedDate":"2022-10-27"},{"lineNumber":229,"author":{"gitId":"xhphoong"},"content":"                    updatedUnavailableDate, updatedHomeVisitList, updatedFullyScheduledDateList);","lastModifiedDate":"2022-10-27"},{"lineNumber":230,"author":{"gitId":"LolfoollorS"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":231,"author":{"gitId":"LolfoollorS"},"content":"            throw new IllegalArgumentException(Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":232,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"xhphoong"},"content":"    private List\u003cDateSlot\u003e createEditedDateSlotList(List\u003cDateSlot\u003e originalDateSlot,","lastModifiedDate":"2022-10-27"},{"lineNumber":236,"author":{"gitId":"xhphoong"},"content":"            Optional\u003cList\u003cDateSlot\u003e\u003e toBeUpdateDateSlots,","lastModifiedDate":"2022-10-23"},{"lineNumber":237,"author":{"gitId":"xhphoong"},"content":"            Optional\u003cList\u003cIndex\u003e\u003e toBeUpdateDateSlotsIndexes,","lastModifiedDate":"2022-10-27"},{"lineNumber":238,"author":{"gitId":"xhphoong"},"content":"            Model model, List\u003cPerson\u003e personList)","lastModifiedDate":"2022-10-27"},{"lineNumber":239,"author":{"gitId":"xhphoong"},"content":"            throws CommandException {","lastModifiedDate":"2022-10-13"},{"lineNumber":240,"author":{"gitId":"xhphoong"},"content":"        List\u003cDateSlot\u003e updatedDateSlot \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":241,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":242,"author":{"gitId":"xhphoong"},"content":"        boolean isDateSlotNull \u003d toBeUpdateDateSlots.equals(Optional.empty());","lastModifiedDate":"2022-10-23"},{"lineNumber":243,"author":{"gitId":"xhphoong"},"content":"        boolean isDateSlotIndexesNull \u003d toBeUpdateDateSlotsIndexes.equals(Optional.empty());","lastModifiedDate":"2022-10-23"},{"lineNumber":244,"author":{"gitId":"xhphoong"},"content":"        List\u003cDateSlot\u003e toBeUpdateDateSlot \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":245,"author":{"gitId":"xhphoong"},"content":"        List\u003cIndex\u003e toBeUpdateDateSlotIndexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":246,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":247,"author":{"gitId":"xhphoong"},"content":"        if (!isDateSlotNull) {","lastModifiedDate":"2022-10-23"},{"lineNumber":248,"author":{"gitId":"xhphoong"},"content":"            toBeUpdateDateSlot \u003d new ArrayList\u003c\u003e(toBeUpdateDateSlots.get());","lastModifiedDate":"2022-10-23"},{"lineNumber":249,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":250,"author":{"gitId":"xhphoong"},"content":"        if (!isDateSlotIndexesNull) {","lastModifiedDate":"2022-10-23"},{"lineNumber":251,"author":{"gitId":"xhphoong"},"content":"            toBeUpdateDateSlotIndexes \u003d new ArrayList\u003c\u003e(toBeUpdateDateSlotsIndexes.get());","lastModifiedDate":"2022-10-23"},{"lineNumber":252,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":253,"author":{"gitId":"xhphoong"},"content":"            // If the indexNo given is out of bound of the existing list -\u003e throw exception","lastModifiedDate":"2022-10-13"},{"lineNumber":254,"author":{"gitId":"xhphoong"},"content":"            for (Index indexNo : toBeUpdateDateSlotIndexes) {","lastModifiedDate":"2022-10-23"},{"lineNumber":255,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":256,"author":{"gitId":"xhphoong"},"content":"                if (indexNo.getZeroBased() \u003e\u003d originalDateSlot.size()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":257,"author":{"gitId":"xhphoong"},"content":"                    throw new CommandException(MESSAGE_OUT_OF_BOUND_DATESLOTINDEX);","lastModifiedDate":"2022-10-23"},{"lineNumber":258,"author":{"gitId":"xhphoong"},"content":"                }","lastModifiedDate":"2022-10-13"},{"lineNumber":259,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":260,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":261,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":262,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":263,"author":{"gitId":"xhphoong"},"content":"        boolean isDateSlotEmpty \u003d !isDateSlotNull \u0026\u0026 toBeUpdateDateSlot.isEmpty();","lastModifiedDate":"2022-10-23"},{"lineNumber":264,"author":{"gitId":"xhphoong"},"content":"        boolean isDateSlotIndexesEmpty \u003d !isDateSlotIndexesNull \u0026\u0026 toBeUpdateDateSlotIndexes.isEmpty();","lastModifiedDate":"2022-10-23"},{"lineNumber":265,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":266,"author":{"gitId":"xhphoong"},"content":"        // Deletes all the dateTime in the existing list","lastModifiedDate":"2022-10-13"},{"lineNumber":267,"author":{"gitId":"xhphoong"},"content":"        if ((isDateSlotNull \u0026\u0026 isDateSlotIndexesEmpty) || (isDateSlotIndexesNull \u0026\u0026 isDateSlotEmpty)","lastModifiedDate":"2022-10-23"},{"lineNumber":268,"author":{"gitId":"xhphoong"},"content":"                || (isDateSlotEmpty \u0026\u0026 isDateSlotIndexesEmpty)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":269,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":270,"author":{"gitId":"xhphoong"},"content":"            updatedDateSlot \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":271,"author":{"gitId":"xhphoong"},"content":"            deleteRespectiveHomeVisit(originalDateSlot, model, personList);","lastModifiedDate":"2022-10-27"},{"lineNumber":272,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":273,"author":{"gitId":"xhphoong"},"content":"            // Deletes the dateTime at specific index in the existing list","lastModifiedDate":"2022-10-13"},{"lineNumber":274,"author":{"gitId":"xhphoong"},"content":"        } else if ((isDateSlotNull || isDateSlotEmpty) \u0026\u0026 !isDateSlotIndexesEmpty) {","lastModifiedDate":"2022-10-23"},{"lineNumber":275,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":276,"author":{"gitId":"xhphoong"},"content":"            updatedDateSlot \u003d new ArrayList\u003c\u003e(originalDateSlot);","lastModifiedDate":"2022-10-23"},{"lineNumber":277,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":278,"author":{"gitId":"xhphoong"},"content":"            ReverseIndexComparator comp \u003d new ReverseIndexComparator();","lastModifiedDate":"2022-10-13"},{"lineNumber":279,"author":{"gitId":"xhphoong"},"content":"            toBeUpdateDateSlotIndexes.sort(comp);","lastModifiedDate":"2022-10-23"},{"lineNumber":280,"author":{"gitId":"xhphoong"},"content":"            for (Index index : toBeUpdateDateSlotIndexes) {","lastModifiedDate":"2022-10-23"},{"lineNumber":281,"author":{"gitId":"xhphoong"},"content":"                DateSlot dateSlotToBeDeleted \u003d updatedDateSlot.get(index.getZeroBased());","lastModifiedDate":"2022-10-27"},{"lineNumber":282,"author":{"gitId":"xhphoong"},"content":"                if (dateSlotToBeDeleted.getHasAssigned()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":283,"author":{"gitId":"xhphoong"},"content":"                    removeHomeVisit(model, dateSlotToBeDeleted, personList);","lastModifiedDate":"2022-10-27"},{"lineNumber":284,"author":{"gitId":"xhphoong"},"content":"                }","lastModifiedDate":"2022-10-27"},{"lineNumber":285,"author":{"gitId":"xhphoong"},"content":"                updatedDateSlot.remove(index.getZeroBased());","lastModifiedDate":"2022-10-23"},{"lineNumber":286,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":287,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":288,"author":{"gitId":"xhphoong"},"content":"            // Remain as original dateTime list, no changes made","lastModifiedDate":"2022-10-13"},{"lineNumber":289,"author":{"gitId":"xhphoong"},"content":"        } else if (isDateSlotNull \u0026\u0026 isDateSlotIndexesNull) {","lastModifiedDate":"2022-10-23"},{"lineNumber":290,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":291,"author":{"gitId":"xhphoong"},"content":"            updatedDateSlot \u003d new ArrayList\u003c\u003e(originalDateSlot);","lastModifiedDate":"2022-10-23"},{"lineNumber":292,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":293,"author":{"gitId":"xhphoong"},"content":"            // Add the given dateTime to the existing list","lastModifiedDate":"2022-10-13"},{"lineNumber":294,"author":{"gitId":"xhphoong"},"content":"        } else if (!isDateSlotEmpty \u0026\u0026 (isDateSlotIndexesNull || isDateSlotIndexesEmpty)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":295,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":296,"author":{"gitId":"xhphoong"},"content":"            updatedDateSlot \u003d new ArrayList\u003c\u003e(originalDateSlot);","lastModifiedDate":"2022-10-23"},{"lineNumber":297,"author":{"gitId":"johnbenedictyan"},"content":"            updatedDateSlot.addAll(toBeUpdateDateSlot);","lastModifiedDate":"2022-10-28"},{"lineNumber":298,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":299,"author":{"gitId":"johnbenedictyan"},"content":"            // Change the dateTime at the specific index in the existing list to the given","lastModifiedDate":"2022-10-28"},{"lineNumber":300,"author":{"gitId":"johnbenedictyan"},"content":"            // dateTime","lastModifiedDate":"2022-10-28"},{"lineNumber":301,"author":{"gitId":"xhphoong"},"content":"            // If index given more than date time given -\u003e throws exception","lastModifiedDate":"2022-10-13"},{"lineNumber":302,"author":{"gitId":"johnbenedictyan"},"content":"            // If date time given more than index given -\u003e the extra date time will be added","lastModifiedDate":"2022-10-28"},{"lineNumber":303,"author":{"gitId":"johnbenedictyan"},"content":"            // to the existing list","lastModifiedDate":"2022-10-28"},{"lineNumber":304,"author":{"gitId":"xhphoong"},"content":"        } else if (!isDateSlotEmpty \u0026\u0026 !isDateSlotIndexesEmpty) {","lastModifiedDate":"2022-10-23"},{"lineNumber":305,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":306,"author":{"gitId":"xhphoong"},"content":"            updatedDateSlot \u003d new ArrayList\u003c\u003e(originalDateSlot);","lastModifiedDate":"2022-10-23"},{"lineNumber":307,"author":{"gitId":"xhphoong"},"content":"            if (toBeUpdateDateSlot.size() \u003c toBeUpdateDateSlotIndexes.size()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":308,"author":{"gitId":"xhphoong"},"content":"                throw new CommandException(MESSAGE_INVALID_NUMBERS_OF_DATESLOT_AND_DATESLOTINDEX);","lastModifiedDate":"2022-10-23"},{"lineNumber":309,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":310,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":311,"author":{"gitId":"xhphoong"},"content":"            for (int i \u003d 0; i \u003c toBeUpdateDateSlotIndexes.size(); i++) {","lastModifiedDate":"2022-10-23"},{"lineNumber":312,"author":{"gitId":"xhphoong"},"content":"                int indexNoToBeUpdated \u003d toBeUpdateDateSlotIndexes.get(i).getZeroBased();","lastModifiedDate":"2022-10-23"},{"lineNumber":313,"author":{"gitId":"xhphoong"},"content":"                DateSlot dateSlotToBeUpdated \u003d toBeUpdateDateSlot.get(i);","lastModifiedDate":"2022-10-23"},{"lineNumber":314,"author":{"gitId":"xhphoong"},"content":"                DateSlot dateSlotToBeDeleted \u003d updatedDateSlot.get(indexNoToBeUpdated);","lastModifiedDate":"2022-10-27"},{"lineNumber":315,"author":{"gitId":"xhphoong"},"content":"                if (dateSlotToBeDeleted.getHasAssigned()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":316,"author":{"gitId":"xhphoong"},"content":"                    removeHomeVisit(model, dateSlotToBeDeleted, personList);","lastModifiedDate":"2022-10-27"},{"lineNumber":317,"author":{"gitId":"xhphoong"},"content":"                }","lastModifiedDate":"2022-10-27"},{"lineNumber":318,"author":{"gitId":"xhphoong"},"content":"                updatedDateSlot.set(indexNoToBeUpdated, dateSlotToBeUpdated);","lastModifiedDate":"2022-10-23"},{"lineNumber":319,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":320,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":321,"author":{"gitId":"xhphoong"},"content":"            if (toBeUpdateDateSlot.size() \u003e toBeUpdateDateSlotIndexes.size()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":322,"author":{"gitId":"xhphoong"},"content":"                for (int i \u003d toBeUpdateDateSlotIndexes.size(); i \u003c toBeUpdateDateSlot.size(); i++) {","lastModifiedDate":"2022-10-23"},{"lineNumber":323,"author":{"gitId":"xhphoong"},"content":"                    updatedDateSlot.add(toBeUpdateDateSlot.get(i));","lastModifiedDate":"2022-10-23"},{"lineNumber":324,"author":{"gitId":"xhphoong"},"content":"                }","lastModifiedDate":"2022-10-13"},{"lineNumber":325,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":326,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":327,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":328,"author":{"gitId":"xhphoong"},"content":"        return updatedDateSlot;","lastModifiedDate":"2022-10-23"},{"lineNumber":329,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":330,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":331,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":332,"author":{"gitId":"xhphoong"},"content":"    private List\u003cDate\u003e createEditedUnavailableDateList(List\u003cDate\u003e originalDate,","lastModifiedDate":"2022-10-27"},{"lineNumber":333,"author":{"gitId":"xhphoong"},"content":"            Optional\u003cList\u003cDate\u003e\u003e toBeUpdateDates,","lastModifiedDate":"2022-10-27"},{"lineNumber":334,"author":{"gitId":"xhphoong"},"content":"            Optional\u003cList\u003cIndex\u003e\u003e toBeUpdateDateIndexes,","lastModifiedDate":"2022-10-27"},{"lineNumber":335,"author":{"gitId":"xhphoong"},"content":"            Model model, List\u003cPerson\u003e personList, Person nurse)","lastModifiedDate":"2022-10-27"},{"lineNumber":336,"author":{"gitId":"xhphoong"},"content":"            throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":337,"author":{"gitId":"xhphoong"},"content":"        List\u003cDate\u003e updatedDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":338,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":339,"author":{"gitId":"xhphoong"},"content":"        boolean isDateNull \u003d toBeUpdateDates.equals(Optional.empty());","lastModifiedDate":"2022-10-27"},{"lineNumber":340,"author":{"gitId":"xhphoong"},"content":"        boolean isDateIndexesNull \u003d toBeUpdateDateIndexes.equals(Optional.empty());","lastModifiedDate":"2022-10-27"},{"lineNumber":341,"author":{"gitId":"xhphoong"},"content":"        List\u003cDate\u003e toBeUpdateDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":342,"author":{"gitId":"xhphoong"},"content":"        List\u003cIndex\u003e toBeUpdateDateIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":343,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":344,"author":{"gitId":"xhphoong"},"content":"        if (!isDateNull) {","lastModifiedDate":"2022-10-27"},{"lineNumber":345,"author":{"gitId":"xhphoong"},"content":"            toBeUpdateDate \u003d new ArrayList\u003c\u003e(toBeUpdateDates.get());","lastModifiedDate":"2022-10-27"},{"lineNumber":346,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":347,"author":{"gitId":"xhphoong"},"content":"        if (!isDateIndexesNull) {","lastModifiedDate":"2022-10-27"},{"lineNumber":348,"author":{"gitId":"xhphoong"},"content":"            toBeUpdateDateIndex \u003d new ArrayList\u003c\u003e(toBeUpdateDateIndexes.get());","lastModifiedDate":"2022-10-27"},{"lineNumber":349,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":350,"author":{"gitId":"xhphoong"},"content":"            // If the indexNo given is out of bound of the existing list -\u003e throw exception","lastModifiedDate":"2022-10-27"},{"lineNumber":351,"author":{"gitId":"xhphoong"},"content":"            for (Index indexNo : toBeUpdateDateIndex) {","lastModifiedDate":"2022-10-27"},{"lineNumber":352,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":353,"author":{"gitId":"xhphoong"},"content":"                if (indexNo.getZeroBased() \u003e\u003d originalDate.size()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":354,"author":{"gitId":"xhphoong"},"content":"                    throw new CommandException(MESSAGE_OUT_OF_BOUND_DATESLOTINDEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":355,"author":{"gitId":"xhphoong"},"content":"                }","lastModifiedDate":"2022-10-27"},{"lineNumber":356,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":357,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":358,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":359,"author":{"gitId":"xhphoong"},"content":"        boolean isDateEmpty \u003d !isDateNull \u0026\u0026 toBeUpdateDate.isEmpty();","lastModifiedDate":"2022-10-27"},{"lineNumber":360,"author":{"gitId":"xhphoong"},"content":"        boolean isDateIndexesEmpty \u003d !isDateIndexesNull \u0026\u0026 toBeUpdateDateIndex.isEmpty();","lastModifiedDate":"2022-10-27"},{"lineNumber":361,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":362,"author":{"gitId":"xhphoong"},"content":"        // Deletes all the date in the existing list","lastModifiedDate":"2022-10-27"},{"lineNumber":363,"author":{"gitId":"xhphoong"},"content":"        if ((isDateNull \u0026\u0026 isDateIndexesEmpty) || (isDateIndexesNull \u0026\u0026 isDateEmpty)","lastModifiedDate":"2022-10-27"},{"lineNumber":364,"author":{"gitId":"xhphoong"},"content":"                || (isDateEmpty \u0026\u0026 isDateIndexesEmpty)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":365,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":366,"author":{"gitId":"xhphoong"},"content":"            updatedDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":367,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":368,"author":{"gitId":"xhphoong"},"content":"            // Deletes the date at specific index in the existing list","lastModifiedDate":"2022-10-27"},{"lineNumber":369,"author":{"gitId":"xhphoong"},"content":"        } else if ((isDateNull || isDateEmpty) \u0026\u0026 !isDateIndexesEmpty) {","lastModifiedDate":"2022-10-27"},{"lineNumber":370,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":371,"author":{"gitId":"xhphoong"},"content":"            updatedDate \u003d new ArrayList\u003c\u003e(originalDate);","lastModifiedDate":"2022-10-27"},{"lineNumber":372,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":373,"author":{"gitId":"xhphoong"},"content":"            ReverseIndexComparator comp \u003d new ReverseIndexComparator();","lastModifiedDate":"2022-10-27"},{"lineNumber":374,"author":{"gitId":"xhphoong"},"content":"            toBeUpdateDateIndex.sort(comp);","lastModifiedDate":"2022-10-27"},{"lineNumber":375,"author":{"gitId":"xhphoong"},"content":"            for (Index index : toBeUpdateDateIndex) {","lastModifiedDate":"2022-10-27"},{"lineNumber":376,"author":{"gitId":"xhphoong"},"content":"                updatedDate.remove(index.getZeroBased());","lastModifiedDate":"2022-10-27"},{"lineNumber":377,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":378,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":379,"author":{"gitId":"xhphoong"},"content":"            // Remain as original date list, no changes made","lastModifiedDate":"2022-10-27"},{"lineNumber":380,"author":{"gitId":"xhphoong"},"content":"        } else if (isDateNull \u0026\u0026 isDateIndexesNull) {","lastModifiedDate":"2022-10-27"},{"lineNumber":381,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":382,"author":{"gitId":"xhphoong"},"content":"            updatedDate \u003d new ArrayList\u003c\u003e(originalDate);","lastModifiedDate":"2022-10-27"},{"lineNumber":383,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":384,"author":{"gitId":"xhphoong"},"content":"            // Add the given date to the existing list","lastModifiedDate":"2022-10-27"},{"lineNumber":385,"author":{"gitId":"xhphoong"},"content":"        } else if (!isDateEmpty \u0026\u0026 (isDateIndexesNull || isDateIndexesEmpty)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":386,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":387,"author":{"gitId":"xhphoong"},"content":"            updatedDate \u003d new ArrayList\u003c\u003e(originalDate);","lastModifiedDate":"2022-10-27"},{"lineNumber":388,"author":{"gitId":"xhphoong"},"content":"            for (Date date : toBeUpdateDate) {","lastModifiedDate":"2022-10-27"},{"lineNumber":389,"author":{"gitId":"xhphoong"},"content":"                removeAndUnmarkRepectiveHomeVisitAndDateSlot(model, nurse, date, personList);","lastModifiedDate":"2022-10-27"},{"lineNumber":390,"author":{"gitId":"xhphoong"},"content":"                updatedDate.add(date);","lastModifiedDate":"2022-10-27"},{"lineNumber":391,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":392,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":393,"author":{"gitId":"xhphoong"},"content":"            // Change the date at the specific index in the existing list to the given date","lastModifiedDate":"2022-10-27"},{"lineNumber":394,"author":{"gitId":"xhphoong"},"content":"            // If index given more than date given -\u003e throws exception","lastModifiedDate":"2022-10-27"},{"lineNumber":395,"author":{"gitId":"johnbenedictyan"},"content":"            // If date given more than index given -\u003e the extra date will be added to the","lastModifiedDate":"2022-10-28"},{"lineNumber":396,"author":{"gitId":"johnbenedictyan"},"content":"            // existing list","lastModifiedDate":"2022-10-28"},{"lineNumber":397,"author":{"gitId":"xhphoong"},"content":"        } else if (!isDateEmpty \u0026\u0026 !isDateIndexesEmpty) {","lastModifiedDate":"2022-10-27"},{"lineNumber":398,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":399,"author":{"gitId":"xhphoong"},"content":"            updatedDate \u003d new ArrayList\u003c\u003e(originalDate);","lastModifiedDate":"2022-10-27"},{"lineNumber":400,"author":{"gitId":"xhphoong"},"content":"            if (toBeUpdateDate.size() \u003c toBeUpdateDateIndex.size()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":401,"author":{"gitId":"xhphoong"},"content":"                throw new CommandException(MESSAGE_INVALID_NUMBERS_OF_DATESLOT_AND_DATESLOTINDEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":402,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":403,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":404,"author":{"gitId":"xhphoong"},"content":"            for (int i \u003d 0; i \u003c toBeUpdateDateIndex.size(); i++) {","lastModifiedDate":"2022-10-27"},{"lineNumber":405,"author":{"gitId":"xhphoong"},"content":"                int indexNoToBeUpdated \u003d toBeUpdateDateIndex.get(i).getZeroBased();","lastModifiedDate":"2022-10-27"},{"lineNumber":406,"author":{"gitId":"xhphoong"},"content":"                Date dateToBeUpdated \u003d toBeUpdateDate.get(i);","lastModifiedDate":"2022-10-27"},{"lineNumber":407,"author":{"gitId":"xhphoong"},"content":"                removeAndUnmarkRepectiveHomeVisitAndDateSlot(model, nurse, dateToBeUpdated, personList);","lastModifiedDate":"2022-10-27"},{"lineNumber":408,"author":{"gitId":"xhphoong"},"content":"                updatedDate.set(indexNoToBeUpdated, dateToBeUpdated);","lastModifiedDate":"2022-10-27"},{"lineNumber":409,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":410,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":411,"author":{"gitId":"xhphoong"},"content":"            if (toBeUpdateDate.size() \u003e toBeUpdateDateIndex.size()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":412,"author":{"gitId":"xhphoong"},"content":"                for (int i \u003d toBeUpdateDateIndex.size(); i \u003c toBeUpdateDate.size(); i++) {","lastModifiedDate":"2022-10-27"},{"lineNumber":413,"author":{"gitId":"xhphoong"},"content":"                    removeAndUnmarkRepectiveHomeVisitAndDateSlot(model, nurse, toBeUpdateDate.get(i), personList);","lastModifiedDate":"2022-10-27"},{"lineNumber":414,"author":{"gitId":"xhphoong"},"content":"                    updatedDate.add(toBeUpdateDate.get(i));","lastModifiedDate":"2022-10-27"},{"lineNumber":415,"author":{"gitId":"xhphoong"},"content":"                }","lastModifiedDate":"2022-10-27"},{"lineNumber":416,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":417,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":418,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":419,"author":{"gitId":"xhphoong"},"content":"        return updatedDate;","lastModifiedDate":"2022-10-27"},{"lineNumber":420,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":421,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":422,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":423,"author":{"gitId":"xhphoong"},"content":"    private Boolean deleteRespectiveHomeVisit(List\u003cDateSlot\u003e dateSlotList, Model model, List\u003cPerson\u003e personList)","lastModifiedDate":"2022-10-27"},{"lineNumber":424,"author":{"gitId":"xhphoong"},"content":"            throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":425,"author":{"gitId":"johnbenedictyan"},"content":"        boolean hasDeleted \u003d false;","lastModifiedDate":"2022-10-28"},{"lineNumber":426,"author":{"gitId":"xhphoong"},"content":"        if (dateSlotList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-27"},{"lineNumber":427,"author":{"gitId":"xhphoong"},"content":"            return hasDeleted;","lastModifiedDate":"2022-10-27"},{"lineNumber":428,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":429,"author":{"gitId":"xhphoong"},"content":"            for (DateSlot dateSlot : dateSlotList) {","lastModifiedDate":"2022-10-27"},{"lineNumber":430,"author":{"gitId":"xhphoong"},"content":"                if (dateSlot.getHasAssigned()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":431,"author":{"gitId":"xhphoong"},"content":"                    removeHomeVisit(model, dateSlot, personList);","lastModifiedDate":"2022-10-27"},{"lineNumber":432,"author":{"gitId":"xhphoong"},"content":"                    hasDeleted \u003d true;","lastModifiedDate":"2022-10-27"},{"lineNumber":433,"author":{"gitId":"xhphoong"},"content":"                }","lastModifiedDate":"2022-10-27"},{"lineNumber":434,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":435,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":436,"author":{"gitId":"xhphoong"},"content":"        return hasDeleted;","lastModifiedDate":"2022-10-27"},{"lineNumber":437,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":438,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":439,"author":{"gitId":"xhphoong"},"content":"    private boolean unmarkRespectiveDateSlot(Model model, Person person, List\u003cPerson\u003e personList)","lastModifiedDate":"2022-10-27"},{"lineNumber":440,"author":{"gitId":"xhphoong"},"content":"            throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":441,"author":{"gitId":"xhphoong"},"content":"        List\u003cHomeVisit\u003e homeVisitList \u003d ((Nurse) person).getHomeVisits();","lastModifiedDate":"2022-10-27"},{"lineNumber":442,"author":{"gitId":"xhphoong"},"content":"        if (homeVisitList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-27"},{"lineNumber":443,"author":{"gitId":"xhphoong"},"content":"            return false;","lastModifiedDate":"2022-10-27"},{"lineNumber":444,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":445,"author":{"gitId":"xhphoong"},"content":"            for (HomeVisit homevisit : homeVisitList) {","lastModifiedDate":"2022-10-27"},{"lineNumber":446,"author":{"gitId":"xhphoong"},"content":"                Long patientUidNo \u003d homevisit.getHomeVisitPatientUidNo();","lastModifiedDate":"2022-10-27"},{"lineNumber":447,"author":{"gitId":"xhphoong"},"content":"                DateSlot dateSlot \u003d homevisit.getDateSlot();","lastModifiedDate":"2022-10-27"},{"lineNumber":448,"author":{"gitId":"xhphoong"},"content":"                unmarkDateSlot(model, dateSlot, patientUidNo, personList);","lastModifiedDate":"2022-10-27"},{"lineNumber":449,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":450,"author":{"gitId":"xhphoong"},"content":"            return true;","lastModifiedDate":"2022-10-27"},{"lineNumber":451,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":452,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":453,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":454,"author":{"gitId":"xhphoong"},"content":"    private void removeAndUnmarkRepectiveHomeVisitAndDateSlot(Model model, Person nurse,","lastModifiedDate":"2022-10-27"},{"lineNumber":455,"author":{"gitId":"xhphoong"},"content":"            Date unavailableDate, List\u003cPerson\u003e personList)","lastModifiedDate":"2022-10-27"},{"lineNumber":456,"author":{"gitId":"xhphoong"},"content":"            throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":457,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":458,"author":{"gitId":"xhphoong"},"content":"        List\u003cHomeVisit\u003e homeVisitList \u003d ((Nurse) nurse).getHomeVisits();","lastModifiedDate":"2022-10-27"},{"lineNumber":459,"author":{"gitId":"johnbenedictyan"},"content":"        List\u003cHomeVisit\u003e updatedHomeVisitList \u003d new ArrayList\u003c\u003e(homeVisitList);","lastModifiedDate":"2022-10-28"},{"lineNumber":460,"author":{"gitId":"xhphoong"},"content":"        List\u003cDate\u003e fullyScheduledList \u003d ((Nurse) nurse).getFullyScheduledDates();","lastModifiedDate":"2022-10-27"},{"lineNumber":461,"author":{"gitId":"johnbenedictyan"},"content":"        List\u003cDate\u003e updatedFullyScheduledList \u003d new ArrayList\u003c\u003e(fullyScheduledList);","lastModifiedDate":"2022-10-28"},{"lineNumber":462,"author":{"gitId":"xhphoong"},"content":"        for (HomeVisit homeVisit : homeVisitList) {","lastModifiedDate":"2022-10-27"},{"lineNumber":463,"author":{"gitId":"xhphoong"},"content":"            if (homeVisit.getDateSlot().getDate().equals(unavailableDate.getDate())) {","lastModifiedDate":"2022-10-27"},{"lineNumber":464,"author":{"gitId":"xhphoong"},"content":"                Long patientUid \u003d homeVisit.getHomeVisitPatientUidNo();","lastModifiedDate":"2022-10-27"},{"lineNumber":465,"author":{"gitId":"xhphoong"},"content":"                unmarkDateSlot(model, homeVisit.getDateSlot(), patientUid, personList);","lastModifiedDate":"2022-10-27"},{"lineNumber":466,"author":{"gitId":"xhphoong"},"content":"                HomeVisit homeVisitToBeDeleted \u003d updatedHomeVisitList.stream().filter(","lastModifiedDate":"2022-10-27"},{"lineNumber":467,"author":{"gitId":"xhphoong"},"content":"                        h -\u003e h.getDateSlot().getDateTime().equals(homeVisit.getDateSlot().getDateTime()))","lastModifiedDate":"2022-10-27"},{"lineNumber":468,"author":{"gitId":"xhphoong"},"content":"                        .findFirst().get();","lastModifiedDate":"2022-10-27"},{"lineNumber":469,"author":{"gitId":"xhphoong"},"content":"                updatedHomeVisitList.remove(homeVisitToBeDeleted);","lastModifiedDate":"2022-10-27"},{"lineNumber":470,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":471,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":472,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":473,"author":{"gitId":"xhphoong"},"content":"        fullyScheduledList.remove(unavailableDate);","lastModifiedDate":"2022-10-27"},{"lineNumber":474,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":475,"author":{"gitId":"xhphoong"},"content":"        editNurseForUnavailableDate(updatedHomeVisitList, updatedFullyScheduledList);","lastModifiedDate":"2022-10-27"},{"lineNumber":476,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":477,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":478,"author":{"gitId":"xhphoong"},"content":"    private void removeHomeVisit(Model model, DateSlot dateSlot, List\u003cPerson\u003e personList) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":479,"author":{"gitId":"xhphoong"},"content":"        Long nurseUidNo \u003d dateSlot.getNurseUidNo();","lastModifiedDate":"2022-10-27"},{"lineNumber":480,"author":{"gitId":"xhphoong"},"content":"        Person nurse \u003d personList.stream().filter(p -\u003e p.getUid().getUid().equals(nurseUidNo)).findFirst().get();","lastModifiedDate":"2022-10-27"},{"lineNumber":481,"author":{"gitId":"xhphoong"},"content":"        List\u003cHomeVisit\u003e nurseHomeVisitList \u003d ((Nurse) nurse).getHomeVisits();","lastModifiedDate":"2022-10-27"},{"lineNumber":482,"author":{"gitId":"xhphoong"},"content":"        List\u003cDate\u003e nurseFullyScheduledList \u003d ((Nurse) nurse).getFullyScheduledDates();","lastModifiedDate":"2022-10-27"},{"lineNumber":483,"author":{"gitId":"johnbenedictyan"},"content":"        List\u003cHomeVisit\u003e updatedHomeVisitList \u003d new ArrayList\u003c\u003e(nurseHomeVisitList);","lastModifiedDate":"2022-10-28"},{"lineNumber":484,"author":{"gitId":"johnbenedictyan"},"content":"        List\u003cDate\u003e updatedFullyScheduledList \u003d new ArrayList\u003c\u003e(nurseFullyScheduledList);","lastModifiedDate":"2022-10-28"},{"lineNumber":485,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":486,"author":{"gitId":"xhphoong"},"content":"        HomeVisit homeVisitToBeDeleted \u003d updatedHomeVisitList.stream().filter(","lastModifiedDate":"2022-10-27"},{"lineNumber":487,"author":{"gitId":"xhphoong"},"content":"                h -\u003e h.getDateSlot().getDateTime().equals(dateSlot.getDateTime())).findFirst().get();","lastModifiedDate":"2022-10-27"},{"lineNumber":488,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":489,"author":{"gitId":"xhphoong"},"content":"        updatedHomeVisitList.remove(homeVisitToBeDeleted);","lastModifiedDate":"2022-10-27"},{"lineNumber":490,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":491,"author":{"gitId":"xhphoong"},"content":"        Optional\u003cDate\u003e dateToBeDeleted \u003d updatedFullyScheduledList.stream().filter(","lastModifiedDate":"2022-10-27"},{"lineNumber":492,"author":{"gitId":"xhphoong"},"content":"                h -\u003e h.getDate().equals(dateSlot.getDate())).findFirst();","lastModifiedDate":"2022-10-27"},{"lineNumber":493,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":494,"author":{"gitId":"xhphoong"},"content":"        if (!dateToBeDeleted.isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":495,"author":{"gitId":"xhphoong"},"content":"            updatedFullyScheduledList.remove(dateToBeDeleted.get());","lastModifiedDate":"2022-10-27"},{"lineNumber":496,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":497,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":498,"author":{"gitId":"xhphoong"},"content":"        editNurse(model, nurse, updatedHomeVisitList, updatedFullyScheduledList);","lastModifiedDate":"2022-10-27"},{"lineNumber":499,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":500,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":501,"author":{"gitId":"xhphoong"},"content":"    private void unmarkDateSlot(Model model, DateSlot dateslot, Long patientUidNo, List\u003cPerson\u003e personList)","lastModifiedDate":"2022-10-27"},{"lineNumber":502,"author":{"gitId":"xhphoong"},"content":"            throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":503,"author":{"gitId":"xhphoong"},"content":"        Person patient \u003d personList.stream().filter(","lastModifiedDate":"2022-10-27"},{"lineNumber":504,"author":{"gitId":"xhphoong"},"content":"                p -\u003e p.getUid().getUid().equals(patientUidNo)).findFirst().get();","lastModifiedDate":"2022-10-27"},{"lineNumber":505,"author":{"gitId":"xhphoong"},"content":"        List\u003cDateSlot\u003e dateSlotList \u003d ((Patient) patient).getDatesSlots();","lastModifiedDate":"2022-10-27"},{"lineNumber":506,"author":{"gitId":"johnbenedictyan"},"content":"        List\u003cDateSlot\u003e updatedDateSlotList \u003d new ArrayList\u003c\u003e(dateSlotList);","lastModifiedDate":"2022-10-28"},{"lineNumber":507,"author":{"gitId":"xhphoong"},"content":"        DateSlot dateSlotToBeUnmarked \u003d updatedDateSlotList.stream().filter(","lastModifiedDate":"2022-10-27"},{"lineNumber":508,"author":{"gitId":"xhphoong"},"content":"                d -\u003e d.getDateTime().equals(dateslot.getDateTime())).findFirst().get();","lastModifiedDate":"2022-10-27"},{"lineNumber":509,"author":{"gitId":"xhphoong"},"content":"        dateSlotToBeUnmarked.unmark();","lastModifiedDate":"2022-10-27"},{"lineNumber":510,"author":{"gitId":"xhphoong"},"content":"        editPatient(model, patient, updatedDateSlotList);","lastModifiedDate":"2022-10-27"},{"lineNumber":511,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":512,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":513,"author":{"gitId":"johnbenedictyan"},"content":"    private void editPatient(Model model, Person patient, List\u003cDateSlot\u003e dateSlotList) {","lastModifiedDate":"2022-10-28"},{"lineNumber":514,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":515,"author":{"gitId":"xhphoong"},"content":"        Uid uid \u003d patient.getUid();","lastModifiedDate":"2022-10-27"},{"lineNumber":516,"author":{"gitId":"xhphoong"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-27"},{"lineNumber":517,"author":{"gitId":"xhphoong"},"content":"        Optional\u003cPerson\u003e personToEdit \u003d lastShownList.stream().filter(p -\u003e p.getUid().equals(uid)).findFirst();","lastModifiedDate":"2022-10-27"},{"lineNumber":518,"author":{"gitId":"xhphoong"},"content":"        Person confirmedPersonToEdit \u003d personToEdit.get();","lastModifiedDate":"2022-10-27"},{"lineNumber":519,"author":{"gitId":"xhphoong"},"content":"        Person newPerson \u003d new Patient(confirmedPersonToEdit.getUid(), confirmedPersonToEdit.getName(),","lastModifiedDate":"2022-10-27"},{"lineNumber":520,"author":{"gitId":"xhphoong"},"content":"                confirmedPersonToEdit.getGender(), confirmedPersonToEdit.getPhone(), confirmedPersonToEdit.getEmail(),","lastModifiedDate":"2022-10-27"},{"lineNumber":521,"author":{"gitId":"xhphoong"},"content":"                confirmedPersonToEdit.getAddress(), confirmedPersonToEdit.getTags(), dateSlotList);","lastModifiedDate":"2022-10-27"},{"lineNumber":522,"author":{"gitId":"xhphoong"},"content":"        model.setPerson(confirmedPersonToEdit, newPerson);","lastModifiedDate":"2022-10-27"},{"lineNumber":523,"author":{"gitId":"xhphoong"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-27"},{"lineNumber":524,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":525,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":526,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":527,"author":{"gitId":"xhphoong"},"content":"    private void editNurse(Model model, Person nurse, List\u003cHomeVisit\u003e homeVisitList,","lastModifiedDate":"2022-10-27"},{"lineNumber":528,"author":{"gitId":"xhphoong"},"content":"            List\u003cDate\u003e fullyScheduledDateList) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":529,"author":{"gitId":"xhphoong"},"content":"        Uid uid \u003d nurse.getUid();","lastModifiedDate":"2022-10-27"},{"lineNumber":530,"author":{"gitId":"xhphoong"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor1 \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2022-10-27"},{"lineNumber":531,"author":{"gitId":"xhphoong"},"content":"        editPersonDescriptor1.setHomeVisits(homeVisitList);","lastModifiedDate":"2022-10-27"},{"lineNumber":532,"author":{"gitId":"xhphoong"},"content":"        editPersonDescriptor1.setFullyScheduledDates(fullyScheduledDateList);","lastModifiedDate":"2022-10-27"},{"lineNumber":533,"author":{"gitId":"xhphoong"},"content":"        EditCommand editCommand1 \u003d new EditCommand(uid, editPersonDescriptor1);","lastModifiedDate":"2022-10-27"},{"lineNumber":534,"author":{"gitId":"xhphoong"},"content":"        editCommand1.execute(model);","lastModifiedDate":"2022-10-27"},{"lineNumber":535,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":536,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":537,"author":{"gitId":"johnbenedictyan"},"content":"    private void editNurseForUnavailableDate(List\u003cHomeVisit\u003e homeVisitList, List\u003cDate\u003e fullyScheduledDateList) {","lastModifiedDate":"2022-10-28"},{"lineNumber":538,"author":{"gitId":"xhphoong"},"content":"        this.editPersonDescriptor.setHomeVisits(homeVisitList);","lastModifiedDate":"2022-10-27"},{"lineNumber":539,"author":{"gitId":"xhphoong"},"content":"        this.editPersonDescriptor.setFullyScheduledDates(fullyScheduledDateList);","lastModifiedDate":"2022-10-27"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":542,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":543,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":544,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":545,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":546,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":549,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":550,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":551,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":552,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":554,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":555,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":556,"author":{"gitId":"xhphoong"},"content":"        return targetUid.equals(e.targetUid)","lastModifiedDate":"2022-10-10"},{"lineNumber":557,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":558,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":560,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":561,"author":{"gitId":"johnbenedictyan"},"content":"     * Stores the details to edit the person with. Each non-empty field value will","lastModifiedDate":"2022-10-04"},{"lineNumber":562,"author":{"gitId":"johnbenedictyan"},"content":"     * replace the","lastModifiedDate":"2022-10-04"},{"lineNumber":563,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":564,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":565,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":566,"author":{"gitId":"LolfoollorS"},"content":"        private Category category;","lastModifiedDate":"2022-10-09"},{"lineNumber":567,"author":{"gitId":"xhphoong"},"content":"        private Uid uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":568,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":569,"author":{"gitId":"xhphoong"},"content":"        private Gender gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":570,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":571,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":572,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":573,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":574,"author":{"gitId":"xhphoong"},"content":"        private List\u003cDateSlot\u003e datesSlots;","lastModifiedDate":"2022-10-23"},{"lineNumber":575,"author":{"gitId":"xhphoong"},"content":"        private List\u003cIndex\u003e dateSlotIndexes;","lastModifiedDate":"2022-10-23"},{"lineNumber":576,"author":{"gitId":"xhphoong"},"content":"        private List\u003cHomeVisit\u003e homeVisits;","lastModifiedDate":"2022-10-27"},{"lineNumber":577,"author":{"gitId":"xhphoong"},"content":"        private List\u003cDate\u003e unavailableDates;","lastModifiedDate":"2022-10-27"},{"lineNumber":578,"author":{"gitId":"xhphoong"},"content":"        private List\u003cIndex\u003e dateIndexes;","lastModifiedDate":"2022-10-27"},{"lineNumber":579,"author":{"gitId":"xhphoong"},"content":"        private List\u003cDate\u003e fullyScheduledDates;","lastModifiedDate":"2022-10-27"},{"lineNumber":580,"author":{"gitId":"yeehaoo"},"content":"        private Optional\u003cPhysician\u003e physician;","lastModifiedDate":"2022-10-20"},{"lineNumber":581,"author":{"gitId":"yeehaoo"},"content":"        private Optional\u003cNextOfKin\u003e nextOfKin;","lastModifiedDate":"2022-10-20"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":583,"author":{"gitId":"johnbenedictyan"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2022-10-04"},{"lineNumber":584,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":586,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":587,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":588,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":589,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":591,"author":{"gitId":"xhphoong"},"content":"            setCategory(toCopy.category);","lastModifiedDate":"2022-10-09"},{"lineNumber":592,"author":{"gitId":"xhphoong"},"content":"            setUid(toCopy.uid);","lastModifiedDate":"2022-10-10"},{"lineNumber":593,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":594,"author":{"gitId":"xhphoong"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2022-10-06"},{"lineNumber":595,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":596,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":597,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":598,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":599,"author":{"gitId":"xhphoong"},"content":"            setDatesSlots(toCopy.datesSlots);","lastModifiedDate":"2022-10-23"},{"lineNumber":600,"author":{"gitId":"xhphoong"},"content":"            setDateSlotIndexes(toCopy.dateSlotIndexes);","lastModifiedDate":"2022-10-23"},{"lineNumber":601,"author":{"gitId":"xhphoong"},"content":"            setHomeVisits(toCopy.homeVisits);","lastModifiedDate":"2022-10-27"},{"lineNumber":602,"author":{"gitId":"xhphoong"},"content":"            setUnavailableDates(toCopy.unavailableDates);","lastModifiedDate":"2022-10-27"},{"lineNumber":603,"author":{"gitId":"xhphoong"},"content":"            setDateIndexes(toCopy.dateIndexes);","lastModifiedDate":"2022-10-27"},{"lineNumber":604,"author":{"gitId":"xhphoong"},"content":"            setFullyScheduledDates(toCopy.fullyScheduledDates);","lastModifiedDate":"2022-10-27"},{"lineNumber":605,"author":{"gitId":"yeehaoo"},"content":"            setPhysician(toCopy.physician);","lastModifiedDate":"2022-10-20"},{"lineNumber":606,"author":{"gitId":"yeehaoo"},"content":"            setNextOfKin(toCopy.nextOfKin);","lastModifiedDate":"2022-10-20"},{"lineNumber":607,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":608,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":610,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":611,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":612,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":613,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":614,"author":{"gitId":"xhphoong"},"content":"            return CollectionUtil.isAnyNonNull(category, name, gender, phone, email, address,","lastModifiedDate":"2022-10-13"},{"lineNumber":615,"author":{"gitId":"xhphoong"},"content":"                    tags, datesSlots, dateSlotIndexes, unavailableDates, dateIndexes);","lastModifiedDate":"2022-10-27"},{"lineNumber":616,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":618,"author":{"gitId":"LolfoollorS"},"content":"        public Optional\u003cCategory\u003e getCategory() {","lastModifiedDate":"2022-10-09"},{"lineNumber":619,"author":{"gitId":"xhphoong"},"content":"            return Optional.ofNullable(category);","lastModifiedDate":"2022-10-09"},{"lineNumber":620,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":622,"author":{"gitId":"johnbenedictyan"},"content":"        public void setCategory(Category category) {","lastModifiedDate":"2022-10-28"},{"lineNumber":623,"author":{"gitId":"johnbenedictyan"},"content":"            this.category \u003d category;","lastModifiedDate":"2022-10-28"},{"lineNumber":624,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":625,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":626,"author":{"gitId":"johnbenedictyan"},"content":"        /**","lastModifiedDate":"2022-10-04"},{"lineNumber":627,"author":{"gitId":"johnbenedictyan"},"content":"         * @return the id","lastModifiedDate":"2022-10-04"},{"lineNumber":628,"author":{"gitId":"johnbenedictyan"},"content":"         */","lastModifiedDate":"2022-10-04"},{"lineNumber":629,"author":{"gitId":"xhphoong"},"content":"        public Optional\u003cUid\u003e getUid() {","lastModifiedDate":"2022-10-10"},{"lineNumber":630,"author":{"gitId":"xhphoong"},"content":"            return Optional.ofNullable(uid);","lastModifiedDate":"2022-10-10"},{"lineNumber":631,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":632,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":633,"author":{"gitId":"johnbenedictyan"},"content":"        /**","lastModifiedDate":"2022-10-28"},{"lineNumber":634,"author":{"gitId":"johnbenedictyan"},"content":"         * @param uid the id to set","lastModifiedDate":"2022-10-28"},{"lineNumber":635,"author":{"gitId":"johnbenedictyan"},"content":"         */","lastModifiedDate":"2022-10-28"},{"lineNumber":636,"author":{"gitId":"johnbenedictyan"},"content":"        public void setUid(Uid uid) {","lastModifiedDate":"2022-10-28"},{"lineNumber":637,"author":{"gitId":"johnbenedictyan"},"content":"            this.uid \u003d uid;","lastModifiedDate":"2022-10-28"},{"lineNumber":638,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":640,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":641,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":642,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":644,"author":{"gitId":"johnbenedictyan"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-10-28"},{"lineNumber":645,"author":{"gitId":"johnbenedictyan"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-10-28"},{"lineNumber":646,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":647,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":648,"author":{"gitId":"xhphoong"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2022-10-06"},{"lineNumber":649,"author":{"gitId":"xhphoong"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2022-10-06"},{"lineNumber":650,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":652,"author":{"gitId":"johnbenedictyan"},"content":"        public void setGender(Gender gender) {","lastModifiedDate":"2022-10-28"},{"lineNumber":653,"author":{"gitId":"johnbenedictyan"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2022-10-28"},{"lineNumber":654,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":656,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":657,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":658,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":660,"author":{"gitId":"johnbenedictyan"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2022-10-28"},{"lineNumber":661,"author":{"gitId":"johnbenedictyan"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2022-10-28"},{"lineNumber":662,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":664,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":665,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":666,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":668,"author":{"gitId":"johnbenedictyan"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2022-10-28"},{"lineNumber":669,"author":{"gitId":"johnbenedictyan"},"content":"            this.email \u003d email;","lastModifiedDate":"2022-10-28"},{"lineNumber":670,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":672,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":673,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":674,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":676,"author":{"gitId":"johnbenedictyan"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2022-10-28"},{"lineNumber":677,"author":{"gitId":"johnbenedictyan"},"content":"            this.address \u003d address;","lastModifiedDate":"2022-10-28"},{"lineNumber":678,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":680,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":681,"author":{"gitId":"johnbenedictyan"},"content":"         * Returns an unmodifiable tag set, which throws","lastModifiedDate":"2022-10-12"},{"lineNumber":682,"author":{"gitId":"johnbenedictyan"},"content":"         * {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-12"},{"lineNumber":683,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":684,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":685,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":686,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":687,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":688,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":690,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2022-10-09"},{"lineNumber":691,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-10-28"},{"lineNumber":692,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-28"},{"lineNumber":693,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2022-10-09"},{"lineNumber":694,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-28"},{"lineNumber":695,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-10-28"},{"lineNumber":696,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":698,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2022-10-09"},{"lineNumber":699,"author":{"gitId":"xhphoong"},"content":"         * Returns a dateSlot list","lastModifiedDate":"2022-10-23"},{"lineNumber":700,"author":{"gitId":"xhphoong"},"content":"         * Returns {@code Optional#empty()} if {@code dateSlots} is null.","lastModifiedDate":"2022-10-23"},{"lineNumber":701,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2022-10-09"},{"lineNumber":702,"author":{"gitId":"xhphoong"},"content":"        public Optional\u003cList\u003cDateSlot\u003e\u003e getDatesSlots() {","lastModifiedDate":"2022-10-23"},{"lineNumber":703,"author":{"gitId":"xhphoong"},"content":"            return (datesSlots !\u003d null) ? Optional.of(new ArrayList\u003cDateSlot\u003e(datesSlots)) : Optional.empty();","lastModifiedDate":"2022-10-23"},{"lineNumber":704,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":705,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":706,"author":{"gitId":"xhphoong"},"content":"        /**","lastModifiedDate":"2022-10-13"},{"lineNumber":707,"author":{"gitId":"johnbenedictyan"},"content":"         * Sets {@code datesSlots} to this object\u0027s {@code datesSlots}.","lastModifiedDate":"2022-10-28"},{"lineNumber":708,"author":{"gitId":"xhphoong"},"content":"         */","lastModifiedDate":"2022-10-13"},{"lineNumber":709,"author":{"gitId":"johnbenedictyan"},"content":"        public void setDatesSlots(List\u003cDateSlot\u003e datesSlots) {","lastModifiedDate":"2022-10-28"},{"lineNumber":710,"author":{"gitId":"johnbenedictyan"},"content":"            this.datesSlots \u003d (datesSlots !\u003d null) ? new ArrayList\u003cDateSlot\u003e(datesSlots) : null;","lastModifiedDate":"2022-10-28"},{"lineNumber":711,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":712,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":713,"author":{"gitId":"xhphoong"},"content":"        /**","lastModifiedDate":"2022-10-13"},{"lineNumber":714,"author":{"gitId":"xhphoong"},"content":"         * Returns a dateSlotIndexes list","lastModifiedDate":"2022-10-23"},{"lineNumber":715,"author":{"gitId":"xhphoong"},"content":"         * Returns {@code Optional#empty()} if {@code dateSlotIndexes} is null.","lastModifiedDate":"2022-10-23"},{"lineNumber":716,"author":{"gitId":"xhphoong"},"content":"         */","lastModifiedDate":"2022-10-13"},{"lineNumber":717,"author":{"gitId":"xhphoong"},"content":"        public Optional\u003cList\u003cIndex\u003e\u003e getDateSlotIndexes() {","lastModifiedDate":"2022-10-23"},{"lineNumber":718,"author":{"gitId":"xhphoong"},"content":"            return (dateSlotIndexes !\u003d null) ? Optional.of(new ArrayList\u003cIndex\u003e(dateSlotIndexes)) : Optional.empty();","lastModifiedDate":"2022-10-23"},{"lineNumber":719,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":720,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":721,"author":{"gitId":"xhphoong"},"content":"        /**","lastModifiedDate":"2022-10-27"},{"lineNumber":722,"author":{"gitId":"johnbenedictyan"},"content":"         * Sets {@code dateSlotIndexes} to this object\u0027s {@code dateSlotIndexes}.","lastModifiedDate":"2022-10-28"},{"lineNumber":723,"author":{"gitId":"xhphoong"},"content":"         */","lastModifiedDate":"2022-10-27"},{"lineNumber":724,"author":{"gitId":"johnbenedictyan"},"content":"        public void setDateSlotIndexes(List\u003cIndex\u003e dateSlotIndexes) {","lastModifiedDate":"2022-10-28"},{"lineNumber":725,"author":{"gitId":"johnbenedictyan"},"content":"            this.dateSlotIndexes \u003d (dateSlotIndexes !\u003d null) ? new ArrayList\u003cIndex\u003e(dateSlotIndexes) : null;","lastModifiedDate":"2022-10-28"},{"lineNumber":726,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":727,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":728,"author":{"gitId":"xhphoong"},"content":"        /**","lastModifiedDate":"2022-10-27"},{"lineNumber":729,"author":{"gitId":"xhphoong"},"content":"         * Returns a homeVisit list","lastModifiedDate":"2022-10-27"},{"lineNumber":730,"author":{"gitId":"xhphoong"},"content":"         * Returns {@code Optional#empty()} if {@code homeVisits} is null.","lastModifiedDate":"2022-10-27"},{"lineNumber":731,"author":{"gitId":"xhphoong"},"content":"         */","lastModifiedDate":"2022-10-27"},{"lineNumber":732,"author":{"gitId":"xhphoong"},"content":"        public Optional\u003cList\u003cHomeVisit\u003e\u003e getHomeVisits() {","lastModifiedDate":"2022-10-27"},{"lineNumber":733,"author":{"gitId":"xhphoong"},"content":"            return (homeVisits !\u003d null) ? Optional.of(new ArrayList\u003cHomeVisit\u003e(homeVisits)) : Optional.empty();","lastModifiedDate":"2022-10-27"},{"lineNumber":734,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":735,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":736,"author":{"gitId":"xhphoong"},"content":"        /**","lastModifiedDate":"2022-10-27"},{"lineNumber":737,"author":{"gitId":"johnbenedictyan"},"content":"         * Sets {@code homeVisits} to this object\u0027s {@code homeVisits}.","lastModifiedDate":"2022-10-28"},{"lineNumber":738,"author":{"gitId":"xhphoong"},"content":"         */","lastModifiedDate":"2022-10-27"},{"lineNumber":739,"author":{"gitId":"johnbenedictyan"},"content":"        public void setHomeVisits(List\u003cHomeVisit\u003e homeVisits) {","lastModifiedDate":"2022-10-28"},{"lineNumber":740,"author":{"gitId":"johnbenedictyan"},"content":"            this.homeVisits \u003d (homeVisits !\u003d null) ? new ArrayList\u003cHomeVisit\u003e(homeVisits) : null;","lastModifiedDate":"2022-10-28"},{"lineNumber":741,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":742,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":743,"author":{"gitId":"xhphoong"},"content":"        /**","lastModifiedDate":"2022-10-27"},{"lineNumber":744,"author":{"gitId":"xhphoong"},"content":"         * Returns a unavailableDate list","lastModifiedDate":"2022-10-27"},{"lineNumber":745,"author":{"gitId":"xhphoong"},"content":"         * Returns {@code Optional#empty()} if {@code unavailableDate} is null.","lastModifiedDate":"2022-10-27"},{"lineNumber":746,"author":{"gitId":"xhphoong"},"content":"         */","lastModifiedDate":"2022-10-27"},{"lineNumber":747,"author":{"gitId":"xhphoong"},"content":"        public Optional\u003cList\u003cDate\u003e\u003e getUnavailableDates() {","lastModifiedDate":"2022-10-27"},{"lineNumber":748,"author":{"gitId":"xhphoong"},"content":"            return (unavailableDates !\u003d null) ? Optional.of(new ArrayList\u003cDate\u003e(unavailableDates)) : Optional.empty();","lastModifiedDate":"2022-10-27"},{"lineNumber":749,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":750,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":751,"author":{"gitId":"xhphoong"},"content":"        /**","lastModifiedDate":"2022-10-27"},{"lineNumber":752,"author":{"gitId":"johnbenedictyan"},"content":"         * Sets {@code unavailableDate} to this object\u0027s {@code unavailableDates}.","lastModifiedDate":"2022-10-28"},{"lineNumber":753,"author":{"gitId":"xhphoong"},"content":"         */","lastModifiedDate":"2022-10-27"},{"lineNumber":754,"author":{"gitId":"johnbenedictyan"},"content":"        public void setUnavailableDates(List\u003cDate\u003e unavailableDates) {","lastModifiedDate":"2022-10-28"},{"lineNumber":755,"author":{"gitId":"johnbenedictyan"},"content":"            this.unavailableDates \u003d (unavailableDates !\u003d null) ? new ArrayList\u003cDate\u003e(unavailableDates) : null;","lastModifiedDate":"2022-10-28"},{"lineNumber":756,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":757,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":758,"author":{"gitId":"xhphoong"},"content":"        /**","lastModifiedDate":"2022-10-27"},{"lineNumber":759,"author":{"gitId":"xhphoong"},"content":"         * Returns a dateIndexes list","lastModifiedDate":"2022-10-27"},{"lineNumber":760,"author":{"gitId":"xhphoong"},"content":"         * Returns {@code Optional#empty()} if {@code dateIndexes} is null.","lastModifiedDate":"2022-10-27"},{"lineNumber":761,"author":{"gitId":"xhphoong"},"content":"         */","lastModifiedDate":"2022-10-27"},{"lineNumber":762,"author":{"gitId":"xhphoong"},"content":"        public Optional\u003cList\u003cIndex\u003e\u003e getDateIndexes() {","lastModifiedDate":"2022-10-27"},{"lineNumber":763,"author":{"gitId":"xhphoong"},"content":"            return (dateIndexes !\u003d null) ? Optional.of(new ArrayList\u003cIndex\u003e(dateIndexes)) : Optional.empty();","lastModifiedDate":"2022-10-27"},{"lineNumber":764,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":765,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":766,"author":{"gitId":"mlzt2000"},"content":"        /**","lastModifiedDate":"2022-10-15"},{"lineNumber":767,"author":{"gitId":"johnbenedictyan"},"content":"         * Sets {@code dateIndexes} to this object\u0027s {@code dateIndexes}.","lastModifiedDate":"2022-10-28"},{"lineNumber":768,"author":{"gitId":"mlzt2000"},"content":"         */","lastModifiedDate":"2022-10-15"},{"lineNumber":769,"author":{"gitId":"johnbenedictyan"},"content":"        public void setDateIndexes(List\u003cIndex\u003e dateIndexes) {","lastModifiedDate":"2022-10-28"},{"lineNumber":770,"author":{"gitId":"johnbenedictyan"},"content":"            this.dateIndexes \u003d (dateIndexes !\u003d null) ? new ArrayList\u003cIndex\u003e(dateIndexes) : null;","lastModifiedDate":"2022-10-28"},{"lineNumber":771,"author":{"gitId":"mlzt2000"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":772,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":773,"author":{"gitId":"mlzt2000"},"content":"        /**","lastModifiedDate":"2022-10-15"},{"lineNumber":774,"author":{"gitId":"xhphoong"},"content":"         * Returns a fullyScheduledlist","lastModifiedDate":"2022-10-27"},{"lineNumber":775,"author":{"gitId":"xhphoong"},"content":"         * Returns {@code Optional#empty()} if {@code fullyScheduledDates} is null.","lastModifiedDate":"2022-10-27"},{"lineNumber":776,"author":{"gitId":"mlzt2000"},"content":"         */","lastModifiedDate":"2022-10-15"},{"lineNumber":777,"author":{"gitId":"xhphoong"},"content":"        public Optional\u003cList\u003cDate\u003e\u003e getFullyScheduledDates() {","lastModifiedDate":"2022-10-27"},{"lineNumber":778,"author":{"gitId":"xhphoong"},"content":"            return (fullyScheduledDates !\u003d null) ? Optional.of(new ArrayList\u003cDate\u003e(fullyScheduledDates))","lastModifiedDate":"2022-10-27"},{"lineNumber":779,"author":{"gitId":"xhphoong"},"content":"                    : Optional.empty();","lastModifiedDate":"2022-10-27"},{"lineNumber":780,"author":{"gitId":"mlzt2000"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":781,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":782,"author":{"gitId":"yeehaoo"},"content":"        /**","lastModifiedDate":"2022-10-20"},{"lineNumber":783,"author":{"gitId":"johnbenedictyan"},"content":"         * Sets {@code fullyScheduledDates} to this object\u0027s {@code fullScheduledDates}.","lastModifiedDate":"2022-10-28"},{"lineNumber":784,"author":{"gitId":"yeehaoo"},"content":"         */","lastModifiedDate":"2022-10-20"},{"lineNumber":785,"author":{"gitId":"johnbenedictyan"},"content":"        public void setFullyScheduledDates(List\u003cDate\u003e fullyScheduledDates) {","lastModifiedDate":"2022-10-28"},{"lineNumber":786,"author":{"gitId":"johnbenedictyan"},"content":"            this.fullyScheduledDates \u003d (fullyScheduledDates !\u003d null) ? new ArrayList\u003cDate\u003e(fullyScheduledDates) : null;","lastModifiedDate":"2022-10-28"},{"lineNumber":787,"author":{"gitId":"yeehaoo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":788,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":789,"author":{"gitId":"yeehaoo"},"content":"        /**","lastModifiedDate":"2022-10-20"},{"lineNumber":790,"author":{"gitId":"yeehaoo"},"content":"         * Returns the attending physician","lastModifiedDate":"2022-10-20"},{"lineNumber":791,"author":{"gitId":"johnbenedictyan"},"content":"         *","lastModifiedDate":"2022-10-28"},{"lineNumber":792,"author":{"gitId":"yeehaoo"},"content":"         * @return {@code Optional#empty()} if {@code physician} is null.","lastModifiedDate":"2022-10-20"},{"lineNumber":793,"author":{"gitId":"yeehaoo"},"content":"         */","lastModifiedDate":"2022-10-20"},{"lineNumber":794,"author":{"gitId":"yeehaoo"},"content":"        public Optional\u003cOptional\u003cPhysician\u003e\u003e getPhysician() {","lastModifiedDate":"2022-10-20"},{"lineNumber":795,"author":{"gitId":"yeehaoo"},"content":"            return (physician !\u003d null) ? Optional.of(physician) : Optional.empty();","lastModifiedDate":"2022-10-20"},{"lineNumber":796,"author":{"gitId":"yeehaoo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":797,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":798,"author":{"gitId":"yeehaoo"},"content":"        /**","lastModifiedDate":"2022-10-20"},{"lineNumber":799,"author":{"gitId":"johnbenedictyan"},"content":"         * Sets {@code p} to this object\u0027s {@code physician}.","lastModifiedDate":"2022-10-28"},{"lineNumber":800,"author":{"gitId":"johnbenedictyan"},"content":"         *","lastModifiedDate":"2022-10-28"},{"lineNumber":801,"author":{"gitId":"yeehaoo"},"content":"         * @return","lastModifiedDate":"2022-10-20"},{"lineNumber":802,"author":{"gitId":"yeehaoo"},"content":"         */","lastModifiedDate":"2022-10-20"},{"lineNumber":803,"author":{"gitId":"johnbenedictyan"},"content":"        public EditPersonDescriptor setPhysician(Optional\u003cPhysician\u003e p) {","lastModifiedDate":"2022-10-28"},{"lineNumber":804,"author":{"gitId":"johnbenedictyan"},"content":"            physician \u003d p;","lastModifiedDate":"2022-10-28"},{"lineNumber":805,"author":{"gitId":"yeehaoo"},"content":"            return this;","lastModifiedDate":"2022-10-20"},{"lineNumber":806,"author":{"gitId":"yeehaoo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":807,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":808,"author":{"gitId":"yeehaoo"},"content":"        /**","lastModifiedDate":"2022-10-20"},{"lineNumber":809,"author":{"gitId":"yeehaoo"},"content":"         * Returns the next of kin","lastModifiedDate":"2022-10-20"},{"lineNumber":810,"author":{"gitId":"johnbenedictyan"},"content":"         *","lastModifiedDate":"2022-10-28"},{"lineNumber":811,"author":{"gitId":"yeehaoo"},"content":"         * @return {@code Optioanl.empty()} if {@code nextOfKin} is null.","lastModifiedDate":"2022-10-20"},{"lineNumber":812,"author":{"gitId":"yeehaoo"},"content":"         */","lastModifiedDate":"2022-10-20"},{"lineNumber":813,"author":{"gitId":"yeehaoo"},"content":"        public Optional\u003cOptional\u003cNextOfKin\u003e\u003e getNextOfKin() {","lastModifiedDate":"2022-10-20"},{"lineNumber":814,"author":{"gitId":"yeehaoo"},"content":"            return (nextOfKin !\u003d null) ? Optional.of(nextOfKin) : Optional.empty();","lastModifiedDate":"2022-10-20"},{"lineNumber":815,"author":{"gitId":"yeehaoo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":816,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":817,"author":{"gitId":"johnbenedictyan"},"content":"        /**","lastModifiedDate":"2022-10-28"},{"lineNumber":818,"author":{"gitId":"johnbenedictyan"},"content":"         * Sets {@code n} to this object\u0027s {@code nextOfKin}","lastModifiedDate":"2022-10-28"},{"lineNumber":819,"author":{"gitId":"johnbenedictyan"},"content":"         *","lastModifiedDate":"2022-10-28"},{"lineNumber":820,"author":{"gitId":"johnbenedictyan"},"content":"         * @return","lastModifiedDate":"2022-10-28"},{"lineNumber":821,"author":{"gitId":"johnbenedictyan"},"content":"         */","lastModifiedDate":"2022-10-28"},{"lineNumber":822,"author":{"gitId":"johnbenedictyan"},"content":"        public EditPersonDescriptor setNextOfKin(Optional\u003cNextOfKin\u003e n) {","lastModifiedDate":"2022-10-28"},{"lineNumber":823,"author":{"gitId":"johnbenedictyan"},"content":"            nextOfKin \u003d n;","lastModifiedDate":"2022-10-28"},{"lineNumber":824,"author":{"gitId":"johnbenedictyan"},"content":"            return this;","lastModifiedDate":"2022-10-28"},{"lineNumber":825,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":826,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":827,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":828,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":829,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":830,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":831,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":832,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":833,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":834,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":835,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":836,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":837,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":838,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":839,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":840,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":841,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":842,"author":{"gitId":"xhphoong"},"content":"            return getUid().equals(e.getUid())","lastModifiedDate":"2022-10-10"},{"lineNumber":843,"author":{"gitId":"xhphoong"},"content":"                    \u0026\u0026 getName().equals(e.getName())","lastModifiedDate":"2022-10-09"},{"lineNumber":844,"author":{"gitId":"xhphoong"},"content":"                    \u0026\u0026 getCategory().equals(e.getCategory())","lastModifiedDate":"2022-10-10"},{"lineNumber":845,"author":{"gitId":"xhphoong"},"content":"                    \u0026\u0026 getGender().equals(e.getGender())","lastModifiedDate":"2022-10-06"},{"lineNumber":846,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":847,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":848,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":849,"author":{"gitId":"xhphoong"},"content":"                    \u0026\u0026 getDatesSlots().equals(e.getDatesSlots())","lastModifiedDate":"2022-10-23"},{"lineNumber":850,"author":{"gitId":"xhphoong"},"content":"                    \u0026\u0026 getDateSlotIndexes().equals(e.getDateSlotIndexes())","lastModifiedDate":"2022-10-23"},{"lineNumber":851,"author":{"gitId":"mlzt2000"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2022-10-16"},{"lineNumber":852,"author":{"gitId":"xhphoong"},"content":"                    \u0026\u0026 getHomeVisits().equals(e.getHomeVisits())","lastModifiedDate":"2022-10-27"},{"lineNumber":853,"author":{"gitId":"xhphoong"},"content":"                    \u0026\u0026 getUnavailableDates().equals(e.getUnavailableDates())","lastModifiedDate":"2022-10-27"},{"lineNumber":854,"author":{"gitId":"xhphoong"},"content":"                    \u0026\u0026 getDateIndexes().equals(e.getDateIndexes())","lastModifiedDate":"2022-10-27"},{"lineNumber":855,"author":{"gitId":"xhphoong"},"content":"                    \u0026\u0026 getFullyScheduledDates().equals(e.getFullyScheduledDates());","lastModifiedDate":"2022-10-27"},{"lineNumber":856,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":857,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":858,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"xhphoong":503,"johnbenedictyan":83,"yeehaoo":42,"-":202,"mlzt2000":20,"LolfoollorS":8}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Thank you for using Healthcare Xpress!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"johnbenedictyan":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":" * Finds and lists all persons in address book whose name contains any of the","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":" * argument keywords.","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all patients and nurses names contain any of \"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                        \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"xhphoong":1,"johnbenedictyan":2,"-":40}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"yeehaoo"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"yeehaoo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"yeehaoo"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"ADDRESS: %s, CATEGORY: %s, GENDER: %s, TAG: %s\";","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"yeehaoo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons with specifications:\\n\" + MESSAGE_ARGUMENTS;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"yeehaoo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"yeehaoo"},"content":"            + \": Lists all enrolled users who fit the specified criteria, \"","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"yeehaoo"},"content":"            + \"or all enrolled users if no criteria were specified.\\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"yeehaoo"},"content":"            + \"Parameters: \\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"yeehaoo"},"content":"            + \"\u003coptional\u003e c/ [CATEGORY]\\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"yeehaoo"},"content":"            + \"\u003coptional\u003e g/ [GENDER]\\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"yeehaoo"},"content":"            + \"\u003coptional\u003e a/ [ADDRESS]\\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"yeehaoo"},"content":"            + \"\u003coptional\u003e t/ [TAG]\\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"yeehaoo"},"content":"            + \"Example: \" + COMMAND_WORD + \"  \"","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"yeehaoo"},"content":"            + \"c/ nurse\";","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"yeehaoo"},"content":"    private final Optional\u003cAddress\u003e address;","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"yeehaoo"},"content":"    private final Optional\u003cCategory\u003e category;","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"yeehaoo"},"content":"    private final Optional\u003cGender\u003e gender;","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"yeehaoo"},"content":"    private final Optional\u003cTag\u003e tag;","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"yeehaoo"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"yeehaoo"},"content":"     * @param a address to be filtered","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"yeehaoo"},"content":"     * @param c category (nurse/patient) to be filtered","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"yeehaoo"},"content":"     * @param g gender to be filtered","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"yeehaoo"},"content":"     * @param t tag to be filtered","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"yeehaoo"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"yeehaoo"},"content":"    public ListCommand(Optional\u003cAddress\u003e a, Optional\u003cCategory\u003e c, Optional\u003cGender\u003e g, Optional\u003cTag\u003e t) {","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"yeehaoo"},"content":"        address \u003d a;","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"yeehaoo"},"content":"        category \u003d c;","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"yeehaoo"},"content":"        gender \u003d g;","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"yeehaoo"},"content":"        tag \u003d t;","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"yeehaoo"},"content":"        Predicate\u003cPerson\u003e predicate \u003d x -\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"yeehaoo"},"content":"            boolean addressMatch \u003d x.getAddress().value.toLowerCase()","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"yeehaoo"},"content":"                    .contains(address.orElse(x.getAddress()).value.toLowerCase());","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"yeehaoo"},"content":"            boolean categoryMatch \u003d x.getCategory().equalsIgnoreCase(category.orElse(x.getCategory()));","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"yeehaoo"},"content":"            boolean genderMatch \u003d x.getGender().equalsIgnoreCase(gender.orElse(x.getGender()));","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"yeehaoo"},"content":"            boolean tagMatch;","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"yeehaoo"},"content":"            if (x.getTags().size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"yeehaoo"},"content":"                tagMatch \u003d tag.isEmpty();","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"yeehaoo"},"content":"            } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"yeehaoo"},"content":"                Predicate\u003cTag\u003e tagPredicate \u003d y -\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"yeehaoo"},"content":"                    Tag tagToCompare \u003d tag.orElse((Tag) x.getTags().toArray()[0]);","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"yeehaoo"},"content":"                    return y.equals(tagToCompare);","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"yeehaoo"},"content":"                };","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"yeehaoo"},"content":"                tagMatch \u003d x.getTags().stream().anyMatch(tagPredicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"yeehaoo"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"yeehaoo"},"content":"            return addressMatch \u0026\u0026 categoryMatch \u0026\u0026 genderMatch \u0026\u0026 tagMatch;","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"yeehaoo"},"content":"        };","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"yeehaoo"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"yeehaoo"},"content":"        final String[] filteredGender \u003d new String[1];","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"yeehaoo"},"content":"        gender.ifPresentOrElse(x -\u003e filteredGender[0] \u003d x.gender, () -\u003e filteredGender[0] \u003d \"NIL\");","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"yeehaoo"},"content":"        final String[] filteredCategory \u003d new String[1];","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"yeehaoo"},"content":"        category.ifPresentOrElse(x -\u003e filteredCategory[0] \u003d x.categoryName, () -\u003e filteredCategory[0] \u003d \"NIL\");","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"yeehaoo"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, address.orElse(new Address(\"NIL\")).value,","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"yeehaoo"},"content":"                filteredCategory[0],","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"yeehaoo"},"content":"                filteredGender[0],","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"yeehaoo"},"content":"                tag.orElse(new Tag(\"NIL\")).tagName));","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":85,"author":{"gitId":"yeehaoo"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":86,"author":{"gitId":"yeehaoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"yeehaoo"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-07"},{"lineNumber":88,"author":{"gitId":"yeehaoo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-07"},{"lineNumber":89,"author":{"gitId":"yeehaoo"},"content":"            return true;","lastModifiedDate":"2022-10-07"},{"lineNumber":90,"author":{"gitId":"yeehaoo"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":91,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"yeehaoo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-07"},{"lineNumber":93,"author":{"gitId":"yeehaoo"},"content":"        if (!(other instanceof ListCommand)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":94,"author":{"gitId":"yeehaoo"},"content":"            return false;","lastModifiedDate":"2022-10-07"},{"lineNumber":95,"author":{"gitId":"yeehaoo"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":97,"author":{"gitId":"yeehaoo"},"content":"        // state check","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"yeehaoo"},"content":"        ListCommand e \u003d (ListCommand) other;","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"yeehaoo"},"content":"        return address.equals(e.address)","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"yeehaoo"},"content":"                \u0026\u0026 category.equals(e.category)","lastModifiedDate":"2022-10-07"},{"lineNumber":101,"author":{"gitId":"yeehaoo"},"content":"                \u0026\u0026 gender.equals(e.gender)","lastModifiedDate":"2022-10-07"},{"lineNumber":102,"author":{"gitId":"yeehaoo"},"content":"                \u0026\u0026 tag.equals(e.tag);","lastModifiedDate":"2022-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yeehaoo":85,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/UndoUnmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_SLOT_INDEX;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateSlot;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Nurse;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":" * Undo unmarks a patient\u0027s dateslot using their unique id and dateslot index","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":" * when unmark fail to visit wrongly.","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"public class UndoUnmarkCommand extends Command {","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"    public static final String COMMAND_WORD \u003d \"undounmark\";","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"            + \": Undo Unmarks the patient\u0027s dateslot identified by the unique id number in the displayed person list \"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"            + \"and dateslot index as visited.\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"            + \"Parameters: UID (must be a positive integer) \" + PREFIX_DATE_AND_SLOT_INDEX + \"Date_Slot_Index\"","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_UID + \" 1\" + PREFIX_DATE_AND_SLOT_INDEX + \"2\";","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_UNDO_UNMARK_PATIENT_SUCCESS \u003d \"Undo Unmarked Patient as success visit: %1$s\";","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_INVALID_NURSE_UID \u003d \"This uid gives a nurse.\" + \" Please recheck the uid. \"","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"            + \"Undo Unmark is only for patient.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_OUT_OF_BOUND_DATE_AND_SLOT_INDEX \u003d \"The given date slot index is out of bound.\"","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"            + \"Please recheck the index.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_INVALID_DATE_AND_SLOT_INDEX \u003d \"The visit dates has not reached.\"","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"            + \"Cannot undo unmark it as success visit.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_INVALID_DATE_AND_SLOT_INDEX_TWO \u003d \"This dates has already been marked as \"","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"            + \"success visited. \" + \"Cannot undo unmark it as success visit.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"    private final Uid uid;","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"    private final Index dateSlotIndex;","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"     * Initialises the UndoUnmarkCommand with a valid and non-null {@code Uid} of","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"     * the target patient and","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"     * a valid and non-null {@code Index} of the target DateSlot index.","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"    public UndoUnmarkCommand(Uid uid, Index dateSlotIndex) {","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(uid);","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(dateSlotIndex);","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"        this.dateSlotIndex \u003d dateSlotIndex;","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"        Optional\u003cPerson\u003e targetPerson \u003d lastShownList.stream().filter(p -\u003e p.getUid().equals(uid)).findFirst();","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"        if (targetPerson.isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_UID);","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"        Person personToUndoUnmark \u003d targetPerson.get();","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"        if (personToUndoUnmark instanceof Nurse) {","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(MESSAGE_INVALID_NURSE_UID);","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"        undounmarkAction(personToUndoUnmark, model);","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"        return new CommandResult(String.format(MESSAGE_UNDO_UNMARK_PATIENT_SUCCESS, personToUndoUnmark));","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"                || (other instanceof UndoUnmarkCommand// instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"                        \u0026\u0026 this.uid.equals(((UndoUnmarkCommand) other).uid) // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"                        \u0026\u0026 this.dateSlotIndex.equals(((UndoUnmarkCommand) other).dateSlotIndex));","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"    private void undounmarkAction(Person personToUndoUnmark, Model model) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"        List\u003cDateSlot\u003e dateSlotList \u003d ((Patient) personToUndoUnmark).getDatesSlots();","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"johnbenedictyan"},"content":"        List\u003cDateSlot\u003e updatedDateSlotList \u003d new ArrayList\u003c\u003e(dateSlotList);","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"xhphoong"},"content":"        if (dateSlotIndex.getZeroBased() \u003e\u003d dateSlotList.size()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(MESSAGE_OUT_OF_BOUND_DATE_AND_SLOT_INDEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"xhphoong"},"content":"        DateSlot dateToBeUndoUnmark \u003d updatedDateSlotList.get(dateSlotIndex.getZeroBased());","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"johnbenedictyan"},"content":"        if (!dateToBeUndoUnmark.getHasVisited()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(MESSAGE_INVALID_DATE_AND_SLOT_INDEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"johnbenedictyan"},"content":"        if (dateToBeUndoUnmark.getIsSuccessVisit()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(MESSAGE_INVALID_DATE_AND_SLOT_INDEX_TWO);","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"xhphoong"},"content":"        dateToBeUndoUnmark.markSuccess();","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"xhphoong"},"content":"        editPatient(model, personToUndoUnmark, updatedDateSlotList);","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"johnbenedictyan"},"content":"    private void editPatient(Model model, Person patient, List\u003cDateSlot\u003e dateSlotList) {","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"xhphoong"},"content":"        Uid uid \u003d patient.getUid();","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"xhphoong"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"xhphoong"},"content":"        Optional\u003cPerson\u003e personToEdit \u003d lastShownList.stream().filter(p -\u003e p.getUid().equals(uid)).findFirst();","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"xhphoong"},"content":"        Person confirmedPersonToEdit \u003d personToEdit.get();","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"xhphoong"},"content":"        Person newPerson \u003d new Patient(confirmedPersonToEdit.getUid(), confirmedPersonToEdit.getName(),","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"xhphoong"},"content":"                confirmedPersonToEdit.getGender(), confirmedPersonToEdit.getPhone(), confirmedPersonToEdit.getEmail(),","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"xhphoong"},"content":"                confirmedPersonToEdit.getAddress(), confirmedPersonToEdit.getTags(), dateSlotList);","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"xhphoong"},"content":"        model.setPerson(confirmedPersonToEdit, newPerson);","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"xhphoong"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"xhphoong":116,"johnbenedictyan":8}},{"path":"src/main/java/seedu/address/logic/commands/UnmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_SLOT_INDEX;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateSlot;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Nurse;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":" * Unmarks a patient\u0027s dateslot using their unique id and dateslot index when","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":" * fail to visit.","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"            + \": Unmarks the patient\u0027s dateslot identified by the unique id number in the displayed person list \"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"            + \"and dateslot index as fail to visit.\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"            + \"Parameters: UID (must be a positive integer) \" + PREFIX_DATE_AND_SLOT_INDEX + \"Date_Slot_Index\"","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_UID + \" 1\" + PREFIX_DATE_AND_SLOT_INDEX + \"2\";","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_UNMARK_PATIENT_SUCCESS \u003d \"Unmarked Patient as fail to visit: %1$s\";","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_INVALID_NURSE_UID \u003d \"This uid gives a nurse.\" + \" Please recheck the uid. \"","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"            + \"Unmark is only for patient.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_OUT_OF_BOUND_DATE_AND_SLOT_INDEX \u003d \"The given date slot index is out of bound.\"","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"            + \"Please recheck the index.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_INVALID_DATE_AND_SLOT_INDEX \u003d \"The visit dates has not reached.\"","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"            + \"Cannot unmark it as fail to visit.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"    private final Uid uid;","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"    private final Index dateSlotIndex;","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"     * Initialises the MarkCommand with a valid and non-null {@code Uid} of the","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"     * target patient.","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"    public UnmarkCommand(Uid uid, Index dateSlotIndex) {","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(uid);","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(dateSlotIndex);","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"        this.dateSlotIndex \u003d dateSlotIndex;","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"        Optional\u003cPerson\u003e targetPerson \u003d lastShownList.stream().filter(p -\u003e p.getUid().equals(uid)).findFirst();","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"        if (targetPerson.isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_UID);","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"        Person personToUnmark \u003d targetPerson.get();","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"        if (personToUnmark instanceof Nurse) {","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(MESSAGE_INVALID_NURSE_UID);","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"        unmarkAction(personToUnmark, model);","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"        return new CommandResult(String.format(MESSAGE_UNMARK_PATIENT_SUCCESS, personToUnmark));","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"                || (other instanceof UnmarkCommand// instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"                        \u0026\u0026 this.uid.equals(((UnmarkCommand) other).uid) // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"                        \u0026\u0026 this.dateSlotIndex.equals(((UnmarkCommand) other).dateSlotIndex));","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"    private void unmarkAction(Person personToUnmark, Model model) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"        List\u003cDateSlot\u003e dateSlotList \u003d ((Patient) personToUnmark).getDatesSlots();","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"        List\u003cDateSlot\u003e updatedDateSlotList \u003d new ArrayList\u003c\u003e(dateSlotList);","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"xhphoong"},"content":"        if (dateSlotIndex.getZeroBased() \u003e\u003d dateSlotList.size()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(MESSAGE_OUT_OF_BOUND_DATE_AND_SLOT_INDEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"xhphoong"},"content":"        DateSlot dateToBeUnmark \u003d updatedDateSlotList.get(dateSlotIndex.getZeroBased());","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"        if (!dateToBeUnmark.getHasVisited()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(MESSAGE_INVALID_DATE_AND_SLOT_INDEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"        dateToBeUnmark.markFail();","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"        editPatient(model, personToUnmark, updatedDateSlotList);","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"johnbenedictyan"},"content":"    private void editPatient(Model model, Person patient, List\u003cDateSlot\u003e dateSlotList) {","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"        Uid uid \u003d patient.getUid();","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"xhphoong"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"xhphoong"},"content":"        Optional\u003cPerson\u003e personToEdit \u003d lastShownList.stream().filter(p -\u003e p.getUid().equals(uid)).findFirst();","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"xhphoong"},"content":"        Person confirmedPersonToEdit \u003d personToEdit.get();","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"xhphoong"},"content":"        Person newPerson \u003d new Patient(confirmedPersonToEdit.getUid(), confirmedPersonToEdit.getName(),","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"xhphoong"},"content":"                confirmedPersonToEdit.getGender(), confirmedPersonToEdit.getPhone(), confirmedPersonToEdit.getEmail(),","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"xhphoong"},"content":"                confirmedPersonToEdit.getAddress(), confirmedPersonToEdit.getTags(), dateSlotList);","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"xhphoong"},"content":"        model.setPerson(confirmedPersonToEdit, newPerson);","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"xhphoong"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"xhphoong":109,"johnbenedictyan":7}},{"path":"src/main/java/seedu/address/logic/commands/UpdateContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yeehaoo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"yeehaoo"},"content":"import java.util.List;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"yeehaoo"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.NextOfKin;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Physician;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"yeehaoo"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":" * Represents the command to add contact details of attending physician or next","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":" * of kin to a patient.","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"yeehaoo"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"yeehaoo"},"content":"public class UpdateContactCommand extends Command {","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"yeehaoo"},"content":"    public static final String COMMAND_WORD \u003d \"updatecontact\";","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"yeehaoo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"yeehaoo"},"content":"            + \": Update next of kin or attending physician contact details \"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"yeehaoo"},"content":"            + \"to the selected patient. \\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"yeehaoo"},"content":"            + \"Parameters: id/ [UID]\"","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"yeehaoo"},"content":"            + \"n/ [CONTACT NAME]\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"yeehaoo"},"content":"            + \"p/ [CONTACT PHONE]\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"yeehaoo"},"content":"            + \"e/ [CONTACT EMAIL]\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"yeehaoo"},"content":"            + \"c/ [CONTACT CATEGORY]: either D for Physician or N for Next of Kin\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"yeehaoo"},"content":"            + \"Example: \" + COMMAND_WORD + \" id/3 \"","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"yeehaoo"},"content":"            + \"n/ John Doe p/ 81234567 e/ johndoe@example.com c/ D\";","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"yeehaoo"},"content":"    public static final String MESSAGE_UPDATE_CONTACT_SUCCESS \u003d \"Added contact details to patient with UID: %s, \"","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"yeehaoo"},"content":"            + \"Physician Name: %s, Phone: %s, Email: %s, Category: %s\";","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"yeehaoo"},"content":"    private final Uid uid;","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"yeehaoo"},"content":"    private final Name name;","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"yeehaoo"},"content":"    private final Phone phone;","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"yeehaoo"},"content":"    private final Email email;","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"yeehaoo"},"content":"    private final Category category;","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"yeehaoo"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"yeehaoo"},"content":"     * Create a new UpdateContactCommand.","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"yeehaoo"},"content":"     * @param i patient uid","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"yeehaoo"},"content":"     * @param n contact name","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"yeehaoo"},"content":"     * @param p contact phone number","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"yeehaoo"},"content":"     * @param e contact email","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"yeehaoo"},"content":"     * @param c contact category","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"yeehaoo"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"yeehaoo"},"content":"    public UpdateContactCommand(Uid i, Name n, Phone p, Email e, Category c) {","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"yeehaoo"},"content":"        uid \u003d i;","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"yeehaoo"},"content":"        name \u003d n;","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"yeehaoo"},"content":"        email \u003d e;","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"yeehaoo"},"content":"        phone \u003d p;","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"yeehaoo"},"content":"        category \u003d c;","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"yeehaoo"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"yeehaoo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"yeehaoo"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"yeehaoo"},"content":"        Person personToEdit \u003d lastShownList.stream().filter(x -\u003e x.getUid().equals(uid)).findAny()","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"yeehaoo"},"content":"                .orElseThrow(() -\u003e new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_UID));","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"yeehaoo"},"content":"        if (!personToEdit.getCategory().equals(new Category(Category.PATIENT_SYMBOL))) {","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"yeehaoo"},"content":"            throw new CommandException(Messages.MESSAGE_UPDATECONTACT_INVALID_CATEGORY);","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"yeehaoo"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"yeehaoo"},"content":"        Patient patientToEdit \u003d (Patient) personToEdit;","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"yeehaoo"},"content":"        Patient editedPatient;","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"yeehaoo"},"content":"        if (category.equals(new Category(Category.PHYSICIAN_SYMBOL))) {","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"yeehaoo"},"content":"            Physician physician \u003d new Physician(name, phone, email);","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"yeehaoo"},"content":"            editedPatient \u003d new Patient(personToEdit.getUid(),","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"yeehaoo"},"content":"                    personToEdit.getName(), personToEdit.getGender(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"                    personToEdit.getAddress(), personToEdit.getTags(), patientToEdit.getDatesSlots(),","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"                    Optional.of(physician), patientToEdit.getNextOfKin());","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"yeehaoo"},"content":"        } else if (category.equals(new Category(Category.NEXTOFKIN_SYMBOL))) {","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"yeehaoo"},"content":"            NextOfKin nextOfKin \u003d new NextOfKin(name, phone, email);","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"yeehaoo"},"content":"            editedPatient \u003d new Patient(personToEdit.getUid(),","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"yeehaoo"},"content":"                    personToEdit.getName(), personToEdit.getGender(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"yeehaoo"},"content":"                    personToEdit.getAddress(), personToEdit.getTags(), patientToEdit.getDatesSlots(),","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"yeehaoo"},"content":"                    patientToEdit.getAttendingPhysician(), Optional.of(nextOfKin));","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"yeehaoo"},"content":"        } else {","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"yeehaoo"},"content":"            throw new CommandException(Messages.MESSAGE_UPDATECONTACT_INVALID_CONTACT_CATEGORY);","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"yeehaoo"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"yeehaoo"},"content":"        model.setPerson(personToEdit, editedPatient);","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"yeehaoo"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"yeehaoo"},"content":"        return new CommandResult(String.format(MESSAGE_UPDATE_CONTACT_SUCCESS, uid, name, phone, email, category));","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"yeehaoo"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"yeehaoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"yeehaoo"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"yeehaoo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"yeehaoo"},"content":"            return true;","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"yeehaoo"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":109,"author":{"gitId":"yeehaoo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":110,"author":{"gitId":"yeehaoo"},"content":"        if (!(other instanceof UpdateContactCommand)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"yeehaoo"},"content":"            return false;","lastModifiedDate":"2022-10-24"},{"lineNumber":112,"author":{"gitId":"yeehaoo"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":113,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":114,"author":{"gitId":"yeehaoo"},"content":"        // state check","lastModifiedDate":"2022-10-24"},{"lineNumber":115,"author":{"gitId":"yeehaoo"},"content":"        UpdateContactCommand e \u003d (UpdateContactCommand) other;","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"yeehaoo"},"content":"        return uid.equals(e.uid)","lastModifiedDate":"2022-10-24"},{"lineNumber":117,"author":{"gitId":"yeehaoo"},"content":"                \u0026\u0026 name.equals(e.name)","lastModifiedDate":"2022-10-24"},{"lineNumber":118,"author":{"gitId":"yeehaoo"},"content":"                \u0026\u0026 phone.equals(e.phone)","lastModifiedDate":"2022-10-24"},{"lineNumber":119,"author":{"gitId":"yeehaoo"},"content":"                \u0026\u0026 email.equals(e.email)","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"yeehaoo"},"content":"                \u0026\u0026 category.equals(e.category);","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":122,"author":{"gitId":"yeehaoo"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"xhphoong":2,"johnbenedictyan":3,"yeehaoo":117}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     * Constructs a new {@code CommandException} with the specified detail","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code message} and {@code cause}.","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"johnbenedictyan":2,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_CATEGORY;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_SLOT;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNAVAILABLE_DATE;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.model.category.Category.NURSE_SYMBOL;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.model.category.Category.PATIENT_SYMBOL;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"mlzt2000"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateSlot;","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.HomeVisit;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.person.Nurse;","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"     * in the given","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_CATEGORY, PREFIX_NAME,","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"                PREFIX_GENDER, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_DATE_AND_SLOT,","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"                PREFIX_UNAVAILABLE_DATE);","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CATEGORY, PREFIX_NAME, PREFIX_GENDER,","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"LolfoollorS"},"content":"                PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"        Boolean haveDateSlot \u003d arePrefixesPresent(argMultimap, PREFIX_DATE_AND_SLOT);","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"        Boolean haveUnavailableDate \u003d arePrefixesPresent(argMultimap, PREFIX_UNAVAILABLE_DATE);","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"LolfoollorS"},"content":"        Category category \u003d ParserUtil.parseCategory(argMultimap.getValue(PREFIX_CATEGORY).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"        Boolean isPatient \u003d category.categoryName.equals(PATIENT_SYMBOL);","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"        Boolean isNurse \u003d category.categoryName.equals(NURSE_SYMBOL);","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"        if (isPatient \u0026\u0026 haveUnavailableDate) {","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"            throw new ParseException(AddCommand.MESSAGE_INVALID_FIELD_PATIENT);","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"        if (isNurse \u0026\u0026 haveDateSlot) {","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"            throw new ParseException(AddCommand.MESSAGE_INVALID_FIELD_NURSE);","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"        Uid id \u003d new Uid();","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"LolfoollorS"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"        List\u003cDateSlot\u003e dateTimeSlotList \u003d ParserUtil.parseDatesSlots(argMultimap.getAllValues(PREFIX_DATE_AND_SLOT));","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"        List\u003cDate\u003e unavailableDateList \u003d ParserUtil.parseDates(argMultimap.getAllValues(PREFIX_UNAVAILABLE_DATE));","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":92,"author":{"gitId":"LolfoollorS"},"content":"        Person person;","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"        if (isNurse) {","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"xhphoong"},"content":"            List\u003cHomeVisit\u003e nullHomeVisitList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"            List\u003cDate\u003e nullFullyScheduledDateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"            person \u003d new Nurse(id, name, gender, phone, email, address, tagList, unavailableDateList,","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"                    nullHomeVisitList, nullFullyScheduledDateList);","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"        } else if (isPatient) {","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"            person \u003d new Patient(id, name, gender, phone, email, address, tagList, dateTimeSlotList);","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"LolfoollorS"},"content":"        } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"            throw new ParseException(MESSAGE_INVALID_CATEGORY);","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"xhphoong":31,"johnbenedictyan":13,"-":50,"mlzt2000":1,"LolfoollorS":15}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"import seedu.address.logic.commands.AssignCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.logic.commands.CheckSimilarCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"import seedu.address.logic.commands.DeassignCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"import seedu.address.logic.commands.UndoUnmarkCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.logic.commands.UpdateContactCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"     * @param model     model","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"    public Command parseCommand(String userInput, Model model) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"yeehaoo"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"            return new UnmarkCommandParser().parse(arguments);","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"        case UndoUnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"            return new UndoUnmarkCommandParser().parse(arguments);","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"        case AssignCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"            return new AssignCommandParser().parse(arguments);","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"        case DeassignCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"            return new DeassignCommandParser().parse(arguments);","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":91,"author":{"gitId":"yeehaoo"},"content":"        case UpdateContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"yeehaoo"},"content":"            return new UpdateContactCommandParser().parse(arguments);","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"        case CheckSimilarCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"            return new CheckSimilarCommand();","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xhphoong":18,"johnbenedictyan":4,"yeehaoo":5,"-":75}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":" * Values for a given key are stored in a list, and the insertion ordering is","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":" * maintained.","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":" * Keys are unique, but the list of argument values may contain duplicate","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":" * argument values, i.e. the same argument value","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"     **/","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     * If the map previously contained a mapping for the key, the new value is","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"     * appended to the list of existing values.","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"     *                 associated","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"     * If the prefix does not exist or has no values, this will return an empty","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"     * list.","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"     * Modifying the returned list will not affect the underlying data structure of","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"     * the ArgumentMultimap.","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"     * leading/trailing spaces.","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"johnbenedictyan":17,"-":52}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":" * Tokenizes arguments string of the form:","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":" * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July} where prefixes","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":" * are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":" * the above example.\u003cbr\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":" * 2. Leading and trailing whitespaces of an argument value will be","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":" * discarded.\u003cbr\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g.","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":" * the value of {@code t/}","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"     * that maps prefixes to their","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"     * respective argument values. Only the given prefixes will be recognized in the","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     * arguments string.","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"     * @param argsString Arguments string of the form:","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"     *                   {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"     * @param argsString Arguments string of the form:","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"     *                   {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"     * Extracts prefixes and their argument values, and returns an","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"johnbenedictyan"},"content":"     * based on their zero-based positions in","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"     * @param argsString      Arguments string of the form:","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"     *                        {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"     *                        {@code argsString}","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns the trimmed value of the argument in the arguments string specified","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"johnbenedictyan"},"content":"     * by {@code currentPrefixPosition}.","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"johnbenedictyan"},"content":"        private final int startPosition;","lastModifiedDate":"2022-10-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"johnbenedictyan":30,"-":132}},{"path":"src/main/java/seedu/address/logic/parser/AssignCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_SLOT_INDEX;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.ParserUtil.parseIndexes;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.ParserUtil.parseUid;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"import seedu.address.logic.commands.AssignCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":" * Parses input arguments and creates a new Assign object","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"public class AssignCommandParser implements Parser\u003cAssignCommand\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     * AssignCommand","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"     * and returns an AssignCommand object for execution.","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"    public AssignCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_UID, PREFIX_DATE_AND_SLOT_INDEX);","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"        List\u003cString\u003e uidInput \u003d argMultimap.getAllValues(PREFIX_UID);","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"        if (uidInput.size() !\u003d 2) {","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"        String uid1String \u003d uidInput.get(0);","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"        String uid2String \u003d uidInput.get(1);","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"        Uid uid1 \u003d parseUid(uid1String);","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"        Uid uid2 \u003d parseUid(uid2String);","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"        List\u003cIndex\u003e indexList \u003d parseIndexes(argMultimap.getAllValues(PREFIX_DATE_AND_SLOT_INDEX));","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"        return new AssignCommand(uid1, uid2, indexList);","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"xhphoong":47,"johnbenedictyan":3}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" * commands","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"    public static final Prefix PREFIX_CATEGORY \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    public static final Prefix PREFIX_UID \u003d new Prefix(\"id/\");","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"g/\");","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"    public static final Prefix PREFIX_DATE_AND_SLOT \u003d new Prefix(\"ds/\");","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"    public static final Prefix PREFIX_DATE_AND_SLOT_INDEX \u003d new Prefix(\"dsi/\");","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"    public static final Prefix PREFIX_UNAVAILABLE_DATE \u003d new Prefix(\"ud/\");","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"    public static final Prefix PREFIX_UNAVAILABLE_DATE_INDEX \u003d new Prefix(\"udi/\");","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"xhphoong":6,"johnbenedictyan":3,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeassignCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_SLOT_INDEX;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.ParserUtil.parseIndexes;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.ParserUtil.parseUid;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"import seedu.address.logic.commands.DeassignCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":" * Parses input arguments and creates a new Assign object","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"public class DeassignCommandParser implements Parser\u003cDeassignCommand\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"     * DeassignCommand","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"     * and returns a DeassignCommand object for execution.","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"    public DeassignCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_UID, PREFIX_DATE_AND_SLOT_INDEX);","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"        Uid uid;","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"        if (argMultimap.getValue(PREFIX_UID).isPresent()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"            uid \u003d parseUid(argMultimap.getValue(PREFIX_UID).get());","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"        List\u003cIndex\u003e indexList \u003d parseIndexes(argMultimap.getAllValues(PREFIX_DATE_AND_SLOT_INDEX));","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"        return new DeassignCommand(uid, indexList);","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"xhphoong":44,"johnbenedictyan":3}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"     * in the given","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"     * DeleteCommand","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_UID);","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_UID)","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"        Uid uid \u003d ParserUtil.parseUid(argMultimap.getValue(PREFIX_UID).get());","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"        return new DeleteCommand(uid);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"johnbenedictyan":23,"-":22}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_SLOT;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_SLOT_INDEX;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNAVAILABLE_DATE;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNAVAILABLE_DATE_INDEX;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateSlot;","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"     * EditCommand","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_UID, PREFIX_CATEGORY, PREFIX_NAME,","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"                PREFIX_GENDER,","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"                PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_DATE_AND_SLOT, PREFIX_TAG,","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"                PREFIX_DATE_AND_SLOT_INDEX, PREFIX_UNAVAILABLE_DATE, PREFIX_UNAVAILABLE_DATE_INDEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"        Uid uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"        if (argMultimap.getValue(PREFIX_UID).isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"            uid \u003d ParserUtil.parseUid(argMultimap.getValue(PREFIX_UID).get());","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"        if (argMultimap.getValue(PREFIX_CATEGORY).isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"            editPersonDescriptor.setCategory(ParserUtil.parseCategory(argMultimap.getValue(PREFIX_CATEGORY).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"            editPersonDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"        parseDatesSlotsForEdit(argMultimap.getAllValues(PREFIX_DATE_AND_SLOT))","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"                .ifPresent(editPersonDescriptor::setDatesSlots);","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"        parseDateSlotIndexesForEdit(argMultimap.getAllValues(PREFIX_DATE_AND_SLOT_INDEX))","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"                .ifPresent(editPersonDescriptor::setDateSlotIndexes);","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"        parseDatesForEdit(argMultimap.getAllValues(PREFIX_UNAVAILABLE_DATE))","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"                .ifPresent(editPersonDescriptor::setUnavailableDates);","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"        parseDateIndexesForEdit(argMultimap.getAllValues(PREFIX_UNAVAILABLE_DATE_INDEX))","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"                .ifPresent(editPersonDescriptor::setDateIndexes);","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"        return new EditCommand(uid, editPersonDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code tags} is non-empty.","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"johnbenedictyan"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"johnbenedictyan"},"content":"     * parsed into a","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":116,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"johnbenedictyan"},"content":"     * Parses {@code Collection\u003cString\u003e datesSlots} into a {@code List\u003cDateSlot\u003e} if","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code dateSlots} is non-empty.","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"johnbenedictyan"},"content":"     * If {@code datesSlots} contain only one element which is an empty string, it","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"johnbenedictyan"},"content":"     * will be parsed into a","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"xhphoong"},"content":"     * {@code List\u003cDateSlot\u003e} containing zero dateTime.","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"xhphoong"},"content":"    private Optional\u003cList\u003cDateSlot\u003e\u003e parseDatesSlotsForEdit(Collection\u003cString\u003e datesSlots) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":124,"author":{"gitId":"xhphoong"},"content":"        assert datesSlots !\u003d null;","lastModifiedDate":"2022-10-23"},{"lineNumber":125,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"xhphoong"},"content":"        if (datesSlots.isEmpty()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":127,"author":{"gitId":"xhphoong"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"xhphoong"},"content":"        Collection\u003cString\u003e dateSlotList \u003d datesSlots.size() \u003d\u003d 1 \u0026\u0026 datesSlots.contains(\"\")","lastModifiedDate":"2022-10-23"},{"lineNumber":130,"author":{"gitId":"johnbenedictyan"},"content":"                ? Collections.emptyList()","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"johnbenedictyan"},"content":"                : datesSlots;","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":133,"author":{"gitId":"xhphoong"},"content":"        return Optional.of(ParserUtil.parseDatesSlots(dateSlotList));","lastModifiedDate":"2022-10-23"},{"lineNumber":134,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"johnbenedictyan"},"content":"     * Parses {@code Collection\u003cString\u003e dateSlotIndexes} into a","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code List\u003cInteger\u003e}","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"xhphoong"},"content":"     * if {@code dateSlotIndexes} is non-empty.","lastModifiedDate":"2022-10-23"},{"lineNumber":140,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"xhphoong"},"content":"    private Optional\u003cList\u003cIndex\u003e\u003e parseDateSlotIndexesForEdit(Collection\u003cString\u003e dateSlotIndexes)","lastModifiedDate":"2022-10-23"},{"lineNumber":142,"author":{"gitId":"xhphoong"},"content":"            throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"xhphoong"},"content":"        assert dateSlotIndexes !\u003d null;","lastModifiedDate":"2022-10-23"},{"lineNumber":144,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"xhphoong"},"content":"        if (dateSlotIndexes.isEmpty()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":146,"author":{"gitId":"xhphoong"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"xhphoong"},"content":"        Collection\u003cString\u003e dateSlotIndexList \u003d dateSlotIndexes.size() \u003d\u003d 1 \u0026\u0026 dateSlotIndexes.contains(\"\")","lastModifiedDate":"2022-10-23"},{"lineNumber":149,"author":{"gitId":"johnbenedictyan"},"content":"                ? Collections.emptyList()","lastModifiedDate":"2022-10-28"},{"lineNumber":150,"author":{"gitId":"johnbenedictyan"},"content":"                : dateSlotIndexes;","lastModifiedDate":"2022-10-28"},{"lineNumber":151,"author":{"gitId":"xhphoong"},"content":"        return Optional.of(ParserUtil.parseIndexes(dateSlotIndexList));","lastModifiedDate":"2022-10-27"},{"lineNumber":152,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":155,"author":{"gitId":"johnbenedictyan"},"content":"     * Parses {@code Collection\u003cString\u003e dates} into a {@code List\u003cDate\u003e} if","lastModifiedDate":"2022-10-28"},{"lineNumber":156,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code date} is non-empty.","lastModifiedDate":"2022-10-28"},{"lineNumber":157,"author":{"gitId":"johnbenedictyan"},"content":"     * If {@code dates} contain only one element which is an empty string, it will","lastModifiedDate":"2022-10-28"},{"lineNumber":158,"author":{"gitId":"johnbenedictyan"},"content":"     * be parsed into a","lastModifiedDate":"2022-10-28"},{"lineNumber":159,"author":{"gitId":"xhphoong"},"content":"     * {@code List\u003cDate\u003e} containing zero date.","lastModifiedDate":"2022-10-27"},{"lineNumber":160,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":161,"author":{"gitId":"xhphoong"},"content":"    private Optional\u003cList\u003cDate\u003e\u003e parseDatesForEdit(Collection\u003cString\u003e dates) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":162,"author":{"gitId":"xhphoong"},"content":"        assert dates !\u003d null;","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"xhphoong"},"content":"        if (dates.isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"xhphoong"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":167,"author":{"gitId":"xhphoong"},"content":"        Collection\u003cString\u003e dateList \u003d dates.size() \u003d\u003d 1 \u0026\u0026 dates.contains(\"\")","lastModifiedDate":"2022-10-27"},{"lineNumber":168,"author":{"gitId":"johnbenedictyan"},"content":"                ? Collections.emptyList()","lastModifiedDate":"2022-10-28"},{"lineNumber":169,"author":{"gitId":"johnbenedictyan"},"content":"                : dates;","lastModifiedDate":"2022-10-28"},{"lineNumber":170,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":171,"author":{"gitId":"xhphoong"},"content":"        return Optional.of(ParserUtil.parseDates(dateList));","lastModifiedDate":"2022-10-27"},{"lineNumber":172,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":173,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":175,"author":{"gitId":"xhphoong"},"content":"     * Parses {@code Collection\u003cString\u003e dateIndexes} into a {@code List\u003cInteger\u003e}","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"xhphoong"},"content":"     * if {@code dateIndexes} is non-empty.","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"xhphoong"},"content":"    private Optional\u003cList\u003cIndex\u003e\u003e parseDateIndexesForEdit(Collection\u003cString\u003e dateIndexes)","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"xhphoong"},"content":"            throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"xhphoong"},"content":"        assert dateIndexes !\u003d null;","lastModifiedDate":"2022-10-27"},{"lineNumber":181,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":182,"author":{"gitId":"xhphoong"},"content":"        if (dateIndexes.isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":183,"author":{"gitId":"xhphoong"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-27"},{"lineNumber":184,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":185,"author":{"gitId":"xhphoong"},"content":"        Collection\u003cString\u003e dateIndexList \u003d dateIndexes.size() \u003d\u003d 1 \u0026\u0026 dateIndexes.contains(\"\")","lastModifiedDate":"2022-10-27"},{"lineNumber":186,"author":{"gitId":"johnbenedictyan"},"content":"                ? Collections.emptyList()","lastModifiedDate":"2022-10-28"},{"lineNumber":187,"author":{"gitId":"johnbenedictyan"},"content":"                : dateIndexes;","lastModifiedDate":"2022-10-28"},{"lineNumber":188,"author":{"gitId":"xhphoong"},"content":"        return Optional.of(ParserUtil.parseIndexes(dateIndexList));","lastModifiedDate":"2022-10-27"},{"lineNumber":189,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":190,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"xhphoong":91,"johnbenedictyan":28,"-":72}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"     * FindCommand","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"johnbenedictyan":3,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yeehaoo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"yeehaoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"yeehaoo"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"yeehaoo"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"yeehaoo"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"yeehaoo"},"content":" * Parses user input for the list command.","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"yeehaoo"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"yeehaoo"},"content":"public class ListCommandParser implements Parser {","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"yeehaoo"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"yeehaoo"},"content":"     * Parses user input for the list command.","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"yeehaoo"},"content":"     * @param args user input, for filtering the list of displayed users","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"yeehaoo"},"content":"     * @return Filtered list, or list of all users if no filters were specified.","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"yeehaoo"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"yeehaoo"},"content":"    public ListCommand parse(String args) {","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"yeehaoo"},"content":"        if (args.length() \u003d\u003d 0) {","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"yeehaoo"},"content":"            return new ListCommand(Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty());","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"yeehaoo"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"yeehaoo"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"yeehaoo"},"content":"                PREFIX_ADDRESS,","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"yeehaoo"},"content":"                PREFIX_CATEGORY,","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"yeehaoo"},"content":"                PREFIX_GENDER,","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"yeehaoo"},"content":"                PREFIX_TAG);","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"yeehaoo"},"content":"        Optional\u003cAddress\u003e address \u003d argMultimap.getValue(PREFIX_ADDRESS).map(Address::new);","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"yeehaoo"},"content":"        Optional\u003cTag\u003e tag \u003d argMultimap.getValue(PREFIX_TAG).map(Tag::new);","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"yeehaoo"},"content":"        List\u003cOptional\u003cCategory\u003e\u003e category \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"yeehaoo"},"content":"        argMultimap.getValue(PREFIX_CATEGORY).ifPresentOrElse(","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"yeehaoo"},"content":"                x -\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"yeehaoo"},"content":"                    if (Category.isValidCategoryName(x.toUpperCase())) {","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"yeehaoo"},"content":"                        category.add(Optional.of(new Category(x.toUpperCase())));","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"yeehaoo"},"content":"                    } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"yeehaoo"},"content":"                        category.add(Optional.empty());","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"yeehaoo"},"content":"                    }","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"yeehaoo"},"content":"                }, () -\u003e category.add(Optional.empty()));","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"yeehaoo"},"content":"        assert (category.size() \u003d\u003d 1);","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"yeehaoo"},"content":"        List\u003cOptional\u003cGender\u003e\u003e gender \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"yeehaoo"},"content":"        argMultimap.getValue(PREFIX_GENDER).ifPresentOrElse(","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"yeehaoo"},"content":"                x -\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"yeehaoo"},"content":"                    if (Gender.isValidGender(x.toUpperCase())) {","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"yeehaoo"},"content":"                        gender.add(Optional.of(new Gender(x.toUpperCase())));","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"yeehaoo"},"content":"                    } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"yeehaoo"},"content":"                        gender.add(Optional.empty());","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"yeehaoo"},"content":"                    }","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"yeehaoo"},"content":"                }, () -\u003e gender.add(Optional.empty()));","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"yeehaoo"},"content":"        assert (gender.size() \u003d\u003d 1);","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"yeehaoo"},"content":"        return new ListCommand(address, category.get(0), gender.get(0), tag);","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"yeehaoo"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"johnbenedictyan":1,"yeehaoo":66}},{"path":"src/main/java/seedu/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" * Represents a Parser that is able to parse user input into a {@code Command}","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" * of type {@code T}.","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     *                        format","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"johnbenedictyan":5,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateSlot;","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":" * Contains utility methods used for parsing strings in the various *Parser","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":" * classes.","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"    // public static final String MESSAGE_INVALID_DATE_TIME_INDEX \u003d \"Date time index","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"    // is not a","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"    // non-zero unsigned integer.\";","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"     * and trailing whitespaces will be","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"     *                        unsigned integer).","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"     * Parses a {@code String id} into a {@code Uid}.","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws ParseException if the given {@code id} is invalid.","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"    public static Uid parseUid(String id) throws ParseException {","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"        String trimmedId \u003d id.trim();","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"        if (!Uid.isValidUid(trimmedId)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"            throw new ParseException(Uid.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"        Long parsedId \u003d Long.parseLong(trimmedId);","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"        return new Uid(parsedId);","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"     * Parses {@code Collection\u003cString\u003e Index} into a {@code List\u003cIndex\u003e}.","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"    public static List\u003cIndex\u003e parseIndexes(Collection\u003cString\u003e indexes) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(indexes);","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"        List\u003cIndex\u003e indexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"        for (String index : indexes) {","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"            indexList.add(parseIndex(index));","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"        return indexList;","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"     * Parses a {@code String dateSlot} into a {@code DateSlot}.","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"xhphoong"},"content":"     * @throws ParseException if the given {@code dateSlot} is invalid.","lastModifiedDate":"2022-10-23"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"    public static DateSlot parseDateSlot(String dateSlot) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(dateSlot);","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"        String trimmedDateTimeSlot \u003d dateSlot.trim();","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":105,"author":{"gitId":"xhphoong"},"content":"        if (!DateSlot.isValidDateSlot(trimmedDateTimeSlot)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"            throw new ParseException(DateSlot.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":108,"author":{"gitId":"xhphoong"},"content":"        return new DateSlot(trimmedDateTimeSlot);","lastModifiedDate":"2022-10-23"},{"lineNumber":109,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":110,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":111,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":112,"author":{"gitId":"xhphoong"},"content":"     * Parses {@code Collection\u003cString\u003e dateSlot} into a {@code List\u003cDateSlot\u003e}.","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":114,"author":{"gitId":"xhphoong"},"content":"    public static List\u003cDateSlot\u003e parseDatesSlots(Collection\u003cString\u003e dateSlots) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":115,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(dateSlots);","lastModifiedDate":"2022-10-23"},{"lineNumber":116,"author":{"gitId":"xhphoong"},"content":"        List\u003cDateSlot\u003e dateTimeSlotList \u003d new ArrayList\u003cDateSlot\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":117,"author":{"gitId":"xhphoong"},"content":"        for (String dateSlot : dateSlots) {","lastModifiedDate":"2022-10-23"},{"lineNumber":118,"author":{"gitId":"xhphoong"},"content":"            dateTimeSlotList.add(parseDateSlot(dateSlot));","lastModifiedDate":"2022-10-23"},{"lineNumber":119,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":120,"author":{"gitId":"xhphoong"},"content":"        return dateTimeSlotList;","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":122,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":123,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"xhphoong"},"content":"     * Parses a {@code String date} into a {@code Date}.","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"xhphoong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"xhphoong"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"xhphoong"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"xhphoong"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"xhphoong"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"xhphoong"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"xhphoong"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"xhphoong"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":140,"author":{"gitId":"xhphoong"},"content":"     * Parses {@code Collection\u003cString\u003e date} into a {@code List\u003cDate\u003e}.","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"xhphoong"},"content":"    public static List\u003cDate\u003e parseDates(Collection\u003cString\u003e dates) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":143,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(dates);","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"xhphoong"},"content":"        List\u003cDate\u003e dateList \u003d new ArrayList\u003cDate\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"xhphoong"},"content":"        for (String date : dates) {","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"xhphoong"},"content":"            dateList.add(parseDate(date));","lastModifiedDate":"2022-10-27"},{"lineNumber":147,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"xhphoong"},"content":"        return dateList;","lastModifiedDate":"2022-10-27"},{"lineNumber":149,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":150,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":222,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":223,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":224,"author":{"gitId":"LolfoollorS"},"content":"     * Parses a {@code String gender} into a {@code Gender}.","lastModifiedDate":"2022-10-09"},{"lineNumber":225,"author":{"gitId":"LolfoollorS"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-09"},{"lineNumber":226,"author":{"gitId":"LolfoollorS"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":227,"author":{"gitId":"LolfoollorS"},"content":"     * @throws ParseException if the given {@code gender} is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":228,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":229,"author":{"gitId":"LolfoollorS"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":230,"author":{"gitId":"LolfoollorS"},"content":"        requireNonNull(gender);","lastModifiedDate":"2022-10-09"},{"lineNumber":231,"author":{"gitId":"LolfoollorS"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":232,"author":{"gitId":"johnbenedictyan"},"content":"        trimmedGender \u003d Gender.formatMisspelling(trimmedGender);","lastModifiedDate":"2022-10-25"},{"lineNumber":233,"author":{"gitId":"LolfoollorS"},"content":"        if (!Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":234,"author":{"gitId":"LolfoollorS"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":235,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":236,"author":{"gitId":"LolfoollorS"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2022-10-09"},{"lineNumber":237,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":238,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":239,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":240,"author":{"gitId":"LolfoollorS"},"content":"     * Parses a {@code String category} into a {@code Category}.","lastModifiedDate":"2022-10-09"},{"lineNumber":241,"author":{"gitId":"LolfoollorS"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-09"},{"lineNumber":242,"author":{"gitId":"LolfoollorS"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":243,"author":{"gitId":"LolfoollorS"},"content":"     * @throws ParseException if the given {@code category} is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":244,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":245,"author":{"gitId":"LolfoollorS"},"content":"    public static Category parseCategory(String category) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":246,"author":{"gitId":"LolfoollorS"},"content":"        requireNonNull(category);","lastModifiedDate":"2022-10-09"},{"lineNumber":247,"author":{"gitId":"LolfoollorS"},"content":"        String trimmedCategory \u003d category.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":248,"author":{"gitId":"johnbenedictyan"},"content":"        trimmedCategory \u003d Category.formatMisspelling(trimmedCategory);","lastModifiedDate":"2022-10-25"},{"lineNumber":249,"author":{"gitId":"LolfoollorS"},"content":"        if (!Category.isValidCategoryName(trimmedCategory)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":250,"author":{"gitId":"LolfoollorS"},"content":"            throw new ParseException(Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":251,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":252,"author":{"gitId":"LolfoollorS"},"content":"        return new Category(trimmedCategory);","lastModifiedDate":"2022-10-09"},{"lineNumber":253,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":254,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"xhphoong":74,"johnbenedictyan":28,"-":121,"mlzt2000":1,"LolfoollorS":31}},{"path":"src/main/java/seedu/address/logic/parser/UndoUnmarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_SLOT_INDEX;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"import seedu.address.logic.commands.UndoUnmarkCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":" * Parses input arguments and creates a new MarkCommand object","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"public class UndoUnmarkCommandParser implements Parser\u003cUndoUnmarkCommand\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"     * in the given","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"     * UndoUnmarkCommand","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"     * and returns an UndoUnmarkCommand object for execution.","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"    public UndoUnmarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_UID, PREFIX_DATE_AND_SLOT_INDEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_UID, PREFIX_DATE_AND_SLOT_INDEX)","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UndoUnmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"        Uid uid \u003d ParserUtil.parseUid(argMultimap.getValue(PREFIX_UID).get());","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"        Index dateSlotIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_DATE_AND_SLOT_INDEX).get());","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"        return new UndoUnmarkCommand(uid, dateSlotIndex);","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"xhphoong":38,"johnbenedictyan":11}},{"path":"src/main/java/seedu/address/logic/parser/UnmarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mlzt2000"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"mlzt2000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"mlzt2000"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_SLOT_INDEX;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"mlzt2000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"mlzt2000"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"mlzt2000"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"mlzt2000"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"mlzt2000"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"mlzt2000"},"content":" * Parses input arguments and creates a new MarkCommand object","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"mlzt2000"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"public class UnmarkCommandParser implements Parser\u003cUnmarkCommand\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"     * in the given","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"mlzt2000"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"     * UnmarkCommand","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"     * and returns an UnmarkCommand object for execution.","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"mlzt2000"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"mlzt2000"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"mlzt2000"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"    public UnmarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"mlzt2000"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_UID, PREFIX_DATE_AND_SLOT_INDEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_UID, PREFIX_DATE_AND_SLOT_INDEX)","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"mlzt2000"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"mlzt2000"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"mlzt2000"},"content":"        Uid uid \u003d ParserUtil.parseUid(argMultimap.getValue(PREFIX_UID).get());","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"        Index dateSlotIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_DATE_AND_SLOT_INDEX).get());","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"        return new UnmarkCommand(uid, dateSlotIndex);","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"mlzt2000"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"xhphoong":11,"johnbenedictyan":11,"mlzt2000":27}},{"path":"src/main/java/seedu/address/logic/parser/UpdateContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yeehaoo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"yeehaoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"yeehaoo"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.logic.commands.UpdateContactCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"yeehaoo"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"yeehaoo"},"content":" * Parses user input for the set physician command.","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"yeehaoo"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"yeehaoo"},"content":"public class UpdateContactCommandParser implements Parser\u003cUpdateContactCommand\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"yeehaoo"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"yeehaoo"},"content":"    public UpdateContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"yeehaoo"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"yeehaoo"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"yeehaoo"},"content":"                PREFIX_UID, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_CATEGORY);","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"        Supplier\u003cParseException\u003e exceptionSupplier \u003d () -\u003e new ParseException(","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"yeehaoo"},"content":"        Uid uid;","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"yeehaoo"},"content":"        Name name;","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"yeehaoo"},"content":"        Phone phone;","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"yeehaoo"},"content":"        Email email;","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"yeehaoo"},"content":"        Category category;","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"yeehaoo"},"content":"        uid \u003d ParserUtil.parseUid(argMultimap.getValue(PREFIX_UID).orElseThrow(exceptionSupplier));","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"yeehaoo"},"content":"        name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).orElseThrow(exceptionSupplier));","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"yeehaoo"},"content":"        phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).orElseThrow(exceptionSupplier));","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"yeehaoo"},"content":"        email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).orElseThrow(exceptionSupplier));","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"yeehaoo"},"content":"        category \u003d ParserUtil.parseCategory(argMultimap.getValue(PREFIX_CATEGORY).orElseThrow(exceptionSupplier));","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"yeehaoo"},"content":"        return new UpdateContactCommand(uid, name, phone, email, category);","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"yeehaoo"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"johnbenedictyan":2,"yeehaoo":47}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block,","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"     * sometimes used to avoid duplication","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"     * between constructors. See","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     * https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"     * Note that non-static init blocks are not recommended to use. There are other","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     * ways to avoid duplication","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"    public AddressBook() {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns true if a person with the same identity as {@code person} exists in","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"     * the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns true if a person with a similar identity as {@code person} exists in","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"     * the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean hasSimilarPerson(Person person) {","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"        return persons.containsSimilar(person);","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns an optional with a person that has a similar identity as","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code person} exists in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"    public Optional\u003cPerson\u003e findSimilarPerson(Person person) {","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"        return persons.findSimilarPerson(person);","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"johnbenedictyan"},"content":"     * Replaces the given person {@code target} in the list with","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code editedPerson}.","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"johnbenedictyan"},"content":"     * The person identity of {@code editedPerson} must not be the same as another","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"johnbenedictyan"},"content":"     * existing person in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                        \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"johnbenedictyan":33,"-":113}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns the AddressBook","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns true if a person with the same identity as {@code person} exists in","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"     * the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns true if a person is similar to a {@code person} that exists in the","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"     * address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"    boolean hasSimilarPerson(Person person);","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns an optional of a person that is similar to a {@code person} that","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"     * exists in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"    Optional\u003cPerson\u003e findSimilarPerson(Person person);","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"johnbenedictyan"},"content":"     * The person identity of {@code editedPerson} must not be the same as another","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"     * existing person in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"johnbenedictyan"},"content":"     * Updates the filter of the filtered person list to filter by the given","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code predicate}.","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"xhphoong":1,"johnbenedictyan":35,"-":75}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"        return userPrefs;","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"        return addressBook;","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean hasSimilarPerson(Person person) {","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"johnbenedictyan"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"johnbenedictyan"},"content":"        return addressBook.hasSimilarPerson(person);","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"johnbenedictyan"},"content":"    public Optional\u003cPerson\u003e findSimilarPerson(Person person) {","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"johnbenedictyan"},"content":"        return addressBook.findSimilarPerson(person);","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"johnbenedictyan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"johnbenedictyan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"johnbenedictyan"},"content":"     * internal list of","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"johnbenedictyan":29,"-":136}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\", \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    public UserPrefs() {","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { // this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"        sb.append(\"Gui Settings : \").append(guiSettings);","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"        sb.append(\"\\nLocal data file location : \").append(addressBookFilePath);","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"johnbenedictyan":4,"-":84}},{"path":"src/main/java/seedu/address/model/category/Category.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"package seedu.address.model.category;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":" * Represents a Category in the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":" * Guarantees: immutable; name is valid as declared in","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":" * {@link #isValidCategoryName(String)}","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"public class Category {","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"yeehaoo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Category names can be only N for nurse, \"","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"yeehaoo"},"content":"            + \"P for patient, D for physician or K for next of kin.\";","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"    public static final String NURSE_SYMBOL \u003d \"N\";","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"    public static final String PATIENT_SYMBOL \u003d \"P\";","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"yeehaoo"},"content":"    public static final String PHYSICIAN_SYMBOL \u003d \"D\";","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"yeehaoo"},"content":"    public static final String NEXTOFKIN_SYMBOL \u003d \"K\";","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"yeehaoo"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\" + NURSE_SYMBOL + \"|\" + PATIENT_SYMBOL + \"|\"","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"yeehaoo"},"content":"            + PHYSICIAN_SYMBOL + \"|\" + NEXTOFKIN_SYMBOL + \"]\";","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    public static final ArrayList\u003cString\u003e COMMON_NURSE_MISSPELLINGS \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"            List.of(\"nurse\", \"nurses\", \"n\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    public static final ArrayList\u003cString\u003e COMMON_PATIENT_MISSPELLINGS \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"            List.of(\"patient\", \"patients\", \"p\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"LolfoollorS"},"content":"    public final String categoryName;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"LolfoollorS"},"content":"     * Constructs a {@code Category}.","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"LolfoollorS"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"LolfoollorS"},"content":"     * @param categoryName A valid category name.","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"LolfoollorS"},"content":"    public Category(String categoryName) {","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"LolfoollorS"},"content":"        requireNonNull(categoryName);","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"LolfoollorS"},"content":"        checkArgument(isValidCategoryName(categoryName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"LolfoollorS"},"content":"        this.categoryName \u003d categoryName;","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"     * Catches and formats any common misspellings as defined in the common","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"     * misspelling constant of nurses and patients","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"     * @param test The String to be tested","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"     * @return THe nurse or patient symbol if it is a misspelling and the original","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"     *         text otherwise","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"    public static String formatMisspelling(String test) {","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"        if (COMMON_NURSE_MISSPELLINGS.contains(test.trim().toLowerCase())) {","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"            return NURSE_SYMBOL;","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"        if (COMMON_PATIENT_MISSPELLINGS.contains(test.trim().toLowerCase())) {","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"            return PATIENT_SYMBOL;","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"        return test;","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"LolfoollorS"},"content":"     * Returns true if a given string is a valid category name.","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"LolfoollorS"},"content":"    public static boolean isValidCategoryName(String test) {","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"LolfoollorS"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"LolfoollorS"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"LolfoollorS"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"LolfoollorS"},"content":"                || (other instanceof seedu.address.model.category.Category // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"                \u0026\u0026 categoryName.equals(((seedu.address.model.category.Category) other).categoryName)); // state check","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"LolfoollorS"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"LolfoollorS"},"content":"        return categoryName.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"LolfoollorS"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"LolfoollorS"},"content":"        return categoryName;","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"yeehaoo"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"yeehaoo"},"content":"     * Checks if the two category objects are equal, ignoring case.","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"yeehaoo"},"content":"     * @param other other object to be checked against","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"yeehaoo"},"content":"     * @return true if both categories are the same, false otherwise","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"yeehaoo"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"yeehaoo"},"content":"    public boolean equalsIgnoreCase(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"yeehaoo"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"yeehaoo"},"content":"                || (other instanceof Category)","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"yeehaoo"},"content":"                        \u0026\u0026 categoryName.equalsIgnoreCase(((Category) other).categoryName);","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean isNurse() {","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"        return this.categoryName.equals(NURSE_SYMBOL);","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean isPatient() {","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"        return this.categoryName.equals(PATIENT_SYMBOL);","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean isPhysician() {","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"johnbenedictyan"},"content":"        return this.categoryName.equals(PHYSICIAN_SYMBOL);","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean isNextOfKin() {","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"johnbenedictyan"},"content":"        return this.categoryName.equals(NEXTOFKIN_SYMBOL);","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"johnbenedictyan":45,"yeehaoo":16,"LolfoollorS":49}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" * Guarantees: immutable; is valid as declared in","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":" * {@link #isValidAddress(String)}","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                        \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"johnbenedictyan":2,"-":56}},{"path":"src/main/java/seedu/address/model/person/BasePerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yeehaoo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"yeehaoo"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" * Represents a Base Person in the database with only name, phone and email","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":" * fields.","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"yeehaoo"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"yeehaoo"},"content":"public abstract class BasePerson {","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"yeehaoo"},"content":"    private final Name name;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"yeehaoo"},"content":"    private final Phone phone;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"yeehaoo"},"content":"    private final Email email;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"yeehaoo"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"yeehaoo"},"content":"     * Initialise name, phone and email for person","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"yeehaoo"},"content":"     * @param n name","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"yeehaoo"},"content":"     * @param p phone","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"yeehaoo"},"content":"     * @param e email","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"yeehaoo"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"yeehaoo"},"content":"    public BasePerson(Name n, Phone p, Email e) {","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"yeehaoo"},"content":"        requireAllNonNull(n, p, e);","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"yeehaoo"},"content":"        name \u003d n;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"yeehaoo"},"content":"        phone \u003d p;","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"yeehaoo"},"content":"        email \u003d e;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"yeehaoo"},"content":"    public abstract Category getCategory();","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"yeehaoo"},"content":"    public Name getName() {","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"yeehaoo"},"content":"        return name;","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"yeehaoo"},"content":"    public Phone getPhone() {","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"yeehaoo"},"content":"        return phone;","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"yeehaoo"},"content":"    public Email getEmail() {","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"yeehaoo"},"content":"        return email;","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"yeehaoo"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"yeehaoo"},"content":"    public String toString() {","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"yeehaoo"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"yeehaoo"},"content":"        builder.append(\"Name: \")","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"yeehaoo"},"content":"                .append(getName())","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"yeehaoo"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"yeehaoo"},"content":"                .append(getPhone())","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"yeehaoo"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"yeehaoo"},"content":"                .append(getEmail());","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"yeehaoo"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"yeehaoo"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"yeehaoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"yeehaoo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"yeehaoo"},"content":"            return true;","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"yeehaoo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"yeehaoo"},"content":"        if (!(other instanceof BasePerson)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"yeehaoo"},"content":"            return false;","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"yeehaoo"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"yeehaoo"},"content":"        BasePerson otherBasePerson \u003d (BasePerson) other;","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"yeehaoo"},"content":"        return otherBasePerson.getName().equals(getName())","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"yeehaoo"},"content":"                \u0026\u0026 otherBasePerson.getPhone().equals(getPhone())","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"yeehaoo"},"content":"                \u0026\u0026 otherBasePerson.getEmail().equals(getEmail());","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean isNurse() {","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"        return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean isPatient() {","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"        return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean isNextOfKin() {","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"        return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean isPhysician() {","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"        return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"yeehaoo"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"johnbenedictyan":19,"yeehaoo":71}},{"path":"src/main/java/seedu/address/model/person/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":" * Represents a date (can be nurse\u0027s unavailable date or fully-scheduled date).","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"public class Date {","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date should be in YYYY-MM-DD\"","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"            + \"For example, 2022-11-11\";","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"    /*","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"     * https://mkyong.com/regular-expressions/how-to-validate-date-with-regular-","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"     * expression/","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"     * The Date can only be in YYYY-MM-DD format without any space.","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"    public static final String VALIDATION_REGEX \u003d \"((?:20)[0-9][0-9])-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])\";","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"    public final LocalDate date;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"    private final String dateInString;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"     * @param date A valid date.","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"    public Date(String date) {","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"        this.dateInString \u003d date;","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"    public Date(LocalDate date) {","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"        this.dateInString \u003d date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"    public String getString() {","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"        return this.dateInString;","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"    public String toString() {","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"                        \u0026\u0026 date.equals(((Date) other).date)); // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"        return date.hashCode();","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"        return this.date;","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"xhphoong":75,"johnbenedictyan":6}},{"path":"src/main/java/seedu/address/model/person/DateComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":" * Represents a comparator to compare date.","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"public class DateComparator implements Comparator\u003cDate\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"     * Compare the date.","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"     * @param date1 the first object to be compared.","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"     * @param date2 the second object to be compared.","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"    public int compare(Date date1, Date date2) {","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"        LocalDate d1 \u003d date2.date;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"        LocalDate d2 \u003d date1.date;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"        if (d1.isBefore(d2)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"            return -1;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"        } else if (d1.isAfter(d2)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"            return 1;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"            return 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"xhphoong":28,"johnbenedictyan":1}},{"path":"src/main/java/seedu/address/model/person/DateSlot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":" * Represents a Patient\u0027s home-visit\u0027s date and time slot.","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":" * Guarantees: immutable; is valid as declared in","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":" * {@link #isValidDateSlot(String)}","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"public class DateSlot {","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date and slot should be in YYYY-MM-DD,SLOT_NUMBER.\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"            + \"The slot number can only be from 1 to 4. Slot 1 is 10am, slot 2 is 12pm, \"","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"            + \"slot 3 is 2pm and slot 4 is 4pm.\\n\" + \"For example, 2022-11-11,1\";","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"     * The DateSlot can only be in YYYY-MM-DD,SLOT_NUMBER format without any space.","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // @@author xhphoong-reused","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Reused from","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // https://mkyong.com/regular-expressions/how-to-validate-date-with-regular-expression/","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"((?:19|20)[0-9][0-9])-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])\"","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \",\" + \"([1-4])\";","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // @@author","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"    public static final String SUCCESS_VISIT_CHECK \u003d \"V\";","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"    public static final String FAIL_VISIT_CHECK \u003d \"FV\";","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"    public static final String SUCCESS_ASSIGNED_CHECK \u003d \"A\";","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"    private static final String SLOT_ONE \u003d \"10:00:00\";","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"    private static final String SLOT_TWO \u003d \"12:00:00\";","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"    private static final String SLOT_THREE \u003d \"14:00:00\";","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"    private static final String SLOT_FOUR \u003d \"16:00:00\";","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"    private static final Boolean DEFAULT_BOOLEAN \u003d false;","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"    private static final Long DEFAULT_EMPTY_ASSIGNED_NURSE \u003d Long.valueOf(-1); // No nurse assigned","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"    private static final String DEFAULT_CHECK \u003d \" \";","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"    public final LocalDateTime dateSlotTime;","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"    private final String dateSlotInString;","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"    private Boolean hasVisited;","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"    private Boolean hasAssigned;","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"    private Boolean isSuccessVisit;","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"    private Long nurseUidNo;","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"     * Constructs a {@code DateSlot}.","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"     *","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"     * @param dateSlot A valid dateSlot.","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"    public DateSlot(String dateSlot) {","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(dateSlot);","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"        checkArgument(isValidDateSlot(dateSlot), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"        this.dateSlotTime \u003d parseDateSlot(dateSlot);","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"        this.dateSlotInString \u003d dateSlot;","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"        this.hasVisited \u003d DEFAULT_BOOLEAN;","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"        this.hasAssigned \u003d DEFAULT_BOOLEAN;","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"        this.isSuccessVisit \u003d DEFAULT_BOOLEAN;","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"        this.nurseUidNo \u003d DEFAULT_EMPTY_ASSIGNED_NURSE;","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"        checkDateTime();","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"     * Constructs a {@code DateSlot}.","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"    public DateSlot(String dateSlot, Boolean isAssigned, Boolean isVisited, Boolean isSucessVisit, Long nurseUidNo) {","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(dateSlot);","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(isAssigned);","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(isVisited);","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(isSucessVisit);","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(nurseUidNo);","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"        this.dateSlotTime \u003d parseDateSlot(dateSlot);","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"        this.dateSlotInString \u003d dateSlot;","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"        this.hasVisited \u003d isVisited;","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"        this.hasAssigned \u003d isAssigned;","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"        this.isSuccessVisit \u003d isSucessVisit;","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"        this.nurseUidNo \u003d nurseUidNo;","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"        checkDateTime();","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"    private static LocalDateTime parseDateSlot(String dateSlot) {","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"        String[] s \u003d dateSlot.split(\",\");","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"        String date \u003d s[0];","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"        int slotNumber \u003d Integer.parseInt(s[1]);","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"        String time \u003d \"T\";","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"        if (slotNumber \u003d\u003d 1) {","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"            time \u003d time + SLOT_ONE;","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"xhphoong"},"content":"        } else if (slotNumber \u003d\u003d 2) {","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"            time \u003d time + SLOT_TWO;","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"        } else if (slotNumber \u003d\u003d 3) {","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"            time \u003d time + SLOT_THREE;","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"xhphoong"},"content":"        } else if (slotNumber \u003d\u003d 4) {","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"            time \u003d time + SLOT_FOUR;","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":99,"author":{"gitId":"xhphoong"},"content":"        String dateTime \u003d date + time;","lastModifiedDate":"2022-10-23"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"        return LocalDateTime.parse(dateTime);","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns true if a given string is a valid date and slot.","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"johnbenedictyan"},"content":"    public static boolean isValidDateSlot(String test) {","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"johnbenedictyan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"johnbenedictyan"},"content":"    public String getString() {","lastModifiedDate":"2022-10-28"},{"lineNumber":111,"author":{"gitId":"johnbenedictyan"},"content":"        return getAssignCheck() + \":\" + getVisitCheck() + \":\"","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"johnbenedictyan"},"content":"                + this.dateSlotInString + \":\" + nurseUidNo;","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"johnbenedictyan"},"content":"     * Check the datetime of the DateSlot with the current datetime from the system","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"johnbenedictyan"},"content":"     * clock.","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"xhphoong"},"content":"     * Mark isVisited true if the datetime is before the current datetime.","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"xhphoong"},"content":"    public void checkDateTime() {","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"xhphoong"},"content":"        LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"xhphoong"},"content":"        if (this.dateSlotTime.isBefore(currentDateTime)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"xhphoong"},"content":"            this.hasVisited \u003d true;","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"xhphoong"},"content":"            this.isSuccessVisit \u003d true;","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"xhphoong"},"content":"     * Mark DateSlot as assigned with the assigned nurse uid.","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"xhphoong"},"content":"    public void mark(Long nurseUidNo) {","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"xhphoong"},"content":"        this.hasAssigned \u003d true;","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"xhphoong"},"content":"        this.nurseUidNo \u003d nurseUidNo;","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"xhphoong"},"content":"     * Unmark DateSlot (not assigned) and remove assigned nurse uid.","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"xhphoong"},"content":"    public void unmark() {","lastModifiedDate":"2022-10-27"},{"lineNumber":140,"author":{"gitId":"xhphoong"},"content":"        this.hasAssigned \u003d false;","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"xhphoong"},"content":"        this.nurseUidNo \u003d DEFAULT_EMPTY_ASSIGNED_NURSE;","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":143,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"xhphoong"},"content":"     * Mark DateSlot as fail to visit.","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":147,"author":{"gitId":"xhphoong"},"content":"    public void markFail() {","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"xhphoong"},"content":"        this.isSuccessVisit \u003d DEFAULT_BOOLEAN;","lastModifiedDate":"2022-10-27"},{"lineNumber":149,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":150,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":151,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":152,"author":{"gitId":"xhphoong"},"content":"     * Mark DateSlot as success to visit.","lastModifiedDate":"2022-10-27"},{"lineNumber":153,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":154,"author":{"gitId":"xhphoong"},"content":"    public void markSuccess() {","lastModifiedDate":"2022-10-27"},{"lineNumber":155,"author":{"gitId":"xhphoong"},"content":"        this.isSuccessVisit \u003d true;","lastModifiedDate":"2022-10-27"},{"lineNumber":156,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":157,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":158,"author":{"gitId":"xhphoong"},"content":"    private String getAssignCheck() {","lastModifiedDate":"2022-10-27"},{"lineNumber":159,"author":{"gitId":"xhphoong"},"content":"        String assignCheck \u003d DEFAULT_CHECK;","lastModifiedDate":"2022-10-27"},{"lineNumber":160,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":161,"author":{"gitId":"johnbenedictyan"},"content":"        if (this.hasAssigned) {","lastModifiedDate":"2022-10-28"},{"lineNumber":162,"author":{"gitId":"xhphoong"},"content":"            assignCheck \u003d SUCCESS_ASSIGNED_CHECK;","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"xhphoong"},"content":"        return assignCheck;","lastModifiedDate":"2022-10-27"},{"lineNumber":166,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":167,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":168,"author":{"gitId":"xhphoong"},"content":"    private String getVisitCheck() {","lastModifiedDate":"2022-10-27"},{"lineNumber":169,"author":{"gitId":"xhphoong"},"content":"        String visitCheck \u003d DEFAULT_CHECK;","lastModifiedDate":"2022-10-27"},{"lineNumber":170,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":171,"author":{"gitId":"johnbenedictyan"},"content":"        if (this.hasVisited \u0026\u0026 this.isSuccessVisit) {","lastModifiedDate":"2022-10-28"},{"lineNumber":172,"author":{"gitId":"xhphoong"},"content":"            visitCheck \u003d SUCCESS_VISIT_CHECK;","lastModifiedDate":"2022-10-27"},{"lineNumber":173,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"johnbenedictyan"},"content":"        } else if (this.hasVisited \u0026\u0026 !this.isSuccessVisit) {","lastModifiedDate":"2022-10-28"},{"lineNumber":175,"author":{"gitId":"xhphoong"},"content":"            visitCheck \u003d FAIL_VISIT_CHECK;","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"xhphoong"},"content":"        return visitCheck;","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":181,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":182,"author":{"gitId":"xhphoong"},"content":"    public String getDateSlotInString() {","lastModifiedDate":"2022-10-27"},{"lineNumber":183,"author":{"gitId":"xhphoong"},"content":"        return this.dateSlotInString;","lastModifiedDate":"2022-10-27"},{"lineNumber":184,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":185,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":186,"author":{"gitId":"xhphoong"},"content":"    public String getDateSlotFormatted() {","lastModifiedDate":"2022-10-27"},{"lineNumber":187,"author":{"gitId":"xhphoong"},"content":"        return this.dateSlotTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":188,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":189,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":190,"author":{"gitId":"xhphoong"},"content":"    public Boolean getHasVisited() {","lastModifiedDate":"2022-10-27"},{"lineNumber":191,"author":{"gitId":"xhphoong"},"content":"        return this.hasVisited;","lastModifiedDate":"2022-10-27"},{"lineNumber":192,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":193,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":194,"author":{"gitId":"xhphoong"},"content":"    public Boolean getHasAssigned() {","lastModifiedDate":"2022-10-27"},{"lineNumber":195,"author":{"gitId":"xhphoong"},"content":"        return this.hasAssigned;","lastModifiedDate":"2022-10-27"},{"lineNumber":196,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":197,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":198,"author":{"gitId":"xhphoong"},"content":"    public Boolean getIsSuccessVisit() {","lastModifiedDate":"2022-10-27"},{"lineNumber":199,"author":{"gitId":"xhphoong"},"content":"        return this.isSuccessVisit;","lastModifiedDate":"2022-10-27"},{"lineNumber":200,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":201,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":202,"author":{"gitId":"xhphoong"},"content":"    public Long getNurseUidNo() {","lastModifiedDate":"2022-10-27"},{"lineNumber":203,"author":{"gitId":"xhphoong"},"content":"        return this.nurseUidNo;","lastModifiedDate":"2022-10-27"},{"lineNumber":204,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":205,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":206,"author":{"gitId":"xhphoong"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2022-10-27"},{"lineNumber":207,"author":{"gitId":"xhphoong"},"content":"        return this.dateSlotTime;","lastModifiedDate":"2022-10-27"},{"lineNumber":208,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":209,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":210,"author":{"gitId":"xhphoong"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-10-27"},{"lineNumber":211,"author":{"gitId":"xhphoong"},"content":"        String[] s \u003d dateSlotInString.split(\",\");","lastModifiedDate":"2022-10-27"},{"lineNumber":212,"author":{"gitId":"xhphoong"},"content":"        String date \u003d s[0];","lastModifiedDate":"2022-10-27"},{"lineNumber":213,"author":{"gitId":"johnbenedictyan"},"content":"        return LocalDate.parse(date);","lastModifiedDate":"2022-10-28"},{"lineNumber":214,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":215,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":216,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":217,"author":{"gitId":"xhphoong"},"content":"    public String toString() {","lastModifiedDate":"2022-10-23"},{"lineNumber":218,"author":{"gitId":"xhphoong"},"content":"        return \"[\" + getAssignCheck() + \"] \" + \"[\" + getVisitCheck() + \"] \"","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"xhphoong"},"content":"                + dateSlotTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":220,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":221,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":222,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":223,"author":{"gitId":"xhphoong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-23"},{"lineNumber":224,"author":{"gitId":"xhphoong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-23"},{"lineNumber":225,"author":{"gitId":"xhphoong"},"content":"                || (other instanceof DateSlot // instanceof handles nulls","lastModifiedDate":"2022-10-23"},{"lineNumber":226,"author":{"gitId":"xhphoong"},"content":"                        \u0026\u0026 dateSlotTime.equals(((DateSlot) other).dateSlotTime)); // state check","lastModifiedDate":"2022-10-23"},{"lineNumber":227,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":228,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":229,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":230,"author":{"gitId":"xhphoong"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-23"},{"lineNumber":231,"author":{"gitId":"xhphoong"},"content":"        return dateSlotTime.hashCode();","lastModifiedDate":"2022-10-23"},{"lineNumber":232,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":233,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":234,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"xhphoong":206,"johnbenedictyan":22,"-":6}},{"path":"src/main/java/seedu/address/model/person/DateSlotComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":" * Represents a comparator to compare date and time slot.","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"public class DateSlotComparator implements Comparator\u003cDateSlot\u003e {","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"     * Compare the home visits\u0027 date and time slot.","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"     * @param dateTimeSlot1 the first object to be compared.","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"     * @param dateTimeSlot2 the second object to be compared.","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"    public int compare(DateSlot dateTimeSlot1, DateSlot dateTimeSlot2) {","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"        LocalDateTime d1 \u003d dateTimeSlot1.dateSlotTime;","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"        LocalDateTime d2 \u003d dateTimeSlot2.dateSlotTime;","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"        if (d1.isBefore(d2)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"            return -1;","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"        } else if (d1.isAfter(d2)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"            return 1;","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"            return 0;","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"xhphoong":28,"johnbenedictyan":1}},{"path":"src/main/java/seedu/address/model/person/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":" * Represents a Person\u0027s gender in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGender(String)}","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"public class Gender {","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Gender can only be F or M, F for female, M for male\";","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"    public static final String FEMALE_SYMBOL \u003d \"F\";","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"    public static final String MALE_SYMBOL \u003d \"M\";","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"     * The gender can only be F or M.","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\" + FEMALE_SYMBOL + \"|\" + MALE_SYMBOL + \"]\";","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    private static final ArrayList\u003cString\u003e COMMON_FEMALE_MISSPELLINGS \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"            List.of(\"female\", \"females\", \"f\"));","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    private static final ArrayList\u003cString\u003e COMMON_MALE_MISSPELLINGS \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"            List.of(\"male\", \"males\", \"m\"));","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"    public final String gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"     * Constructs a {@code Gender}.","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"     * @param gender A valid gender.","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"    public Gender(String gender) {","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(gender);","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"     * Catches and formats any common misspellings as defined in the common","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"     * misspelling constant of females and males","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"     * @param test The String to be tested","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"     * @return The female or male symbol if it is a misspelling and the original","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"     *         text otherwise","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"    public static String formatMisspelling(String test) {","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"        if (COMMON_FEMALE_MISSPELLINGS.contains(test.trim().toLowerCase())) {","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"            return FEMALE_SYMBOL;","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"        if (COMMON_MALE_MISSPELLINGS.contains(test.trim().toLowerCase())) {","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"            return MALE_SYMBOL;","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"        return test;","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"     * Returns true if a given string is a valid gender.","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"    public static boolean isValidGender(String test) {","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"        return this.gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"                || (other instanceof Gender // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"                        \u0026\u0026 gender.equals(((Gender) other).gender)); // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"        return gender.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"yeehaoo"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"yeehaoo"},"content":"     * Checks if the two gender objects are equal, ignoring case.","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"yeehaoo"},"content":"     * @param other other object to be checked against","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"yeehaoo"},"content":"     * @return true if both genders are the same, false otherwise","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"yeehaoo"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"yeehaoo"},"content":"    public boolean equalsIgnoreCase(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"yeehaoo"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"yeehaoo"},"content":"                || (other instanceof Gender)","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"yeehaoo"},"content":"                        \u0026\u0026 gender.equalsIgnoreCase(((Gender) other).gender);","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"xhphoong":55,"johnbenedictyan":25,"yeehaoo":10,"LolfoollorS":2}},{"path":"src/main/java/seedu/address/model/person/HomeVisit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":" * Represents a Nurse\u0027s home-visit.","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" * Guarantees: immutable; is valid as declared in","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" * {@link #isValidHomeVisit(String)}","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"public class HomeVisit {","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Home Visit should be in YYYY-MM-DD,SLOT_NUMBER:\"","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"            + \"PATIENT_UID_NUMBER.\\n\" + \"For example, 2022-11-11,1:2\";","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     * The DateSlot can only be in YYYY-MM-DD,SLOT_NUMBER:PATIENT NUMBER format","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     * without any space.","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // @@author xhphoong-reused","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Reused from","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // https://mkyong.com/regular-expressions/how-to-validate-date-with-regular-expression/","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"((?:19|20)[0-9][0-9])-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])\"","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \",\" + \"([1-4])\" + \":\" + \"\\\\d{1,18}\";","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // @@author","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"    public final DateSlot homeVisitDateSlot;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"    public final Long homeVisitPatientUidNo;","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"     * Constructs a {@code HomeVisit}.","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"     * @param dateSlot A valid dateSlot, uid A valid uidNo.","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"    public HomeVisit(DateSlot dateSlot, Long uid) {","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(dateSlot);","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(uid);","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"        this.homeVisitDateSlot \u003d dateSlot;","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"        this.homeVisitPatientUidNo \u003d uid;","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"     * Constructs a {@code HomeVisit}.","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"    public HomeVisit(String dateSlotAndUid) {","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(dateSlotAndUid);","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"        String[] s \u003d dateSlotAndUid.split(\":\");","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"        this.homeVisitDateSlot \u003d new DateSlot(s[0]);","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"        this.homeVisitPatientUidNo \u003d Long.parseLong(s[1]);","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns true if a given string is a valid home visit.","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"    public static boolean isValidHomeVisit(String test) {","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"    public String getString() {","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"        return this.homeVisitDateSlot.getDateSlotInString() + \":\" + this.homeVisitPatientUidNo;","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"    public String toString() {","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"        return homeVisitDateSlot.getDateSlotFormatted() + \" : [UID] \" + this.homeVisitPatientUidNo;","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"    public DateSlot getDateSlot() {","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"        return this.homeVisitDateSlot;","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"    public Long getHomeVisitPatientUidNo() {","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"        return this.homeVisitPatientUidNo;","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"                || (other instanceof HomeVisit // instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"                        \u0026\u0026 homeVisitDateSlot.equals(((HomeVisit) other).homeVisitDateSlot)","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"                        \u0026\u0026 homeVisitPatientUidNo.equals(((HomeVisit) other).homeVisitPatientUidNo)); // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"        return homeVisitDateSlot.hashCode() + homeVisitPatientUidNo.hashCode();","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"xhphoong":71,"johnbenedictyan":11,"-":6}},{"path":"src/main/java/seedu/address/model/person/HomeVisitComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":" * Represents a comparator to compare home visit time.","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"public class HomeVisitComparator implements Comparator\u003cHomeVisit\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"     * Compare the home visit time.","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"     * @param homeVisit1 the first object to be compared.","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"     * @param homeVisit2 the second object to be compared.","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"    public int compare(HomeVisit homeVisit1, HomeVisit homeVisit2) {","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"        LocalDateTime d1 \u003d homeVisit1.homeVisitDateSlot.dateSlotTime;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"        LocalDateTime d2 \u003d homeVisit2.homeVisitDateSlot.dateSlotTime;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"        if (d1.isBefore(d2)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"            return -1;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"        } else if (d1.isAfter(d2)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"            return 1;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"            return 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"xhphoong":30,"johnbenedictyan":1}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"mlzt2000"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"mlzt2000"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                        \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":56,"mlzt2000":2}},{"path":"src/main/java/seedu/address/model/person/NextOfKin.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yeehaoo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"yeehaoo"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"yeehaoo"},"content":" * Represents Next of Kin for patient","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"yeehaoo"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"yeehaoo"},"content":"public class NextOfKin extends BasePerson {","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"yeehaoo"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"yeehaoo"},"content":"     * Initialise next of kin user with name, phone and email.","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"yeehaoo"},"content":"     * @param n name","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"yeehaoo"},"content":"     * @param p phone","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"yeehaoo"},"content":"     * @param e email","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"yeehaoo"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"yeehaoo"},"content":"    public NextOfKin(Name n, Phone p, Email e) {","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"yeehaoo"},"content":"        super(n, p, e);","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"yeehaoo"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"yeehaoo"},"content":"    public Category getCategory() {","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"yeehaoo"},"content":"        return new Category(Category.NEXTOFKIN_SYMBOL);","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean isNextOfKin() {","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"        return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"yeehaoo"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"johnbenedictyan":5,"yeehaoo":24}},{"path":"src/main/java/seedu/address/model/person/Nurse.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":" * Represents a nurse that home-visit patients in Healthcare Xpress book.","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"public class Nurse extends Person {","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"    private static final String MESSAGE_FOR_EMPTY_HOMEVISITLIST \u003d \"No home visit assigned yet.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"    private static final String MESSAGE_FOR_EMPTY_UNAVAILABLEDATE \u003d \"No unavailable date.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"    private final List\u003cHomeVisit\u003e homeVisitList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"    private final List\u003cDate\u003e unavailableDateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"    private final List\u003cDate\u003e fullyScheduledDateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"    public Nurse(Uid uid, Name name, Gender gender, Phone phone, Email email, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"            List\u003cDate\u003e unavailableDates, List\u003cHomeVisit\u003e homeVisits, List\u003cDate\u003e fullyScheduledDates) {","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"LolfoollorS"},"content":"        super(uid, name, gender, phone, email, address, tags);","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"        this.unavailableDateList.addAll(unavailableDates);","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"        this.homeVisitList.addAll(homeVisits);","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"        this.fullyScheduledDateList.addAll(fullyScheduledDates);","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"LolfoollorS"},"content":"    public Category getCategory() {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"LolfoollorS"},"content":"        return new Category(\"N\");","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"    public String getCategoryIndicator() {","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"        return PersonType.NURSE.toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"        return super.hashCode() + Objects.hash(unavailableDateList) + Objects.hash(homeVisitList)","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"                + Objects.hash(fullyScheduledDateList);","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"     * Returns a sorted home visit list","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"    public List\u003cHomeVisit\u003e getHomeVisits() {","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"        HomeVisitComparator comp \u003d new HomeVisitComparator();","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"        this.homeVisitList.sort(comp);","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"        return this.homeVisitList;","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"     * Returns a sorted unavailable dates","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"    public List\u003cDate\u003e getUnavailableDates() {","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"        DateComparator comp \u003d new DateComparator();","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"        this.unavailableDateList.sort(comp);","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"        return this.unavailableDateList;","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"     * Returns a sorted fully scheduled dates","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"    public List\u003cDate\u003e getFullyScheduledDates() {","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"        DateComparator comp \u003d new DateComparator();","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"        this.fullyScheduledDateList.sort(comp);","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"        return this.fullyScheduledDateList;","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"    public String getHomesVisitsInString() {","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"        StringBuilder dateSlotListSB \u003d new StringBuilder();","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"        if (this.homeVisitList.isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"            dateSlotListSB \u003d new StringBuilder(MESSAGE_FOR_EMPTY_HOMEVISITLIST);","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"            return dateSlotListSB.toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"        for (HomeVisit homeVisit : getHomeVisits()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"            dateSlotListSB.append(homeVisit.toString()).append(\" , \");","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"        return dateSlotListSB.toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"xhphoong"},"content":"    public String getUnavailableDatesInString() {","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"        StringBuilder dateListSB \u003d new StringBuilder();","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"        if (this.unavailableDateList.isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"xhphoong"},"content":"            dateListSB \u003d new StringBuilder(MESSAGE_FOR_EMPTY_UNAVAILABLEDATE);","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"            return dateListSB.toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"xhphoong"},"content":"        for (Date date : getUnavailableDates()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"            dateListSB.append(date.toString()).append(\" , \");","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"        return dateListSB.toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"LolfoollorS"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"xhphoong"},"content":"        String homeVisitList \u003d getHomesVisitsInString();","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"xhphoong"},"content":"        String unavailableDateList \u003d getUnavailableDatesInString();","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"xhphoong"},"content":"        return \"Category: \" + getCategory() + \" \" + super.toString() + \"; Unavailable Dates:\" + unavailableDateList","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"xhphoong"},"content":"                + \"; Home Visits:\" + homeVisitList;","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean isNurse() {","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"johnbenedictyan"},"content":"        return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"xhphoong":90,"johnbenedictyan":3,"LolfoollorS":24}},{"path":"src/main/java/seedu/address/model/person/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"mlzt2000"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"mlzt2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"mlzt2000"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"mlzt2000"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"yeehaoo"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"mlzt2000"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":" * Represents a patient that requires home-visit in Healthcare Xpress book.","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"public class Patient extends Person {","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"    private static final String MESSAGE_FOR_EMPTY_DATESLOT \u003d \"Home Visit date and slot has not been set yet.\";","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"yeehaoo"},"content":"    private static final String NO_NEXTOFKIN_SET \u003d \"No next of kin info was added for this patient.\";","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"yeehaoo"},"content":"    private static final String NO_PHYSICIAN_SET \u003d \"There is currently no attending physician for this patient.\";","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"    public final List\u003cDateSlot\u003e dateSlots \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"yeehaoo"},"content":"    private final Optional\u003cPhysician\u003e attendingPhysician;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"yeehaoo"},"content":"    private final Optional\u003cNextOfKin\u003e nextOfKin;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"yeehaoo"},"content":"     * Initialise patient with no attending physician and no next of kin.","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"LolfoollorS"},"content":"    public Patient(Uid uid, Name name, Gender gender, Phone phone, Email email, Address address,","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"            Set\u003cTag\u003e tags, List\u003cDateSlot\u003e dateTimeSlot) {","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"LolfoollorS"},"content":"        super(uid, name, gender, phone, email, address, tags);","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"        requireAllNonNull(dateTimeSlot);","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"        this.dateSlots.addAll(dateTimeSlot);","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"yeehaoo"},"content":"        attendingPhysician \u003d Optional.empty();","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"yeehaoo"},"content":"        nextOfKin \u003d Optional.empty();","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"     * Every field, except attending physician and next of kin, must be present and","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"     * not null.","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"LolfoollorS"},"content":"    public Patient(Uid uid, Name name, Gender gender, Phone phone, Email email, Address address,","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"            Set\u003cTag\u003e tags, List\u003cDateSlot\u003e dateTime, Physician p, NextOfKin n) {","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"LolfoollorS"},"content":"        super(uid, name, gender, phone, email, address, tags);","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"LolfoollorS"},"content":"        requireAllNonNull(dateTime);","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"        this.dateSlots.addAll(dateTime);","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"yeehaoo"},"content":"        attendingPhysician \u003d Optional.ofNullable(p);","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"yeehaoo"},"content":"        nextOfKin \u003d Optional.ofNullable(n);","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"yeehaoo"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"yeehaoo"},"content":"     * Initialise patient with given attending physician and next of kin.","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"yeehaoo"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"yeehaoo"},"content":"    public Patient(Uid uid, Name name, Gender gender, Phone phone, Email email, Address address,","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"            Set\u003cTag\u003e tags, List\u003cDateSlot\u003e dateSlot,","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"yeehaoo"},"content":"            Optional\u003cPhysician\u003e p, Optional\u003cNextOfKin\u003e n) {","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"yeehaoo"},"content":"        super(uid, name, gender, phone, email, address, tags);","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"        requireAllNonNull(dateSlot);","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"        this.dateSlots.addAll(dateSlot);","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"yeehaoo"},"content":"        attendingPhysician \u003d p;","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"yeehaoo"},"content":"        nextOfKin \u003d n;","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"yeehaoo"},"content":"    public Optional\u003cPhysician\u003e getAttendingPhysician() {","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"yeehaoo"},"content":"        return attendingPhysician;","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"yeehaoo"},"content":"    public Optional\u003cNextOfKin\u003e getNextOfKin() {","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"yeehaoo"},"content":"        return nextOfKin;","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"yeehaoo"},"content":"    public String getNextOfKinDetails() {","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"yeehaoo"},"content":"        String[] output \u003d new String[] { NO_NEXTOFKIN_SET };","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"yeehaoo"},"content":"        nextOfKin.ifPresent(x -\u003e output[0] \u003d x.toString());","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"yeehaoo"},"content":"        return output[0];","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"yeehaoo"},"content":"    public String getPhysicianDetails() {","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"yeehaoo"},"content":"        String[] output \u003d new String[] { NO_PHYSICIAN_SET };","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"yeehaoo"},"content":"        attendingPhysician.ifPresent(x -\u003e output[0] \u003d x.toString());","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"yeehaoo"},"content":"        return output[0];","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"LolfoollorS"},"content":"    public Category getCategory() {","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"yeehaoo"},"content":"        return new Category(Category.PATIENT_SYMBOL);","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"LolfoollorS"},"content":"    public String getCategoryIndicator() {","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"        return PersonType.PATIENT.toString();","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"LolfoollorS"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"LolfoollorS"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"        return super.hashCode() + Objects.hash(dateSlots);","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"     * Returns a sorted date and slot list","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"    public List\u003cDateSlot\u003e getDatesSlots() {","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"        DateSlotComparator comp \u003d new DateSlotComparator();","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"        this.dateSlots.sort(comp);","lastModifiedDate":"2022-10-23"},{"lineNumber":105,"author":{"gitId":"xhphoong"},"content":"        return this.dateSlots;","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"xhphoong"},"content":"    public String getDatesSlotsInString() {","lastModifiedDate":"2022-10-23"},{"lineNumber":109,"author":{"gitId":"xhphoong"},"content":"        StringBuilder dateSlotListSB \u003d new StringBuilder();","lastModifiedDate":"2022-10-23"},{"lineNumber":110,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"xhphoong"},"content":"        if (this.dateSlots.isEmpty()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"xhphoong"},"content":"            dateSlotListSB \u003d new StringBuilder(MESSAGE_FOR_EMPTY_DATESLOT);","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"xhphoong"},"content":"            return dateSlotListSB.toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":114,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"xhphoong"},"content":"        for (DateSlot dateslot : getDatesSlots()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":117,"author":{"gitId":"xhphoong"},"content":"            dateSlotListSB.append(dateslot.toString()).append(\" , \");","lastModifiedDate":"2022-10-23"},{"lineNumber":118,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"xhphoong"},"content":"        return dateSlotListSB.toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":123,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"LolfoollorS"},"content":"    public String toString() {","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"xhphoong"},"content":"        String dateSlotList \u003d getDatesSlotsInString();","lastModifiedDate":"2022-10-23"},{"lineNumber":126,"author":{"gitId":"LolfoollorS"},"content":"        return \"Category: P \" + super.toString()","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"xhphoong"},"content":"                + \"; Home Visits Date and Time:\" + dateSlotList;","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean isPatient() {","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"johnbenedictyan"},"content":"        return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"xhphoong":27,"johnbenedictyan":7,"yeehaoo":43,"mlzt2000":8,"LolfoollorS":48}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":" * Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":" * immutable.","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"yeehaoo"},"content":"public class Person extends BasePerson {","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"    private final Uid uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"    private final Gender gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"    // Check fields","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"    private final int similarityThreshold \u003d 5;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"    public Person(Uid uid, Name name, Gender gender, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"yeehaoo"},"content":"        super(name, phone, email);","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"yeehaoo"},"content":"        requireAllNonNull(address, tags);","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"        if (Objects.isNull(uid)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"            this.uid \u003d new Uid();","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"        } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"            this.uid \u003d uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the id","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"    public Uid getUid() {","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"        return uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"    public Gender getGender() {","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"        return gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"LolfoollorS"},"content":"    public Category getCategory() {","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"        return null;","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"    public String getCategoryIndicator() {","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"        return \"person\";","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns an immutable tag set, which throws","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"        return otherPerson !\u003d null \u0026\u0026 otherPerson.getUid().equals(getUid());","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"xhphoong"},"content":"        return otherPerson.getUid().equals(getUid())","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"johnbenedictyan"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"xhphoong"},"content":"                \u0026\u0026 otherPerson.getGender().equals(getGender())","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"yeehaoo"},"content":"        return Objects.hash(uid, getName(), gender, getPhone(), getEmail(), address, tags);","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"xhphoong"},"content":"        builder.append(\"Uid: \")","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"xhphoong"},"content":"                .append(getUid())","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"yeehaoo"},"content":"                .append(super.toString())","lastModifiedDate":"2022-10-20"},{"lineNumber":128,"author":{"gitId":"xhphoong"},"content":"                .append(\"; Gender: \")","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"xhphoong"},"content":"                .append(getGender())","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns true if both persons are similar to each other.","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean isSimilarPerson(Person otherPerson) {","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"johnbenedictyan"},"content":"        int counter \u003d 0;","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"johnbenedictyan"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"johnbenedictyan"},"content":"            return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"johnbenedictyan"},"content":"        if (otherPerson.getName().equals(getName())) {","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"johnbenedictyan"},"content":"            counter++;","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"johnbenedictyan"},"content":"        if (otherPerson.getGender().equals(getGender())) {","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"johnbenedictyan"},"content":"            counter++;","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"johnbenedictyan"},"content":"        if (otherPerson.getPhone().equals(getPhone())) {","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"johnbenedictyan"},"content":"            counter++;","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"johnbenedictyan"},"content":"        if (otherPerson.getEmail().equals(getEmail())) {","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"johnbenedictyan"},"content":"            counter++;","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":166,"author":{"gitId":"johnbenedictyan"},"content":"        if (otherPerson.getAddress().equals(getAddress())) {","lastModifiedDate":"2022-10-12"},{"lineNumber":167,"author":{"gitId":"johnbenedictyan"},"content":"            counter++;","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"johnbenedictyan"},"content":"        if (otherPerson.getTags().equals(getTags())) {","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"johnbenedictyan"},"content":"            counter++;","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":173,"author":{"gitId":"johnbenedictyan"},"content":"        return counter \u003e\u003d similarityThreshold;","lastModifiedDate":"2022-10-12"},{"lineNumber":174,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xhphoong":22,"johnbenedictyan":50,"yeehaoo":5,"-":96,"LolfoollorS":2}},{"path":"src/main/java/seedu/address/model/person/PersonType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * Enum to represent the type of person someone is","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public enum PersonType {","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"    PATIENT(\"Patient\"), NURSE(\"Nurse\");","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"    private final String personTypeName;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    PersonType(String name) {","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"        this.personTypeName \u003d name;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    public String toString() {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"        return personTypeName;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"johnbenedictyan":20}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Phone numbers should \"","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"            + \"only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                        \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"johnbenedictyan":2,"-":50}},{"path":"src/main/java/seedu/address/model/person/Physician.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yeehaoo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"yeehaoo"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"yeehaoo"},"content":" * Represents a physician in the database.","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"yeehaoo"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"yeehaoo"},"content":"public class Physician extends BasePerson {","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"yeehaoo"},"content":"    public Physician(Name n, Phone p, Email e) {","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"yeehaoo"},"content":"        super(new Name(\"Dr \" + n.fullName), p, e);","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"yeehaoo"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"yeehaoo"},"content":"    public Category getCategory() {","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"yeehaoo"},"content":"        return new Category(Category.PHYSICIAN_SYMBOL);","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"yeehaoo"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"yeehaoo"},"content":"    public String toString() {","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"yeehaoo"},"content":"        return \"Attending Physician \" + super.toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean isPhysician() {","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"        return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"yeehaoo"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"johnbenedictyan":4,"yeehaoo":23}},{"path":"src/main/java/seedu/address/model/person/Uid.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.concurrent.atomic.AtomicLong;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":" * Represents a Person\u0027s Uid in the records system.","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidUid(String)}","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"public class Uid implements Comparable\u003cUid\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Ids should only contain numeric characters,\"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"            + \" and it should not be blank\";","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"mlzt2000"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"     * The first character of the id must not be a whitespace,","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[0-9]*$\";","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    private static final AtomicLong NEXT_UID \u003d new AtomicLong(0);","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"    private static final Long UNIVERSAL_UID \u003d 99999L;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"    public final Long uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     * Constructor for Uid using a String as an input","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"     * @param uid","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"    public Uid(String uid) {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"        long parsedUid \u003d Long.parseLong(uid);","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"        this.uid \u003d parsedUid;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"        NEXT_UID.set(parsedUid + 1);","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"     * Constructor for Uid using a Long as an input","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"     * @param uid","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"    public Uid(Long uid) {","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"        NEXT_UID.set(uid + 1);","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"     * Constructor for Uid","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"    public Uid() {","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"        this.uid \u003d NEXT_UID.incrementAndGet();","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns true if a given string is a valid id.","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"    public static boolean isValidUid(String test) {","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"    public static Uid generateUniversalUid() {","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"        return new Uid(UNIVERSAL_UID);","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the id","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"    public Long getUid() {","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"        return uid;","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"        return uid.toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"            return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"        if (!(other instanceof Uid)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"        Uid otherUid \u003d (Uid) other;","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"        if (this.uid.equals(UNIVERSAL_UID) || otherUid.uid.equals(UNIVERSAL_UID)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"            return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"        // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"johnbenedictyan"},"content":"        return uid.equals(otherUid.uid);","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"        return uid.hashCode();","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"johnbenedictyan"},"content":"    public int compareTo(Uid o) {","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"        return uid.compareTo(o.getUid());","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"xhphoong":4,"johnbenedictyan":100,"mlzt2000":1}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":" * A list of persons that enforces uniqueness between its elements and does not","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":" * allow nulls.","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":" * A person is considered unique by comparing using","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":" * {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":" * the person being added or updated is","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":" * a person uses Person#equals(Object) so","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d FXCollections","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"            .unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns true if the list contains an similar person as the given argument.","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean containsSimilar(Person toCheck) {","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"        return internalList.stream().anyMatch(toCheck::isSimilarPerson);","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns an optional that contains an similar person as the given argument.","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"    public Optional\u003cPerson\u003e findSimilarPerson(Person toCheck) {","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"        return internalList.stream().filter(toCheck::isSimilarPerson).findFirst();","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"     * The person identity of {@code editedPerson} must not be the same as another","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"     * existing person in the list.","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"johnbenedictyan":30,"-":129}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * Signals that the operation will result in duplicate Persons (Persons are","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" * considered duplicates if they have the same","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"johnbenedictyan":2,"-":10}},{"path":"src/main/java/seedu/address/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class PersonNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"johnbenedictyan":2,"-":5}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" * Guarantees: immutable; name is valid as declared in","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":" * {@link #isValidTagName(String)}","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                        \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"johnbenedictyan":2,"-":53}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateSlot;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.HomeVisit;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.person.Nurse;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"            new Nurse(new Uid(1L), new Name(\"Betsy\"), new Gender(\"F\"), new Phone(\"98345432\"),","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"                    new Email(\"betsy@example.com\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"                    new Address(\"Blk 431 Ang Mo Kio Ave 10, Singapore 560431 #01-01\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"                    getTagSet(\"Pediatric\", \"heartDiseaseSpecialist\"), getUnavailableDateList(\"2022-11-11\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"                    getHomeVisitsList(\"2022-12-12,1:4\"), getFullyScheduledDateList(\"2022-10-12\")),","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"            new Nurse(new Uid(2L), new Name(\"Jason\"), new Gender(\"M\"), new Phone(\"98723432\"),","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"                    new Email(\"jason@example.com\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"                    new Address(\"Blk 855 Woodlands Street 83, Singapore 730855 #01-01\"),","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"                    getTagSet(\"asthmaSpecialist\"), getUnavailableDateList(\"2022-10-09\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"                    getHomeVisitsList(\"2022-10-10,2:5\", \"2022-12-24,1:6\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"                    getFullyScheduledDateList(\"2022-10-10\")),","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"            new Patient(new Uid(3L), new Name(\"Alex Yeoh\"), new Gender(\"M\"), new Phone(\"87438807\"),","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"LolfoollorS"},"content":"                    new Email(\"alexyeoh@example.com\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"                    getTagSet(\"friends\"), getDatesSlotsList(\"2022-11-11,1\")),","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"LolfoollorS"},"content":"            new Patient(new Uid(\"4\"), new Name(\"Bernice Yu\"), new Gender(\"F\"), new Phone(\"99272758\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"LolfoollorS"},"content":"                    new Email(\"berniceyu@example.com\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"                    getTagSet(\"colleagues\", \"friends\"), getDatesSlotsList(\"2022-12-12,1\")),","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"LolfoollorS"},"content":"            new Patient(new Uid(\"5\"), new Name(\"Charlotte Oliveiro\"), new Gender(\"F\"), new Phone(\"93210283\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"LolfoollorS"},"content":"                    new Email(\"charlotte@example.com\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"LolfoollorS"},"content":"                    getTagSet(\"neighbours\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"                    getDatesSlotsList(\"2022-10-10,2\", \"2022-09-24,1\")),","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"LolfoollorS"},"content":"            new Patient(new Uid(\"6\"), new Name(\"David Li\"), new Gender(\"M\"), new Phone(\"91031282\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"LolfoollorS"},"content":"                    new Email(\"lidavid@example.com\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"                    getTagSet(\"family\"), getDatesSlotsList(\"2022-10-10,2\", \"2022-12-24,1\")),","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"LolfoollorS"},"content":"            new Patient(new Uid(\"7\"), new Name(\"Irfan Ibrahim\"), new Gender(\"M\"), new Phone(\"92492021\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"LolfoollorS"},"content":"                    new Email(\"irfan@example.com\"), new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"LolfoollorS"},"content":"                    getTagSet(\"classmates\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"                    getDatesSlotsList(\"2022-10-10,1\", \"2022-09-24,1\", \"2023-01-13,3\")),","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"LolfoollorS"},"content":"            new Patient(new Uid(\"8\"), new Name(\"Roy Balakrishnan\"), new Gender(\"M\"), new Phone(\"92624417\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"LolfoollorS"},"content":"                    new Email(\"royb@example.com\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"                    getTagSet(\"colleagues\"), getDatesSlotsList(\"2022-12-12,4\"))","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"     * Returns a homeVisit list containing the list of strings given.","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"    public static List\u003cHomeVisit\u003e getHomeVisitsList(String... strings) {","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"                .map(HomeVisit::new)","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"xhphoong"},"content":"     * Returns an unavailable date list containing the list of strings given.","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"    public static List\u003cDate\u003e getUnavailableDateList(String... strings) {","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"xhphoong"},"content":"                .map(Date::new)","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"     * Returns a fully scheduled date list containing the list of strings given.","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"    public static List\u003cDate\u003e getFullyScheduledDateList(String... strings) {","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"                .map(Date::new)","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"xhphoong"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"xhphoong"},"content":"     * Returns a datesSlots list containing the list of strings given.","lastModifiedDate":"2022-10-23"},{"lineNumber":110,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"xhphoong"},"content":"    public static List\u003cDateSlot\u003e getDatesSlotsList(String... strings) {","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"LolfoollorS"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"xhphoong"},"content":"                .map(DateSlot::new)","lastModifiedDate":"2022-10-23"},{"lineNumber":114,"author":{"gitId":"LolfoollorS"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"xhphoong":44,"johnbenedictyan":7,"-":42,"LolfoollorS":24}},{"path":"src/main/java/seedu/address/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents a storage for {@link seedu.address.model.AddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws DataConversionException if the data in storage is not in the expected","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"     *                                 format.","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws IOException             if there was any problem when reading from","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     *                                 the storage.","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"johnbenedictyan":6,"-":43}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":" * Jackson-friendly version of {@link Date}.","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"class JsonAdaptedDate {","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"    private final String date;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"     * Constructs a {@code JsonAdaptedDate} with the given {@code Date}.","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"    public JsonAdaptedDate(String date) {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"     * Converts a given {@code Date} into this class for Jackson use.","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"    public JsonAdaptedDate(Date source) {","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"        date \u003d source.getString();","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"    @JsonValue","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"    public String getDate() {","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"        return date;","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"     * Converts this Jackson-friendly adapted date object into the model\u0027s","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code Date} object.","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"     *                               the adapted date.","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"    public Date toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"        return new Date(date);","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"xhphoong":46,"johnbenedictyan":4}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedDateSlot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateSlot;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":" * Jackson-friendly version of {@link DateSlot}.","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"class JsonAdaptedDateSlot {","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"    private final String dateSlot;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"    private final Boolean isAssigned;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"    private final Boolean isVisited;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"    private final Boolean isSuccessVisit;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"    private final Long nurseUidNo;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"    private final String dateSlotInString;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"     * Constructs a {@code JsonAdaptedDateSlot} with the given {@code DateSlot}.","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"    public JsonAdaptedDateSlot(String dateSlot) {","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"        this.dateSlot \u003d dateSlot;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"        String[] s \u003d dateSlot.split(\":\");","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"        this.isAssigned \u003d s[0].equals(DateSlot.SUCCESS_ASSIGNED_CHECK);","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"        if (s[1].equals(DateSlot.SUCCESS_VISIT_CHECK)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"            this.isVisited \u003d true;","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"            this.isSuccessVisit \u003d true;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"        } else if (s[1].equals(DateSlot.FAIL_VISIT_CHECK)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"            this.isVisited \u003d true;","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"            this.isSuccessVisit \u003d false;","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"            this.isVisited \u003d false;","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"            this.isSuccessVisit \u003d false;","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"        this.dateSlotInString \u003d s[2];","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"        this.nurseUidNo \u003d Long.parseLong(s[3]);","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"     * Converts a given {@code DateSlot} into this class for Jackson use.","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"    public JsonAdaptedDateSlot(DateSlot source) {","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"        dateSlot \u003d source.getString();","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"        dateSlotInString \u003d source.getDateSlotInString();","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"        isAssigned \u003d source.getHasAssigned();","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"        isVisited \u003d source.getHasVisited();","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"        isSuccessVisit \u003d source.getIsSuccessVisit();","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"        nurseUidNo \u003d source.getNurseUidNo();","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"    @JsonValue","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"    public String getDateSlot() {","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"        return dateSlot;","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"     * Converts this Jackson-friendly adapted date slot object into the model\u0027s","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code DateSlot} object.","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"     *","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"     *                               the adapted date slot.","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"    public DateSlot toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"        if (!DateSlot.isValidDateSlot(dateSlotInString)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"            throw new IllegalValueException(DateSlot.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"        return new DateSlot(dateSlotInString, isAssigned, isVisited, isSuccessVisit, nurseUidNo);","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"xhphoong":68,"johnbenedictyan":5}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedHomeVisit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.HomeVisit;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":" * Jackson-friendly version of {@link HomeVisit}.","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"class JsonAdaptedHomeVisit {","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"    private final String homeVisit;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"     * Constructs a {@code JsonAdaptedHomeVisit} with the given {@code HomeVisit}.","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"    public JsonAdaptedHomeVisit(String homeVisit) {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"        this.homeVisit \u003d homeVisit;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"     * Converts a given {@code HomeVisit} into this class for Jackson use.","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"    public JsonAdaptedHomeVisit(HomeVisit source) {","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"        homeVisit \u003d source.getString();","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"    @JsonValue","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"    public String getHomeVisit() {","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"        return homeVisit;","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"     * Converts this Jackson-friendly adapted homeVisit object into the model\u0027s","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code HomeVisit} object.","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"     *                               the adapted home visit slot.","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"    public HomeVisit toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"        if (!HomeVisit.isValidHomeVisit(homeVisit)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"            throw new IllegalValueException(HomeVisit.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"        return new HomeVisit(homeVisit);","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"xhphoong":46,"johnbenedictyan":4}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"mlzt2000"},"content":"import static seedu.address.model.category.Category.NURSE_SYMBOL;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"mlzt2000"},"content":"import static seedu.address.model.category.Category.PATIENT_SYMBOL;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"yeehaoo"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"import com.fasterxml.jackson.annotation.JsonTypeInfo.Id;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateSlot;","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.HomeVisit;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.person.Nurse;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"LolfoollorS"},"content":"    private final Long uid;","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"LolfoollorS"},"content":"    private final String category;","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"LolfoollorS"},"content":"    private final String gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"    private final List\u003cJsonAdaptedHomeVisit\u003e homeVisits \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"    private final List\u003cJsonAdaptedDate\u003e unavailableDates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"    private final List\u003cJsonAdaptedDate\u003e fullyAssignedDates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"    private final List\u003cJsonAdaptedDateSlot\u003e dateSlots \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"yeehaoo"},"content":"    private final String pName;","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"yeehaoo"},"content":"    private final String pPhone;","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"yeehaoo"},"content":"    private final String pEmail;","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"LolfoollorS"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"uid\") Long uid, @JsonProperty(\"name\") String name,","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"LolfoollorS"},"content":"            @JsonProperty(\"category\") String category,","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"LolfoollorS"},"content":"            @JsonProperty(\"gender\") String gender, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"            @JsonProperty(\"dateSlots\") List\u003cJsonAdaptedDateSlot\u003e dateSlot,","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"mlzt2000"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"            @JsonProperty(\"homeVisits\") List\u003cJsonAdaptedHomeVisit\u003e homeVisit,","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"            @JsonProperty(\"unavailableDates\") List\u003cJsonAdaptedDate\u003e unavailableDateList,","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"            @JsonProperty(\"fullyAssignedDates\") List\u003cJsonAdaptedDate\u003e fullyAssignedDateList,","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"yeehaoo"},"content":"            @JsonProperty(\"phys name\") String pName,","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"yeehaoo"},"content":"            @JsonProperty(\"phys phone\") String pPhone,","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"            @JsonProperty(\"phys email\") String pEmail) {","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"LolfoollorS"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"LolfoollorS"},"content":"        this.category \u003d category;","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"LolfoollorS"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"        if (dateSlot !\u003d null) {","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"            this.dateSlots.addAll(dateSlot);","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"yeehaoo"},"content":"        this.pName \u003d Objects.requireNonNullElse(pName, \"NA\");","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"yeehaoo"},"content":"        this.pPhone \u003d Objects.requireNonNullElse(pPhone, \"NA\");","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"yeehaoo"},"content":"        this.pEmail \u003d Objects.requireNonNullElse(pEmail, \"NA\");","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"        if (homeVisits !\u003d null) {","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"            this.homeVisits.addAll(homeVisit);","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"        if (unavailableDateList !\u003d null) {","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"            this.unavailableDates.addAll(unavailableDateList);","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"        if (fullyAssignedDateList !\u003d null) {","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"            this.fullyAssignedDates.addAll(fullyAssignedDateList);","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"LolfoollorS"},"content":"        category \u003d source.getCategory().categoryName;","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"LolfoollorS"},"content":"        boolean isPatient \u003d category.equals(PATIENT_SYMBOL);","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"LolfoollorS"},"content":"        if (isPatient) {","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"yeehaoo"},"content":"            Patient sourcePatient \u003d (Patient) source;","lastModifiedDate":"2022-10-23"},{"lineNumber":115,"author":{"gitId":"xhphoong"},"content":"            dateSlots.addAll(sourcePatient.getDatesSlots().stream()","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"xhphoong"},"content":"                    .map(JsonAdaptedDateSlot::new)","lastModifiedDate":"2022-10-23"},{"lineNumber":117,"author":{"gitId":"LolfoollorS"},"content":"                    .collect(Collectors.toList()));","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"yeehaoo"},"content":"            String[] physNameArr \u003d new String[] { \"NA\" };","lastModifiedDate":"2022-10-23"},{"lineNumber":119,"author":{"gitId":"yeehaoo"},"content":"            sourcePatient.getAttendingPhysician().ifPresent(x -\u003e physNameArr[0] \u003d x.getName().fullName);","lastModifiedDate":"2022-10-23"},{"lineNumber":120,"author":{"gitId":"yeehaoo"},"content":"            pName \u003d physNameArr[0];","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"yeehaoo"},"content":"            String[] physEmailArr \u003d new String[] { \"NA\" };","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"yeehaoo"},"content":"            sourcePatient.getAttendingPhysician().ifPresent(x -\u003e physEmailArr[0] \u003d x.getEmail().value);","lastModifiedDate":"2022-10-23"},{"lineNumber":123,"author":{"gitId":"yeehaoo"},"content":"            pEmail \u003d physEmailArr[0];","lastModifiedDate":"2022-10-23"},{"lineNumber":124,"author":{"gitId":"yeehaoo"},"content":"            String[] physPhoneArr \u003d new String[] { \"NA\" };","lastModifiedDate":"2022-10-23"},{"lineNumber":125,"author":{"gitId":"yeehaoo"},"content":"            sourcePatient.getAttendingPhysician().ifPresent(x -\u003e physPhoneArr[0] \u003d x.getPhone().value);","lastModifiedDate":"2022-10-23"},{"lineNumber":126,"author":{"gitId":"yeehaoo"},"content":"            pPhone \u003d physPhoneArr[0];","lastModifiedDate":"2022-10-23"},{"lineNumber":127,"author":{"gitId":"mlzt2000"},"content":"        } else {","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"xhphoong"},"content":"            homeVisits.addAll(((Nurse) source).getHomeVisits().stream()","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"xhphoong"},"content":"                    .map(JsonAdaptedHomeVisit::new)","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"xhphoong"},"content":"                    .collect(Collectors.toList()));","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"xhphoong"},"content":"            unavailableDates.addAll(((Nurse) source).getUnavailableDates().stream()","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"xhphoong"},"content":"                    .map(JsonAdaptedDate::new)","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"xhphoong"},"content":"                    .collect(Collectors.toList()));","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"xhphoong"},"content":"            fullyAssignedDates.addAll(((Nurse) source).getFullyScheduledDates().stream()","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"xhphoong"},"content":"                    .map(JsonAdaptedDate::new)","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"xhphoong"},"content":"                    .collect(Collectors.toList()));","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"yeehaoo"},"content":"            pName \u003d \"NA\";","lastModifiedDate":"2022-10-23"},{"lineNumber":138,"author":{"gitId":"yeehaoo"},"content":"            pPhone \u003d \"NA\";","lastModifiedDate":"2022-10-23"},{"lineNumber":139,"author":{"gitId":"yeehaoo"},"content":"            pEmail \u003d \"NA\";","lastModifiedDate":"2022-10-23"},{"lineNumber":140,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"LolfoollorS"},"content":"        uid \u003d source.getUid().uid;","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"LolfoollorS"},"content":"        gender \u003d source.getGender().gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"LolfoollorS"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"LolfoollorS"},"content":"     * {@code Person} object.","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"LolfoollorS"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"LolfoollorS"},"content":"     *                               the adapted person.","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"xhphoong"},"content":"        final List\u003cHomeVisit\u003e nurseHomeVisitList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":167,"author":{"gitId":"xhphoong"},"content":"        for (JsonAdaptedHomeVisit homeVisit : homeVisits) {","lastModifiedDate":"2022-10-27"},{"lineNumber":168,"author":{"gitId":"xhphoong"},"content":"            nurseHomeVisitList.add(homeVisit.toModelType());","lastModifiedDate":"2022-10-27"},{"lineNumber":169,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":170,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":171,"author":{"gitId":"xhphoong"},"content":"        final List\u003cDate\u003e nurseUnavailableDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":172,"author":{"gitId":"xhphoong"},"content":"        for (JsonAdaptedDate date : unavailableDates) {","lastModifiedDate":"2022-10-27"},{"lineNumber":173,"author":{"gitId":"xhphoong"},"content":"            nurseUnavailableDate.add(date.toModelType());","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":175,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"xhphoong"},"content":"        final List\u003cDate\u003e nurseFullySchedulledDates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"xhphoong"},"content":"        for (JsonAdaptedDate date : fullyAssignedDates) {","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"xhphoong"},"content":"            nurseFullySchedulledDates.add(date.toModelType());","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"xhphoong"},"content":"        final List\u003cDateSlot\u003e patientHomeVisitDatesSlots \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":182,"author":{"gitId":"xhphoong"},"content":"        for (JsonAdaptedDateSlot dateSlot : dateSlots) {","lastModifiedDate":"2022-10-23"},{"lineNumber":183,"author":{"gitId":"xhphoong"},"content":"            patientHomeVisitDatesSlots.add(dateSlot.toModelType());","lastModifiedDate":"2022-10-23"},{"lineNumber":184,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":185,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":186,"author":{"gitId":"LolfoollorS"},"content":"        if (uid \u003d\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":187,"author":{"gitId":"LolfoollorS"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Id.class.getSimpleName()));","lastModifiedDate":"2022-10-11"},{"lineNumber":188,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":189,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":190,"author":{"gitId":"LolfoollorS"},"content":"        final Uid modelUid \u003d new Uid(uid);","lastModifiedDate":"2022-10-11"},{"lineNumber":191,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":200,"author":{"gitId":"LolfoollorS"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":201,"author":{"gitId":"LolfoollorS"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2022-10-09"},{"lineNumber":202,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":203,"author":{"gitId":"LolfoollorS"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":204,"author":{"gitId":"LolfoollorS"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":205,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":206,"author":{"gitId":"LolfoollorS"},"content":"        final Gender modelGender \u003d new Gender(gender);","lastModifiedDate":"2022-10-09"},{"lineNumber":207,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":233,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":234,"author":{"gitId":"LolfoollorS"},"content":"        if (category \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":235,"author":{"gitId":"LolfoollorS"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-12"},{"lineNumber":236,"author":{"gitId":"LolfoollorS"},"content":"                    Category.class.getSimpleName()));","lastModifiedDate":"2022-10-12"},{"lineNumber":237,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":238,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":239,"author":{"gitId":"LolfoollorS"},"content":"        if (category.equals(NURSE_SYMBOL)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":240,"author":{"gitId":"xhphoong"},"content":"            return new Nurse(modelUid, modelName, modelGender, modelPhone, modelEmail, modelAddress, modelTags,","lastModifiedDate":"2022-10-27"},{"lineNumber":241,"author":{"gitId":"johnbenedictyan"},"content":"                    nurseUnavailableDate, nurseHomeVisitList, nurseFullySchedulledDates);","lastModifiedDate":"2022-10-28"},{"lineNumber":242,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":243,"author":{"gitId":"LolfoollorS"},"content":"        } else if (category.equals(PATIENT_SYMBOL)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":244,"author":{"gitId":"LolfoollorS"},"content":"            return new Patient(modelUid, modelName, modelGender, modelPhone, modelEmail,","lastModifiedDate":"2022-10-11"},{"lineNumber":245,"author":{"gitId":"johnbenedictyan"},"content":"                    modelAddress, modelTags, patientHomeVisitDatesSlots);","lastModifiedDate":"2022-10-28"},{"lineNumber":246,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":247,"author":{"gitId":"LolfoollorS"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":248,"author":{"gitId":"LolfoollorS"},"content":"            throw new IllegalValueException(Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":249,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":250,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":251,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"xhphoong":60,"johnbenedictyan":2,"yeehaoo":23,"-":104,"mlzt2000":6,"LolfoollorS":59}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code Tag} object.","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"     *                               the adapted tag.","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"johnbenedictyan":4,"-":46}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    private final Path filePath;","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"johnbenedictyan":1,"-":79}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"The list contains duplicate %1$s.\";","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"    public static final String PERSON_IDENTIFIER \u003d \"person(s)\";","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"     *               {@code JsonSerializableAddressBook}.","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"LolfoollorS"},"content":"                throw new IllegalValueException(String.format(MESSAGE_DUPLICATE_PERSON, PERSON_IDENTIFIER));","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"johnbenedictyan":2,"-":57,"LolfoollorS":3}},{"path":"src/main/java/seedu/address/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"    private final Path filePath;","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"johnbenedictyan":2,"-":46}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    private final AddressBookStorage addressBookStorage;","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage}","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"     * and {@code UserPrefStorage}.","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"johnbenedictyan":4,"-":74}},{"path":"src/main/java/seedu/address/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a storage for {@link seedu.address.model.UserPrefs}.","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws DataConversionException if the data in storage is not in the expected","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"     *                                 format.","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws IOException             if there was any problem when reading from","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"     *                                 the storage.","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Saves the given {@link seedu.address.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"johnbenedictyan":6,"-":34}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"        // command box.","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"johnbenedictyan":2,"-":84}},{"path":"src/main/java/seedu/address/ui/CommandNameListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":" * Panel containing the list of command names.","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"public class CommandNameListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"    private static final String FXML \u003d \"CommandNameListPanel.fxml\";","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CommandNameListPanel.class);","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"    private ListView\u003cString\u003e commandNameListView;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"     * Creates a {@code CommandNameListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"LolfoollorS"},"content":"    public CommandNameListPanel(ObservableList\u003cString\u003e commandNameList) {","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"LolfoollorS"},"content":"        super(FXML);","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"LolfoollorS"},"content":"        commandNameListView.setItems(commandNameList);","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"LolfoollorS"},"content":"     * Gets ListView","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"LolfoollorS"},"content":"     * @return ListView","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"LolfoollorS"},"content":"    public ListView\u003cString\u003e getCommandNameListView() {","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"LolfoollorS"},"content":"        return commandNameListView;","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"johnbenedictyan":1,"LolfoollorS":36}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"import java.awt.Desktop;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"import java.net.URI;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"import javafx.animation.Animation;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"import javafx.beans.property.IntegerProperty;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"import javafx.beans.property.SimpleIntegerProperty;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"LolfoollorS"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"LolfoollorS"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103-f13-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"LolfoollorS"},"content":"    public static final String GITHUB_URL \u003d \"https://github.com/AY2223S1-CS2103-F13-4/tp\";","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":37,"author":{"gitId":"LolfoollorS"},"content":"    private static final double DURATION_FOR_TEXT_ANIMATION \u003d 0.1;","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"LolfoollorS"},"content":"    private static final String PATIENT_SEARCH_TEXT \u003d \"Add Patient\";","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"LolfoollorS"},"content":"    private static final String ADD_DEMO_INPUT_PATIENT \u003d \"add c/P n/John Doe g/M p/98765432 e/johnd@example.com \"","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"LolfoollorS"},"content":"            + \"a/311, Clementi Ave 2, #02-25 t/friends t/owesMoney dt/2022-11-11T12:30 v/True\";","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"LolfoollorS"},"content":"    private static final String ADD_DEMO_OUTPUT_PATIENT \u003d \"New Patient added: Category: P Uid: 10; Name: John Doe;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"LolfoollorS"},"content":"            + \" Gender: M; Phone: 98765432; Email: johnd@example.com; Address: 311, Clementi Ave 2, #02-25;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"LolfoollorS"},"content":"            + \" Tags: [owesMoney][friends]; Home Visits Date and Time:11/11/2022 12:30 , ; Visit Status: visited\";","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"LolfoollorS"},"content":"    private static final String NURSE_SEARCH_TEXT \u003d \"Add Nurse\";","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"LolfoollorS"},"content":"    private static final String ADD_DEMO_INPUT_NURSE \u003d \"add c/N n/Cola t/Pediatric e/cola@example.com g/F p/98345432\"","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"LolfoollorS"},"content":"            + \" a/Blk 431 Ang Mo Kio Ave 10, Singapore 560431 #01-03 t/heartDiseaseSpecialist\";","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"LolfoollorS"},"content":"    private static final String ADD_DEMO_OUTPUT_NURSE \u003d \"New person added: Category: N Uid: 3; Name: Cola;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"LolfoollorS"},"content":"            + \" Gender: F; Phone: 98345432; Email: cola@example.com; \"","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"LolfoollorS"},"content":"            + \"Address: Blk 431 Ang Mo Kio Ave 10, Singapore 560431 #01-03; Tags: [heartDiseaseSpecialist][Pediatric]\";","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"LolfoollorS"},"content":"    private static final String ADD_PATIENT_USAGE_HELP \u003d \"Add Patient \\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"LolfoollorS"},"content":"            + \"add c/Category n/Name g/Gender p/Phone e/Email a/Address v/Visted \"","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"LolfoollorS"},"content":"            + \"[t/tag] [dt/Date\u0026Time (2022-11-11T12:30)] *[] is optional. \";","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"LolfoollorS"},"content":"    private static final String ADD_NURSE_USAGE_HELP \u003d \"Add Nurse\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"LolfoollorS"},"content":"            + \"add c/Category n/Name g/Gender p/Phone e/Email a/Address v/Visited \"","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"LolfoollorS"},"content":"            + \"[t/tag] *[] is optional. \";","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"LolfoollorS"},"content":"    private static final String CLEAR_SEARCH_TEXT \u003d \"Clear All\";","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"LolfoollorS"},"content":"    private static final String CLEAR_DEMO_INPUT \u003d \"clear\";","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"LolfoollorS"},"content":"    private static final String CLEAR_DEMO_OUTPUT \u003d \"Address book has been cleared!\";","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"LolfoollorS"},"content":"    private static final String DELETE_SEARCH_TEXT \u003d \"Delete via ID\";","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"LolfoollorS"},"content":"    private static final String DELETE_DEMO_INPUT \u003d \"delete id/3\";","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"LolfoollorS"},"content":"    private static final String DELETE_DEMO_OUTPUT \u003d \"Deleted person: Category: N Uid: 3; Name: Cola; Gender: F;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"LolfoollorS"},"content":"            + \" Phone: 98345432; Email: cola@example.com;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"LolfoollorS"},"content":"            + \" Address: Blk 431 Ang Mo Kio Ave 10, Singapore 560431 #01-03; Tags: [heartDiseaseSpecialist][Pediatric]\";","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EDIT_NAME_SEARCH_TEXT \u003d \"Edit Name\";","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EDIT_NAME_DEMO_INPUT \u003d \"edit id/12 n/Kola\";","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EDIT_NAME_DEMO_OUTPUT \u003d \"Edited person: Category: N Uid: 12; Name: Kola; Gender: F;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"LolfoollorS"},"content":"            + \" Phone: 98345432; Email: cola@example.com; Address: Blk 431 Ang Mo Kio Ave 10, Singapore 560431 #01-03;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"LolfoollorS"},"content":"            + \" Tags: [heartDiseaseSpecialist][Pediatric]\";","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EDIT_GENDER_SEARCH_TEXT \u003d \"Edit Gender\";","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EDIT_GENDER_DEMO_INPUT \u003d \"edit id/12 g/M\";","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EDIT_GENDER_DEMO_OUTPUT \u003d \"Edited person: Category: N Uid: 12; Name: Kola;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"LolfoollorS"},"content":"            + \" Gender: M; Phone: 98345432; Email: cola@example.com;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"LolfoollorS"},"content":"            + \" Address: Blk 431 Ang Mo Kio Ave 10, Singapore 560431 #01-03; Tags: [heartDiseaseSpecialist][Pediatric]\";","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EDIT_PHONE_SEARCH_TEXT \u003d \"Edit Phone\";","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EDIT_PHONE_DEMO_INPUT \u003d \"edit id/12 p/88888888\";","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EDIT_PHONE_DEMO_OUTPUT \u003d \"Edited person: Category: N Uid: 12; Name: Kola; Gender: M;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"LolfoollorS"},"content":"            + \" Phone: 88888888; Email: cola@example.com; Address: Blk 431 Ang Mo Kio Ave 10, Singapore 560431 #01-03;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"LolfoollorS"},"content":"            + \" Tags: [heartDiseaseSpecialist][Pediatric]\";","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EDIT_EMAIL_SEARCH_TEXT \u003d \"Edit Email\";","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EDIT_EMAIL_DEMO_INPUT \u003d \"edit id/12 e/Kola@example.com\";","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EDIT_EMAIL_DEMO_OUTPUT \u003d \"Edited person: Category: N Uid: 12; Name: Kola; Gender: M;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"LolfoollorS"},"content":"            + \" Phone: 88888888; Email: Kola@example.com; Address: Blk 431 Ang Mo Kio Ave 10, Singapore 560431 #01-03;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"LolfoollorS"},"content":"            + \" Tags: [heartDiseaseSpecialist][Pediatric]\";","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EDIT_ADDRESS_SEARCH_TEXT \u003d \"Edit Address\";","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EDIT_ADDRESS_DEMO_INPUT \u003d \"edit id/12 a/Blk 768 Woodlands Ave 6, Singapore 730768 \";","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EDIT_ADDRESS_DEMO_OUTPUT \u003d \"Edited person: Category: N Uid: 12; Name: Kola;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"LolfoollorS"},"content":"            + \" Gender: M; Phone: 88888888; Email: Kola@example.com;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"LolfoollorS"},"content":"            + \" Address: Blk 768 Woodlands Ave 6, Singapore 730768; Tags: [heartDiseaseSpecialist][Pediatric]\";","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EDIT_TAG_SEARCH_TEXT \u003d \"Edit Tag\";","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EDIT_TAG_DEMO_INPUT \u003d \"edit id/12 t/Pediatric\";","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EDIT_TAG_DEMO_OUTPUT \u003d \"Edited person: Category: N Uid: 12; Name: Kola; Gender: M;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"LolfoollorS"},"content":"            + \" Phone: 88888888; Email: Kola@example.com; Address: Blk 768 Woodlands Ave 6, Singapore 730768;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"LolfoollorS"},"content":"            + \" Tags: [Pediatric]\";","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EDIT_MIX_SEARCH_TEXT \u003d \"Edit Mix\";","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EDIT_MIX_DEMO_INPUT \u003d \"edit id/12 g/F p/98345432 \"","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"LolfoollorS"},"content":"            + \"a/Blk 431 Ang Mo Kio Ave 10, Singapore 560431 #01-03\";","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EDIT_MIX_DEMO_OUTPUT \u003d \"dited person: Category: N Uid: 12; Name: Kola; Gender: F;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"LolfoollorS"},"content":"            + \" Phone: 98345432; Email: Kola@example.com; Address: Blk 431 Ang Mo Kio Ave 10, Singapore 560431 #01-03;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"LolfoollorS"},"content":"            + \" Tags: [Pediatric]\";","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EXIT_SEARCH_TEXT \u003d \"Exit Program\";","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EXIT_DEMO_INPUT \u003d \"exit\";","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EXIT_DEMO_OUTPUT \u003d \"Thank you for using Healthcare Xpress!\";","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"LolfoollorS"},"content":"    private static final String FIND_SEARCH_TEXT \u003d \"Find via Name\";","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"LolfoollorS"},"content":"    private static final String FIND_DEMO_INPUT \u003d \"find Kola\";","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"LolfoollorS"},"content":"    private static final String FIND_DEMO_OUTPUT \u003d \"1 patients and nurses listed!\";","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"LolfoollorS"},"content":"    private static final String HELP_SEARCH_TEXT \u003d \"Help\";","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"LolfoollorS"},"content":"    private static final String HELP_DEMO_INPUT \u003d \"help\";","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"LolfoollorS"},"content":"    private static final String HELP_DEMO_OUTPUT \u003d \"*Brings you to this window*\";","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"LolfoollorS"},"content":"    private static final String LIST_NTH_SEARCH_TEXT \u003d \"List (Default)\";","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"LolfoollorS"},"content":"    private static final String LIST_NTH_DEMO_INPUT \u003d \"list\";","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"LolfoollorS"},"content":"    private static final String LIST_NTH_DEMO_OUTPUT \u003d \"Listed all persons with specifications: \"","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"LolfoollorS"},"content":"            + \"ADDRESS: NIL, CATEGORY: NIL, GENDER: NIL, TAG: NIL\";","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"LolfoollorS"},"content":"    private static final String LIST_ADDRESS_SEARCH_TEXT \u003d \"List all with X Address\";","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"LolfoollorS"},"content":"    private static final String LIST_ADDRESS_DEMO_INPUT \u003d \"list a/431\";","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"LolfoollorS"},"content":"    private static final String LIST_ADDRESS_DEMO_OUTPUT \u003d \"Listed all persons with specifications: \"","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"LolfoollorS"},"content":"            + \"ADDRESS: 431, CATEGORY: NIL, GENDER: NIL, TAG: NIL\";","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"LolfoollorS"},"content":"    private static final String LIST_CATEGORY_SEARCH_TEXT \u003d \"List all with X Category\";","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"LolfoollorS"},"content":"    private static final String LIST_CATEGORY_DEMO_INPUT \u003d \"list c/N\";","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"LolfoollorS"},"content":"    private static final String LIST_CATEGORY_DEMO_OUTPUT \u003d \"Listed all persons with specifications: \"","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"LolfoollorS"},"content":"            + \"ADDRESS: NIL, CATEGORY: N, GENDER: NIL, TAG: NIL\";","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"LolfoollorS"},"content":"    private static final String LIST_GENDER_SEARCH_TEXT \u003d \"List all with X Gender\";","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"LolfoollorS"},"content":"    private static final String LIST_GENDER_DEMO_INPUT \u003d \"list g/F\";","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"LolfoollorS"},"content":"    private static final String LIST_GENDER_DEMO_OUTPUT \u003d \"Listed all persons with specifications: \"","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"LolfoollorS"},"content":"            + \"ADDRESS: NIL, CATEGORY: NIL, GENDER: F, TAG: NIL\";","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"LolfoollorS"},"content":"    private static final String LIST_TAG_SEARCH_TEXT \u003d \"List all with X Tag\";","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"LolfoollorS"},"content":"    private static final String LIST_TAG_DEMO_INPUT \u003d \"list t/Pediatric\";","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"LolfoollorS"},"content":"    private static final String LIST_TAG_DEMO_OUTPUT \u003d \"Listed all persons with specifications: \"","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"LolfoollorS"},"content":"            + \"ADDRESS: NIL, CATEGORY: NIL, GENDER: NIL, TAG: Pediatric\";","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"LolfoollorS"},"content":"    private static final String LIST_MIX_SEARCH_TEXT \u003d \"List (Mix)\";","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"LolfoollorS"},"content":"    private static final String LIST_MIX_DEMO_INPUT \u003d \"list a/431 g/F\";","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"LolfoollorS"},"content":"    private static final String LIST_MIX_DEMO_OUTPUT \u003d \"Listed all persons with specifications: \"","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"LolfoollorS"},"content":"            + \"ADDRESS: 431, CATEGORY: NIL, GENDER: F, TAG: NIL\";","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"LolfoollorS"},"content":"    private static final String MARK_SEARCH_TEXT \u003d \"Marking a Patient\";","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"LolfoollorS"},"content":"    private static final String MARK_DEMO_INPUT \u003d \"mark id/3\";","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"LolfoollorS"},"content":"    private static final String MARK_DEMO_OUTPUT \u003d \"Marked Patient: Category: P Uid: 3; Name: Alex Yeoh; Gender: M;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"LolfoollorS"},"content":"            + \" Phone: 87438807; Email: alexyeoh@example.com; Address: Blk 30 Geylang Street 29, #06-40;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"LolfoollorS"},"content":"            + \" Tags: [friends]; Home Visits Date and Time:11/11/2022 14:00 , ; Visit Status: visited\";","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"LolfoollorS"},"content":"    private static final String CLEAR_USAGE_HELP \u003d \"\";","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"LolfoollorS"},"content":"    private static final String DELETE_USAGE_HELP \u003d \"Delete Person from list: \\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":140,"author":{"gitId":"LolfoollorS"},"content":"            + \"delete id/ID \";","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EDIT_USAGE_HELP \u003d \"Edit Person from list: \\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"LolfoollorS"},"content":"            + \"edit [c/Category] [n/Name] [g/gender] [p/Phone] [e/Email] [a/Address] [t/Tags] [dt/Date\u0026Time]\"","lastModifiedDate":"2022-10-27"},{"lineNumber":143,"author":{"gitId":"LolfoollorS"},"content":"            + \"*[] is optional.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"LolfoollorS"},"content":"    private static final String EXIT_USAGE_HELP \u003d \"\";","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"LolfoollorS"},"content":"    private static final String FIND_USAGE_HELP \u003d \"Find a person from the list that contains keyword\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"LolfoollorS"},"content":"            + \"find KEYWORD\";","lastModifiedDate":"2022-10-27"},{"lineNumber":147,"author":{"gitId":"LolfoollorS"},"content":"    private static final String HELP_USAGE_HELP \u003d \"\";","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"LolfoollorS"},"content":"    private static final String LIST_USAGE_HELP \u003d \"List all that meets the critiera:\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":149,"author":{"gitId":"LolfoollorS"},"content":"            + \"list [c/Category] [g/Gender] [a/Address] [t/Tag]\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":150,"author":{"gitId":"LolfoollorS"},"content":"            + \"*[] is optional\";","lastModifiedDate":"2022-10-27"},{"lineNumber":151,"author":{"gitId":"LolfoollorS"},"content":"    private static final String MARK_USAGE_HELP \u003d \"Mark a patient visited:\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":152,"author":{"gitId":"LolfoollorS"},"content":"            + \"mark id/ID\";","lastModifiedDate":"2022-10-27"},{"lineNumber":153,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":154,"author":{"gitId":"LolfoollorS"},"content":"    private final List\u003cString\u003e commandList \u003d Arrays.asList(PATIENT_SEARCH_TEXT, NURSE_SEARCH_TEXT, CLEAR_SEARCH_TEXT,","lastModifiedDate":"2022-10-27"},{"lineNumber":155,"author":{"gitId":"LolfoollorS"},"content":"            DELETE_SEARCH_TEXT, EDIT_NAME_SEARCH_TEXT, EDIT_GENDER_SEARCH_TEXT, EDIT_PHONE_SEARCH_TEXT,","lastModifiedDate":"2022-10-27"},{"lineNumber":156,"author":{"gitId":"LolfoollorS"},"content":"            EDIT_EMAIL_SEARCH_TEXT, EDIT_TAG_SEARCH_TEXT, EDIT_MIX_SEARCH_TEXT, EXIT_SEARCH_TEXT,","lastModifiedDate":"2022-10-27"},{"lineNumber":157,"author":{"gitId":"LolfoollorS"},"content":"            FIND_SEARCH_TEXT, HELP_SEARCH_TEXT, LIST_NTH_SEARCH_TEXT, LIST_ADDRESS_SEARCH_TEXT,","lastModifiedDate":"2022-10-27"},{"lineNumber":158,"author":{"gitId":"LolfoollorS"},"content":"            LIST_CATEGORY_SEARCH_TEXT, LIST_GENDER_SEARCH_TEXT, LIST_TAG_SEARCH_TEXT, LIST_MIX_SEARCH_TEXT,","lastModifiedDate":"2022-10-27"},{"lineNumber":159,"author":{"gitId":"LolfoollorS"},"content":"            MARK_SEARCH_TEXT);","lastModifiedDate":"2022-10-27"},{"lineNumber":160,"author":{"gitId":"LolfoollorS"},"content":"    private final HashMap\u003cString, String[]\u003e dictionary \u003d new HashMap\u003cString, String[]\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":161,"author":{"gitId":"LolfoollorS"},"content":"    private final HashMap\u003cString, String\u003e dictionaryForUsageHelp \u003d new HashMap\u003cString, String\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":162,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"LolfoollorS"},"content":"    private CommandNameListPanel commandNameListPanel;","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"LolfoollorS"},"content":"    private Timeline currentTimeLine;","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":166,"author":{"gitId":"LolfoollorS"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":167,"author":{"gitId":"LolfoollorS"},"content":"    private VBox resultDisplayPlaceholder;","lastModifiedDate":"2022-10-27"},{"lineNumber":168,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":169,"author":{"gitId":"LolfoollorS"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":170,"author":{"gitId":"LolfoollorS"},"content":"    private TextArea tipTextArea;","lastModifiedDate":"2022-10-27"},{"lineNumber":171,"author":{"gitId":"LolfoollorS"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":172,"author":{"gitId":"LolfoollorS"},"content":"    private TextField searchTextField;","lastModifiedDate":"2022-10-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":175,"author":{"gitId":"LolfoollorS"},"content":"    private TextField helpCommandTextField;","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":178,"author":{"gitId":"LolfoollorS"},"content":"    private TextField helpOutputTextField;","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":187,"author":{"gitId":"LolfoollorS"},"content":"        init();","lastModifiedDate":"2022-10-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":197,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":198,"author":{"gitId":"LolfoollorS"},"content":"     * Initialize HelpWindow, dictionary and add listener to ListView.","lastModifiedDate":"2022-10-27"},{"lineNumber":199,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":200,"author":{"gitId":"LolfoollorS"},"content":"    public void init() {","lastModifiedDate":"2022-10-27"},{"lineNumber":201,"author":{"gitId":"LolfoollorS"},"content":"        initDictionary();","lastModifiedDate":"2022-10-27"},{"lineNumber":202,"author":{"gitId":"LolfoollorS"},"content":"        initDictionaryForUsageHelp();","lastModifiedDate":"2022-10-27"},{"lineNumber":203,"author":{"gitId":"LolfoollorS"},"content":"        String emptyStr \u003d \"\";","lastModifiedDate":"2022-10-27"},{"lineNumber":204,"author":{"gitId":"LolfoollorS"},"content":"        String[] result \u003d searchResult(emptyStr);","lastModifiedDate":"2022-10-27"},{"lineNumber":205,"author":{"gitId":"LolfoollorS"},"content":"        ObservableList\u003cString\u003e obvListResult \u003d convertStrArrToObservableList(result);","lastModifiedDate":"2022-10-27"},{"lineNumber":206,"author":{"gitId":"LolfoollorS"},"content":"        fillResultDisplay(obvListResult);","lastModifiedDate":"2022-10-27"},{"lineNumber":207,"author":{"gitId":"LolfoollorS"},"content":"        addListenerToListView();","lastModifiedDate":"2022-10-27"},{"lineNumber":208,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":209,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":210,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":211,"author":{"gitId":"LolfoollorS"},"content":"     * Initialize dictionary.","lastModifiedDate":"2022-10-27"},{"lineNumber":212,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":213,"author":{"gitId":"LolfoollorS"},"content":"    public void initDictionary() {","lastModifiedDate":"2022-10-27"},{"lineNumber":214,"author":{"gitId":"LolfoollorS"},"content":"        dictionary.put(PATIENT_SEARCH_TEXT, new String[] { ADD_DEMO_INPUT_PATIENT, ADD_DEMO_OUTPUT_PATIENT });","lastModifiedDate":"2022-10-27"},{"lineNumber":215,"author":{"gitId":"LolfoollorS"},"content":"        dictionary.put(NURSE_SEARCH_TEXT, new String[] { ADD_DEMO_INPUT_NURSE, ADD_DEMO_OUTPUT_NURSE });","lastModifiedDate":"2022-10-27"},{"lineNumber":216,"author":{"gitId":"LolfoollorS"},"content":"        dictionary.put(CLEAR_SEARCH_TEXT, new String[] { CLEAR_DEMO_INPUT, CLEAR_DEMO_OUTPUT });","lastModifiedDate":"2022-10-27"},{"lineNumber":217,"author":{"gitId":"LolfoollorS"},"content":"        dictionary.put(DELETE_SEARCH_TEXT, new String[] { DELETE_DEMO_INPUT, DELETE_DEMO_OUTPUT });","lastModifiedDate":"2022-10-27"},{"lineNumber":218,"author":{"gitId":"LolfoollorS"},"content":"        dictionary.put(EDIT_NAME_SEARCH_TEXT, new String[] { EDIT_NAME_DEMO_INPUT, EDIT_NAME_DEMO_OUTPUT });","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"LolfoollorS"},"content":"        dictionary.put(EDIT_GENDER_SEARCH_TEXT, new String[] { EDIT_GENDER_DEMO_INPUT, EDIT_GENDER_DEMO_OUTPUT });","lastModifiedDate":"2022-10-27"},{"lineNumber":220,"author":{"gitId":"LolfoollorS"},"content":"        dictionary.put(EDIT_PHONE_SEARCH_TEXT, new String[] { EDIT_PHONE_DEMO_INPUT, EDIT_PHONE_DEMO_OUTPUT });","lastModifiedDate":"2022-10-27"},{"lineNumber":221,"author":{"gitId":"LolfoollorS"},"content":"        dictionary.put(EDIT_EMAIL_SEARCH_TEXT, new String[] { EDIT_EMAIL_DEMO_INPUT, EDIT_EMAIL_DEMO_OUTPUT });","lastModifiedDate":"2022-10-27"},{"lineNumber":222,"author":{"gitId":"LolfoollorS"},"content":"        dictionary.put(EDIT_ADDRESS_SEARCH_TEXT, new String[] { EDIT_ADDRESS_DEMO_INPUT, EDIT_ADDRESS_DEMO_OUTPUT });","lastModifiedDate":"2022-10-27"},{"lineNumber":223,"author":{"gitId":"LolfoollorS"},"content":"        dictionary.put(EDIT_TAG_SEARCH_TEXT, new String[] { EDIT_TAG_DEMO_INPUT, EDIT_TAG_DEMO_OUTPUT });","lastModifiedDate":"2022-10-27"},{"lineNumber":224,"author":{"gitId":"LolfoollorS"},"content":"        dictionary.put(EDIT_MIX_SEARCH_TEXT, new String[] { EDIT_MIX_DEMO_INPUT, EDIT_MIX_DEMO_OUTPUT });","lastModifiedDate":"2022-10-27"},{"lineNumber":225,"author":{"gitId":"LolfoollorS"},"content":"        dictionary.put(EXIT_SEARCH_TEXT, new String[] { EXIT_DEMO_INPUT, EXIT_DEMO_OUTPUT });","lastModifiedDate":"2022-10-27"},{"lineNumber":226,"author":{"gitId":"LolfoollorS"},"content":"        dictionary.put(FIND_SEARCH_TEXT, new String[] { FIND_DEMO_INPUT, FIND_DEMO_OUTPUT });","lastModifiedDate":"2022-10-27"},{"lineNumber":227,"author":{"gitId":"LolfoollorS"},"content":"        dictionary.put(HELP_SEARCH_TEXT, new String[] { HELP_DEMO_INPUT, HELP_DEMO_OUTPUT });","lastModifiedDate":"2022-10-27"},{"lineNumber":228,"author":{"gitId":"LolfoollorS"},"content":"        dictionary.put(LIST_NTH_SEARCH_TEXT, new String[] { LIST_NTH_DEMO_INPUT, LIST_NTH_DEMO_OUTPUT });","lastModifiedDate":"2022-10-27"},{"lineNumber":229,"author":{"gitId":"LolfoollorS"},"content":"        dictionary.put(LIST_ADDRESS_SEARCH_TEXT, new String[] { LIST_ADDRESS_DEMO_INPUT, LIST_ADDRESS_DEMO_OUTPUT });","lastModifiedDate":"2022-10-27"},{"lineNumber":230,"author":{"gitId":"LolfoollorS"},"content":"        dictionary.put(LIST_CATEGORY_SEARCH_TEXT, new String[] { LIST_CATEGORY_DEMO_INPUT, LIST_CATEGORY_DEMO_OUTPUT });","lastModifiedDate":"2022-10-27"},{"lineNumber":231,"author":{"gitId":"LolfoollorS"},"content":"        dictionary.put(LIST_GENDER_SEARCH_TEXT, new String[] { LIST_GENDER_DEMO_INPUT, LIST_GENDER_DEMO_OUTPUT });","lastModifiedDate":"2022-10-27"},{"lineNumber":232,"author":{"gitId":"LolfoollorS"},"content":"        dictionary.put(LIST_TAG_SEARCH_TEXT, new String[] { LIST_TAG_DEMO_INPUT, LIST_TAG_DEMO_OUTPUT });","lastModifiedDate":"2022-10-27"},{"lineNumber":233,"author":{"gitId":"LolfoollorS"},"content":"        dictionary.put(LIST_MIX_SEARCH_TEXT, new String[] { LIST_MIX_DEMO_INPUT, LIST_MIX_DEMO_OUTPUT });","lastModifiedDate":"2022-10-27"},{"lineNumber":234,"author":{"gitId":"LolfoollorS"},"content":"        dictionary.put(MARK_SEARCH_TEXT, new String[] { MARK_DEMO_INPUT, MARK_DEMO_OUTPUT });","lastModifiedDate":"2022-10-27"},{"lineNumber":235,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":236,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":237,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":238,"author":{"gitId":"LolfoollorS"},"content":"     * Initialize dictionary for usage help.","lastModifiedDate":"2022-10-27"},{"lineNumber":239,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":240,"author":{"gitId":"LolfoollorS"},"content":"    public void initDictionaryForUsageHelp() {","lastModifiedDate":"2022-10-27"},{"lineNumber":241,"author":{"gitId":"LolfoollorS"},"content":"        dictionaryForUsageHelp.put(PATIENT_SEARCH_TEXT, ADD_PATIENT_USAGE_HELP);","lastModifiedDate":"2022-10-27"},{"lineNumber":242,"author":{"gitId":"LolfoollorS"},"content":"        dictionaryForUsageHelp.put(NURSE_SEARCH_TEXT, ADD_NURSE_USAGE_HELP);","lastModifiedDate":"2022-10-27"},{"lineNumber":243,"author":{"gitId":"LolfoollorS"},"content":"        dictionaryForUsageHelp.put(CLEAR_SEARCH_TEXT, CLEAR_USAGE_HELP);","lastModifiedDate":"2022-10-27"},{"lineNumber":244,"author":{"gitId":"LolfoollorS"},"content":"        dictionaryForUsageHelp.put(DELETE_SEARCH_TEXT, DELETE_USAGE_HELP);","lastModifiedDate":"2022-10-27"},{"lineNumber":245,"author":{"gitId":"LolfoollorS"},"content":"        dictionaryForUsageHelp.put(EDIT_NAME_SEARCH_TEXT, EDIT_USAGE_HELP);","lastModifiedDate":"2022-10-27"},{"lineNumber":246,"author":{"gitId":"LolfoollorS"},"content":"        dictionaryForUsageHelp.put(EDIT_GENDER_SEARCH_TEXT, EDIT_USAGE_HELP);","lastModifiedDate":"2022-10-27"},{"lineNumber":247,"author":{"gitId":"LolfoollorS"},"content":"        dictionaryForUsageHelp.put(EDIT_PHONE_SEARCH_TEXT, EDIT_USAGE_HELP);","lastModifiedDate":"2022-10-27"},{"lineNumber":248,"author":{"gitId":"LolfoollorS"},"content":"        dictionaryForUsageHelp.put(EDIT_EMAIL_SEARCH_TEXT, EDIT_USAGE_HELP);","lastModifiedDate":"2022-10-27"},{"lineNumber":249,"author":{"gitId":"LolfoollorS"},"content":"        dictionaryForUsageHelp.put(EDIT_ADDRESS_SEARCH_TEXT, EDIT_USAGE_HELP);","lastModifiedDate":"2022-10-27"},{"lineNumber":250,"author":{"gitId":"LolfoollorS"},"content":"        dictionaryForUsageHelp.put(EDIT_TAG_SEARCH_TEXT, EDIT_USAGE_HELP);","lastModifiedDate":"2022-10-27"},{"lineNumber":251,"author":{"gitId":"LolfoollorS"},"content":"        dictionaryForUsageHelp.put(EDIT_MIX_SEARCH_TEXT, EDIT_USAGE_HELP);","lastModifiedDate":"2022-10-27"},{"lineNumber":252,"author":{"gitId":"LolfoollorS"},"content":"        dictionaryForUsageHelp.put(EXIT_SEARCH_TEXT, EXIT_USAGE_HELP);","lastModifiedDate":"2022-10-27"},{"lineNumber":253,"author":{"gitId":"LolfoollorS"},"content":"        dictionaryForUsageHelp.put(FIND_SEARCH_TEXT, FIND_USAGE_HELP);","lastModifiedDate":"2022-10-27"},{"lineNumber":254,"author":{"gitId":"LolfoollorS"},"content":"        dictionaryForUsageHelp.put(HELP_SEARCH_TEXT, HELP_USAGE_HELP);","lastModifiedDate":"2022-10-27"},{"lineNumber":255,"author":{"gitId":"LolfoollorS"},"content":"        dictionaryForUsageHelp.put(LIST_NTH_SEARCH_TEXT, LIST_USAGE_HELP);","lastModifiedDate":"2022-10-27"},{"lineNumber":256,"author":{"gitId":"LolfoollorS"},"content":"        dictionaryForUsageHelp.put(LIST_ADDRESS_SEARCH_TEXT, LIST_USAGE_HELP);","lastModifiedDate":"2022-10-27"},{"lineNumber":257,"author":{"gitId":"LolfoollorS"},"content":"        dictionaryForUsageHelp.put(LIST_CATEGORY_SEARCH_TEXT, LIST_USAGE_HELP);","lastModifiedDate":"2022-10-27"},{"lineNumber":258,"author":{"gitId":"LolfoollorS"},"content":"        dictionaryForUsageHelp.put(LIST_GENDER_SEARCH_TEXT, LIST_USAGE_HELP);","lastModifiedDate":"2022-10-27"},{"lineNumber":259,"author":{"gitId":"LolfoollorS"},"content":"        dictionaryForUsageHelp.put(LIST_TAG_SEARCH_TEXT, LIST_USAGE_HELP);","lastModifiedDate":"2022-10-27"},{"lineNumber":260,"author":{"gitId":"LolfoollorS"},"content":"        dictionaryForUsageHelp.put(LIST_MIX_SEARCH_TEXT, LIST_USAGE_HELP);","lastModifiedDate":"2022-10-27"},{"lineNumber":261,"author":{"gitId":"LolfoollorS"},"content":"        dictionaryForUsageHelp.put(MARK_SEARCH_TEXT, MARK_USAGE_HELP);","lastModifiedDate":"2022-10-27"},{"lineNumber":262,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":263,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":265,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":266,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2022-10-28"},{"lineNumber":268,"author":{"gitId":"johnbenedictyan"},"content":"     *                               \u003cul\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":270,"author":{"gitId":"johnbenedictyan"},"content":"     *                               if this method is called on a thread other than","lastModifiedDate":"2022-10-28"},{"lineNumber":271,"author":{"gitId":"johnbenedictyan"},"content":"     *                               the JavaFX Application Thread.","lastModifiedDate":"2022-10-28"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":273,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":274,"author":{"gitId":"johnbenedictyan"},"content":"     *                               if this method is called during animation or","lastModifiedDate":"2022-10-28"},{"lineNumber":275,"author":{"gitId":"johnbenedictyan"},"content":"     *                               layout processing.","lastModifiedDate":"2022-10-28"},{"lineNumber":276,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":277,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":278,"author":{"gitId":"-"},"content":"     *                               if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":279,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":280,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     *                               if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":282,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":283,"author":{"gitId":"-"},"content":"     *                               \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":284,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":313,"author":{"gitId":"LolfoollorS"},"content":"     * Searches the command list with keyword str.","lastModifiedDate":"2022-10-27"},{"lineNumber":314,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":315,"author":{"gitId":"LolfoollorS"},"content":"     * @param str Keyword.","lastModifiedDate":"2022-10-27"},{"lineNumber":316,"author":{"gitId":"LolfoollorS"},"content":"     * @return An array of strings that fits the criteria.","lastModifiedDate":"2022-10-27"},{"lineNumber":317,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":318,"author":{"gitId":"LolfoollorS"},"content":"    public String[] searchResult(String str) {","lastModifiedDate":"2022-10-27"},{"lineNumber":319,"author":{"gitId":"LolfoollorS"},"content":"        return commandList.stream().filter(x -\u003e x.contains(str)).toArray(String[]::new);","lastModifiedDate":"2022-10-27"},{"lineNumber":320,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":321,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":322,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":323,"author":{"gitId":"LolfoollorS"},"content":"     * Populates the display in HelpWindow.","lastModifiedDate":"2022-10-27"},{"lineNumber":324,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":325,"author":{"gitId":"LolfoollorS"},"content":"     * @param input An ObservableList of Strings.","lastModifiedDate":"2022-10-27"},{"lineNumber":326,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":327,"author":{"gitId":"LolfoollorS"},"content":"    public void fillResultDisplay(ObservableList\u003cString\u003e input) {","lastModifiedDate":"2022-10-27"},{"lineNumber":328,"author":{"gitId":"LolfoollorS"},"content":"        commandNameListPanel \u003d new CommandNameListPanel(input);","lastModifiedDate":"2022-10-27"},{"lineNumber":329,"author":{"gitId":"LolfoollorS"},"content":"        resultDisplayPlaceholder.getChildren().add(commandNameListPanel.getRoot());","lastModifiedDate":"2022-10-27"},{"lineNumber":330,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":331,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":332,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":333,"author":{"gitId":"LolfoollorS"},"content":"     * Converts String array to ObservableList.","lastModifiedDate":"2022-10-27"},{"lineNumber":334,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":335,"author":{"gitId":"LolfoollorS"},"content":"     * @param strArr String array to be converted.","lastModifiedDate":"2022-10-27"},{"lineNumber":336,"author":{"gitId":"LolfoollorS"},"content":"     * @return An Observable List.","lastModifiedDate":"2022-10-27"},{"lineNumber":337,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":338,"author":{"gitId":"LolfoollorS"},"content":"    public ObservableList\u003cString\u003e convertStrArrToObservableList(String[] strArr) {","lastModifiedDate":"2022-10-27"},{"lineNumber":339,"author":{"gitId":"LolfoollorS"},"content":"        return FXCollections.observableArrayList(strArr);","lastModifiedDate":"2022-10-27"},{"lineNumber":340,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":341,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":342,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":343,"author":{"gitId":"johnbenedictyan"},"content":"     * Adds listener to ListView to detect changes. If changes is detected, plays","lastModifiedDate":"2022-10-28"},{"lineNumber":344,"author":{"gitId":"johnbenedictyan"},"content":"     * the corresponding animation.","lastModifiedDate":"2022-10-28"},{"lineNumber":345,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":346,"author":{"gitId":"LolfoollorS"},"content":"    public void addListenerToListView() {","lastModifiedDate":"2022-10-27"},{"lineNumber":347,"author":{"gitId":"LolfoollorS"},"content":"        ListView\u003cString\u003e listView \u003d commandNameListPanel.getCommandNameListView();","lastModifiedDate":"2022-10-27"},{"lineNumber":348,"author":{"gitId":"LolfoollorS"},"content":"        listView.getSelectionModel().selectedItemProperty().addListener(new ChangeListener\u003cString\u003e() {","lastModifiedDate":"2022-10-27"},{"lineNumber":349,"author":{"gitId":"LolfoollorS"},"content":"            @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":350,"author":{"gitId":"LolfoollorS"},"content":"            public void changed(ObservableValue\u003c? extends String\u003e observable, String oldValue, String newValue) {","lastModifiedDate":"2022-10-27"},{"lineNumber":351,"author":{"gitId":"LolfoollorS"},"content":"                stopAnimationIfAny();","lastModifiedDate":"2022-10-27"},{"lineNumber":352,"author":{"gitId":"LolfoollorS"},"content":"                String[] inputOutput \u003d dictionary.get(newValue);","lastModifiedDate":"2022-10-27"},{"lineNumber":353,"author":{"gitId":"LolfoollorS"},"content":"                helpOutputTextField.clear();","lastModifiedDate":"2022-10-27"},{"lineNumber":354,"author":{"gitId":"LolfoollorS"},"content":"                animateTextInTextField(inputOutput, helpCommandTextField, false);","lastModifiedDate":"2022-10-27"},{"lineNumber":355,"author":{"gitId":"LolfoollorS"},"content":"                String usageHelp \u003d dictionaryForUsageHelp.get(newValue);","lastModifiedDate":"2022-10-27"},{"lineNumber":356,"author":{"gitId":"LolfoollorS"},"content":"                tipTextArea.setText(usageHelp);","lastModifiedDate":"2022-10-27"},{"lineNumber":357,"author":{"gitId":"LolfoollorS"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":358,"author":{"gitId":"LolfoollorS"},"content":"        });","lastModifiedDate":"2022-10-27"},{"lineNumber":359,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":360,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":361,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":362,"author":{"gitId":"LolfoollorS"},"content":"     * Stops any ongoing animation.","lastModifiedDate":"2022-10-27"},{"lineNumber":363,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":364,"author":{"gitId":"LolfoollorS"},"content":"    public void stopAnimationIfAny() {","lastModifiedDate":"2022-10-27"},{"lineNumber":365,"author":{"gitId":"LolfoollorS"},"content":"        if (currentTimeLine !\u003d null) {","lastModifiedDate":"2022-10-27"},{"lineNumber":366,"author":{"gitId":"LolfoollorS"},"content":"            currentTimeLine.stop();","lastModifiedDate":"2022-10-27"},{"lineNumber":367,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":368,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":369,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":370,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":371,"author":{"gitId":"LolfoollorS"},"content":"     * Animates text in textfield.","lastModifiedDate":"2022-10-27"},{"lineNumber":372,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":373,"author":{"gitId":"LolfoollorS"},"content":"     * @param inputOutput A String array containing the input and output result.","lastModifiedDate":"2022-10-27"},{"lineNumber":374,"author":{"gitId":"LolfoollorS"},"content":"     * @param txtField    The javafx textfield to be animated on.","lastModifiedDate":"2022-10-27"},{"lineNumber":375,"author":{"gitId":"LolfoollorS"},"content":"     * @param isOutput    Check if it is on input\u0027s or on output\u0027s textfield.","lastModifiedDate":"2022-10-27"},{"lineNumber":376,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":377,"author":{"gitId":"LolfoollorS"},"content":"    public void animateTextInTextField(String[] inputOutput, TextField txtField, boolean isOutput) {","lastModifiedDate":"2022-10-27"},{"lineNumber":378,"author":{"gitId":"LolfoollorS"},"content":"        String str \u003d inputOutput[isOutput ? 1 : 0];","lastModifiedDate":"2022-10-27"},{"lineNumber":379,"author":{"gitId":"LolfoollorS"},"content":"        final IntegerProperty counter \u003d new SimpleIntegerProperty(0);","lastModifiedDate":"2022-10-27"},{"lineNumber":380,"author":{"gitId":"LolfoollorS"},"content":"        Timeline timeline \u003d new Timeline();","lastModifiedDate":"2022-10-27"},{"lineNumber":381,"author":{"gitId":"LolfoollorS"},"content":"        KeyFrame keyFrame \u003d new KeyFrame(","lastModifiedDate":"2022-10-27"},{"lineNumber":382,"author":{"gitId":"LolfoollorS"},"content":"                Duration.seconds(DURATION_FOR_TEXT_ANIMATION),","lastModifiedDate":"2022-10-27"},{"lineNumber":383,"author":{"gitId":"LolfoollorS"},"content":"                event -\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":384,"author":{"gitId":"LolfoollorS"},"content":"                    if (counter.get() \u003e str.length()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":385,"author":{"gitId":"LolfoollorS"},"content":"                        timeline.stop();","lastModifiedDate":"2022-10-27"},{"lineNumber":386,"author":{"gitId":"LolfoollorS"},"content":"                        if (!isOutput) {","lastModifiedDate":"2022-10-27"},{"lineNumber":387,"author":{"gitId":"LolfoollorS"},"content":"                            animateTextInTextField(inputOutput, helpOutputTextField, true);","lastModifiedDate":"2022-10-27"},{"lineNumber":388,"author":{"gitId":"LolfoollorS"},"content":"                        }","lastModifiedDate":"2022-10-27"},{"lineNumber":389,"author":{"gitId":"LolfoollorS"},"content":"                    } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":390,"author":{"gitId":"LolfoollorS"},"content":"                        txtField.setText(str.substring(0, counter.get()));","lastModifiedDate":"2022-10-27"},{"lineNumber":391,"author":{"gitId":"LolfoollorS"},"content":"                        txtField.positionCaret(counter.get());","lastModifiedDate":"2022-10-27"},{"lineNumber":392,"author":{"gitId":"LolfoollorS"},"content":"                        counter.set(counter.get() + 1);","lastModifiedDate":"2022-10-27"},{"lineNumber":393,"author":{"gitId":"LolfoollorS"},"content":"                    }","lastModifiedDate":"2022-10-27"},{"lineNumber":394,"author":{"gitId":"LolfoollorS"},"content":"                });","lastModifiedDate":"2022-10-27"},{"lineNumber":395,"author":{"gitId":"LolfoollorS"},"content":"        timeline.getKeyFrames().add(keyFrame);","lastModifiedDate":"2022-10-27"},{"lineNumber":396,"author":{"gitId":"LolfoollorS"},"content":"        timeline.setCycleCount(Animation.INDEFINITE);","lastModifiedDate":"2022-10-27"},{"lineNumber":397,"author":{"gitId":"LolfoollorS"},"content":"        timeline.play();","lastModifiedDate":"2022-10-27"},{"lineNumber":398,"author":{"gitId":"LolfoollorS"},"content":"        currentTimeLine \u003d timeline;","lastModifiedDate":"2022-10-27"},{"lineNumber":399,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":400,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":401,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":402,"author":{"gitId":"LolfoollorS"},"content":"     * Sends user to GitHub page.","lastModifiedDate":"2022-10-27"},{"lineNumber":403,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":405,"author":{"gitId":"LolfoollorS"},"content":"    public void visitGitHubButtonAction() {","lastModifiedDate":"2022-10-27"},{"lineNumber":406,"author":{"gitId":"LolfoollorS"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":407,"author":{"gitId":"LolfoollorS"},"content":"            Desktop.getDesktop().browse(new URI(GITHUB_URL));","lastModifiedDate":"2022-10-27"},{"lineNumber":408,"author":{"gitId":"LolfoollorS"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-27"},{"lineNumber":409,"author":{"gitId":"LolfoollorS"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-10-27"},{"lineNumber":410,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-08-19"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":412,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":413,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":414,"author":{"gitId":"LolfoollorS"},"content":"     * Sends user to user guide page.","lastModifiedDate":"2022-10-27"},{"lineNumber":415,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":416,"author":{"gitId":"LolfoollorS"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":417,"author":{"gitId":"LolfoollorS"},"content":"    public void visitHelpButtonAction() {","lastModifiedDate":"2022-10-27"},{"lineNumber":418,"author":{"gitId":"LolfoollorS"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":419,"author":{"gitId":"LolfoollorS"},"content":"            Desktop.getDesktop().browse(new URI(USERGUIDE_URL));","lastModifiedDate":"2022-10-27"},{"lineNumber":420,"author":{"gitId":"LolfoollorS"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-27"},{"lineNumber":421,"author":{"gitId":"LolfoollorS"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-10-27"},{"lineNumber":422,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":423,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":424,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":425,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":426,"author":{"gitId":"LolfoollorS"},"content":"     * Handles and show accordingly to User the filtered List View according to","lastModifiedDate":"2022-10-27"},{"lineNumber":427,"author":{"gitId":"LolfoollorS"},"content":"     * User\u0027s search keyword.","lastModifiedDate":"2022-10-27"},{"lineNumber":428,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":429,"author":{"gitId":"LolfoollorS"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":430,"author":{"gitId":"LolfoollorS"},"content":"    public void handleSearchKeywordEntered() {","lastModifiedDate":"2022-10-27"},{"lineNumber":431,"author":{"gitId":"LolfoollorS"},"content":"        String searchText \u003d searchTextField.getText().trim();","lastModifiedDate":"2022-10-27"},{"lineNumber":432,"author":{"gitId":"LolfoollorS"},"content":"        resultDisplayPlaceholder.getChildren().clear();","lastModifiedDate":"2022-10-27"},{"lineNumber":433,"author":{"gitId":"LolfoollorS"},"content":"        String[] result \u003d searchResult(searchText);","lastModifiedDate":"2022-10-27"},{"lineNumber":434,"author":{"gitId":"LolfoollorS"},"content":"        ObservableList\u003cString\u003e obvListResult \u003d convertStrArrToObservableList(result);","lastModifiedDate":"2022-10-27"},{"lineNumber":435,"author":{"gitId":"LolfoollorS"},"content":"        fillResultDisplay(obvListResult);","lastModifiedDate":"2022-10-27"},{"lineNumber":436,"author":{"gitId":"LolfoollorS"},"content":"        addListenerToListView();","lastModifiedDate":"2022-10-27"},{"lineNumber":437,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":438,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":439,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"johnbenedictyan":12,"-":84,"LolfoollorS":343}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"    private final Stage primaryStage;","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"    private final Logic logic;","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"    private final HelpWindow helpWindow;","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"johnbenedictyan":4,"-":193}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"mlzt2000"},"content":"import static seedu.address.model.person.Gender.MALE_SYMBOL;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.person.Nurse;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"    private static final String NOT_APPLICABLE \u003d \"NA\";","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"    private static final String NURSE_LABEL_TEXT \u003d \"(Nurse)\";","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"LolfoollorS"},"content":"    private static final String PATIENT_LABEL_TEXT \u003d \"(Patient)\";","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"LolfoollorS"},"content":"    private static final String NAN_LABEL_TEXT \u003d \"(Unassigned)\";","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"LolfoollorS"},"content":"    private static final String MALE_GENDER_LABEL_TEXT \u003d \"Male\";","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"LolfoollorS"},"content":"    private static final String FEMALE_GENDER_LABEL_TEXT \u003d \"Female\";","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"     * keywords in JavaFX.","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"     *      issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"LolfoollorS"},"content":"    private FlowPane category;","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"LolfoollorS"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"LolfoollorS"},"content":"    private Label uid;","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"LolfoollorS"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"    private Label dateSlots;","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"LolfoollorS"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"LolfoollorS"},"content":"    private Label gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"LolfoollorS"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":63,"author":{"gitId":"mlzt2000"},"content":"    @FXML","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"    private Label homeVisits;","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"    private Label unavailableDates;","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"yeehaoo"},"content":"    @FXML","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"yeehaoo"},"content":"    private Label physInfo;","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"     * display.","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"LolfoollorS"},"content":"        if (person instanceof Nurse) {","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"            dateSlots.setText(\"HomeVisits DateSlot: \" + NOT_APPLICABLE);","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"            homeVisits.setText(\"HomeVisits: \" + ((Nurse) person).getHomesVisitsInString());","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"            unavailableDates.setText(\"Unavailable Dates: \" + ((Nurse) person).getUnavailableDatesInString());","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"LolfoollorS"},"content":"            category.getChildren().add(new Label(NURSE_LABEL_TEXT));","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"yeehaoo"},"content":"            physInfo.setText(NOT_APPLICABLE);","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"LolfoollorS"},"content":"        } else if (person instanceof Patient) {","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"            dateSlots.setText(\"HomeVisits DateSlot: \" + ((Patient) person).getDatesSlotsInString());","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"            homeVisits.setText(\"HomeVisits: \" + NOT_APPLICABLE);","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"            unavailableDates.setText(\"Unavailable Dates: \" + NOT_APPLICABLE);","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"LolfoollorS"},"content":"            category.getChildren().add(new Label(PATIENT_LABEL_TEXT));","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"yeehaoo"},"content":"            physInfo.setText(((Patient) person).getPhysicianDetails());","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"LolfoollorS"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"            dateSlots.setText(NOT_APPLICABLE);","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"            homeVisits.setText(NOT_APPLICABLE);","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"            unavailableDates.setText(NOT_APPLICABLE);","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"LolfoollorS"},"content":"            category.getChildren().add(new Label(NAN_LABEL_TEXT));","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"yeehaoo"},"content":"            physInfo.setText(NOT_APPLICABLE);","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"LolfoollorS"},"content":"        if (person.getGender().gender.equals(MALE_SYMBOL)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"LolfoollorS"},"content":"            gender.setText(MALE_GENDER_LABEL_TEXT);","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"LolfoollorS"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"LolfoollorS"},"content":"            gender.setText(FEMALE_GENDER_LABEL_TEXT);","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"LolfoollorS"},"content":"        uid.setText(\"UID: [\" + person.getUid().toString() + \"]\");","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"xhphoong":13,"johnbenedictyan":6,"yeehaoo":5,"-":74,"mlzt2000":3,"LolfoollorS":29}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"     * a {@code PersonCard}.","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"    static class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"johnbenedictyan":3,"-":47}},{"path":"src/main/java/seedu/address/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"     * Starts the UI (and the App).","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"johnbenedictyan":3,"-":12}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/healthcare_xpress_logo.png\";","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    private final Logic logic;","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"            String contentText) {","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"        alert.setTitle(title);","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"        alert.showAndWait();","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"johnbenedictyan":21,"-":65,"LolfoollorS":1}},{"path":"src/main/java/seedu/address/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":" * bars, etc.","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"     * Resource folder where FXML files are stored.","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"     * Constructs a UiPart using the specified FXML file within","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"     * {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"     * Constructs a UiPart with the specified FXML file within","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"     * {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns the FXML file URL for the specified FXML file name within","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"     * {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param root     Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"johnbenedictyan":23,"-":74}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"johnbenedictyan":1,"-":8}},{"path":"src/main/resources/view/CommandNameListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"    \u003cListView fx:id\u003d\"commandNameListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"johnbenedictyan":1,"LolfoollorS":7}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":".background {","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":".label {","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":".label-bright {","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":".label-header {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"LolfoollorS"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"LolfoollorS"},"content":".text-field {","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"LolfoollorS"},"content":".tab-pane {","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"LolfoollorS"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"LolfoollorS"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"LolfoollorS"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"LolfoollorS"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"LolfoollorS"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"LolfoollorS"},"content":".table-view {","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"LolfoollorS"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"LolfoollorS"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"LolfoollorS"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"LolfoollorS"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"LolfoollorS"},"content":"    -fx-padding: 5;","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"LolfoollorS"},"content":".table-view .column-header-background {","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"LolfoollorS"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"LolfoollorS"},"content":"    -fx-size: 35;","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-color:","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"LolfoollorS"},"content":"        transparent","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"LolfoollorS"},"content":"        transparent","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"LolfoollorS"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"LolfoollorS"},"content":"        transparent;","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"LolfoollorS"},"content":".table-view .column-header .label {","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"LolfoollorS"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"LolfoollorS"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"LolfoollorS"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"LolfoollorS"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"LolfoollorS"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"LolfoollorS"},"content":".split-pane {","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"LolfoollorS"},"content":".list-view {","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"LolfoollorS"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"LolfoollorS"},"content":".list-cell {","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"LolfoollorS"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"LolfoollorS"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"LolfoollorS"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"LolfoollorS"},"content":".list-cell:filled:even {","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"LolfoollorS"},"content":".list-cell:filled:odd {","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"LolfoollorS"},"content":".list-cell:filled:selected {","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"LolfoollorS"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"LolfoollorS"},"content":".list-cell .label {","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"LolfoollorS"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"LolfoollorS"},"content":".cell_big_label {","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"LolfoollorS"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"LolfoollorS"},"content":".cell_small_label {","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"LolfoollorS"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"LolfoollorS"},"content":".stack-pane {","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"LolfoollorS"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"LolfoollorS"},"content":".pane-with-border {","lastModifiedDate":"2022-10-27"},{"lineNumber":140,"author":{"gitId":"LolfoollorS"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"LolfoollorS"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"LolfoollorS"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2022-10-27"},{"lineNumber":143,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"LolfoollorS"},"content":".status-bar {","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-10-27"},{"lineNumber":147,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":149,"author":{"gitId":"LolfoollorS"},"content":".result-display {","lastModifiedDate":"2022-10-27"},{"lineNumber":150,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-27"},{"lineNumber":151,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-27"},{"lineNumber":152,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-10-27"},{"lineNumber":153,"author":{"gitId":"LolfoollorS"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-27"},{"lineNumber":154,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":155,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":156,"author":{"gitId":"LolfoollorS"},"content":".result-display .label {","lastModifiedDate":"2022-10-27"},{"lineNumber":157,"author":{"gitId":"LolfoollorS"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2022-10-27"},{"lineNumber":158,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":159,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":160,"author":{"gitId":"LolfoollorS"},"content":".status-bar .label {","lastModifiedDate":"2022-10-27"},{"lineNumber":161,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-27"},{"lineNumber":162,"author":{"gitId":"LolfoollorS"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"LolfoollorS"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"LolfoollorS"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":166,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":167,"author":{"gitId":"LolfoollorS"},"content":".status-bar-with-border {","lastModifiedDate":"2022-10-27"},{"lineNumber":168,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-10-27"},{"lineNumber":169,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2022-10-27"},{"lineNumber":170,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2022-10-27"},{"lineNumber":171,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":172,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":173,"author":{"gitId":"LolfoollorS"},"content":".status-bar-with-border .label {","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":177,"author":{"gitId":"LolfoollorS"},"content":".grid-pane {","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2022-10-27"},{"lineNumber":181,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":182,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":183,"author":{"gitId":"LolfoollorS"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2022-10-27"},{"lineNumber":184,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-10-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":187,"author":{"gitId":"LolfoollorS"},"content":".context-menu {","lastModifiedDate":"2022-10-27"},{"lineNumber":188,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2022-10-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":191,"author":{"gitId":"LolfoollorS"},"content":".context-menu .label {","lastModifiedDate":"2022-10-27"},{"lineNumber":192,"author":{"gitId":"LolfoollorS"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":195,"author":{"gitId":"LolfoollorS"},"content":".menu-bar {","lastModifiedDate":"2022-10-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-01-02"},{"lineNumber":197,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-color: derive(#1d1d1d, 20%) derive(#1d1d1d, 20%) grey derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-27"},{"lineNumber":198,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":199,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":200,"author":{"gitId":"LolfoollorS"},"content":".menu-bar .label {","lastModifiedDate":"2022-10-27"},{"lineNumber":201,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-27"},{"lineNumber":202,"author":{"gitId":"LolfoollorS"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-27"},{"lineNumber":203,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":204,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":205,"author":{"gitId":"LolfoollorS"},"content":".menu .left-container {","lastModifiedDate":"2022-10-27"},{"lineNumber":206,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: black;","lastModifiedDate":"2022-10-27"},{"lineNumber":207,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":208,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":209,"author":{"gitId":"LolfoollorS"},"content":"/*","lastModifiedDate":"2022-10-27"},{"lineNumber":210,"author":{"gitId":"LolfoollorS"},"content":" * Metro style Push Button","lastModifiedDate":"2022-10-27"},{"lineNumber":211,"author":{"gitId":"LolfoollorS"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2022-10-27"},{"lineNumber":212,"author":{"gitId":"LolfoollorS"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2022-10-27"},{"lineNumber":213,"author":{"gitId":"LolfoollorS"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":214,"author":{"gitId":"LolfoollorS"},"content":".button {","lastModifiedDate":"2022-10-27"},{"lineNumber":215,"author":{"gitId":"LolfoollorS"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2022-10-27"},{"lineNumber":216,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2022-10-27"},{"lineNumber":217,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2022-10-27"},{"lineNumber":218,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-10-27"},{"lineNumber":220,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-10-27"},{"lineNumber":221,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-10-27"},{"lineNumber":222,"author":{"gitId":"LolfoollorS"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2022-10-27"},{"lineNumber":223,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2022-10-27"},{"lineNumber":224,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":225,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":226,"author":{"gitId":"LolfoollorS"},"content":".button:hover {","lastModifiedDate":"2022-10-27"},{"lineNumber":227,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2022-10-27"},{"lineNumber":228,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":229,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":230,"author":{"gitId":"LolfoollorS"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2022-10-27"},{"lineNumber":231,"author":{"gitId":"LolfoollorS"},"content":"  -fx-background-color: white;","lastModifiedDate":"2022-10-27"},{"lineNumber":232,"author":{"gitId":"LolfoollorS"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2022-10-27"},{"lineNumber":233,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":234,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":235,"author":{"gitId":"LolfoollorS"},"content":".button:focused {","lastModifiedDate":"2022-10-27"},{"lineNumber":236,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2022-10-27"},{"lineNumber":237,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2022-10-27"},{"lineNumber":238,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2022-10-27"},{"lineNumber":239,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":240,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":241,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":242,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":243,"author":{"gitId":"LolfoollorS"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2022-10-27"},{"lineNumber":244,"author":{"gitId":"LolfoollorS"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2022-10-27"},{"lineNumber":245,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-10-27"},{"lineNumber":246,"author":{"gitId":"LolfoollorS"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-27"},{"lineNumber":247,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":248,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":249,"author":{"gitId":"LolfoollorS"},"content":".button:default {","lastModifiedDate":"2022-10-27"},{"lineNumber":250,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-10-27"},{"lineNumber":251,"author":{"gitId":"LolfoollorS"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2022-10-27"},{"lineNumber":252,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":253,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":254,"author":{"gitId":"LolfoollorS"},"content":".button:default:hover {","lastModifiedDate":"2022-10-27"},{"lineNumber":255,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2022-10-27"},{"lineNumber":256,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":257,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":258,"author":{"gitId":"LolfoollorS"},"content":"#searchTextField {","lastModifiedDate":"2022-10-27"},{"lineNumber":259,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2022-10-27"},{"lineNumber":260,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":261,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2022-10-27"},{"lineNumber":262,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":263,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-27"},{"lineNumber":264,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-27"},{"lineNumber":265,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-10-27"},{"lineNumber":266,"author":{"gitId":"LolfoollorS"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-27"},{"lineNumber":267,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":268,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":269,"author":{"gitId":"LolfoollorS"},"content":"#resultDisplay .content {","lastModifiedDate":"2022-10-27"},{"lineNumber":270,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2022-10-27"},{"lineNumber":271,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":272,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":273,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":274,"author":{"gitId":"LolfoollorS"},"content":"#tags {","lastModifiedDate":"2022-10-27"},{"lineNumber":275,"author":{"gitId":"LolfoollorS"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-10-27"},{"lineNumber":276,"author":{"gitId":"LolfoollorS"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-10-27"},{"lineNumber":277,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":278,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":279,"author":{"gitId":"LolfoollorS"},"content":"#tags .label {","lastModifiedDate":"2022-10-27"},{"lineNumber":280,"author":{"gitId":"LolfoollorS"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-27"},{"lineNumber":281,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2022-10-27"},{"lineNumber":282,"author":{"gitId":"LolfoollorS"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-10-27"},{"lineNumber":283,"author":{"gitId":"LolfoollorS"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-10-27"},{"lineNumber":284,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-10-27"},{"lineNumber":285,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-10-27"},{"lineNumber":286,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":287,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":288,"author":{"gitId":"LolfoollorS"},"content":".list-cell{","lastModifiedDate":"2022-10-27"},{"lineNumber":289,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-size:15.0;","lastModifiedDate":"2022-10-27"},{"lineNumber":290,"author":{"gitId":"LolfoollorS"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-27"},{"lineNumber":291,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-27"},{"lineNumber":292,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":293,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":294,"author":{"gitId":"LolfoollorS"},"content":".list-cell:filled:even {","lastModifiedDate":"2022-10-27"},{"lineNumber":295,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2022-10-27"},{"lineNumber":296,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":297,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":298,"author":{"gitId":"LolfoollorS"},"content":".list-cell:filled:hover {","lastModifiedDate":"2022-10-27"},{"lineNumber":299,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: #566a8c;","lastModifiedDate":"2022-10-27"},{"lineNumber":300,"author":{"gitId":"LolfoollorS"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-27"},{"lineNumber":301,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":302,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":303,"author":{"gitId":"LolfoollorS"},"content":".list-cell:filled:selected {","lastModifiedDate":"2022-10-27"},{"lineNumber":304,"author":{"gitId":"LolfoollorS"},"content":"    -fx-background-color: #0093ff;","lastModifiedDate":"2022-10-27"},{"lineNumber":305,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":306,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":307,"author":{"gitId":"LolfoollorS"},"content":"#helpCommandTextField {","lastModifiedDate":"2022-10-27"},{"lineNumber":308,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-10-27"},{"lineNumber":309,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-27"},{"lineNumber":310,"author":{"gitId":"LolfoollorS"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-27"},{"lineNumber":311,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":312,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":313,"author":{"gitId":"LolfoollorS"},"content":"#helpOutputTextField {","lastModifiedDate":"2022-10-27"},{"lineNumber":314,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-10-27"},{"lineNumber":315,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-27"},{"lineNumber":316,"author":{"gitId":"LolfoollorS"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-27"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":318,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":319,"author":{"gitId":"LolfoollorS"},"content":"#tipTextArea {","lastModifiedDate":"2022-10-27"},{"lineNumber":320,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-10-27"},{"lineNumber":321,"author":{"gitId":"LolfoollorS"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-27"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"-":12,"LolfoollorS":310}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\"/\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":25,"author":{"gitId":"LolfoollorS"},"content":"        \u003cScene stylesheets\u003d\"@HelpWindow.css\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"LolfoollorS"},"content":"            \u003cVBox prefHeight\u003d\"358.0\" prefWidth\u003d\"519.0\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"LolfoollorS"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" styleClass\u003d\"DarkTheme.css\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"LolfoollorS"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"LolfoollorS"},"content":"                        \u003cMenuItem fx:id\u003d\"exitMenuButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#hide\" text\u003d\"Close\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"LolfoollorS"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"LolfoollorS"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"                        \u003cMenuItem fx:id\u003d\"visitHelpButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#visitHelpButtonAction\"","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"                                  text\u003d\"Visit Help Page\"/\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"                        \u003cMenuItem fx:id\u003d\"visitGitHubButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#visitGitHubButtonAction\"","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"                                  text\u003d\"Visit GitHub Page\"/\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"LolfoollorS"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"LolfoollorS"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"                \u003cSplitPane dividerPositions\u003d\"0.3492822966507177\" prefHeight\u003d\"331.0\" prefWidth\u003d\"519.0\"","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"                           VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"LolfoollorS"},"content":"                    \u003citems\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"LolfoollorS"},"content":"                        \u003cVBox prefHeight\u003d\"110.0\" prefWidth\u003d\"257.0\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"LolfoollorS"},"content":"                                \u003cHBox prefHeight\u003d\"30.0\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"LolfoollorS"},"content":"                                    \u003cchildren\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"                                        \u003cLabel fx:id\u003d\"searchLabel\" contentDisplay\u003d\"TOP\" minWidth\u003d\"53.0\"","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"                                               prefHeight\u003d\"30.0\" prefWidth\u003d\"54.0\" text\u003d\"Search\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"LolfoollorS"},"content":"                                            \u003copaqueInsets\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"LolfoollorS"},"content":"                                                \u003cInsets/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"LolfoollorS"},"content":"                                            \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"LolfoollorS"},"content":"                                            \u003cfont\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"LolfoollorS"},"content":"                                                \u003cFont size\u003d\"14.0\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"LolfoollorS"},"content":"                                            \u003c/font\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"LolfoollorS"},"content":"                                            \u003cpadding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"LolfoollorS"},"content":"                                                \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"LolfoollorS"},"content":"                                            \u003c/padding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"LolfoollorS"},"content":"                                        \u003c/Label\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"                                        \u003cTextField fx:id\u003d\"searchTextField\" minWidth\u003d\"118.0\"","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"                                                   onKeyTyped\u003d\"#handleSearchKeywordEntered\" prefHeight\u003d\"26.0\"","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"                                                   prefWidth\u003d\"118.0\" promptText\u003d\"Keywords...\" HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"LolfoollorS"},"content":"                                            \u003cpadding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"LolfoollorS"},"content":"                                                \u003cInsets left\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"LolfoollorS"},"content":"                                            \u003c/padding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                                            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":65,"author":{"gitId":"LolfoollorS"},"content":"                                                \u003cInsets right\u003d\"5.0\" top\u003d\"2.0\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":67,"author":{"gitId":"LolfoollorS"},"content":"                                        \u003c/TextField\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"LolfoollorS"},"content":"                                    \u003c/children\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"LolfoollorS"},"content":"                                \u003c/HBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"LolfoollorS"},"content":"                                \u003cVBox fx:id\u003d\"resultDisplayPlaceholder\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"LolfoollorS"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"LolfoollorS"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"LolfoollorS"},"content":"                        \u003cVBox prefHeight\u003d\"303.0\" prefWidth\u003d\"333.0\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"LolfoollorS"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"LolfoollorS"},"content":"                                \u003cVBox fx:id\u003d\"animatedTutorial\" maxHeight\u003d\"175.0\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"LolfoollorS"},"content":"                                    \u003cchildren\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"                                        \u003cVBox fx:id\u003d\"titleBox\" maxHeight\u003d\"24.0\" prefHeight\u003d\"100.0\" prefWidth\u003d\"307.0\"","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"                                              VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"LolfoollorS"},"content":"                                            \u003cchildren\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"                                                \u003cHBox maxHeight\u003d\"24.0\" minHeight\u003d\"20.0\" prefHeight\u003d\"24.0\"","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"                                                      prefWidth\u003d\"307.0\"","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"                                                      style\u003d\"-fx-background-color: white; -fx-border-color: derive(#1d1d1d, 20%) black  derive(#1d1d1d, 20%) black;\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"LolfoollorS"},"content":"                                                    \u003copaqueInsets\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"LolfoollorS"},"content":"                                                        \u003cInsets/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"LolfoollorS"},"content":"                                                    \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"LolfoollorS"},"content":"                                                    \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"LolfoollorS"},"content":"                                                        \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"LolfoollorS"},"content":"                                                    \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"LolfoollorS"},"content":"                                                    \u003cchildren\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"                                                        \u003cImageView fx:id\u003d\"tutorialLogo\" fitHeight\u003d\"14.0\" fitWidth\u003d\"20.0\"","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"johnbenedictyan"},"content":"                                                                   pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"LolfoollorS"},"content":"                                                            \u003cimage\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"LolfoollorS"},"content":"                                                                \u003cImage url\u003d\"@../images/healthcare_xpress_logo.png\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"LolfoollorS"},"content":"                                                            \u003c/image\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"LolfoollorS"},"content":"                                                            \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"LolfoollorS"},"content":"                                                                \u003cInsets bottom\u003d\"1.0\" left\u003d\"5.0\" top\u003d\"2.0\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"LolfoollorS"},"content":"                                                            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"LolfoollorS"},"content":"                                                        \u003c/ImageView\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"johnbenedictyan"},"content":"                                                        \u003cText strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\"","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"                                                              text\u003d\"Healthcare Xpress\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                                                            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                                                                \u003cInsets left\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                                                            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":104,"author":{"gitId":"LolfoollorS"},"content":"                                                        \u003c/Text\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"LolfoollorS"},"content":"                                                    \u003c/children\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"LolfoollorS"},"content":"                                                \u003c/HBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                                            \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                                            \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"LolfoollorS"},"content":"                                                \u003cInsets/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                                            \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"LolfoollorS"},"content":"                                        \u003c/VBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"johnbenedictyan"},"content":"                                        \u003cVBox maxHeight\u003d\"25.0\" minHeight\u003d\"25.0\" prefHeight\u003d\"25.0\" prefWidth\u003d\"307.0\"","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"johnbenedictyan"},"content":"                                              style\u003d\"-fx-border-color: transparent derive(#1d1d1d, 10%) derive(#1d1d1d, 10%) derive(#1d1d1d, 10%);\"","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"johnbenedictyan"},"content":"                                              VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"LolfoollorS"},"content":"                                            \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"LolfoollorS"},"content":"                                                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"LolfoollorS"},"content":"                                            \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"LolfoollorS"},"content":"                                            \u003cchildren\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"johnbenedictyan"},"content":"                                                \u003cText fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\"","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"johnbenedictyan"},"content":"                                                      text\u003d\"File    Help\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"LolfoollorS"},"content":"                                                    \u003cfont\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"LolfoollorS"},"content":"                                                        \u003cFont name\u003d\"Segoe UI Light\" size\u003d\"14.0\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"LolfoollorS"},"content":"                                                    \u003c/font\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"LolfoollorS"},"content":"                                                    \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"LolfoollorS"},"content":"                                                        \u003cInsets left\u003d\"7.0\" top\u003d\"2.0\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"LolfoollorS"},"content":"                                                    \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"LolfoollorS"},"content":"                                                \u003c/Text\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"LolfoollorS"},"content":"                                            \u003c/children\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"LolfoollorS"},"content":"                                        \u003c/VBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"johnbenedictyan"},"content":"                                        \u003cVBox fx:id\u003d\"titleTop\" maxHeight\u003d\"40.0\" prefHeight\u003d\"40.0\" prefWidth\u003d\"307.0\"","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"johnbenedictyan"},"content":"                                              VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"LolfoollorS"},"content":"                                            \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"LolfoollorS"},"content":"                                                \u003cInsets/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"LolfoollorS"},"content":"                                            \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"LolfoollorS"},"content":"                                            \u003cchildren\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"johnbenedictyan"},"content":"                                                \u003cTextField fx:id\u003d\"helpCommandTextField\" editable\u003d\"false\"","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"johnbenedictyan"},"content":"                                                           prefHeight\u003d\"40.0\" prefWidth\u003d\"307.0\"","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"johnbenedictyan"},"content":"                                                           promptText\u003d\"Enter command here...\"","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"johnbenedictyan"},"content":"                                                           style\u003d\"-fx-background-color: derive(#1d1d1d, 20%); -fx-border-color: derive(#1d1d1d, 20%) derive(#1d1d1d, 10%) derive(#1d1d1d, 10%) derive(#1d1d1d, 10%);\"/\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":140,"author":{"gitId":"LolfoollorS"},"content":"                                            \u003c/children\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                                            \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":142,"author":{"gitId":"LolfoollorS"},"content":"                                                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                                            \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":144,"author":{"gitId":"LolfoollorS"},"content":"                                        \u003c/VBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"johnbenedictyan"},"content":"                                        \u003cVBox fx:id\u003d\"resultBox\" maxHeight\u003d\"75.0\" prefHeight\u003d\"75.0\" prefWidth\u003d\"100.0\"","lastModifiedDate":"2022-10-28"},{"lineNumber":146,"author":{"gitId":"johnbenedictyan"},"content":"                                              style\u003d\"-fx-border-color: transparent derive(#1d1d1d, 10%) derive(#1d1d1d, 10%) derive(#1d1d1d, 10%);\"","lastModifiedDate":"2022-10-28"},{"lineNumber":147,"author":{"gitId":"johnbenedictyan"},"content":"                                              VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"LolfoollorS"},"content":"                                            \u003cchildren\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":149,"author":{"gitId":"johnbenedictyan"},"content":"                                                \u003cTextField fx:id\u003d\"helpOutputTextField\" alignment\u003d\"TOP_LEFT\"","lastModifiedDate":"2022-10-28"},{"lineNumber":150,"author":{"gitId":"johnbenedictyan"},"content":"                                                           editable\u003d\"false\" prefHeight\u003d\"75.0\" prefWidth\u003d\"317.0\"","lastModifiedDate":"2022-10-28"},{"lineNumber":151,"author":{"gitId":"johnbenedictyan"},"content":"                                                           style\u003d\"-fx-background-color: derive(#1d1d1d, 20%); -fx-border-color: derive(#1d1d1d, 10%);\"","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"johnbenedictyan"},"content":"                                                           VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":153,"author":{"gitId":"LolfoollorS"},"content":"                                                    \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":154,"author":{"gitId":"LolfoollorS"},"content":"                                                        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":155,"author":{"gitId":"LolfoollorS"},"content":"                                                    \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":156,"author":{"gitId":"LolfoollorS"},"content":"                                                \u003c/TextField\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":157,"author":{"gitId":"LolfoollorS"},"content":"                                            \u003c/children\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":158,"author":{"gitId":"LolfoollorS"},"content":"                                            \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":159,"author":{"gitId":"LolfoollorS"},"content":"                                                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":160,"author":{"gitId":"LolfoollorS"},"content":"                                            \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":161,"author":{"gitId":"LolfoollorS"},"content":"                                        \u003c/VBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":162,"author":{"gitId":"LolfoollorS"},"content":"                                    \u003c/children\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"LolfoollorS"},"content":"                                \u003c/VBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"LolfoollorS"},"content":"                                \u003cVBox prefHeight\u003d\"100.0\" prefWidth\u003d\"333.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"LolfoollorS"},"content":"                                    \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":166,"author":{"gitId":"LolfoollorS"},"content":"                                        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":167,"author":{"gitId":"LolfoollorS"},"content":"                                    \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":168,"author":{"gitId":"LolfoollorS"},"content":"                                    \u003cchildren\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":169,"author":{"gitId":"johnbenedictyan"},"content":"                                        \u003cTextArea fx:id\u003d\"tipTextArea\" editable\u003d\"false\" prefHeight\u003d\"200.0\"","lastModifiedDate":"2022-10-28"},{"lineNumber":170,"author":{"gitId":"johnbenedictyan"},"content":"                                                  prefWidth\u003d\"200.0\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":171,"author":{"gitId":"LolfoollorS"},"content":"                                    \u003c/children\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":172,"author":{"gitId":"LolfoollorS"},"content":"                                \u003c/VBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":173,"author":{"gitId":"LolfoollorS"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"LolfoollorS"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":175,"author":{"gitId":"LolfoollorS"},"content":"                    \u003c/items\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"LolfoollorS"},"content":"                \u003c/SplitPane\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"LolfoollorS"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"johnbenedictyan":41,"-":28,"LolfoollorS":111}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"         title\u003d\"Healthcare Xpress\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"        \u003cImage url\u003d\"@/images/healthcare_xpress_logo.png\"/\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                           minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"                \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"                      VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"johnbenedictyan":3,"-":56,"LolfoollorS":2}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"                \u003cFlowPane fx:id\u003d\"category\"/\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"            \u003cLabel fx:id\u003d\"uid\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$uid\"/\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"            \u003cLabel fx:id\u003d\"gender\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gender\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"            \u003cLabel fx:id\u003d\"homeVisits\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$homeVisit\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"            \u003cLabel fx:id\u003d\"dateSlots\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"            \u003cLabel fx:id\u003d\"unavailableDates\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$unavailableDate\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"yeehaoo"},"content":"            \u003cLabel fx:id\u003d\"physInfo\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$physInfo\"/\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xhphoong":7,"johnbenedictyan":1,"yeehaoo":1,"-":35}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"johnbenedictyan":1,"-":7}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"           xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"johnbenedictyan":2,"-":7}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"\u003cGridPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\"/\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cLabel fx:id\u003d\"saveLocationStatus\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"johnbenedictyan":1,"-":11}},{"path":"src/test/java/seedu/address/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2018-04-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"        private final Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"johnbenedictyan":1,"-":57}},{"path":"src/test/java/seedu/address/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"        // Tests early access lower version vs not early access higher version compare","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"johnbenedictyan"},"content":"        // by version number first","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"johnbenedictyan"},"content":"        // Tests early access higher version vs not early access lower version compare","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"johnbenedictyan"},"content":"        // by version number first","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"johnbenedictyan":4,"-":133}},{"path":"src/test/java/seedu/address/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-12-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code NullPointerException}","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code NullPointerException}","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"johnbenedictyan":4,"-":106}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    // ---------------- Tests for isNonZeroUnsignedInteger","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    // --------------------------------------","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"    // ---------------- Tests for containsWordIgnoreCase","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"    // --------------------------------------","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", () -\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"            StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", () -\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"            StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"johnbenedictyan"},"content":"     * The test method below tries to verify all above with a reasonably low number","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"johnbenedictyan"},"content":"     * of test cases.","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    // ---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"johnbenedictyan":10,"-":135}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"                temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"yeehaoo"},"content":"        String clearCommand \u003d ClearCommand.COMMAND_WORD;","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"yeehaoo"},"content":"        assertCommandSuccess(clearCommand, ClearCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookIoExceptionThrowingStub(","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"                temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"                temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + CATEGORY_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"                + GENDER_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"mlzt2000"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY)","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"                .withTags().withUniversalUid().build();","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"johnbenedictyan"},"content":"     * - the internal model manager state is the same as that in","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"johnbenedictyan"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"johnbenedictyan"},"content":"     * result message is correct.","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"johnbenedictyan"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"johnbenedictyan"},"content":"     * result message is correct.","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"johnbenedictyan"},"content":"     * Executes the command, confirms that the exception is thrown and that the","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"johnbenedictyan"},"content":"     * result message is correct.","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"johnbenedictyan"},"content":"     * - the internal model manager state is the same as that in","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"xhphoong":4,"johnbenedictyan":24,"yeehaoo":3,"-":137,"mlzt2000":1,"LolfoollorS":1}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":" * Contains integration tests (interaction with the Model) for","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":" * {@code AddCommand}.","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"        Person validPerson \u003d new PersonBuilder().withUid(\"100\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, PersonType.PATIENT, validPerson), expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"        String personIdentifier \u003d \"\";","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"        if (personInList instanceof Patient) {","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"            personIdentifier \u003d PersonType.PATIENT.toString();","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"            personIdentifier \u003d \"person\";","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"        assertCommandFailure(new AddCommand(personInList), model, String.format(AddCommand.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"                personIdentifier));","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"xhphoong":8,"johnbenedictyan":6,"-":41}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"    public void constructor_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"    public void execute_patientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, PersonType.PATIENT, validPerson),","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"        assertEquals(List.of(validPerson), modelStub.personsAdded);","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"    public void execute_duplicatePatient_throwsCommandException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"        assertThrows(CommandException.class, String.format(","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"                PersonType.PATIENT), () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"    private static class ModelStub implements Model {","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"johnbenedictyan"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"johnbenedictyan"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"xhphoong"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"johnbenedictyan"},"content":"        public boolean hasSimilarPerson(Person person) {","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"johnbenedictyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"johnbenedictyan"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"johnbenedictyan"},"content":"        public Optional\u003cPerson\u003e findSimilarPerson(Person person) {","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"xhphoong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":208,"author":{"gitId":"johnbenedictyan"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":209,"author":{"gitId":"johnbenedictyan"},"content":"        public boolean hasSimilarPerson(Person person) {","lastModifiedDate":"2022-10-12"},{"lineNumber":210,"author":{"gitId":"johnbenedictyan"},"content":"            requireNonNull(person);","lastModifiedDate":"2022-10-12"},{"lineNumber":211,"author":{"gitId":"johnbenedictyan"},"content":"            return personsAdded.stream().anyMatch(person::isSimilarPerson);","lastModifiedDate":"2022-10-12"},{"lineNumber":212,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":213,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":214,"author":{"gitId":"johnbenedictyan"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":215,"author":{"gitId":"johnbenedictyan"},"content":"        public Optional\u003cPerson\u003e findSimilarPerson(Person person) {","lastModifiedDate":"2022-10-12"},{"lineNumber":216,"author":{"gitId":"johnbenedictyan"},"content":"            requireNonNull(person);","lastModifiedDate":"2022-10-12"},{"lineNumber":217,"author":{"gitId":"johnbenedictyan"},"content":"            return personsAdded.stream().filter(person::isSimilarPerson).findAny();","lastModifiedDate":"2022-10-12"},{"lineNumber":218,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"xhphoong":8,"johnbenedictyan":31,"-":182}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_SLOT;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"LolfoollorS"},"content":"    public static final String VALID_CATEGORY_AMY \u003d \"P\";","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"    public static final String VALID_CATEGORY_BOB \u003d \"P\";","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"    public static final String VALID_MISSPELT_CATEGORY_BOB \u003d \"Patient\";","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String INVALID_MISSPELT_CATEGORY_BOB \u003d \"Nursey\";","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String VALID_UID_AMY \u003d \"10\";","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String VALID_UID_BOB \u003d \"11\";","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"    public static final String VALID_GENDER_AMY \u003d \"F\";","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"    public static final String VALID_GENDER_BOB \u003d \"M\";","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String VALID_MISSPELT_GENDER_BOB \u003d \"Male\";","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String INVALID_MISSPELT_GENDER_BOB \u003d \"maley\";","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"    public static final String VALID_DATESLOT_AMY \u003d \"2022-11-11,1\";","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"    public static final String VALID_DATESLOT_BOB \u003d \"2022-10-24,4\";","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"mlzt2000"},"content":"    public static final String VALID_VISITED_STATUS \u003d \"true\";","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"mlzt2000"},"content":"    public static final String VALID_NOT_VISITED_STATUS \u003d \"false\";","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"    public static final String OTHER_DATE_SLOT \u003d \"2022-11-10,2\";","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"    public static final String OTHER_DATE_SLOT_TWO \u003d \"2022-12-04,3\";","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"    public static final String OTHER_DATE_SLOT_THREE \u003d \"2023-01-14,1\";","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"    public static final String OTHER_DATE_SLOT_FOUR \u003d \"2022-11-17,3\";","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"    public static final String OTHER_DATE_SLOT_FIVE \u003d \"2022-12-15,4\";","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"    public static final String OTHER_DATE_SLOT_INDEX \u003d \"1\";","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"    public static final String OTHER_DATE_SLOT_INDEX_TWO \u003d \"2\";","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"    public static final String OTHER_DATE_SLOT_INDEX_THREE \u003d \"3\";","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"    public static final String CATEGORY_DESC_AMY \u003d \" \" + PREFIX_CATEGORY + VALID_CATEGORY_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"    public static final String CATEGORY_DESC_BOB \u003d \" \" + PREFIX_CATEGORY + VALID_CATEGORY_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String VALID_MISSPELT_CATEGORY_DESC_BOB \u003d \" \" + PREFIX_CATEGORY + VALID_MISSPELT_CATEGORY_BOB;","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String INVALID_MISSPELT_CATEGORY_DESC_BOB \u003d \" \" + PREFIX_CATEGORY","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"            + INVALID_MISSPELT_CATEGORY_BOB;","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String UID_DESC_AMY \u003d \" \" + PREFIX_UID + VALID_UID_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String UID_DESC_BOB \u003d \" \" + PREFIX_UID + VALID_UID_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"    public static final String GENDER_DESC_AMY \u003d \" \" + PREFIX_GENDER + VALID_GENDER_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"    public static final String GENDER_DESC_BOB \u003d \" \" + PREFIX_GENDER + VALID_GENDER_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String VALID_MISSPELT_GENDER_DESC_BOB \u003d \" \" + PREFIX_GENDER + VALID_MISSPELT_GENDER_BOB;","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String INVALID_MISSPELT_GENDER_DESC_BOB \u003d \" \" + PREFIX_GENDER","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"            + INVALID_MISSPELT_GENDER_BOB;","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"    public static final String DATESLOT_DESC_AMY \u003d \" \" + PREFIX_DATE_AND_SLOT + VALID_DATESLOT_AMY;","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"    public static final String DATESLOT_DESC_BOB \u003d \" \" + PREFIX_DATE_AND_SLOT + VALID_DATESLOT_BOB;","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"LolfoollorS"},"content":"    public static final String INVALID_CATEGORY_DESC \u003d \" \" + PREFIX_CATEGORY + \"NP\"; // only N or P is allowed.","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"    public static final String INVALID_GENDER_DESC \u003d \" \" + PREFIX_GENDER + \"FM\"; // only allowed F or M, either one","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"LolfoollorS"},"content":"    public static final String INVALID_UID_DESC \u003d \" \" + PREFIX_UID + \"1+\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"    public static final String INVALID_DATESLOT_DESC \u003d \" \" + PREFIX_DATE_AND_SLOT","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"            + \"2022/11/11 12.00PM\"; // wrong format for date and slot","lastModifiedDate":"2022-10-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"LolfoollorS"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withCategory(VALID_CATEGORY_AMY).withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"xhphoong"},"content":"                .withGender(VALID_GENDER_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"xhphoong"},"content":"                .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"LolfoollorS"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withCategory(VALID_CATEGORY_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"johnbenedictyan"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult}","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"johnbenedictyan"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"johnbenedictyan"},"content":"     * Convenience wrapper to","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"johnbenedictyan"},"content":"     * {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"johnbenedictyan"},"content":"     * - the address book, filtered person list and selected person in","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":163,"author":{"gitId":"johnbenedictyan"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code targetIndex} in the","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":172,"author":{"gitId":"johnbenedictyan"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(List.of(splitName[0])));","lastModifiedDate":"2022-10-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"xhphoong":29,"johnbenedictyan":24,"-":117,"mlzt2000":2,"LolfoollorS":5}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"    private final Uid outOfBoundsUid \u003d new Uid(99998L);","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"    public void execute_validUidUnfilteredList_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(personToDelete.getUid());","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"        String expectedMessage \u003d \"\";","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"        if (personToDelete instanceof Patient) {","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"            expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"                    PersonType.PATIENT,","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"                    personToDelete) + \" \";","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"            expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, \"person\", personToDelete)","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"                    + \" \";","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"    public void execute_invalidUidUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundsUid);","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_UID);","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"    public void execute_validUidFilteredList_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(personToDelete.getUid());","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"        String expectedMessage \u003d \"\";","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"        if (personToDelete instanceof Patient) {","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"            expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, PersonType.PATIENT,","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"                    personToDelete) + \" \";","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"            expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, \"person\", personToDelete)","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"                    + \" \";","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"    public void execute_invalidUidFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"        assertTrue(INDEX_SECOND_PERSON.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"        Person onlyPerson \u003d model.getAddressBook().getPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new Uid(onlyPerson.getUid().uid + 1L));","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_UID);","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(new Uid(1L));","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"johnbenedictyan"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(new Uid(2L));","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"johnbenedictyan"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(new Uid(1L));","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"xhphoong":18,"johnbenedictyan":20,"-":90}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.OTHER_DATE_SLOT;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.OTHER_DATE_SLOT_FIVE;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.OTHER_DATE_SLOT_FOUR;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.OTHER_DATE_SLOT_INDEX;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.OTHER_DATE_SLOT_INDEX_THREE;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.OTHER_DATE_SLOT_INDEX_TWO;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.OTHER_DATE_SLOT_THREE;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.OTHER_DATE_SLOT_TWO;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":" * EditCommand.","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"    private final Uid outOfBoundsUid \u003d new Uid(99998L);","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"        Person editedPerson \u003d new PersonBuilder().withUid(firstPerson.getUid().toString()).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson)","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"                .withDateSlotIndexes(\"1\").build();","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"        EditCommand editCommand \u003d new EditCommand(firstPerson.getUid(), descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"                editedPerson.getCategoryIndicator(), editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"LolfoollorS"},"content":"                .withGender(VALID_GENDER_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"LolfoollorS"},"content":"                .withGender(VALID_GENDER_BOB).withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"        EditCommand editCommand \u003d new EditCommand(lastPerson.getUid(), descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"                editedPerson.getCategoryIndicator(), editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"    public void execute_dateTimeFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"        // Case 1 (null dateSlot only)","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"        PersonBuilder personToBeEdited \u003d new PersonBuilder(firstPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"xhphoong"},"content":"        Person editedPerson \u003d personToBeEdited.withDatesSlots().build();","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withDatesSlots().build();","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"        EditCommand editCommand \u003d new EditCommand(firstPerson.getUid(), descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"xhphoong"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"                editedPerson.getCategoryIndicator(), editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"xhphoong"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"        // Case 4 (non-null dateSlot and not empty dateSlot and null dateSlotIndex)","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"        editedPerson \u003d personToBeEdited.withDatesSlots(OTHER_DATE_SLOT, OTHER_DATE_SLOT_TWO,","lastModifiedDate":"2022-10-23"},{"lineNumber":105,"author":{"gitId":"xhphoong"},"content":"                OTHER_DATE_SLOT_THREE).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withDatesSlots(OTHER_DATE_SLOT, OTHER_DATE_SLOT_TWO,","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"xhphoong"},"content":"                OTHER_DATE_SLOT_THREE).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":108,"author":{"gitId":"xhphoong"},"content":"        editCommand \u003d new EditCommand(firstPerson.getUid(), descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"xhphoong"},"content":"        expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"xhphoong"},"content":"                editedPerson.getCategoryIndicator(), editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"xhphoong"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"xhphoong"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"johnbenedictyan"},"content":"        // Case 5 (non-null dateSlot and not empty dateSlot and non-null dateSlotIndex","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"johnbenedictyan"},"content":"        // and not empty dateSlotIndex)","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"xhphoong"},"content":"        editedPerson \u003d personToBeEdited.withDatesSlots(OTHER_DATE_SLOT_FOUR, OTHER_DATE_SLOT_FIVE,","lastModifiedDate":"2022-10-23"},{"lineNumber":120,"author":{"gitId":"xhphoong"},"content":"                OTHER_DATE_SLOT_THREE).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"xhphoong"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withDatesSlots(OTHER_DATE_SLOT_FOUR, OTHER_DATE_SLOT_FIVE)","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"xhphoong"},"content":"                .withDateSlotIndexes(OTHER_DATE_SLOT_INDEX, OTHER_DATE_SLOT_INDEX_TWO).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":123,"author":{"gitId":"xhphoong"},"content":"        editCommand \u003d new EditCommand(firstPerson.getUid(), descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"xhphoong"},"content":"        expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"xhphoong"},"content":"                editedPerson.getCategoryIndicator(), editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"xhphoong"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"xhphoong"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"xhphoong"},"content":"        // Case 2 (non-null dateSlotIndex and not empty and null dateSlot)","lastModifiedDate":"2022-10-23"},{"lineNumber":133,"author":{"gitId":"xhphoong"},"content":"        editedPerson \u003d personToBeEdited.withDatesSlots(OTHER_DATE_SLOT_FIVE).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":134,"author":{"gitId":"xhphoong"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withDateSlotIndexes(OTHER_DATE_SLOT_INDEX,","lastModifiedDate":"2022-10-23"},{"lineNumber":135,"author":{"gitId":"xhphoong"},"content":"                OTHER_DATE_SLOT_INDEX_THREE).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":136,"author":{"gitId":"xhphoong"},"content":"        editCommand \u003d new EditCommand(firstPerson.getUid(), descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"xhphoong"},"content":"        expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"xhphoong"},"content":"                editedPerson.getCategoryIndicator(), editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"xhphoong"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"xhphoong"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"xhphoong"},"content":"        // Case 1 (null dateSlotIndex only)","lastModifiedDate":"2022-10-23"},{"lineNumber":146,"author":{"gitId":"xhphoong"},"content":"        editedPerson \u003d personToBeEdited.withDatesSlots().build();","lastModifiedDate":"2022-10-23"},{"lineNumber":147,"author":{"gitId":"xhphoong"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withDateSlotIndexes().build();","lastModifiedDate":"2022-10-23"},{"lineNumber":148,"author":{"gitId":"xhphoong"},"content":"        editCommand \u003d new EditCommand(firstPerson.getUid(), descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"xhphoong"},"content":"        expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"xhphoong"},"content":"                editedPerson.getCategoryIndicator(), editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"xhphoong"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"xhphoong"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"johnbenedictyan"},"content":"        // Case 4 (non-null dateSlot and not empty dateSlot and non-null dateSlotIndex","lastModifiedDate":"2022-10-28"},{"lineNumber":158,"author":{"gitId":"johnbenedictyan"},"content":"        // but empty)","lastModifiedDate":"2022-10-28"},{"lineNumber":159,"author":{"gitId":"xhphoong"},"content":"        editedPerson \u003d personToBeEdited.withDatesSlots(OTHER_DATE_SLOT,","lastModifiedDate":"2022-10-23"},{"lineNumber":160,"author":{"gitId":"xhphoong"},"content":"                OTHER_DATE_SLOT_TWO, OTHER_DATE_SLOT_THREE).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":161,"author":{"gitId":"xhphoong"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withDateSlotIndexes()","lastModifiedDate":"2022-10-23"},{"lineNumber":162,"author":{"gitId":"xhphoong"},"content":"                .withDatesSlots(OTHER_DATE_SLOT, OTHER_DATE_SLOT_TWO, OTHER_DATE_SLOT_THREE).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":163,"author":{"gitId":"xhphoong"},"content":"        editCommand \u003d new EditCommand(firstPerson.getUid(), descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":164,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"xhphoong"},"content":"        expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"xhphoong"},"content":"                editedPerson.getCategoryIndicator(), editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":167,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":168,"author":{"gitId":"xhphoong"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":169,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":170,"author":{"gitId":"xhphoong"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":171,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":172,"author":{"gitId":"xhphoong"},"content":"        // Case 2 (non-null dateSlotIndex and not empty and non-null dateSlot but empty)","lastModifiedDate":"2022-10-23"},{"lineNumber":173,"author":{"gitId":"xhphoong"},"content":"        editedPerson \u003d personToBeEdited.withDatesSlots(OTHER_DATE_SLOT_TWO).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":174,"author":{"gitId":"xhphoong"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withDateSlotIndexes(OTHER_DATE_SLOT_INDEX,","lastModifiedDate":"2022-10-23"},{"lineNumber":175,"author":{"gitId":"xhphoong"},"content":"                OTHER_DATE_SLOT_INDEX_THREE).withDatesSlots().build();","lastModifiedDate":"2022-10-23"},{"lineNumber":176,"author":{"gitId":"xhphoong"},"content":"        editCommand \u003d new EditCommand(firstPerson.getUid(), descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":177,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":178,"author":{"gitId":"xhphoong"},"content":"        expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2022-10-13"},{"lineNumber":179,"author":{"gitId":"xhphoong"},"content":"                editedPerson.getCategoryIndicator(), editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":180,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":181,"author":{"gitId":"xhphoong"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":182,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":183,"author":{"gitId":"xhphoong"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":184,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":185,"author":{"gitId":"xhphoong"},"content":"        // Case 1 (non-null dateSlot but empty and non-null dateSlotIndex but empty)","lastModifiedDate":"2022-10-23"},{"lineNumber":186,"author":{"gitId":"xhphoong"},"content":"        editedPerson \u003d personToBeEdited.withDatesSlots().build();","lastModifiedDate":"2022-10-23"},{"lineNumber":187,"author":{"gitId":"xhphoong"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withDateSlotIndexes().withDatesSlots().build();","lastModifiedDate":"2022-10-23"},{"lineNumber":188,"author":{"gitId":"xhphoong"},"content":"        editCommand \u003d new EditCommand(firstPerson.getUid(), descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":189,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":190,"author":{"gitId":"xhphoong"},"content":"        expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2022-10-13"},{"lineNumber":191,"author":{"gitId":"xhphoong"},"content":"                editedPerson.getCategoryIndicator(), editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":192,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":193,"author":{"gitId":"xhphoong"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":194,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":195,"author":{"gitId":"xhphoong"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":196,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":197,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":198,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":203,"author":{"gitId":"xhphoong"},"content":"        EditCommand editCommand \u003d new EditCommand(editedPerson.getUid(), new EditPersonDescriptor());","lastModifiedDate":"2022-10-10"},{"lineNumber":204,"author":{"gitId":"xhphoong"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2022-10-13"},{"lineNumber":205,"author":{"gitId":"xhphoong"},"content":"                editedPerson.getCategoryIndicator(), editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":218,"author":{"gitId":"xhphoong"},"content":"        EditCommand editCommand \u003d new EditCommand(personInFilteredList.getUid(),","lastModifiedDate":"2022-10-10"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":220,"author":{"gitId":"xhphoong"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2022-10-13"},{"lineNumber":221,"author":{"gitId":"xhphoong"},"content":"                editedPerson.getCategoryIndicator(), editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":232,"author":{"gitId":"xhphoong"},"content":"        Person secondPerson \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":234,"author":{"gitId":"xhphoong"},"content":"        EditCommand editCommand \u003d new EditCommand(secondPerson.getUid(), descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":235,"author":{"gitId":"xhphoong"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-10-13"},{"lineNumber":236,"author":{"gitId":"xhphoong"},"content":"                firstPerson.getCategoryIndicator());","lastModifiedDate":"2022-10-13"},{"lineNumber":237,"author":{"gitId":"xhphoong"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2022-10-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":243,"author":{"gitId":"xhphoong"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":246,"author":{"gitId":"xhphoong"},"content":"        EditCommand editCommand \u003d new EditCommand(firstPerson.getUid(),","lastModifiedDate":"2022-10-10"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":248,"author":{"gitId":"xhphoong"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-10-13"},{"lineNumber":249,"author":{"gitId":"xhphoong"},"content":"                personInList.getCategoryIndicator());","lastModifiedDate":"2022-10-13"},{"lineNumber":250,"author":{"gitId":"xhphoong"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2022-10-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":254,"author":{"gitId":"xhphoong"},"content":"    public void execute_invalidUidUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":256,"author":{"gitId":"johnbenedictyan"},"content":"        EditCommand deleteCommand \u003d new EditCommand(outOfBoundsUid, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":258,"author":{"gitId":"xhphoong"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_UID);","lastModifiedDate":"2022-10-10"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":261,"author":{"gitId":"xhphoong"},"content":"    public void execute_invalidUidFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":263,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-10"},{"lineNumber":265,"author":{"gitId":"johnbenedictyan"},"content":"        assertTrue(INDEX_SECOND_PERSON.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-10-28"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":267,"author":{"gitId":"xhphoong"},"content":"        Person onlyPerson \u003d model.getAddressBook().getPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":268,"author":{"gitId":"xhphoong"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":269,"author":{"gitId":"xhphoong"},"content":"        EditCommand editCommand \u003d new EditCommand(new Uid(onlyPerson.getUid().uid + 1L), descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":270,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":271,"author":{"gitId":"xhphoong"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_UID);","lastModifiedDate":"2022-10-10"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":274,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":275,"author":{"gitId":"xhphoong"},"content":"    public void execute_invalidDateTimeSpecificField_throwsCommandException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":276,"author":{"gitId":"xhphoong"},"content":"        // dateTimeIndex outofbound","lastModifiedDate":"2022-10-13"},{"lineNumber":277,"author":{"gitId":"xhphoong"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":278,"author":{"gitId":"xhphoong"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-10-13"},{"lineNumber":279,"author":{"gitId":"xhphoong"},"content":"                .withDateSlotIndexes(OTHER_DATE_SLOT_INDEX_THREE).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":280,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":281,"author":{"gitId":"xhphoong"},"content":"        EditCommand editCommand \u003d new EditCommand(firstPerson.getUid(), descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":282,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":283,"author":{"gitId":"xhphoong"},"content":"        String expectedMessage \u003d EditCommand.MESSAGE_OUT_OF_BOUND_DATESLOTINDEX;","lastModifiedDate":"2022-10-23"},{"lineNumber":284,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":285,"author":{"gitId":"xhphoong"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2022-10-13"},{"lineNumber":286,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":287,"author":{"gitId":"xhphoong"},"content":"        // testing whether it give the exception when dateTime less than dateTimeIndex","lastModifiedDate":"2022-10-13"},{"lineNumber":288,"author":{"gitId":"xhphoong"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withDatesSlots(OTHER_DATE_SLOT_FOUR)","lastModifiedDate":"2022-10-23"},{"lineNumber":289,"author":{"gitId":"xhphoong"},"content":"                .withDateSlotIndexes(OTHER_DATE_SLOT_INDEX, OTHER_DATE_SLOT_INDEX_TWO)","lastModifiedDate":"2022-10-23"},{"lineNumber":290,"author":{"gitId":"xhphoong"},"content":"                .build();","lastModifiedDate":"2022-10-13"},{"lineNumber":291,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":292,"author":{"gitId":"xhphoong"},"content":"        editCommand \u003d new EditCommand(new Uid(\"3\"), descriptor); // the uid 3 is from TypicalPersons.java [Carl]","lastModifiedDate":"2022-10-13"},{"lineNumber":293,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":294,"author":{"gitId":"xhphoong"},"content":"        expectedMessage \u003d EditCommand.MESSAGE_INVALID_NUMBERS_OF_DATESLOT_AND_DATESLOTINDEX;","lastModifiedDate":"2022-10-23"},{"lineNumber":295,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":296,"author":{"gitId":"xhphoong"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2022-10-13"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":302,"author":{"gitId":"xhphoong"},"content":"        Person firstPerson \u003d model.getAddressBook().getPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":303,"author":{"gitId":"xhphoong"},"content":"        Person secondPerson \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":304,"author":{"gitId":"xhphoong"},"content":"        final EditCommand standardCommand \u003d new EditCommand(firstPerson.getUid(), DESC_AMY);","lastModifiedDate":"2022-10-10"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":308,"author":{"gitId":"xhphoong"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(firstPerson.getUid(), copyDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":321,"author":{"gitId":"xhphoong"},"content":"        assertFalse(standardCommand.equals(new EditCommand(secondPerson.getUid(), DESC_AMY)));","lastModifiedDate":"2022-10-10"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":324,"author":{"gitId":"xhphoong"},"content":"        assertFalse(standardCommand.equals(new EditCommand(firstPerson.getUid(), DESC_BOB)));","lastModifiedDate":"2022-10-10"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"xhphoong":182,"johnbenedictyan":11,"-":132,"LolfoollorS":2}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":58,"mlzt2000":1}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    private final Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"johnbenedictyan":2,"-":18}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":" * Contains integration tests (interaction with the Model) for","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":" * {@code FindCommand}.","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"                Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"                Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"johnbenedictyan":8,"-":76}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    private final Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"johnbenedictyan":2,"-":18}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"yeehaoo"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"yeehaoo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":" * ListCommand.","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":33,"author":{"gitId":"yeehaoo"},"content":"        expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"yeehaoo"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"yeehaoo"},"content":"    public void execute_noFiltersApplied_showsEverything() {","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"yeehaoo"},"content":"        Command listCommand \u003d new ListCommand(Optional.empty(), Optional.empty(),","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"yeehaoo"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"yeehaoo"},"content":"        assertCommandSuccess(listCommand,","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"yeehaoo"},"content":"                model, String.format(ListCommand.MESSAGE_SUCCESS, \"NIL\", \"NIL\", \"NIL\", \"NIL\"), expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"yeehaoo"},"content":"    public void execute_addressFilterApplied_showsJurongUsers() {","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"yeehaoo"},"content":"        Predicate\u003cPerson\u003e predicate \u003d x -\u003e x.getAddress().value.contains(\"Jurong\");","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"yeehaoo"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"yeehaoo"},"content":"        Command listCommand \u003d new ListCommand(Optional.of(new Address(\"Jurong\")), Optional.empty(),","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"yeehaoo"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"yeehaoo"},"content":"        assertCommandSuccess(listCommand,","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"yeehaoo"},"content":"                model, String.format(ListCommand.MESSAGE_SUCCESS, \"Jurong\", \"NIL\", \"NIL\", \"NIL\"), expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"yeehaoo"},"content":"    public void execute_categoryFilterApplied_showsPatients() {","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"yeehaoo"},"content":"        Predicate\u003cPerson\u003e predicate \u003d x -\u003e x.getCategory().equals(new Category(Category.PATIENT_SYMBOL));","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"yeehaoo"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"yeehaoo"},"content":"        Command listCommand \u003d new ListCommand(Optional.empty(), Optional.of(new Category(Category.PATIENT_SYMBOL)),","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"yeehaoo"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"yeehaoo"},"content":"        assertCommandSuccess(listCommand,","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"yeehaoo"},"content":"                model, String.format(ListCommand.MESSAGE_SUCCESS, \"NIL\", \"P\", \"NIL\", \"NIL\"), expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"yeehaoo"},"content":"    public void execute_genderFilterApplied_showsMaleUsers() {","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"yeehaoo"},"content":"        Predicate\u003cPerson\u003e predicate \u003d x -\u003e x.getGender().equals(new Gender(Gender.MALE_SYMBOL));","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"yeehaoo"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"yeehaoo"},"content":"        Command listCommand \u003d new ListCommand(Optional.empty(), Optional.empty(),","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"yeehaoo"},"content":"                Optional.of(new Gender(Gender.MALE_SYMBOL)), Optional.empty());","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"yeehaoo"},"content":"        assertCommandSuccess(listCommand,","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"yeehaoo"},"content":"                model, String.format(ListCommand.MESSAGE_SUCCESS, \"NIL\", \"NIL\", \"M\", \"NIL\"), expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"yeehaoo"},"content":"    public void execute_tagFilterApplied_showsFriendsTag() {","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"yeehaoo"},"content":"        Predicate\u003cPerson\u003e predicate \u003d x -\u003e x.getTags().stream().anyMatch(y -\u003e y.tagName \u003d\u003d \"friends\");","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"yeehaoo"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"yeehaoo"},"content":"        Command listCommand \u003d new ListCommand(Optional.empty(), Optional.empty(),","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"yeehaoo"},"content":"                Optional.empty(), Optional.of(new Tag(\"friends\")));","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"yeehaoo"},"content":"        assertCommandSuccess(listCommand,","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"yeehaoo"},"content":"                model, String.format(ListCommand.MESSAGE_SUCCESS, \"NIL\", \"NIL\", \"NIL\", \"friends\"), expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"yeehaoo"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"yeehaoo"},"content":"    public void execute_allFiltersApplied_showsAlice() {","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"yeehaoo"},"content":"        Predicate\u003cPerson\u003e predicate \u003d x -\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"yeehaoo"},"content":"            boolean addressMatch \u003d x.getAddress().value.contains(\"Jurong\");","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"yeehaoo"},"content":"            boolean categoryMatch \u003d x.getCategory().categoryName.equals(Category.PATIENT_SYMBOL);","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"yeehaoo"},"content":"            boolean genderMatch \u003d x.getGender().gender.equals(Gender.FEMALE_SYMBOL);","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"yeehaoo"},"content":"            boolean tagMatch \u003d x.getTags().stream().anyMatch(y -\u003e y.tagName \u003d\u003d \"friends\");","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"yeehaoo"},"content":"            return addressMatch \u0026\u0026 categoryMatch \u0026\u0026 genderMatch \u0026\u0026 tagMatch;","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"yeehaoo"},"content":"        };","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"yeehaoo"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"yeehaoo"},"content":"        Command listCommand \u003d new ListCommand(Optional.of(new Address(\"Jurong\")),","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"yeehaoo"},"content":"                Optional.of(new Category(Category.PATIENT_SYMBOL)),","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"yeehaoo"},"content":"                Optional.of(new Gender(Gender.FEMALE_SYMBOL)),","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"yeehaoo"},"content":"                Optional.of(new Tag(\"friends\")));","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"yeehaoo"},"content":"        assertCommandSuccess(listCommand,","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"yeehaoo"},"content":"                model, String.format(ListCommand.MESSAGE_SUCCESS, \"Jurong\", \"P\", \"F\", \"friends\"), expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"johnbenedictyan":2,"yeehaoo":68,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/UpdateContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yeehaoo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.testutil.PersonBuilder.DEFAULT_CONTACT_EMAIL;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.testutil.PersonBuilder.DEFAULT_CONTACT_NAME;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.testutil.PersonBuilder.DEFAULT_CONTACT_PHONE;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"yeehaoo"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"yeehaoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"yeehaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.NextOfKin;","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Physician;","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"yeehaoo"},"content":"class UpdateContactCommandTest {","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"yeehaoo"},"content":"    private Model model;","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"yeehaoo"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"yeehaoo"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"yeehaoo"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"yeehaoo"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"yeehaoo"},"content":"        expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"yeehaoo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"yeehaoo"},"content":"    void execute_setPhysicianOnPatient_pass() {","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"yeehaoo"},"content":"        Patient expectedPerson \u003d (Patient) expectedModel.getAddressBook().getPersonList().stream()","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"yeehaoo"},"content":"                .filter(x -\u003e x.getUid().equals(new Uid(3L))).findAny().get();","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"yeehaoo"},"content":"        Physician physicianToAssign \u003d new Physician(new Name(DEFAULT_CONTACT_NAME), new Phone(DEFAULT_CONTACT_PHONE),","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"yeehaoo"},"content":"                new Email(DEFAULT_CONTACT_EMAIL));","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"yeehaoo"},"content":"        Patient expectedPatientEdited \u003d new Patient(expectedPerson.getUid(), expectedPerson.getName(),","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"yeehaoo"},"content":"                expectedPerson.getGender(), expectedPerson.getPhone(), expectedPerson.getEmail(),","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"                expectedPerson.getAddress(), expectedPerson.getTags(), expectedPerson.getDatesSlots(),","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"                Optional.of(physicianToAssign), Optional.empty());","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"yeehaoo"},"content":"        expectedModel.setPerson(expectedPerson, expectedPatientEdited);","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"yeehaoo"},"content":"        Command setPhysCommand \u003d new UpdateContactCommand(new Uid(3L), new Name(DEFAULT_CONTACT_NAME),","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"yeehaoo"},"content":"                new Phone(DEFAULT_CONTACT_PHONE), new Email(DEFAULT_CONTACT_EMAIL),","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"yeehaoo"},"content":"                new Category(Category.PHYSICIAN_SYMBOL));","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"yeehaoo"},"content":"        assertCommandSuccess(setPhysCommand,","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"yeehaoo"},"content":"                model, String.format(UpdateContactCommand.MESSAGE_UPDATE_CONTACT_SUCCESS, 3, DEFAULT_CONTACT_NAME,","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"                        DEFAULT_CONTACT_PHONE, DEFAULT_CONTACT_EMAIL, Category.PHYSICIAN_SYMBOL),","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"                expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"yeehaoo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"yeehaoo"},"content":"    void execute_setPhysicianOnNurse_fail() {","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"yeehaoo"},"content":"        Command setPhysCommand \u003d new UpdateContactCommand(new Uid(5L), new Name(DEFAULT_CONTACT_NAME),","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"yeehaoo"},"content":"                new Phone(DEFAULT_CONTACT_PHONE), new Email(DEFAULT_CONTACT_EMAIL),","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"yeehaoo"},"content":"                new Category(Category.PHYSICIAN_SYMBOL));","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"yeehaoo"},"content":"        assertCommandFailure(setPhysCommand,","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"yeehaoo"},"content":"                model, Messages.MESSAGE_UPDATECONTACT_INVALID_CATEGORY);","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"yeehaoo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"yeehaoo"},"content":"    void execute_setPhysicianOnInvalidUid_fail() {","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"yeehaoo"},"content":"        Command setPhysCommand \u003d new UpdateContactCommand(new Uid(9999L), new Name(DEFAULT_CONTACT_NAME),","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"yeehaoo"},"content":"                new Phone(DEFAULT_CONTACT_PHONE), new Email(DEFAULT_CONTACT_EMAIL),","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"yeehaoo"},"content":"                new Category(Category.PHYSICIAN_SYMBOL));","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"yeehaoo"},"content":"        assertCommandFailure(setPhysCommand,","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"yeehaoo"},"content":"                model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_UID);","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"yeehaoo"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"yeehaoo"},"content":"    void execute_setNokOnPatient_pass() {","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"yeehaoo"},"content":"        Patient expectedPatient \u003d (Patient) expectedModel.getAddressBook().getPersonList().stream()","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"yeehaoo"},"content":"                .filter(x -\u003e x.getUid().equals(new Uid(3L))).findAny().get();","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"yeehaoo"},"content":"        NextOfKin nextOfKin \u003d new NextOfKin(new Name(DEFAULT_CONTACT_NAME), new Phone(DEFAULT_CONTACT_PHONE),","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"yeehaoo"},"content":"                new Email(DEFAULT_CONTACT_EMAIL));","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"yeehaoo"},"content":"        Patient expectedPatientEdited \u003d new Patient(expectedPatient.getUid(), expectedPatient.getName(),","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"yeehaoo"},"content":"                expectedPatient.getGender(), expectedPatient.getPhone(), expectedPatient.getEmail(),","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"                expectedPatient.getAddress(), expectedPatient.getTags(), expectedPatient.getDatesSlots(),","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"                expectedPatient.getAttendingPhysician(), Optional.of(nextOfKin));","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"yeehaoo"},"content":"        expectedModel.setPerson(expectedPatient, expectedPatientEdited);","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"yeehaoo"},"content":"        Command command \u003d new UpdateContactCommand(new Uid(3L), new Name(DEFAULT_CONTACT_NAME),","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"yeehaoo"},"content":"                new Phone(DEFAULT_CONTACT_PHONE), new Email(DEFAULT_CONTACT_EMAIL),","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"yeehaoo"},"content":"                new Category(Category.NEXTOFKIN_SYMBOL));","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"yeehaoo"},"content":"        assertCommandSuccess(command,","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"yeehaoo"},"content":"                model, String.format(UpdateContactCommand.MESSAGE_UPDATE_CONTACT_SUCCESS, 3, DEFAULT_CONTACT_NAME,","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"johnbenedictyan"},"content":"                        DEFAULT_CONTACT_PHONE, DEFAULT_CONTACT_EMAIL, Category.NEXTOFKIN_SYMBOL),","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"                expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"yeehaoo"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"yeehaoo"},"content":"    void execute_setNokOnNurse_fail() {","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"yeehaoo"},"content":"        Command setPhysCommand \u003d new UpdateContactCommand(new Uid(5L), new Name(DEFAULT_CONTACT_NAME),","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"yeehaoo"},"content":"                new Phone(DEFAULT_CONTACT_PHONE), new Email(DEFAULT_CONTACT_EMAIL),","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"yeehaoo"},"content":"                new Category(Category.NEXTOFKIN_SYMBOL));","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":109,"author":{"gitId":"yeehaoo"},"content":"        assertCommandFailure(setPhysCommand,","lastModifiedDate":"2022-10-24"},{"lineNumber":110,"author":{"gitId":"yeehaoo"},"content":"                model, Messages.MESSAGE_UPDATECONTACT_INVALID_CATEGORY);","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":112,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":113,"author":{"gitId":"yeehaoo"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":114,"author":{"gitId":"yeehaoo"},"content":"    void execute_setNokOnInvalidUid_fail() {","lastModifiedDate":"2022-10-24"},{"lineNumber":115,"author":{"gitId":"yeehaoo"},"content":"        Command setPhysCommand \u003d new UpdateContactCommand(new Uid(9999L), new Name(DEFAULT_CONTACT_NAME),","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"yeehaoo"},"content":"                new Phone(DEFAULT_CONTACT_PHONE), new Email(DEFAULT_CONTACT_EMAIL),","lastModifiedDate":"2022-10-24"},{"lineNumber":117,"author":{"gitId":"yeehaoo"},"content":"                new Category(Category.NEXTOFKIN_SYMBOL));","lastModifiedDate":"2022-10-24"},{"lineNumber":118,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":119,"author":{"gitId":"yeehaoo"},"content":"        assertCommandFailure(setPhysCommand,","lastModifiedDate":"2022-10-23"},{"lineNumber":120,"author":{"gitId":"yeehaoo"},"content":"                model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_UID);","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"yeehaoo"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"xhphoong":4,"johnbenedictyan":4,"yeehaoo":114}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATESLOT_DESC_AMY;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATESLOT_DESC_BOB;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_CATEGORY_DESC;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATESLOT_DESC;","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MISSPELT_CATEGORY_DESC_BOB;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MISSPELT_GENDER_DESC_BOB;","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CATEGORY_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATESLOT_AMY;","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATESLOT_BOB;","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MISSPELT_CATEGORY_DESC_BOB;","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MISSPELT_GENDER_DESC_BOB;","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateSlot;","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"    private final AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"LolfoollorS"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withCategory(VALID_CATEGORY_BOB).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"                .withUniversalUid().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + CATEGORY_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"                + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"                + ADDRESS_DESC_BOB + DATESLOT_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"        // multiple categories - last category accepted","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseSuccess(parser, CATEGORY_DESC_AMY + CATEGORY_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"                + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"                + ADDRESS_DESC_BOB + DATESLOT_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseSuccess(parser, CATEGORY_DESC_BOB + NAME_DESC_AMY + NAME_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"                + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"                + ADDRESS_DESC_BOB + DATESLOT_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"        // multiple genders - last gender accepted","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseSuccess(parser, CATEGORY_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"                + GENDER_DESC_AMY + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"                + ADDRESS_DESC_BOB + DATESLOT_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseSuccess(parser, CATEGORY_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"                + GENDER_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"                + ADDRESS_DESC_BOB + DATESLOT_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseSuccess(parser, CATEGORY_DESC_BOB + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"xhphoong"},"content":"                + ADDRESS_DESC_BOB + DATESLOT_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseSuccess(parser, CATEGORY_DESC_BOB + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"                + ADDRESS_DESC_BOB + DATESLOT_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-23"},{"lineNumber":105,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"        // multiple dateTimes - all accepted","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"johnbenedictyan"},"content":"        Person expectedPersonMultipleDatesTimes \u003d new PersonBuilder(BOB).withUniversalUid().withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"xhphoong"},"content":"                .withDatesSlots(VALID_DATESLOT_BOB, VALID_DATESLOT_AMY).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":109,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseSuccess(parser, CATEGORY_DESC_BOB + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATESLOT_DESC_AMY + DATESLOT_DESC_BOB","lastModifiedDate":"2022-10-23"},{"lineNumber":111,"author":{"gitId":"xhphoong"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleDatesTimes));","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"johnbenedictyan"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withUniversalUid()","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"johnbenedictyan"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":117,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseSuccess(parser, CATEGORY_DESC_BOB + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATESLOT_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-23"},{"lineNumber":119,"author":{"gitId":"xhphoong"},"content":"                + TAG_DESC_HUSBAND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"xhphoong"},"content":"        // zero dateTimes","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"xhphoong"},"content":"        Person expectedPersonNoDatesTimes \u003d new PersonBuilder(AMY).withDatesSlots().withUniversalUid().build();","lastModifiedDate":"2022-10-23"},{"lineNumber":126,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseSuccess(parser, CATEGORY_DESC_AMY + NAME_DESC_AMY + GENDER_DESC_AMY","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"xhphoong"},"content":"                new AddCommand(expectedPersonNoDatesTimes));","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"johnbenedictyan"},"content":"        Person expectedPersonNoTag \u003d new PersonBuilder(AMY).withTags().withUniversalUid().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseSuccess(parser, CATEGORY_DESC_AMY + NAME_DESC_AMY + GENDER_DESC_AMY","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + DATESLOT_DESC_AMY,","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"xhphoong"},"content":"                new AddCommand(expectedPersonNoTag));","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"xhphoong"},"content":"        // missing category prefix","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseFailure(parser, VALID_CATEGORY_BOB + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseFailure(parser, CATEGORY_DESC_BOB + VALID_NAME_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":149,"author":{"gitId":"xhphoong"},"content":"        // missing gender prefix","lastModifiedDate":"2022-10-06"},{"lineNumber":150,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseFailure(parser, CATEGORY_DESC_BOB + NAME_DESC_BOB + VALID_GENDER_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseFailure(parser, CATEGORY_DESC_BOB + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"xhphoong"},"content":"                + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseFailure(parser, CATEGORY_DESC_BOB + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseFailure(parser, CATEGORY_DESC_BOB + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseFailure(parser, VALID_CATEGORY_BOB + VALID_NAME_BOB + VALID_GENDER_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":167,"author":{"gitId":"xhphoong"},"content":"                + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"xhphoong"},"content":"        // invalid category","lastModifiedDate":"2022-10-09"},{"lineNumber":174,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseFailure(parser, INVALID_CATEGORY_DESC + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATESLOT_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-23"},{"lineNumber":176,"author":{"gitId":"LolfoollorS"},"content":"                + TAG_DESC_FRIEND, Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseFailure(parser, CATEGORY_DESC_BOB + INVALID_NAME_DESC + GENDER_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":180,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATESLOT_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-23"},{"lineNumber":181,"author":{"gitId":"xhphoong"},"content":"                + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"xhphoong"},"content":"        // invalid gender","lastModifiedDate":"2022-10-06"},{"lineNumber":184,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseFailure(parser, CATEGORY_DESC_BOB + NAME_DESC_BOB + INVALID_GENDER_DESC","lastModifiedDate":"2022-10-12"},{"lineNumber":185,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATESLOT_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-23"},{"lineNumber":186,"author":{"gitId":"xhphoong"},"content":"                + TAG_DESC_FRIEND, Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseFailure(parser, CATEGORY_DESC_BOB + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":190,"author":{"gitId":"xhphoong"},"content":"                + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATESLOT_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-23"},{"lineNumber":191,"author":{"gitId":"xhphoong"},"content":"                + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":194,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseFailure(parser, CATEGORY_DESC_BOB + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":195,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB + DATESLOT_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-23"},{"lineNumber":196,"author":{"gitId":"xhphoong"},"content":"                + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":199,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseFailure(parser, CATEGORY_DESC_BOB + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":200,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC + DATESLOT_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-23"},{"lineNumber":201,"author":{"gitId":"xhphoong"},"content":"                + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":202,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":203,"author":{"gitId":"xhphoong"},"content":"        // invalid datesSlots","lastModifiedDate":"2022-10-23"},{"lineNumber":204,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseFailure(parser, CATEGORY_DESC_BOB + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":205,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + INVALID_DATESLOT_DESC + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-23"},{"lineNumber":206,"author":{"gitId":"xhphoong"},"content":"                + TAG_DESC_FRIEND, DateSlot.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseFailure(parser, CATEGORY_DESC_BOB + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":210,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATESLOT_DESC_BOB + INVALID_TAG_DESC","lastModifiedDate":"2022-10-23"},{"lineNumber":211,"author":{"gitId":"xhphoong"},"content":"                + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":214,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseFailure(parser, CATEGORY_DESC_BOB + INVALID_NAME_DESC + GENDER_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":215,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC + DATESLOT_DESC_BOB,","lastModifiedDate":"2022-10-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":219,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + CATEGORY_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":220,"author":{"gitId":"xhphoong"},"content":"                + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATESLOT_DESC_BOB","lastModifiedDate":"2022-10-23"},{"lineNumber":221,"author":{"gitId":"xhphoong"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-10"},{"lineNumber":222,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":225,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":226,"author":{"gitId":"johnbenedictyan"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":227,"author":{"gitId":"johnbenedictyan"},"content":"    public void parse_misspelling_correctly() {","lastModifiedDate":"2022-10-25"},{"lineNumber":228,"author":{"gitId":"johnbenedictyan"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withCategory(VALID_CATEGORY_BOB).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-25"},{"lineNumber":229,"author":{"gitId":"johnbenedictyan"},"content":"                .withUniversalUid().build();","lastModifiedDate":"2022-10-25"},{"lineNumber":230,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":231,"author":{"gitId":"johnbenedictyan"},"content":"        // Valid misspelt category","lastModifiedDate":"2022-10-25"},{"lineNumber":232,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseSuccess(parser, VALID_MISSPELT_CATEGORY_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2022-10-25"},{"lineNumber":233,"author":{"gitId":"johnbenedictyan"},"content":"                + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-25"},{"lineNumber":234,"author":{"gitId":"xhphoong"},"content":"                + ADDRESS_DESC_BOB + DATESLOT_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-27"},{"lineNumber":235,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":236,"author":{"gitId":"johnbenedictyan"},"content":"        // Invalid misspelt category","lastModifiedDate":"2022-10-25"},{"lineNumber":237,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseFailure(parser, INVALID_MISSPELT_CATEGORY_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2022-10-25"},{"lineNumber":238,"author":{"gitId":"johnbenedictyan"},"content":"                + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-25"},{"lineNumber":239,"author":{"gitId":"xhphoong"},"content":"                + ADDRESS_DESC_BOB + DATESLOT_DESC_BOB + TAG_DESC_FRIEND, Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":240,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":241,"author":{"gitId":"johnbenedictyan"},"content":"        // Valid misspelt gender","lastModifiedDate":"2022-10-25"},{"lineNumber":242,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseSuccess(parser, CATEGORY_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2022-10-25"},{"lineNumber":243,"author":{"gitId":"johnbenedictyan"},"content":"                + VALID_MISSPELT_GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-25"},{"lineNumber":244,"author":{"gitId":"xhphoong"},"content":"                + ADDRESS_DESC_BOB + DATESLOT_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-27"},{"lineNumber":245,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":246,"author":{"gitId":"johnbenedictyan"},"content":"        // Invalid misspelt gender","lastModifiedDate":"2022-10-25"},{"lineNumber":247,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseFailure(parser, CATEGORY_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2022-10-25"},{"lineNumber":248,"author":{"gitId":"johnbenedictyan"},"content":"                + INVALID_MISSPELT_GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-25"},{"lineNumber":249,"author":{"gitId":"xhphoong"},"content":"                + ADDRESS_DESC_BOB + DATESLOT_DESC_BOB + TAG_DESC_FRIEND, Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":250,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":251,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"xhphoong":83,"johnbenedictyan":63,"-":101,"LolfoollorS":5}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UID_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"        ModelManager modelManager \u003d new ModelManager(); // to create uid for new person to be added","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"        Person person \u003d new PersonBuilder().withUniversalUid().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person), modelManager);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD, modelManager) instanceof ClearCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\", modelManager) instanceof ClearCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + PREFIX_UID + VALID_UID_AMY, modelManager);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"        assertEquals(new DeleteCommand(new Uid(VALID_UID_AMY)), command);","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"        descriptor.setPhone(new Phone(\"20039109\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \" + PREFIX_UID","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"                + VALID_UID_AMY + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor), modelManager);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"        assertEquals(new EditCommand(new Uid(VALID_UID_AMY), descriptor), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD, modelManager) instanceof ExitCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\", modelManager) instanceof ExitCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")),","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"                modelManager);","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD, modelManager) instanceof HelpCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\", modelManager) instanceof HelpCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"xhphoong"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD, modelManager) instanceof ListCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\", modelManager) instanceof ListCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"johnbenedictyan"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"johnbenedictyan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), () -\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"johnbenedictyan"},"content":"                        parser.parseCommand(\"\", modelManager));","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"xhphoong"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"johnbenedictyan"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"johnbenedictyan"},"content":"                parser.parseCommand(\"unknownCommand\", modelManager));","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"xhphoong":30,"johnbenedictyan":10,"-":78}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"     * the {@code expectedValues}","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"     * and only the last value is returned upon calling","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"        // trimmed","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"johnbenedictyan"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"johnbenedictyan"},"content":"        // reset","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"johnbenedictyan":8,"-":146}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"     * and the command created","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"     * unsuccessful and the error message","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"johnbenedictyan":4,"-":37}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UID_DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UID_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":" * As we are only doing white-box testing, our test cases do not cover path","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":" * variations","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":" * the","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    private final DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseSuccess(parser, UID_DESC_AMY, new DeleteCommand(new Uid(VALID_UID_AMY)));","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"johnbenedictyan":9,"-":27}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATESLOT_DESC_AMY;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATESLOT_DESC_BOB;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UID_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UID_DESC_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATESLOT_AMY;","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATESLOT_BOB;","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UID_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UID_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_SLOT;","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_SLOT_INDEX;","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"    private static final String DATE_AND_SLOT_EMPTY \u003d \" \" + PREFIX_DATE_AND_SLOT;","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"    private static final String DATE_AND_SLOT_INDEXES_EMPTY \u003d \" \" + PREFIX_DATE_AND_SLOT_INDEX;","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"            EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"    private static final String OTHER_DATES_AND_SLOTS \u003d \"2022-12-17,3\";","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"    private static final String OTHER_DATES_AND_SLOTS_TWO \u003d \"2022-06-18,4\";","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"    private static final String OTHER_DATES_AND_SLOTS_DESC \u003d \" \" + PREFIX_DATE_AND_SLOT + OTHER_DATES_AND_SLOTS;","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"    private static final String OTHER_DATES_AND_SLOTS_DESC_TWO \u003d \" \" + PREFIX_DATE_AND_SLOT","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"            + OTHER_DATES_AND_SLOTS_TWO;","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"    private static final String OTHER_DATES_AND_SLOTS_INDEX \u003d \"1\";","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"    private static final String OTHER_DATES_AND_SLOTS_INDEX_TWO \u003d \"2\";","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"    private static final String OTHER_DATES_AND_SLOTS_INDEX_DESC \u003d \" \" + PREFIX_DATE_AND_SLOT_INDEX","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"            + OTHER_DATES_AND_SLOTS_INDEX;","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"    private static final String OTHER_DATES_AND_SLOTS_INDEX_DESC_TWO \u003d \" \" + PREFIX_DATE_AND_SLOT_INDEX","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"            + OTHER_DATES_AND_SLOTS_INDEX_TWO;","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"    private static final String OTHER_TAG \u003d \"heartDisease\";","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"    private static final String OTHER_TAG_TWO \u003d \"children\";","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"    private static final String OTHER_TAG_DESC \u003d \" \" + PREFIX_TAG + OTHER_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"    private static final String OTHER_TAG_DESC_TWO \u003d \" \" + PREFIX_TAG + OTHER_TAG_TWO;","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"    private final EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"LolfoollorS"},"content":"        assertParseFailure(parser, UID_DESC_AMY, EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"LolfoollorS"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"-5\" + NAME_DESC_AMY, Uid.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":105,"author":{"gitId":"johnbenedictyan"},"content":"        // assertParseFailure(parser, \" \" + PREFIX_UID + \"0\" + NAME_DESC_AMY,","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"johnbenedictyan"},"content":"        // Uid.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":109,"author":{"gitId":"LolfoollorS"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1 some random string\", Uid.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"LolfoollorS"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1 i/ string\", Uid.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"LolfoollorS"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + INVALID_NAME_DESC,","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"LolfoollorS"},"content":"                Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"LolfoollorS"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + INVALID_GENDER_DESC,","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"LolfoollorS"},"content":"                Gender.MESSAGE_CONSTRAINTS); // invalid gender","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"LolfoollorS"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + INVALID_PHONE_DESC,","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"LolfoollorS"},"content":"                Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"LolfoollorS"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + INVALID_EMAIL_DESC,","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"LolfoollorS"},"content":"                Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"LolfoollorS"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + INVALID_ADDRESS_DESC,","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"LolfoollorS"},"content":"                Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"LolfoollorS"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + INVALID_TAG_DESC,","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"LolfoollorS"},"content":"                Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"LolfoollorS"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY,","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"LolfoollorS"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"johnbenedictyan"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"johnbenedictyan"},"content":"        // followed by valid phone","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"LolfoollorS"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC,","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"LolfoollorS"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"johnbenedictyan"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"johnbenedictyan"},"content":"        // Person} being edited,","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"LolfoollorS"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY,","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"LolfoollorS"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"LolfoollorS"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND,","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"LolfoollorS"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"LolfoollorS"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"LolfoollorS"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"LolfoollorS"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"LolfoollorS"},"content":"                + VALID_ADDRESS_AMY + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":157,"author":{"gitId":"LolfoollorS"},"content":"        String userInput \u003d UID_DESC_AMY + GENDER_DESC_AMY + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"LolfoollorS"},"content":"                .withGender(VALID_GENDER_AMY).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"LolfoollorS"},"content":"                .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":163,"author":{"gitId":"LolfoollorS"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Uid(VALID_UID_AMY), descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"LolfoollorS"},"content":"        String userInput \u003d UID_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"LolfoollorS"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Uid(VALID_UID_AMY), descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"LolfoollorS"},"content":"        String userInput \u003d UID_DESC_BOB + NAME_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"LolfoollorS"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Uid(VALID_UID_BOB), descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"LolfoollorS"},"content":"        // gender","lastModifiedDate":"2022-10-09"},{"lineNumber":188,"author":{"gitId":"LolfoollorS"},"content":"        userInput \u003d UID_DESC_BOB + GENDER_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":189,"author":{"gitId":"LolfoollorS"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withGender(VALID_GENDER_AMY).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":190,"author":{"gitId":"LolfoollorS"},"content":"        expectedCommand \u003d new EditCommand(new Uid(VALID_UID_BOB), descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"LolfoollorS"},"content":"        userInput \u003d UID_DESC_BOB + PHONE_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"LolfoollorS"},"content":"        expectedCommand \u003d new EditCommand(new Uid(VALID_UID_BOB), descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"LolfoollorS"},"content":"        userInput \u003d UID_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"LolfoollorS"},"content":"        expectedCommand \u003d new EditCommand(new Uid(VALID_UID_BOB), descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"LolfoollorS"},"content":"        userInput \u003d UID_DESC_BOB + ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"LolfoollorS"},"content":"        expectedCommand \u003d new EditCommand(new Uid(VALID_UID_BOB), descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"LolfoollorS"},"content":"        userInput \u003d UID_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"LolfoollorS"},"content":"        expectedCommand \u003d new EditCommand(new Uid(VALID_UID_BOB), descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":216,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":222,"author":{"gitId":"LolfoollorS"},"content":"        String userInput \u003d UID_DESC_AMY + PHONE_DESC_AMY + GENDER_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-11"},{"lineNumber":223,"author":{"gitId":"LolfoollorS"},"content":"                + EMAIL_DESC_AMY + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-09"},{"lineNumber":224,"author":{"gitId":"LolfoollorS"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_BOB + ADDRESS_DESC_BOB + GENDER_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":225,"author":{"gitId":"LolfoollorS"},"content":"                + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-09"},{"lineNumber":226,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":227,"author":{"gitId":"LolfoollorS"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withGender(VALID_GENDER_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":228,"author":{"gitId":"LolfoollorS"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":229,"author":{"gitId":"LolfoollorS"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"LolfoollorS"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Uid(VALID_UID_AMY), descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":234,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":235,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":236,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":237,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":238,"author":{"gitId":"xhphoong"},"content":"    public void parse_multipleRepeatedFields_acceptsAll() {","lastModifiedDate":"2022-10-13"},{"lineNumber":239,"author":{"gitId":"xhphoong"},"content":"        // tags with different inputs","lastModifiedDate":"2022-10-13"},{"lineNumber":240,"author":{"gitId":"xhphoong"},"content":"        String userInput \u003d UID_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-13"},{"lineNumber":241,"author":{"gitId":"xhphoong"},"content":"                + TAG_DESC_HUSBAND + OTHER_TAG_DESC + OTHER_TAG_DESC_TWO;","lastModifiedDate":"2022-10-13"},{"lineNumber":242,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":243,"author":{"gitId":"xhphoong"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND,","lastModifiedDate":"2022-10-13"},{"lineNumber":244,"author":{"gitId":"xhphoong"},"content":"                VALID_TAG_HUSBAND, OTHER_TAG, OTHER_TAG_TWO).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":245,"author":{"gitId":"xhphoong"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Uid(VALID_UID_AMY), descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":246,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":247,"author":{"gitId":"xhphoong"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":248,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":254,"author":{"gitId":"LolfoollorS"},"content":"        String userInput \u003d UID_DESC_AMY + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":256,"author":{"gitId":"LolfoollorS"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Uid(VALID_UID_AMY), descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":260,"author":{"gitId":"LolfoollorS"},"content":"        userInput \u003d UID_DESC_AMY + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":264,"author":{"gitId":"LolfoollorS"},"content":"        expectedCommand \u003d new EditCommand(new Uid(VALID_UID_AMY), descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":270,"author":{"gitId":"LolfoollorS"},"content":"        String userInput \u003d UID_DESC_AMY + TAG_EMPTY;","lastModifiedDate":"2022-10-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":273,"author":{"gitId":"LolfoollorS"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Uid(VALID_UID_AMY), descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":278,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":279,"author":{"gitId":"xhphoong"},"content":"    public void parse_allDatesTimesCases_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":280,"author":{"gitId":"xhphoong"},"content":"        // empty dateTimes, empty dateTimeIndexes","lastModifiedDate":"2022-10-13"},{"lineNumber":281,"author":{"gitId":"xhphoong"},"content":"        String userInput \u003d UID_DESC_AMY + DATE_AND_SLOT_EMPTY + DATE_AND_SLOT_INDEXES_EMPTY;","lastModifiedDate":"2022-10-23"},{"lineNumber":282,"author":{"gitId":"xhphoong"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withDatesSlots()","lastModifiedDate":"2022-10-23"},{"lineNumber":283,"author":{"gitId":"xhphoong"},"content":"                .withDateSlotIndexes().build();","lastModifiedDate":"2022-10-23"},{"lineNumber":284,"author":{"gitId":"xhphoong"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Uid(VALID_UID_AMY), descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":286,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":287,"author":{"gitId":"xhphoong"},"content":"        // empty dateTimeIndexes only","lastModifiedDate":"2022-10-13"},{"lineNumber":288,"author":{"gitId":"xhphoong"},"content":"        userInput \u003d UID_DESC_AMY + DATE_AND_SLOT_INDEXES_EMPTY;","lastModifiedDate":"2022-10-23"},{"lineNumber":289,"author":{"gitId":"xhphoong"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withDateSlotIndexes().build();","lastModifiedDate":"2022-10-23"},{"lineNumber":290,"author":{"gitId":"xhphoong"},"content":"        expectedCommand \u003d new EditCommand(new Uid(VALID_UID_AMY), descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":291,"author":{"gitId":"xhphoong"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":292,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":293,"author":{"gitId":"xhphoong"},"content":"        // non-empty dateTimes only","lastModifiedDate":"2022-10-13"},{"lineNumber":294,"author":{"gitId":"xhphoong"},"content":"        userInput \u003d UID_DESC_AMY + DATESLOT_DESC_BOB + DATESLOT_DESC_AMY + OTHER_DATES_AND_SLOTS_DESC;","lastModifiedDate":"2022-10-23"},{"lineNumber":295,"author":{"gitId":"xhphoong"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withDatesSlots(VALID_DATESLOT_BOB,","lastModifiedDate":"2022-10-23"},{"lineNumber":296,"author":{"gitId":"xhphoong"},"content":"                VALID_DATESLOT_AMY, OTHER_DATES_AND_SLOTS).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":297,"author":{"gitId":"xhphoong"},"content":"        expectedCommand \u003d new EditCommand(new Uid(VALID_UID_AMY), descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":298,"author":{"gitId":"xhphoong"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":299,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":300,"author":{"gitId":"xhphoong"},"content":"        // non-empty dateTimes, non-empty dateTimeIndexes","lastModifiedDate":"2022-10-13"},{"lineNumber":301,"author":{"gitId":"xhphoong"},"content":"        userInput \u003d UID_DESC_AMY + OTHER_DATES_AND_SLOTS_DESC_TWO + OTHER_DATES_AND_SLOTS_INDEX_DESC;","lastModifiedDate":"2022-10-23"},{"lineNumber":302,"author":{"gitId":"xhphoong"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withDateSlotIndexes(OTHER_DATES_AND_SLOTS_INDEX)","lastModifiedDate":"2022-10-23"},{"lineNumber":303,"author":{"gitId":"xhphoong"},"content":"                .withDatesSlots(OTHER_DATES_AND_SLOTS_TWO).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":304,"author":{"gitId":"xhphoong"},"content":"        expectedCommand \u003d new EditCommand(new Uid(VALID_UID_AMY), descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":305,"author":{"gitId":"xhphoong"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":306,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":307,"author":{"gitId":"xhphoong"},"content":"        // non-empty dateTimeIndexes only","lastModifiedDate":"2022-10-13"},{"lineNumber":308,"author":{"gitId":"xhphoong"},"content":"        userInput \u003d UID_DESC_AMY + OTHER_DATES_AND_SLOTS_INDEX_DESC + OTHER_DATES_AND_SLOTS_INDEX_DESC_TWO;","lastModifiedDate":"2022-10-23"},{"lineNumber":309,"author":{"gitId":"xhphoong"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withDateSlotIndexes(OTHER_DATES_AND_SLOTS_INDEX,","lastModifiedDate":"2022-10-23"},{"lineNumber":310,"author":{"gitId":"xhphoong"},"content":"                OTHER_DATES_AND_SLOTS_INDEX_TWO).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":311,"author":{"gitId":"xhphoong"},"content":"        expectedCommand \u003d new EditCommand(new Uid(VALID_UID_AMY), descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":312,"author":{"gitId":"xhphoong"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":313,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":314,"author":{"gitId":"xhphoong"},"content":"        // non-empty dateTimes and empty dateTimeIndexes","lastModifiedDate":"2022-10-13"},{"lineNumber":315,"author":{"gitId":"xhphoong"},"content":"        userInput \u003d UID_DESC_AMY + OTHER_DATES_AND_SLOTS_DESC_TWO + DATE_AND_SLOT_INDEXES_EMPTY;","lastModifiedDate":"2022-10-23"},{"lineNumber":316,"author":{"gitId":"xhphoong"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withDatesSlots(OTHER_DATES_AND_SLOTS_TWO)","lastModifiedDate":"2022-10-23"},{"lineNumber":317,"author":{"gitId":"xhphoong"},"content":"                .withDateSlotIndexes().build();","lastModifiedDate":"2022-10-23"},{"lineNumber":318,"author":{"gitId":"xhphoong"},"content":"        expectedCommand \u003d new EditCommand(new Uid(VALID_UID_AMY), descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":319,"author":{"gitId":"xhphoong"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":320,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":321,"author":{"gitId":"xhphoong"},"content":"        // non-empty dateTimeIndexes and empty dateTimeIndexes","lastModifiedDate":"2022-10-13"},{"lineNumber":322,"author":{"gitId":"xhphoong"},"content":"        userInput \u003d UID_DESC_AMY + OTHER_DATES_AND_SLOTS_INDEX_DESC + DATE_AND_SLOT_EMPTY;","lastModifiedDate":"2022-10-23"},{"lineNumber":323,"author":{"gitId":"xhphoong"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withDateSlotIndexes(OTHER_DATES_AND_SLOTS_INDEX)","lastModifiedDate":"2022-10-23"},{"lineNumber":324,"author":{"gitId":"xhphoong"},"content":"                .withDatesSlots().build();","lastModifiedDate":"2022-10-23"},{"lineNumber":325,"author":{"gitId":"xhphoong"},"content":"        expectedCommand \u003d new EditCommand(new Uid(VALID_UID_AMY), descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":326,"author":{"gitId":"xhphoong"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":327,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":328,"author":{"gitId":"xhphoong"},"content":"        // empty dateTimes only","lastModifiedDate":"2022-10-13"},{"lineNumber":329,"author":{"gitId":"xhphoong"},"content":"        userInput \u003d UID_DESC_AMY + DATE_AND_SLOT_EMPTY;","lastModifiedDate":"2022-10-23"},{"lineNumber":330,"author":{"gitId":"xhphoong"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withDatesSlots().build();","lastModifiedDate":"2022-10-23"},{"lineNumber":331,"author":{"gitId":"xhphoong"},"content":"        expectedCommand \u003d new EditCommand(new Uid(VALID_UID_AMY), descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":332,"author":{"gitId":"xhphoong"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":333,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"xhphoong":95,"johnbenedictyan":9,"-":156,"LolfoollorS":75}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    private final FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"        FindCommand expectedFindCommand \u003d new FindCommand(","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"johnbenedictyan":3,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/ListCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yeehaoo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"yeehaoo"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"yeehaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"yeehaoo"},"content":"public class ListCommandParserTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"yeehaoo"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"yeehaoo"},"content":"    public void parse_noFiltersApplied_listAll() {","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"yeehaoo"},"content":"        Command expectedCommand \u003d new ListCommand(Optional.empty(), Optional.empty(),","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"yeehaoo"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"yeehaoo"},"content":"        Command actualCommand \u003d new ListCommandParser().parse(\"\");","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"yeehaoo"},"content":"        assert (actualCommand.equals(expectedCommand));","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"yeehaoo"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"yeehaoo"},"content":"    public void parse_addressFilterApplied_listAddress() {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"yeehaoo"},"content":"        Command expectedCommand \u003d new ListCommand(Optional.of(new Address(\"Jurong\")), Optional.empty(),","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"yeehaoo"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"yeehaoo"},"content":"        Command actualCommand \u003d new ListCommandParser().parse(\"list a/ Jurong\");","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"yeehaoo"},"content":"        assert (actualCommand.equals(expectedCommand));","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"yeehaoo"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"yeehaoo"},"content":"    public void parse_categoryFilterApplied_listCategory() {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"yeehaoo"},"content":"        Command expectedCommand \u003d new ListCommand(Optional.empty(), Optional.of(new Category(Category.PATIENT_SYMBOL)),","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"yeehaoo"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"yeehaoo"},"content":"        Command actualCommand \u003d new ListCommandParser().parse(\"list c/ P\");","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"yeehaoo"},"content":"        assert (actualCommand.equals(expectedCommand));","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"yeehaoo"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"yeehaoo"},"content":"    public void parse_genderFilterApplied_listGender() {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"yeehaoo"},"content":"        Command expectedCommand \u003d new ListCommand(Optional.empty(), Optional.empty(),","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"yeehaoo"},"content":"                Optional.of(new Gender(Gender.FEMALE_SYMBOL)), Optional.empty());","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"yeehaoo"},"content":"        Command actualCommand \u003d new ListCommandParser().parse(\"list g/ F\");","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"yeehaoo"},"content":"        assert (actualCommand.equals(expectedCommand));","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"yeehaoo"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"yeehaoo"},"content":"    public void parse_tagFilterApplied_listTag() {","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"yeehaoo"},"content":"        Command expectedCommand \u003d new ListCommand(Optional.empty(), Optional.empty(),","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"yeehaoo"},"content":"                Optional.empty(), Optional.of(new Tag(\"friends\")));","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"yeehaoo"},"content":"        Command actualCommand \u003d new ListCommandParser().parse(\"list t/ friends\");","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"yeehaoo"},"content":"        assert (actualCommand.equals(expectedCommand));","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"yeehaoo"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"yeehaoo"},"content":"    public void parse_allFiltersApplied_listAllFilters() {","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"yeehaoo"},"content":"        Command expectedCommand \u003d new ListCommand(Optional.of(new Address(\"Jurong\")),","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"yeehaoo"},"content":"                Optional.of(new Category(Category.PATIENT_SYMBOL)),","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"yeehaoo"},"content":"                Optional.of(new Gender(Gender.FEMALE_SYMBOL)),","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"yeehaoo"},"content":"                Optional.of(new Tag(\"friends\")));","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"yeehaoo"},"content":"        Command actualCommand \u003d new ListCommandParser().parse(\"list a/Jurong c/ P g/ F t/ friends\");","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"yeehaoo"},"content":"        assert (actualCommand.equals(expectedCommand));","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"yeehaoo"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"yeehaoo":66}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"LolfoollorS"},"content":"    private static final String INVALID_CATEGORY \u003d \"NP\";","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"LolfoollorS"},"content":"    private static final String INVALID_GENDER \u003d \"W\";","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"LolfoollorS"},"content":"    private static final String VALID_CATEGORY \u003d \"N\";","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"LolfoollorS"},"content":"    private static final String VALID_GENDER \u003d \"F\";","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, () -\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"                ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName(null));","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"LolfoollorS"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"LolfoollorS"},"content":"    public void parseGender_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGender(null));","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"LolfoollorS"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"LolfoollorS"},"content":"    public void parseGender_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"LolfoollorS"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGender(INVALID_GENDER));","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"LolfoollorS"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"LolfoollorS"},"content":"    public void parseGender_validValueWithoutWhitespace_returnsGender() throws Exception {","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"LolfoollorS"},"content":"        Gender expectedGender \u003d new Gender(VALID_GENDER);","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"LolfoollorS"},"content":"        assertEquals(expectedGender, ParserUtil.parseGender(VALID_GENDER));","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"LolfoollorS"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"LolfoollorS"},"content":"    public void parseGender_validValueWithWhitespace_returnsTrimmedGender() throws Exception {","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"LolfoollorS"},"content":"        String genderWithWhitespace \u003d WHITESPACE + VALID_GENDER + WHITESPACE;","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"LolfoollorS"},"content":"        Gender expectedGender \u003d new Gender(VALID_GENDER);","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"LolfoollorS"},"content":"        assertEquals(expectedGender, ParserUtil.parseGender(genderWithWhitespace));","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"johnbenedictyan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone(null));","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"johnbenedictyan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress(null));","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"johnbenedictyan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail(null));","lastModifiedDate":"2022-10-28"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":224,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":225,"author":{"gitId":"LolfoollorS"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":226,"author":{"gitId":"LolfoollorS"},"content":"    public void parseCategory_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":227,"author":{"gitId":"johnbenedictyan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCategory(null));","lastModifiedDate":"2022-10-28"},{"lineNumber":228,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":229,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":230,"author":{"gitId":"LolfoollorS"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":231,"author":{"gitId":"LolfoollorS"},"content":"    public void parseCategory_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":232,"author":{"gitId":"LolfoollorS"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCategory(INVALID_CATEGORY));","lastModifiedDate":"2022-10-09"},{"lineNumber":233,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":234,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":235,"author":{"gitId":"LolfoollorS"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":236,"author":{"gitId":"LolfoollorS"},"content":"    public void parseCategory_validValueWithoutWhitespace_returnsCategory() throws Exception {","lastModifiedDate":"2022-10-09"},{"lineNumber":237,"author":{"gitId":"LolfoollorS"},"content":"        Category expectedCategory \u003d new Category(VALID_CATEGORY);","lastModifiedDate":"2022-10-09"},{"lineNumber":238,"author":{"gitId":"LolfoollorS"},"content":"        assertEquals(expectedCategory, ParserUtil.parseCategory(VALID_CATEGORY));","lastModifiedDate":"2022-10-09"},{"lineNumber":239,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":240,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":241,"author":{"gitId":"LolfoollorS"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":242,"author":{"gitId":"LolfoollorS"},"content":"    public void parseCategory_validValueWithWhitespace_returnsTrimmedCategory() throws Exception {","lastModifiedDate":"2022-10-09"},{"lineNumber":243,"author":{"gitId":"LolfoollorS"},"content":"        String categoryWithWhitespace \u003d WHITESPACE + VALID_CATEGORY + WHITESPACE;","lastModifiedDate":"2022-10-09"},{"lineNumber":244,"author":{"gitId":"LolfoollorS"},"content":"        Category expectedCategory \u003d new Category(VALID_CATEGORY);","lastModifiedDate":"2022-10-09"},{"lineNumber":245,"author":{"gitId":"LolfoollorS"},"content":"        assertEquals(expectedCategory, ParserUtil.parseCategory(categoryWithWhitespace));","lastModifiedDate":"2022-10-09"},{"lineNumber":246,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":247,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"johnbenedictyan":8,"-":189,"LolfoollorS":51}},{"path":"src/test/java/seedu/address/logic/parser/UpdateContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yeehaoo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.testutil.PersonBuilder.DEFAULT_CONTACT_EMAIL;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.testutil.PersonBuilder.DEFAULT_CONTACT_NAME;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.testutil.PersonBuilder.DEFAULT_CONTACT_PHONE;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"yeehaoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.logic.commands.UpdateContactCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"yeehaoo"},"content":"class UpdateContactCommandParserTest {","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"yeehaoo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"yeehaoo"},"content":"    void parse_noArgumentsSupplied_displaysHelp() {","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"yeehaoo"},"content":"        assertParseFailure(new UpdateContactCommandParser(), UpdateContactCommand.COMMAND_WORD,","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"yeehaoo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"yeehaoo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"yeehaoo"},"content":"    void parse_noUidSupplied_displaysHelp() {","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"yeehaoo"},"content":"        String input \u003d UpdateContactCommand.COMMAND_WORD + \" n/J e/jd@example.com p/81234567\";","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"yeehaoo"},"content":"        assertParseFailure(new UpdateContactCommandParser(), input,","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"yeehaoo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"yeehaoo"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"yeehaoo"},"content":"    void parse_assignNurseToPatient_fail() {","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"yeehaoo"},"content":"        Command setPhysCommand \u003d new UpdateContactCommand(new Uid(3L), new Name(DEFAULT_CONTACT_NAME),","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"yeehaoo"},"content":"                new Phone(DEFAULT_CONTACT_PHONE), new Email(DEFAULT_CONTACT_EMAIL),","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"yeehaoo"},"content":"                new Category(Category.NURSE_SYMBOL));","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"yeehaoo"},"content":"        String input \u003d UpdateContactCommand.COMMAND_WORD + \" id/3 n/\" + DEFAULT_CONTACT_NAME","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"yeehaoo"},"content":"                + \" e/\" + DEFAULT_CONTACT_EMAIL + \" p/\" + DEFAULT_CONTACT_PHONE + \" c/\" + Category.NURSE_SYMBOL;","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"yeehaoo"},"content":"        assertParseSuccess(new UpdateContactCommandParser(), input, setPhysCommand);","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"yeehaoo"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"yeehaoo"},"content":"    void parse_assignJohnDoeToPatient_success() {","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"yeehaoo"},"content":"        Command setPhysCommand \u003d new UpdateContactCommand(new Uid(3L), new Name(DEFAULT_CONTACT_NAME),","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"yeehaoo"},"content":"                new Phone(DEFAULT_CONTACT_PHONE), new Email(DEFAULT_CONTACT_EMAIL),","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"yeehaoo"},"content":"                new Category(Category.PHYSICIAN_SYMBOL));","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"yeehaoo"},"content":"        String input \u003d UpdateContactCommand.COMMAND_WORD + \" id/3 n/\" + DEFAULT_CONTACT_NAME","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"yeehaoo"},"content":"                + \" e/\" + DEFAULT_CONTACT_EMAIL + \" p/\" + DEFAULT_CONTACT_PHONE + \" c/\" + Category.PHYSICIAN_SYMBOL;","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"yeehaoo"},"content":"        assertParseSuccess(new UpdateContactCommandParser(), input, setPhysCommand);","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"yeehaoo"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"yeehaoo"},"content":"    void parse_assignJohnDoeNokToPatient_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"yeehaoo"},"content":"        Command setPhysCommand \u003d new UpdateContactCommand(new Uid(3L), new Name(DEFAULT_CONTACT_NAME),","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"yeehaoo"},"content":"                new Phone(DEFAULT_CONTACT_PHONE), new Email(DEFAULT_CONTACT_EMAIL),","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"yeehaoo"},"content":"                new Category(Category.NEXTOFKIN_SYMBOL));","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"yeehaoo"},"content":"        String input \u003d UpdateContactCommand.COMMAND_WORD + \" id/3 n/\" + DEFAULT_CONTACT_NAME","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"yeehaoo"},"content":"                + \" e/\" + DEFAULT_CONTACT_EMAIL + \" p/\" + DEFAULT_CONTACT_PHONE + \" c/\" + Category.NEXTOFKIN_SYMBOL;","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"yeehaoo"},"content":"        assertParseSuccess(new UpdateContactCommandParser(), input, setPhysCommand);","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"yeehaoo"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"yeehaoo":64}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"     * constraints.","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"johnbenedictyan":2,"-":101}},{"path":"src/test/java/seedu/address/model/person/CategoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"public class CategoryTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Category(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"    public void constructor_invaliCategory_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"        String invaliCategory \u003d \"\";","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Category(invaliCategory));","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"LolfoollorS"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"LolfoollorS"},"content":"    public void isValiCategory() {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"LolfoollorS"},"content":"        // nullCategory","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"LolfoollorS"},"content":"        assertThrows(NullPointerException.class, () -\u003e Category.isValidCategoryName(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"LolfoollorS"},"content":"        // invalidCategory formats","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"LolfoollorS"},"content":"        assertFalse(Category.isValidCategoryName(\"\")); // empty string","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"LolfoollorS"},"content":"        assertFalse(Category.isValidCategoryName(\" \")); // spaces only","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"LolfoollorS"},"content":"        assertFalse(Category.isValidCategoryName(\"n\")); // lowercase word","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"LolfoollorS"},"content":"        assertFalse(Category.isValidCategoryName(\"p\")); // lowercase word","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"LolfoollorS"},"content":"        assertFalse(Category.isValidCategoryName(\"Nurse\")); // contains full word instead of N or P","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"LolfoollorS"},"content":"        assertFalse(Category.isValidCategoryName(\"12345\")); // contains non-alphanumeric characters only","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"LolfoollorS"},"content":"        assertFalse(Category.isValidCategoryName(\"N3\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"LolfoollorS"},"content":"        assertFalse(Category.isValidCategoryName(\"NP\")); // contains multiples of \u0027N\u0027 or \u0027P\u0027 instead of \u0027N\u0027 or \u0027P\u0027","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"LolfoollorS"},"content":"        // validCategory formats","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"LolfoollorS"},"content":"        assertTrue(Category.isValidCategoryName(\"N\")); // Female","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"LolfoollorS"},"content":"        assertTrue(Category.isValidCategoryName(\"P\")); // Male","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"johnbenedictyan":1,"LolfoollorS":42}},{"path":"src/test/java/seedu/address/model/person/DateSlotTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"public class DateSlotTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateSlot(null));","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"        String invalidDateSlot \u003d \"\";","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateSlot(invalidDateSlot));","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"    public void isValidTagName() {","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"        // null date slot","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateSlot.isValidDateSlot(null));","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"xhphoong":26}},{"path":"src/test/java/seedu/address/model/person/GenderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"public class GenderTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Gender(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"    public void constructor_invalidGender_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"        String invalidGender \u003d \"\";","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Gender(invalidGender));","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"    public void isValidGender() {","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"        // null gender","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"        assertThrows(NullPointerException.class, () -\u003e Gender.isValidGender(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"        // invalid gender formats","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"        assertFalse(Gender.isValidGender(\"\")); // empty string","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"        assertFalse(Gender.isValidGender(\" \")); // spaces only","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"        assertFalse(Gender.isValidGender(\"m\")); // lowercase word","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"        assertFalse(Gender.isValidGender(\"Female\")); // whole word","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"        assertFalse(Gender.isValidGender(\"9\")); // digits only","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"        assertFalse(Gender.isValidGender(\"FM\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"        // valid gender formats","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"        assertTrue(Gender.isValidGender(\"F\")); // Female","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"        assertTrue(Gender.isValidGender(\"M\")); // Male","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"xhphoong":39}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(List.of(\"Carol\"));","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"johnbenedictyan":1,"-":74}},{"path":"src/test/java/seedu/address/model/person/PatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UID_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"public class PatientTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"LolfoollorS"},"content":"        Person person \u003d new PatientBuilder().build();","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"LolfoollorS"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"LolfoollorS"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"LolfoollorS"},"content":"    public void isSamePerson() {","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"LolfoollorS"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"LolfoollorS"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"LolfoollorS"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"LolfoollorS"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"LolfoollorS"},"content":"        // id different, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"LolfoollorS"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE)","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"LolfoollorS"},"content":"                .withUid(VALID_UID_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"LolfoollorS"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"LolfoollorS"},"content":"        // id same, name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"LolfoollorS"},"content":"        Person editedAlice2 \u003d new PatientBuilder(ALICE)","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"LolfoollorS"},"content":"                .withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"LolfoollorS"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice2));","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"LolfoollorS"},"content":"        // id same, name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"LolfoollorS"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"LolfoollorS"},"content":"        editedAlice2 \u003d new PatientBuilder(ALICE)","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"LolfoollorS"},"content":"                .withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"LolfoollorS"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice2));","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"LolfoollorS"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"LolfoollorS"},"content":"    public void equals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"LolfoollorS"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"LolfoollorS"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"LolfoollorS"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"LolfoollorS"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"LolfoollorS"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"LolfoollorS"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"LolfoollorS"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"LolfoollorS"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"LolfoollorS"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"LolfoollorS"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"LolfoollorS"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"LolfoollorS"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"LolfoollorS"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"LolfoollorS"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"LolfoollorS"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"LolfoollorS"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"LolfoollorS"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"LolfoollorS"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"LolfoollorS"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"LolfoollorS"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"LolfoollorS"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"LolfoollorS"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"LolfoollorS"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"LolfoollorS"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"LolfoollorS"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"LolfoollorS"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"LolfoollorS":91}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UID_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"                .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"        editedAlice \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"                .withUid(VALID_UID_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"        // id same, name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"        Person editedBob \u003d new PersonBuilder(BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"                .withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"        // id same, name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"        editedBob \u003d new PersonBuilder(BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"                .withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"xhphoong":1,"johnbenedictyan":15,"-":82}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"johnbenedictyan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":168,"author":{"gitId":"johnbenedictyan"},"content":"                uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"johnbenedictyan":2,"-":168}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"LolfoollorS"},"content":"    private static final String INVALID_CATEGORY \u003d \"n\";","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"LolfoollorS"},"content":"    private static final String INVALID_ID \u003d \" one\";","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"LolfoollorS"},"content":"    private static final String INVALID_GENDER \u003d \"f\";","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"    private static final String INVALID_DATESLOT \u003d \" : :2022.1.11 4.00PM:-1\";","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"LolfoollorS"},"content":"    private static final String VALID_CATEGORY \u003d BENSON.getCategory().toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"LolfoollorS"},"content":"    private static final Long VALID_UID \u003d BENSON.getUid().getUid();","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"LolfoollorS"},"content":"    private static final String VALID_GENDER \u003d BENSON.getGender().toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"    private static final List\u003cJsonAdaptedDateSlot\u003e VALID_DATESLOT \u003d ((Patient) BENSON).getDatesSlots()","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"            .stream().map(JsonAdaptedDateSlot::new).collect(Collectors.toList());","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"    private static final List\u003cJsonAdaptedHomeVisit\u003e EMPTY_HOME_VISITS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"    private static final List\u003cJsonAdaptedDate\u003e EMPTY_DATE_LIST \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"LolfoollorS"},"content":"        System.out.println(\"Hello\");","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"LolfoollorS"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"LolfoollorS"},"content":"    public void toModelType_invalidCategory_throwsIllegalValueException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_UID, VALID_NAME, INVALID_CATEGORY, VALID_GENDER,","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"                VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"                VALID_ADDRESS, VALID_DATESLOT, VALID_TAGS, EMPTY_HOME_VISITS, EMPTY_DATE_LIST, EMPTY_DATE_LIST,","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL);","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"LolfoollorS"},"content":"        String expectedMessage \u003d Category.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"LolfoollorS"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"LolfoollorS"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"LolfoollorS"},"content":"    public void toModelType_nullCategory_throwsIllegalValueException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_UID, VALID_NAME, null, VALID_GENDER,","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"                VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_DATESLOT, VALID_TAGS,","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"                EMPTY_HOME_VISITS, EMPTY_DATE_LIST, EMPTY_DATE_LIST,","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL);","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"LolfoollorS"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Category.class.getSimpleName());","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"LolfoollorS"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_UID, INVALID_NAME, VALID_CATEGORY, VALID_GENDER,","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"                VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"                VALID_ADDRESS, VALID_DATESLOT, VALID_TAGS, EMPTY_HOME_VISITS, EMPTY_DATE_LIST, EMPTY_DATE_LIST,","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL);","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"LolfoollorS"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_UID, null, VALID_CATEGORY, VALID_GENDER, VALID_PHONE,","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_DATESLOT, VALID_TAGS, EMPTY_HOME_VISITS,","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"                EMPTY_DATE_LIST, EMPTY_DATE_LIST, VALID_NAME, VALID_PHONE, VALID_EMAIL);","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"LolfoollorS"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"LolfoollorS"},"content":"    public void toModelType_invalidGender_throwsIllegalValueException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_UID, VALID_NAME, VALID_CATEGORY, INVALID_GENDER,","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"johnbenedictyan"},"content":"                VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"                VALID_ADDRESS, VALID_DATESLOT, VALID_TAGS, EMPTY_HOME_VISITS,","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"                EMPTY_DATE_LIST, EMPTY_DATE_LIST, VALID_NAME, VALID_PHONE, VALID_EMAIL);","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"LolfoollorS"},"content":"        String expectedMessage \u003d Gender.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"LolfoollorS"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"LolfoollorS"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"LolfoollorS"},"content":"    public void toModelType_nullGender_throwsIllegalValueException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"johnbenedictyan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_UID, VALID_NAME, VALID_CATEGORY, null, VALID_PHONE,","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"xhphoong"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_DATESLOT, VALID_TAGS, EMPTY_HOME_VISITS,","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"xhphoong"},"content":"                EMPTY_DATE_LIST, EMPTY_DATE_LIST, VALID_NAME, VALID_PHONE, VALID_EMAIL);","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"LolfoollorS"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName());","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"LolfoollorS"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"johnbenedictyan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_UID, VALID_NAME, VALID_CATEGORY, VALID_GENDER,","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"johnbenedictyan"},"content":"                INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"xhphoong"},"content":"                VALID_ADDRESS, VALID_DATESLOT, VALID_TAGS, EMPTY_HOME_VISITS,","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"xhphoong"},"content":"                EMPTY_DATE_LIST, EMPTY_DATE_LIST, VALID_NAME, VALID_PHONE, VALID_EMAIL);","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"LolfoollorS"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_UID, VALID_NAME, VALID_CATEGORY, VALID_GENDER,","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"xhphoong"},"content":"                null, VALID_EMAIL, VALID_ADDRESS, VALID_DATESLOT, VALID_TAGS, EMPTY_HOME_VISITS,","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"xhphoong"},"content":"                EMPTY_DATE_LIST, EMPTY_DATE_LIST, VALID_NAME, VALID_PHONE, VALID_EMAIL);","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"johnbenedictyan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_UID, VALID_NAME, VALID_CATEGORY, VALID_GENDER,","lastModifiedDate":"2022-10-28"},{"lineNumber":142,"author":{"gitId":"johnbenedictyan"},"content":"                VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"xhphoong"},"content":"                VALID_ADDRESS, VALID_DATESLOT, VALID_TAGS, EMPTY_HOME_VISITS,","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"xhphoong"},"content":"                EMPTY_DATE_LIST, EMPTY_DATE_LIST, VALID_NAME, VALID_PHONE, VALID_EMAIL);","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"LolfoollorS"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_UID, VALID_NAME, VALID_CATEGORY,","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"xhphoong"},"content":"                VALID_GENDER, VALID_PHONE, null, VALID_ADDRESS, VALID_DATESLOT, VALID_TAGS, EMPTY_HOME_VISITS,","lastModifiedDate":"2022-10-27"},{"lineNumber":153,"author":{"gitId":"xhphoong"},"content":"                EMPTY_DATE_LIST, EMPTY_DATE_LIST, VALID_NAME, VALID_PHONE, VALID_EMAIL);","lastModifiedDate":"2022-10-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"johnbenedictyan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_UID, VALID_NAME, VALID_CATEGORY, VALID_GENDER,","lastModifiedDate":"2022-10-28"},{"lineNumber":161,"author":{"gitId":"johnbenedictyan"},"content":"                VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-28"},{"lineNumber":162,"author":{"gitId":"xhphoong"},"content":"                INVALID_ADDRESS, VALID_DATESLOT, VALID_TAGS, EMPTY_HOME_VISITS,","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"xhphoong"},"content":"                EMPTY_DATE_LIST, EMPTY_DATE_LIST, VALID_NAME, VALID_PHONE, VALID_EMAIL);","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"LolfoollorS"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_UID, VALID_NAME, VALID_CATEGORY, VALID_GENDER,","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"xhphoong"},"content":"                VALID_PHONE, VALID_EMAIL, null, VALID_DATESLOT, VALID_TAGS, EMPTY_HOME_VISITS,","lastModifiedDate":"2022-10-27"},{"lineNumber":173,"author":{"gitId":"xhphoong"},"content":"                EMPTY_DATE_LIST, EMPTY_DATE_LIST, VALID_NAME, VALID_PHONE, VALID_EMAIL);","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":178,"author":{"gitId":"LolfoollorS"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"LolfoollorS"},"content":"    public void toModelType_invalidDatesTimes_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"xhphoong"},"content":"        List\u003cJsonAdaptedDateSlot\u003e invalidDatesTimes \u003d new ArrayList\u003c\u003e(VALID_DATESLOT);","lastModifiedDate":"2022-10-23"},{"lineNumber":181,"author":{"gitId":"xhphoong"},"content":"        invalidDatesTimes.add(new JsonAdaptedDateSlot(INVALID_DATESLOT));","lastModifiedDate":"2022-10-23"},{"lineNumber":182,"author":{"gitId":"johnbenedictyan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_UID, VALID_NAME, VALID_CATEGORY, VALID_GENDER,","lastModifiedDate":"2022-10-28"},{"lineNumber":183,"author":{"gitId":"johnbenedictyan"},"content":"                VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-28"},{"lineNumber":184,"author":{"gitId":"xhphoong"},"content":"                VALID_ADDRESS, invalidDatesTimes, VALID_TAGS, EMPTY_HOME_VISITS,","lastModifiedDate":"2022-10-27"},{"lineNumber":185,"author":{"gitId":"xhphoong"},"content":"                EMPTY_DATE_LIST, EMPTY_DATE_LIST, VALID_NAME, VALID_PHONE, VALID_EMAIL);","lastModifiedDate":"2022-10-27"},{"lineNumber":186,"author":{"gitId":"LolfoollorS"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":187,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":188,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":193,"author":{"gitId":"LolfoollorS"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_UID, VALID_NAME, VALID_CATEGORY,","lastModifiedDate":"2022-10-11"},{"lineNumber":194,"author":{"gitId":"xhphoong"},"content":"                VALID_GENDER, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_DATESLOT, invalidTags,","lastModifiedDate":"2022-10-27"},{"lineNumber":195,"author":{"gitId":"xhphoong"},"content":"                EMPTY_HOME_VISITS, EMPTY_DATE_LIST, EMPTY_DATE_LIST, VALID_NAME, VALID_PHONE, VALID_EMAIL);","lastModifiedDate":"2022-10-27"},{"lineNumber":196,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"xhphoong":42,"johnbenedictyan":16,"-":95,"LolfoollorS":46}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"LolfoollorS"},"content":"        assertThrows(IllegalValueException.class,","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"LolfoollorS"},"content":"                String.format(JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON, \"person(s)\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":46,"LolfoollorS":2}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"johnbenedictyan"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder}","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"     * filepath.","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"johnbenedictyan":2,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"         * Note: This is an integration test that verifies the StorageManager is","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"         * properly wired to the","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"         * JsonUserPrefsStorageTest} class.","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"         * Note: This is an integration test that verifies the StorageManager is","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"         * properly wired to the","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"         * JsonAddressBookStorageTest} class.","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"johnbenedictyan":8,"-":64}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"johnbenedictyan":1,"-":33}},{"path":"src/test/java/seedu/address/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-07-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType}","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"     * Exception.","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"     * This is a wrapper method that invokes","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     * To standardize API calls in this project, users should use this method","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"     * instead of","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     * with the {@code expectedMessage}.","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message,","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"     * call","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"johnbenedictyan":10,"-":29}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"mlzt2000"},"content":"import static seedu.address.model.category.Category.PATIENT_SYMBOL;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateSlot;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"    private final EditPersonDescriptor descriptor;","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code person}\u0027s details","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"        descriptor.setUid(person.getUid());","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"        descriptor.setCategory(person.getCategory());","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"        descriptor.setGender(person.getGender());","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":53,"author":{"gitId":"LolfoollorS"},"content":"        if (person.getCategory().categoryName.equals(PATIENT_SYMBOL)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"            descriptor.setDatesSlots(((Patient) person).getDatesSlots());","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"            descriptor.setDateSlotIndexes(new ArrayList\u003cIndex\u003e());","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"     * Sets the {@code Category} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"     * building.","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"    public EditPersonDescriptorBuilder withCategory(String category) {","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"LolfoollorS"},"content":"        descriptor.setCategory(new Category(category));","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"     * building.","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"     * Sets the {@code Gender} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"     * building.","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"    public EditPersonDescriptorBuilder withGender(String gender) {","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"        descriptor.setGender(new Gender(gender));","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"     * building.","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"     * building.","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"johnbenedictyan"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"johnbenedictyan"},"content":"     * building.","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":114,"author":{"gitId":"johnbenedictyan"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code EditPersonDescriptor}","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":124,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"johnbenedictyan"},"content":"     * Parses the {@code dateSlots} into a {@code List\u003cDateSlot\u003e} and set it to the","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code EditPersonDescriptor}","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"xhphoong"},"content":"     * that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"xhphoong"},"content":"    public EditPersonDescriptorBuilder withDatesSlots(String... datesSlots) {","lastModifiedDate":"2022-10-23"},{"lineNumber":130,"author":{"gitId":"xhphoong"},"content":"        List\u003cDateSlot\u003e dateSlotList \u003d Stream.of(datesSlots).map(DateSlot::new).collect(Collectors.toList());","lastModifiedDate":"2022-10-23"},{"lineNumber":131,"author":{"gitId":"xhphoong"},"content":"        descriptor.setDatesSlots(dateSlotList);","lastModifiedDate":"2022-10-23"},{"lineNumber":132,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"johnbenedictyan"},"content":"     * Parses the {@code dateSlotIndexes} into a {@code List\u003cIndex\u003e} and set it to","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"johnbenedictyan"},"content":"     * the {@code EditPersonDescriptor}","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"xhphoong"},"content":"     * that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"xhphoong"},"content":"    public EditPersonDescriptorBuilder withDateSlotIndexes(String... dateSlotIndexes) {","lastModifiedDate":"2022-10-23"},{"lineNumber":141,"author":{"gitId":"johnbenedictyan"},"content":"        List\u003cInteger\u003e dateSlotIndexesNoList \u003d Stream.of(dateSlotIndexes).map(Integer::parseInt)","lastModifiedDate":"2022-10-28"},{"lineNumber":142,"author":{"gitId":"johnbenedictyan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"xhphoong"},"content":"        List\u003cIndex\u003e dateSlotIndexesList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":144,"author":{"gitId":"xhphoong"},"content":"        for (Integer integer : dateSlotIndexesNoList) {","lastModifiedDate":"2022-10-23"},{"lineNumber":145,"author":{"gitId":"xhphoong"},"content":"            dateSlotIndexesList.add(Index.fromOneBased(integer));","lastModifiedDate":"2022-10-23"},{"lineNumber":146,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"xhphoong"},"content":"        descriptor.setDateSlotIndexes(dateSlotIndexesList);","lastModifiedDate":"2022-10-23"},{"lineNumber":148,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":154,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"xhphoong":45,"johnbenedictyan":23,"-":81,"mlzt2000":3,"LolfoollorS":3}},{"path":"src/test/java/seedu/address/testutil/PatientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateSlot;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":" * A utility class to help with building Patient objects.","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"public class PatientBuilder {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"    public static final String DEFAULT_UID \u003d \"100\";","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"    public static final String DEFAULT_CATEGORY \u003d \"P\";","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"    public static final String DEFAULT_GENDER \u003d \"F\";","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"    private Uid uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"    private final String category;","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"    private Name name;","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"    private Gender gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"    private Phone phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"    private Email email;","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"    private Address address;","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"    private List\u003cDateSlot\u003e dateSlots;","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"     * Creates a {@code PatientBuilder} with the default details.","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"    public PatientBuilder() {","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"        uid \u003d new Uid(DEFAULT_UID);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"        category \u003d DEFAULT_CATEGORY;","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"        dateSlots \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"     * Initializes the PatientBuilder with the data of {@code patientToCopy}.","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"    public PatientBuilder(Person patientToCopy) {","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"        category \u003d \"P\";","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"        uid \u003d patientToCopy.getUid();","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"        name \u003d patientToCopy.getName();","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"        gender \u003d patientToCopy.getGender();","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"        phone \u003d patientToCopy.getPhone();","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"        email \u003d patientToCopy.getEmail();","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"        address \u003d patientToCopy.getAddress();","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"        dateSlots \u003d new ArrayList\u003c\u003e(((Patient) patientToCopy).getDatesSlots());","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"        tags \u003d new HashSet\u003c\u003e(patientToCopy.getTags());","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"     * Sets the {@code Uid} of the {@code Patient} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"    public PatientBuilder withUid(String uid) {","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"        this.uid \u003d new Uid(uid);","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"     * Sets the {@code Name} of the {@code Patient} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"    public PatientBuilder withName(String name) {","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"     * Sets the {@code Gender} of the {@code Patient} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"    public PatientBuilder withGender(String gender) {","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"johnbenedictyan"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code Patient} that we are building.","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"    public PatientBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"xhphoong"},"content":"     * Sets the {@code Address} of the {@code Patient} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"xhphoong"},"content":"    public PatientBuilder withAddress(String address) {","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"xhphoong"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"xhphoong"},"content":"     * Sets the {@code Phone} of the {@code Patient} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"xhphoong"},"content":"    public PatientBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"xhphoong"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"xhphoong"},"content":"     * Sets the {@code Email} of the {@code Patient} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"xhphoong"},"content":"    public PatientBuilder withEmail(String email) {","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"xhphoong"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"xhphoong"},"content":"     * Parses the {@code datesSlots} into a {@code Set\u003cDateSlot\u003e} and","lastModifiedDate":"2022-10-23"},{"lineNumber":132,"author":{"gitId":"xhphoong"},"content":"     * set it to the {@code Patient} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"xhphoong"},"content":"    public PatientBuilder withDatesSlots(String... datesSlots) {","lastModifiedDate":"2022-10-23"},{"lineNumber":135,"author":{"gitId":"xhphoong"},"content":"        this.dateSlots \u003d SampleDataUtil.getDatesSlotsList(datesSlots);","lastModifiedDate":"2022-10-23"},{"lineNumber":136,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"mlzt2000"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":140,"author":{"gitId":"mlzt2000"},"content":"     * Build a patient.","lastModifiedDate":"2022-10-15"},{"lineNumber":141,"author":{"gitId":"mlzt2000"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"mlzt2000"},"content":"    public Patient build() {","lastModifiedDate":"2022-10-15"},{"lineNumber":143,"author":{"gitId":"xhphoong"},"content":"        return new Patient(uid, name, gender, phone, email, address, tags, dateSlots);","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"xhphoong":137,"johnbenedictyan":3,"mlzt2000":5}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateSlot;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.HomeVisit;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.person.Nurse;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"yeehaoo"},"content":"import seedu.address.model.person.Physician;","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"LolfoollorS"},"content":"    public static final String DEFAULT_CATEGORY \u003d \"P\";","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String DEFAULT_UID \u003d \"1\";","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":32,"author":{"gitId":"LolfoollorS"},"content":"    public static final String DEFAULT_GENDER \u003d \"F\";","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"    public static final String DEFAULT_DATE_AND_SLOT \u003d \"2022-06-14,4\";","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"mlzt2000"},"content":"    public static final String DEFAULT_VISIT_STATUS \u003d \"false\";","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"    public static final String DEFAULT_HOME_VISITS \u003d \"2022-11-10,4:2\";","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"yeehaoo"},"content":"    public static final String DEFAULT_CONTACT_NAME \u003d \"John Doe\";","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"yeehaoo"},"content":"    public static final String DEFAULT_CONTACT_EMAIL \u003d \"johndoe@example.com\";","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"yeehaoo"},"content":"    public static final String DEFAULT_CONTACT_PHONE \u003d \"81234567\";","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"LolfoollorS"},"content":"    private Category category;","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"LolfoollorS"},"content":"    private Uid uid;","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"LolfoollorS"},"content":"    private Gender gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"    private List\u003cDateSlot\u003e dateSlotList;","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"    private List\u003cHomeVisit\u003e homeVisitList;","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"yeehaoo"},"content":"    private Physician physician;","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"    private List\u003cDate\u003e unavailableDateList;","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"    private List\u003cDate\u003e fullyScheduledDateList;","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"LolfoollorS"},"content":"        category \u003d new Category(DEFAULT_CATEGORY);","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"LolfoollorS"},"content":"        uid \u003d new Uid(DEFAULT_UID);","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"LolfoollorS"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"        dateSlotList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"        homeVisitList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"yeehaoo"},"content":"        physician \u003d new Physician(new Name(DEFAULT_CONTACT_NAME), new Phone(DEFAULT_CONTACT_PHONE),","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"yeehaoo"},"content":"                new Email(DEFAULT_CONTACT_EMAIL));","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"        unavailableDateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"        fullyScheduledDateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"LolfoollorS"},"content":"        category \u003d personToCopy.getCategory();","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"LolfoollorS"},"content":"        uid \u003d personToCopy.getUid();","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"LolfoollorS"},"content":"        gender \u003d personToCopy.getGender();","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"        if (personToCopy.getCategory().isPatient()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"yeehaoo"},"content":"            Patient patientToCopy \u003d (Patient) personToCopy;","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"            dateSlotList \u003d new ArrayList\u003c\u003e(patientToCopy.getDatesSlots());","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"yeehaoo"},"content":"            Physician[] physicianArr \u003d new Physician[] { null };","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"yeehaoo"},"content":"            patientToCopy.getAttendingPhysician().ifPresent(","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"yeehaoo"},"content":"                    x -\u003e physicianArr[0] \u003d new Physician(x.getName(), x.getPhone(), x.getEmail()));","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"yeehaoo"},"content":"            physician \u003d physicianArr[0];","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"            homeVisitList \u003d new ArrayList\u003c\u003e(((Nurse) personToCopy).getHomeVisits());","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"yeehaoo"},"content":"            physician \u003d null;","lastModifiedDate":"2022-10-23"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"            homeVisitList \u003d new ArrayList\u003c\u003e(((Nurse) personToCopy).getHomeVisits());","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"            unavailableDateList \u003d new ArrayList\u003c\u003e(((Nurse) personToCopy).getUnavailableDates());","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"            fullyScheduledDateList \u003d new ArrayList\u003c\u003e(((Nurse) personToCopy).getFullyScheduledDates());","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"LolfoollorS"},"content":"     * Sets the {@code Id} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"LolfoollorS"},"content":"    public PersonBuilder withUid(String id) {","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"LolfoollorS"},"content":"        this.uid \u003d new Uid(id);","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"LolfoollorS"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":115,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"LolfoollorS"},"content":"     * Sets the {@code Category} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"LolfoollorS"},"content":"    public PersonBuilder withCategory(String category) {","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"LolfoollorS"},"content":"        this.category \u003d new Category(category);","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"LolfoollorS"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"LolfoollorS"},"content":"     * Sets the {@code Gender} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"LolfoollorS"},"content":"    public PersonBuilder withGender(String gender) {","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"LolfoollorS"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"LolfoollorS"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":140,"author":{"gitId":"johnbenedictyan"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code Person} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":172,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"xhphoong"},"content":"     * Parses the {@code datesSlots} into a {@code List\u003cDateSlot\u003e} and","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"LolfoollorS"},"content":"     * set it to the {@code Person} that we are building.","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"LolfoollorS"},"content":"     * Applies only to Patient.","lastModifiedDate":"2022-10-11"},{"lineNumber":176,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"xhphoong"},"content":"    public PersonBuilder withDatesSlots(String... datesSlots) {","lastModifiedDate":"2022-10-23"},{"lineNumber":178,"author":{"gitId":"xhphoong"},"content":"        this.dateSlotList \u003d SampleDataUtil.getDatesSlotsList(datesSlots);","lastModifiedDate":"2022-10-23"},{"lineNumber":179,"author":{"gitId":"LolfoollorS"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":183,"author":{"gitId":"xhphoong"},"content":"     * Parses the {@code homeVisit} into a {@code List\u003cHomeVisit\u003e} and","lastModifiedDate":"2022-10-27"},{"lineNumber":184,"author":{"gitId":"xhphoong"},"content":"     * set it to the {@code Person} that we are building.","lastModifiedDate":"2022-10-27"},{"lineNumber":185,"author":{"gitId":"xhphoong"},"content":"     * Applies only to Nurse.","lastModifiedDate":"2022-10-27"},{"lineNumber":186,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":187,"author":{"gitId":"xhphoong"},"content":"    public PersonBuilder withHomeVisits(String... homeVisit) {","lastModifiedDate":"2022-10-27"},{"lineNumber":188,"author":{"gitId":"xhphoong"},"content":"        this.homeVisitList \u003d SampleDataUtil.getHomeVisitsList(homeVisit);","lastModifiedDate":"2022-10-27"},{"lineNumber":189,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-27"},{"lineNumber":190,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":191,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":192,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":193,"author":{"gitId":"johnbenedictyan"},"content":"     * Sets the {@code Uid} of the {@code Person} that we are building to the","lastModifiedDate":"2022-10-12"},{"lineNumber":194,"author":{"gitId":"johnbenedictyan"},"content":"     * universal Uid.","lastModifiedDate":"2022-10-12"},{"lineNumber":195,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":196,"author":{"gitId":"johnbenedictyan"},"content":"    public PersonBuilder withUniversalUid() {","lastModifiedDate":"2022-10-12"},{"lineNumber":197,"author":{"gitId":"johnbenedictyan"},"content":"        this.uid \u003d Uid.generateUniversalUid();","lastModifiedDate":"2022-10-12"},{"lineNumber":198,"author":{"gitId":"johnbenedictyan"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":199,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":200,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":201,"author":{"gitId":"yeehaoo"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":202,"author":{"gitId":"yeehaoo"},"content":"     * Sets the {@code Uid} of the {@code Person} that we are building to the","lastModifiedDate":"2022-10-23"},{"lineNumber":203,"author":{"gitId":"yeehaoo"},"content":"     * universal Uid.","lastModifiedDate":"2022-10-23"},{"lineNumber":204,"author":{"gitId":"yeehaoo"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":205,"author":{"gitId":"yeehaoo"},"content":"    public PersonBuilder withAttendingPhysician(String n, String p, String e) {","lastModifiedDate":"2022-10-23"},{"lineNumber":206,"author":{"gitId":"yeehaoo"},"content":"        physician \u003d new Physician(new Name(n), new Phone(p), new Email(e));","lastModifiedDate":"2022-10-23"},{"lineNumber":207,"author":{"gitId":"yeehaoo"},"content":"        return this;","lastModifiedDate":"2022-10-23"},{"lineNumber":208,"author":{"gitId":"yeehaoo"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":209,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":210,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":211,"author":{"gitId":"xhphoong"},"content":"     * Parses the {@code unavailableDate} into a {@code List\u003cDate\u003e} and","lastModifiedDate":"2022-10-27"},{"lineNumber":212,"author":{"gitId":"xhphoong"},"content":"     * set it to the {@code Person} that we are building.","lastModifiedDate":"2022-10-27"},{"lineNumber":213,"author":{"gitId":"xhphoong"},"content":"     * Applies only to Nurse.","lastModifiedDate":"2022-10-27"},{"lineNumber":214,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":215,"author":{"gitId":"xhphoong"},"content":"    public PersonBuilder withUnavailableDateList(String... unavailableDates) {","lastModifiedDate":"2022-10-27"},{"lineNumber":216,"author":{"gitId":"xhphoong"},"content":"        this.unavailableDateList \u003d SampleDataUtil.getUnavailableDateList(unavailableDates);","lastModifiedDate":"2022-10-27"},{"lineNumber":217,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-27"},{"lineNumber":218,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":220,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":221,"author":{"gitId":"xhphoong"},"content":"     * Parses the {@code fullyScheduledDate} into a {@code List\u003cDate\u003e} and","lastModifiedDate":"2022-10-27"},{"lineNumber":222,"author":{"gitId":"xhphoong"},"content":"     * set it to the {@code Person} that we are building.","lastModifiedDate":"2022-10-27"},{"lineNumber":223,"author":{"gitId":"xhphoong"},"content":"     * Applies only to Nurse.","lastModifiedDate":"2022-10-27"},{"lineNumber":224,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":225,"author":{"gitId":"xhphoong"},"content":"    public PersonBuilder withFullyScheduledDateList(String... fullyScheduledDate) {","lastModifiedDate":"2022-10-27"},{"lineNumber":226,"author":{"gitId":"xhphoong"},"content":"        this.fullyScheduledDateList \u003d SampleDataUtil.getFullyScheduledDateList(fullyScheduledDate);","lastModifiedDate":"2022-10-27"},{"lineNumber":227,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-27"},{"lineNumber":228,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":229,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":230,"author":{"gitId":"LolfoollorS"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":231,"author":{"gitId":"LolfoollorS"},"content":"     * Build a person for test.","lastModifiedDate":"2022-10-11"},{"lineNumber":232,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":234,"author":{"gitId":"johnbenedictyan"},"content":"        if (category.isNurse()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":235,"author":{"gitId":"xhphoong"},"content":"            return new Nurse(uid, name, gender, phone, email, address, tags,","lastModifiedDate":"2022-10-27"},{"lineNumber":236,"author":{"gitId":"xhphoong"},"content":"                    unavailableDateList, homeVisitList, fullyScheduledDateList);","lastModifiedDate":"2022-10-27"},{"lineNumber":237,"author":{"gitId":"johnbenedictyan"},"content":"        } else if (this.category.isPatient()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":238,"author":{"gitId":"xhphoong"},"content":"            return new Patient(uid, name, gender, phone, email, address, tags, dateSlotList, physician, null);","lastModifiedDate":"2022-10-27"},{"lineNumber":239,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":240,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":241,"author":{"gitId":"LolfoollorS"},"content":"        return new Person(uid, name, gender, phone, email, address, tags);","lastModifiedDate":"2022-10-11"},{"lineNumber":242,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"xhphoong":58,"johnbenedictyan":15,"yeehaoo":23,"-":97,"mlzt2000":1,"LolfoollorS":51}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_SLOT;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateSlot;","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"        sb.append(PREFIX_CATEGORY).append(person.getCategory().categoryName).append(\" \");","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"        sb.append(PREFIX_NAME).append(person.getName().fullName).append(\" \");","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"        sb.append(PREFIX_GENDER).append(person.getGender().gender).append(\" \");","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"        sb.append(PREFIX_PHONE).append(person.getPhone().value).append(\" \");","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"        sb.append(PREFIX_EMAIL).append(person.getEmail().value).append(\" \");","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"        sb.append(PREFIX_ADDRESS).append(person.getAddress().value).append(\" \");","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"                s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"        if (person instanceof Patient) {","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"            Patient patient \u003d (Patient) person;","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"            patient.getDatesSlots().stream().forEach(","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"                    s -\u003e sb.append(PREFIX_DATE_AND_SLOT).append(s.getString()).append(\" \"));","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns the part of command string for the given","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"        descriptor.getCategory().ifPresent(category -\u003e sb.append(PREFIX_CATEGORY).append(category).append(\" \"));","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"        descriptor.getUid().ifPresent(uid -\u003e sb.append(PREFIX_UID).append(uid).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"        descriptor.getGender().ifPresent(gender -\u003e sb.append(PREFIX_GENDER).append(gender.gender).append(\" \"));","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"        if (descriptor.getDatesSlots().isPresent()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"            List\u003cDateSlot\u003e dateTimeList \u003d descriptor.getDatesSlots().get();","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"            if (dateTimeList.isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"                sb.append(PREFIX_DATE_AND_SLOT);","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"            } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"                dateTimeList.forEach(s -\u003e sb.append(PREFIX_DATE_AND_SLOT).append(s.getString()).append(\" \"));","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"xhphoong":24,"johnbenedictyan":11,"-":54}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     * path.","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"johnbenedictyan":2,"-":54}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":" * A utility class containing a list of {@code Index} objects to be used in","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" * tests.","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"johnbenedictyan":2,"-":11}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CATEGORY_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"yeehaoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CATEGORY_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATESLOT_AMY;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATESLOT_BOB;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UID_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UID_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":" * A utility class containing a list of {@code Patients / Nurses} objects to be","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":" * used in tests.","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"LolfoollorS"},"content":"    public static final Person ALICE \u003d new PersonBuilder()","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"LolfoollorS"},"content":"            .withUid(\"1\").withCategory(\"P\")","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"LolfoollorS"},"content":"            .withName(\"Alice Pauline\").withGender(\"F\")","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"LolfoollorS"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"LolfoollorS"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"            .withDatesSlots(\"2022-11-11,2\")","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"mlzt2000"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"            .withAttendingPhysician(\"John Doe\", \"81234567\", \"johndoe@example.com\").build();","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"LolfoollorS"},"content":"    public static final Person BENSON \u003d new PersonBuilder()","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"LolfoollorS"},"content":"            .withUid(\"2\").withCategory(\"P\")","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"LolfoollorS"},"content":"            .withName(\"Benson Meier\").withGender(\"M\")","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":49,"author":{"gitId":"LolfoollorS"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"LolfoollorS"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"            .withDatesSlots(\"2022-10-23,1\")","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"mlzt2000"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"            .withAttendingPhysician(\"John Doe\", \"81234567\", \"johndoe@example.com\").build();","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"LolfoollorS"},"content":"    public static final Person CARL \u003d new PersonBuilder()","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"LolfoollorS"},"content":"            .withUid(\"3\").withCategory(\"P\")","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"LolfoollorS"},"content":"            .withName(\"Carl Kurz\").withGender(\"M\")","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"LolfoollorS"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"            .withDatesSlots(\"2022-11-10,1\", \"2022-12-10,2\")","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"LolfoollorS"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"            .withAddress(\"wall street\").build();","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"LolfoollorS"},"content":"    public static final Person DANIEL \u003d new PersonBuilder()","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"LolfoollorS"},"content":"            .withUid(\"4\").withCategory(\"P\")","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"LolfoollorS"},"content":"            .withName(\"Daniel Meier\")","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"LolfoollorS"},"content":"            .withGender(\"M\")","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"LolfoollorS"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"LolfoollorS"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"            .withDatesSlots(\"2022-11-10,4\", \"2022-09-10,2\")","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"yeehaoo"},"content":"            .withAttendingPhysician(\"John Doe\", \"81234567\", \"johndoe@example.com\")","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"LolfoollorS"},"content":"            .withAddress(\"10th street\")","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"LolfoollorS"},"content":"    public static final Person ELLE \u003d new PersonBuilder()","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"LolfoollorS"},"content":"            .withUid(\"5\").withCategory(\"N\")","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"LolfoollorS"},"content":"            .withName(\"Elle Meyer\").withGender(\"F\")","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"LolfoollorS"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"LolfoollorS"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"            .withDatesSlots(\"2022-11-15,4\")","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"            .withAddress(\"michegan ave\")","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"            .withHomeVisits(\"2022-10-15,1:6\")","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"            .withUnavailableDateList(\"2022-11-11\")","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"            .withFullyScheduledDateList().build();","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"LolfoollorS"},"content":"    public static final Person FIONA \u003d new PersonBuilder()","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"LolfoollorS"},"content":"            .withUid(\"6\").withCategory(\"P\")","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"LolfoollorS"},"content":"            .withName(\"Fiona Kunz\")","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"LolfoollorS"},"content":"            .withGender(\"F\")","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"LolfoollorS"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"LolfoollorS"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"            .withDatesSlots(\"2022-10-15,1\")","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"            .withAddress(\"little tokyo\").build();","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"LolfoollorS"},"content":"    public static final Person GEORGE \u003d new PersonBuilder()","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"LolfoollorS"},"content":"            .withUid(\"7\")","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"LolfoollorS"},"content":"            .withCategory(\"P\")","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"LolfoollorS"},"content":"            .withName(\"George Best\")","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"LolfoollorS"},"content":"            .withGender(\"M\")","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"LolfoollorS"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"LolfoollorS"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"            .withAddress(\"4th street\").build();","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":99,"author":{"gitId":"LolfoollorS"},"content":"    public static final Person HOON \u003d new PersonBuilder()","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"LolfoollorS"},"content":"            .withUid(\"8\").withCategory(\"P\")","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"LolfoollorS"},"content":"            .withName(\"Hoon Meier\")","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"LolfoollorS"},"content":"            .withGender(\"M\")","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"LolfoollorS"},"content":"            .withPhone(\"8482424\")","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"            .withDatesSlots(\"2023-01-11,2\")","lastModifiedDate":"2022-10-23"},{"lineNumber":105,"author":{"gitId":"LolfoollorS"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"            .withAddress(\"little india\").build();","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"LolfoollorS"},"content":"    public static final Person IDA \u003d new PersonBuilder()","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"LolfoollorS"},"content":"            .withUid(\"9\")","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"LolfoollorS"},"content":"            .withCategory(\"P\")","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"LolfoollorS"},"content":"            .withName(\"Ida Mueller\")","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"LolfoollorS"},"content":"            .withGender(\"F\")","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"LolfoollorS"},"content":"            .withPhone(\"8482131\")","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"xhphoong"},"content":"            .withDatesSlots(\"2022-11-11,3\")","lastModifiedDate":"2022-10-23"},{"lineNumber":114,"author":{"gitId":"LolfoollorS"},"content":"            .withEmail(\"hans@example.com\")","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"xhphoong"},"content":"            .withAddress(\"chicago ave\").build();","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":118,"author":{"gitId":"LolfoollorS"},"content":"    public static final Person AMY \u003d new PersonBuilder()","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"LolfoollorS"},"content":"            .withUid(VALID_UID_AMY).withCategory(VALID_CATEGORY_AMY).withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"LolfoollorS"},"content":"            .withGender(VALID_GENDER_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"xhphoong"},"content":"            .withAddress(VALID_ADDRESS_AMY).withDatesSlots((VALID_DATESLOT_AMY)).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"LolfoollorS"},"content":"    public static final Person BOB \u003d new PersonBuilder()","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"LolfoollorS"},"content":"            .withUid(VALID_UID_BOB).withCategory(VALID_CATEGORY_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"LolfoollorS"},"content":"            .withGender(VALID_GENDER_BOB).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"xhphoong"},"content":"            .withAddress(VALID_ADDRESS_BOB).withDatesSlots(VALID_DATESLOT_BOB)","lastModifiedDate":"2022-10-23"},{"lineNumber":126,"author":{"gitId":"LolfoollorS"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":129,"author":{"gitId":"LolfoollorS"},"content":"    private TypicalPersons() {","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"LolfoollorS"},"content":"    } // prevents instantiation","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"xhphoong":25,"johnbenedictyan":2,"yeehaoo":3,"-":48,"mlzt2000":2,"LolfoollorS":66}},{"path":"src/test/java/seedu/address/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" * toolkit being initialized.","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    public TestFxmlObject() {","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"johnbenedictyan":4,"-":33}},{"path":"src/test/java/seedu/address/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"     * It should only be used with invalid FXML files or the valid file located at","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"     * {@link VALID_FILE_PATH}.","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"johnbenedictyan":2,"-":113}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml\" type\u003d\"seedu.address.ui.TestFxmlObject\"","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"         xmlns\u003d\"http://javafx.com/javafx\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"johnbenedictyan":2,"-":4}}]
