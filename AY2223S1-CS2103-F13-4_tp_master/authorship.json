[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yeehaoo"},"content":"# _Healthcare Xpress_ [![Java CI](https://github.com/AY2223S1-CS2103-F13-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103-F13-4/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"yeehaoo"},"content":"* This is an **address log application for medical staff**.\u003cbr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"yeehaoo"},"content":"  * for medical administrators to lookup patient details and forward them to the relevant attending nurses or physicians","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"yeehaoo"},"content":"  * for medical administrators to keep track of which nurses are assigned to which patients","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"yeehaoo"},"content":"  * for medical administrators to label patients with specific conditions so precautions can be taken by attending staff if needed","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"yeehaoo"},"content":"* As most commands are inputed with the keyboard, it is best suited for a medical administrator who is familiar with CLI Applications.","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"yeehaoo"},"content":"* However, due to its intuitive design, beginners can expect to pick it up very quickly.","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"yeehaoo"},"content":"* For the detailed documentation of this project, see the **[Healthcare Xpress Product Website](https://ay2223s1-cs2103-f13-4.github.io/tp/)**.","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"yeehaoo"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"yeehaoo":10,"-":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"yeehaoo"},"content":"### John Benedict Yan","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"yeehaoo"},"content":"\u003cimg src\u003d\"images/johnbenedictyan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"yeehaoo"},"content":"[[github](https://github.com/johnbenedictyan)]","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"yeehaoo"},"content":"[[portfolio](team/johnbenedictyan.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"yeehaoo"},"content":"* Role: Team Lead and Code Quality In-Charge","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"yeehaoo"},"content":"* Responsibilities: Commons","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"yeehaoo"},"content":"### Phoong Xiang Han","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"yeehaoo"},"content":"\u003cimg src\u003d\"images/xhphoong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"yeehaoo"},"content":"[[github](http://github.com/xhphoong)]","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"yeehaoo"},"content":"[[portfolio](team/xhphoong.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"yeehaoo"},"content":"* Role: Documentation In-Charge","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"yeehaoo"},"content":"* Responsibilities: Logic","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"yeehaoo"},"content":"### Yee Hao","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"yeehaoo"},"content":"\u003cimg src\u003d\"images/yeehaoo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"yeehaoo"},"content":"[[github](http://github.com/yeehaoo)] [[portfolio](team/yeehaoo.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"yeehaoo"},"content":"* Role: Deliverables and deadlines, and Scheduling and tracking In-Charge","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"yeehaoo"},"content":"* Responsibilities: Model","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"yeehaoo"},"content":"### Malcolm Low","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"yeehaoo"},"content":"\u003cimg src\u003d\"images/mlzt2000.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"yeehaoo"},"content":"[[github](http://github.com/mlzt2000)]","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"yeehaoo"},"content":"[[portfolio](team/mlzt2000.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"yeehaoo"},"content":"* Role: Integration In-Charge","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"yeehaoo"},"content":"* Responsibilities: User Interface","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"yeehaoo"},"content":"### Lim Zhan Feng","lastModifiedDate":"2022-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"yeehaoo"},"content":"\u003cimg src\u003d\"images/lolfoollors.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"yeehaoo"},"content":"[[github](http://github.com/lolfoollors)]","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"yeehaoo"},"content":"[[portfolio](team/lolfoollors.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"yeehaoo"},"content":"* Role: Testing In-Charge","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"yeehaoo"},"content":"* Responsibilities: Storage","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"yeehaoo":29,"-":30}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"johnbenedictyan"},"content":"* medical administrator who has a need to manage a significant number of patients and nurses","lastModifiedDate":"2022-09-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"johnbenedictyan"},"content":"* can type fast with precision","lastModifiedDate":"2022-09-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"johnbenedictyan"},"content":"**Value proposition**: manage patient nurse relations faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-09-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"johnbenedictyan"},"content":"| Priority | As a …                | I can …                                                                                                  | So that …                                                                                                                                       |","lastModifiedDate":"2022-09-29"},{"lineNumber":274,"author":{"gitId":"johnbenedictyan"},"content":"|----------|-----------------------|----------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-29"},{"lineNumber":275,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | export a current week’s schedule for nurses so that                                                      | they can check their schedules independently                                                                                                    |","lastModifiedDate":"2022-10-02"},{"lineNumber":276,"author":{"gitId":"johnbenedictyan"},"content":"| `* * *`  | medical administrator | quickly add the details of a patients that require home visits so that                                   | retrieve them later                                                                                                                             |","lastModifiedDate":"2022-10-02"},{"lineNumber":277,"author":{"gitId":"johnbenedictyan"},"content":"| `* * *`  | medical administrator | quickly add the details of the nurse                                                                     | retrieve them later for matching                                                                                                                |","lastModifiedDate":"2022-10-02"},{"lineNumber":278,"author":{"gitId":"johnbenedictyan"},"content":"| `* * *`  | medical administrator | add the health conditions (eg heart disease, asthma, paralysed etc) of the patients as tags              | use this information to match the patient with the respective nurse that has experience in dealing with such disease                            |","lastModifiedDate":"2022-10-02"},{"lineNumber":279,"author":{"gitId":"johnbenedictyan"},"content":"| `* *`    | medical administrator | add a list of diseases that the nurse dealt with before as tags                                          | give them the appropriate patient for a home visit                                                                                              |","lastModifiedDate":"2022-10-02"},{"lineNumber":280,"author":{"gitId":"johnbenedictyan"},"content":"| `* * *`  | medical administrator | add patients to the existing list of patients that the nurse is going to home visit for the current week | use it to create the schedule for the nurse                                                                                                     |","lastModifiedDate":"2022-09-29"},{"lineNumber":281,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | add the availability of the nurse                                                                        | use this information to assign the patient to them                                                                                              |","lastModifiedDate":"2022-09-29"},{"lineNumber":282,"author":{"gitId":"johnbenedictyan"},"content":"| `* * *`  | medical administrator | add the date (and time + duration) of home visit appointments for the patient                            | schedule the nurses accordingly                                                                                                                 |","lastModifiedDate":"2022-09-29"},{"lineNumber":283,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | add next of kin particulars for a patient                                                                | inform them in case of any emergency                                                                                                            |","lastModifiedDate":"2022-09-29"},{"lineNumber":284,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | add the contact details of the patient\u0027s attending physician                                             | liaise with them regarding the patient\u0027s treatments and how the patient responds to them                                                        |","lastModifiedDate":"2022-09-29"},{"lineNumber":285,"author":{"gitId":"johnbenedictyan"},"content":"| `* *`    | medical administrator | add patients\u0027 critical information                                                                       | quickly identify any essential information that needs to be taken note of during scheduling                                                     |","lastModifiedDate":"2022-10-02"},{"lineNumber":286,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | store a nurse\u0027s schedule in a specific folder with the nurse’s name as the individual file’s name        |                                                                                                                                                 |","lastModifiedDate":"2022-09-29"},{"lineNumber":287,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | create a file with the nurse\u0027s name for later storage of the schedule                                    |                                                                                                                                                 |","lastModifiedDate":"2022-09-29"},{"lineNumber":288,"author":{"gitId":"johnbenedictyan"},"content":"| `* * *`  | medical administrator | store all the information of the patient and nurse in respective files                                   |                                                                                                                                                 |","lastModifiedDate":"2022-09-29"},{"lineNumber":289,"author":{"gitId":"johnbenedictyan"},"content":"| `* * *`  | medical administrator | delete a patient who no longer requires home visits                                                      | I do not need to include them in the scheduled exercise                                                                                         |","lastModifiedDate":"2022-09-29"},{"lineNumber":290,"author":{"gitId":"johnbenedictyan"},"content":"| `* * *`  | medical administrator | delete the nurse that is no longer in this department                                                    | I would not schedule an unavailable nurse                                                                                                       |","lastModifiedDate":"2022-09-29"},{"lineNumber":291,"author":{"gitId":"johnbenedictyan"},"content":"| `* *`    | medical administrator | check how many patients are not yet scheduled for the current week ( /for a certain period)              | I know whether I have finished scheduling                                                                                                       |","lastModifiedDate":"2022-09-29"},{"lineNumber":292,"author":{"gitId":"johnbenedictyan"},"content":"| `* *`    | medical administrator | check the list of unscheduled patients                                                                   | schedule them now                                                                                                                               |","lastModifiedDate":"2022-09-29"},{"lineNumber":293,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | check the list of nurses not going for a home visit on a specific date                                   | if one of the nurses suddenly falls sick, I have to schedule her assigned patient with the other available nurse quickly                        |","lastModifiedDate":"2022-09-29"},{"lineNumber":294,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | assess a patient\u0027s details by name and update their personal information or health condition             | if there are any changes, edit them accordingly                                                                                                 |","lastModifiedDate":"2022-09-29"},{"lineNumber":295,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | assess a patient’s details by name and change their home visit’s date/ time                              | if the patient suddenly wants to change their appointment date/ time, also change it accordingly                                                |","lastModifiedDate":"2022-09-29"},{"lineNumber":296,"author":{"gitId":"johnbenedictyan"},"content":"| `* * *`  | medical administrator | mark a patient as scheduled                                                                              | prevent scheduling a patient twice                                                                                                              |","lastModifiedDate":"2022-09-29"},{"lineNumber":297,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | also unmark a patient as unscheduled                                                                     | if the patient changes the date for the home visits, I will remember to schedule the patient again by unmarking it                              |","lastModifiedDate":"2022-10-02"},{"lineNumber":298,"author":{"gitId":"johnbenedictyan"},"content":"| `* * *`  | medical administrator | mark a nurse as fully scheduled                                                                          | I will not match the nurse with the remaining patients since their home visit schedule is already full                                          |","lastModifiedDate":"2022-09-29"},{"lineNumber":299,"author":{"gitId":"johnbenedictyan"},"content":"| `* *`    | medical administrator | also unmark a nurse as not-fully scheduled                                                               | if one of their patients suddenly reschedules the dates, unmark the nurse and match the nurse with the remaining patients till it is full again |","lastModifiedDate":"2022-09-29"},{"lineNumber":300,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | manage recurring home visits                                                                             | I do not need to keep updating the date/time of the home visits                                                                                 |","lastModifiedDate":"2022-09-29"},{"lineNumber":301,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | create a one-week schedule that contains the list of all the required patient details for a nurse        | save it and export/send it to the nurse                                                                                                         |","lastModifiedDate":"2022-09-29"},{"lineNumber":302,"author":{"gitId":"johnbenedictyan"},"content":"| `* *`    | medical administrator | check whether there are time crashes in a nurse\u0027s schedule                                               | if a time crash is detected, reschedule it again                                                                                                |","lastModifiedDate":"2022-10-02"},{"lineNumber":303,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | check whether there are duplicate patients                                                               | the duplication can be detected and removed even if I accidentally add a patient into the system more than once                                 |","lastModifiedDate":"2022-09-29"},{"lineNumber":304,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | sort the list of patients by home visit date                                                             | I know which patient I need to schedule first                                                                                                   |","lastModifiedDate":"2022-09-29"},{"lineNumber":305,"author":{"gitId":"johnbenedictyan"},"content":"| `* * *`  | medical administrator | find patients by keywords/name (such as diabetic patient, Kent Ridge etc)                                | search the patients by keyword and assign them to the nurses                                                                                    |","lastModifiedDate":"2022-09-29"},{"lineNumber":306,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | create location tags to label the patients                                                               | group them by labels and assign the groups to the nurses                                                                                        |","lastModifiedDate":"2022-10-02"},{"lineNumber":307,"author":{"gitId":"johnbenedictyan"},"content":"| `* *`    | medical administrator | give patients different priorities                                                                       | if a patient’s condition is more serious, I need to assign more nurses / more experienced nurses to the patient’s home visits                   |","lastModifiedDate":"2022-10-02"},{"lineNumber":308,"author":{"gitId":"johnbenedictyan"},"content":"| `*`      | medical administrator | archive the patient records                                                                              | there is still a record of the patient after deletion                                                                                           |","lastModifiedDate":"2022-09-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"xhphoong"},"content":"(For all use cases below, the **System** is the `Healthcare Xpress` and the **Actor** is the `medical administrator`, unless specified otherwise)","lastModifiedDate":"2022-09-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"xhphoong"},"content":"**Use case: UC01 - List Patients / Nurses**","lastModifiedDate":"2022-10-01"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"xhphoong"},"content":"1. Medical administrator requests to list patients,nurses or both with or without specifications.","lastModifiedDate":"2022-10-01"},{"lineNumber":321,"author":{"gitId":"xhphoong"},"content":"2. Healthcare Xpress shows a list of patients/nurses that satisfy the specifications.","lastModifiedDate":"2022-10-01"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"xhphoong"},"content":"* 1a. The given inputs/specifications are invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"xhphoong"},"content":"    * 1a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"xhphoong"},"content":"* 1b. The given specifications are nurses and areas only.","lastModifiedDate":"2022-10-01"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"xhphoong"},"content":"    * 1b1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"xhphoong"},"content":"* 1c. There are no patients/nurses that satisfy the specifications.","lastModifiedDate":"2022-10-01"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"xhphoong"},"content":"    * 1c1. Healthcare Xpress shows a blank list.","lastModifiedDate":"2022-10-01"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"xhphoong"},"content":"      Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator choose to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":345,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":346,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":347,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":348,"author":{"gitId":"xhphoong"},"content":"**Use case: UC02 - Find a Specific Patient / Nurse**","lastModifiedDate":"2022-10-01"},{"lineNumber":349,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":350,"author":{"gitId":"xhphoong"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":351,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":352,"author":{"gitId":"xhphoong"},"content":"1. Medical administrator requests to find a specific patient/nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":353,"author":{"gitId":"xhphoong"},"content":"2. Healthcare Xpress shows that specific patient/nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":354,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":355,"author":{"gitId":"xhphoong"},"content":"   Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":356,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":357,"author":{"gitId":"xhphoong"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":358,"author":{"gitId":"xhphoong"},"content":"* 1a. The given inputs are invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":359,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":360,"author":{"gitId":"xhphoong"},"content":"    * 1a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":361,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":362,"author":{"gitId":"xhphoong"},"content":"      Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":363,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":364,"author":{"gitId":"xhphoong"},"content":"* 1b. There is not only one patient/nurse that can match the find inputs.","lastModifiedDate":"2022-10-01"},{"lineNumber":365,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":366,"author":{"gitId":"xhphoong"},"content":"    * 1b1. Healthcare Xpress returns a list of patients/nurses that matched and the first one being the most matched.","lastModifiedDate":"2022-10-01"},{"lineNumber":367,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":368,"author":{"gitId":"xhphoong"},"content":"      Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":369,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":370,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator choose to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":371,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":372,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":373,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":374,"author":{"gitId":"xhphoong"},"content":"**Use case: UC03 - Delete a Patient / Nurse**","lastModifiedDate":"2022-10-01"},{"lineNumber":375,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":376,"author":{"gitId":"xhphoong"},"content":"**MSS**","lastModifiedDate":"2022-10-01"},{"lineNumber":377,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":378,"author":{"gitId":"xhphoong"},"content":"1. Medical administrator requests to \u003cins\u003elist patients / nurses (UC01)\u003c/ins\u003e or \u003cins\u003efind a specific patient / nurse (UC02)\u003c/ins\u003e.","lastModifiedDate":"2022-10-01"},{"lineNumber":379,"author":{"gitId":"xhphoong"},"content":"2. Medical administrator requests to delete a patient/nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":380,"author":{"gitId":"xhphoong"},"content":"3. Healthcare Xpress deletes the patient/nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":381,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":382,"author":{"gitId":"xhphoong"},"content":"   Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":383,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":384,"author":{"gitId":"xhphoong"},"content":"**Extensions**","lastModifiedDate":"2022-10-01"},{"lineNumber":385,"author":{"gitId":"xhphoong"},"content":"* 2a. The given id number is invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":386,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":387,"author":{"gitId":"xhphoong"},"content":"    * 2a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":388,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":389,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":390,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":391,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator chooses to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":392,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":393,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":394,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":395,"author":{"gitId":"xhphoong"},"content":"**Use case: UC04 - Mark a Patient**","lastModifiedDate":"2022-10-01"},{"lineNumber":396,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":397,"author":{"gitId":"xhphoong"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":398,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":399,"author":{"gitId":"xhphoong"},"content":"1.  Medical administrator requests to \u003cins\u003elist patients / nurses (UC01)\u003c/ins\u003e or \u003cins\u003efind a specific patient / nurse (UC02)\u003c/ins\u003e.","lastModifiedDate":"2022-10-01"},{"lineNumber":400,"author":{"gitId":"xhphoong"},"content":"2.  Medical administrator requests to mark a specific patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":401,"author":{"gitId":"xhphoong"},"content":"3.  Healthcare Xpress marks the patient as visited.","lastModifiedDate":"2022-10-01"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":405,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":406,"author":{"gitId":"xhphoong"},"content":"* 1a. Only nurse/nurses are shown.","lastModifiedDate":"2022-10-01"},{"lineNumber":407,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":408,"author":{"gitId":"xhphoong"},"content":"    * 1a1. Medical administrator requests to mark a nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":409,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":410,"author":{"gitId":"xhphoong"},"content":"    * 1a2. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":411,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":412,"author":{"gitId":"xhphoong"},"content":"      Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":413,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":414,"author":{"gitId":"xhphoong"},"content":"* 2a. The given id number is invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":416,"author":{"gitId":"xhphoong"},"content":"    * 2a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":417,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":418,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":419,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":420,"author":{"gitId":"xhphoong"},"content":"* 2b. The given id number is not a patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":421,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":422,"author":{"gitId":"xhphoong"},"content":"    * 2b1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":423,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":424,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":425,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":426,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator chooses to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":428,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":430,"author":{"gitId":"xhphoong"},"content":"**Use case: UC05 - Edit a Patient / Nurse**","lastModifiedDate":"2022-10-01"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":432,"author":{"gitId":"xhphoong"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":434,"author":{"gitId":"xhphoong"},"content":"1.  Medical administrator requests to \u003cins\u003elist patients / nurses (UC01)\u003c/ins\u003e or \u003cins\u003efind a specific patient / nurse (UC02)\u003c/ins\u003e.","lastModifiedDate":"2022-10-01"},{"lineNumber":435,"author":{"gitId":"xhphoong"},"content":"2.  Medical administrator requests to edit a patient / nurse and provides the details to be edited.","lastModifiedDate":"2022-10-01"},{"lineNumber":436,"author":{"gitId":"xhphoong"},"content":"3.  Healthcare Xpress edits the specific details of the patient / nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":438,"author":{"gitId":"xhphoong"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":439,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":440,"author":{"gitId":"xhphoong"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":441,"author":{"gitId":"xhphoong"},"content":"* 2a. The given id number is invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":442,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":443,"author":{"gitId":"xhphoong"},"content":"    * 2a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":444,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":445,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":446,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":447,"author":{"gitId":"xhphoong"},"content":"* 2b. The given details to be edited is invalid / in wrong format.","lastModifiedDate":"2022-10-01"},{"lineNumber":448,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":449,"author":{"gitId":"xhphoong"},"content":"    * 2b1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":450,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":451,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":452,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":453,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator chooses to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":454,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":455,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":456,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":457,"author":{"gitId":"xhphoong"},"content":"**Use case: UC06 - Add Tag / Tags to a Patient / Nurse**","lastModifiedDate":"2022-10-01"},{"lineNumber":458,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":459,"author":{"gitId":"xhphoong"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":460,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":461,"author":{"gitId":"xhphoong"},"content":"1.  Medical administrator requests to \u003cins\u003elist patients / nurses (UC01)\u003c/ins\u003e or \u003cins\u003efind a specific patient / nurse (UC02)\u003c/ins\u003e.","lastModifiedDate":"2022-10-01"},{"lineNumber":462,"author":{"gitId":"xhphoong"},"content":"2.  Medical administrator requests to add a tag / many tags to a patient / nurse and provides each tag\u0027s details.","lastModifiedDate":"2022-10-01"},{"lineNumber":463,"author":{"gitId":"xhphoong"},"content":"3.  Healthcare Xpress adds the tag / tags of specific details to the patient / nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":464,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":465,"author":{"gitId":"xhphoong"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":466,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":467,"author":{"gitId":"xhphoong"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":468,"author":{"gitId":"xhphoong"},"content":"* 2a. The given id number is invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":469,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":470,"author":{"gitId":"xhphoong"},"content":"    * 2a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":471,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":472,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":473,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":474,"author":{"gitId":"xhphoong"},"content":"* 2b. The given details is invalid / in the wrong format.","lastModifiedDate":"2022-10-01"},{"lineNumber":475,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":476,"author":{"gitId":"xhphoong"},"content":"    * 2b1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":477,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":478,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":479,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":480,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator chooses to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":481,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":482,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":483,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":484,"author":{"gitId":"xhphoong"},"content":"**Use case: UC07 - Delete a Specific Tag / Many Tags from a Patient / Nurse**","lastModifiedDate":"2022-10-01"},{"lineNumber":485,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":486,"author":{"gitId":"xhphoong"},"content":"**MSS**","lastModifiedDate":"2022-10-01"},{"lineNumber":487,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":488,"author":{"gitId":"xhphoong"},"content":"1.  Medical administrator requests to \u003cins\u003elist patients / nurses (UC01)\u003c/ins\u003e or \u003cins\u003efind a specific patient / nurse (UC02)\u003c/ins\u003e.","lastModifiedDate":"2022-10-01"},{"lineNumber":489,"author":{"gitId":"xhphoong"},"content":"2.  Medical administrator requests to delete a specific tag / many tags from a patient / nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":490,"author":{"gitId":"xhphoong"},"content":"3.  Healthcare Xpress deletes the tag / tags from the patient / nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":491,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":492,"author":{"gitId":"xhphoong"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":493,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":494,"author":{"gitId":"xhphoong"},"content":"**Extensions**","lastModifiedDate":"2022-10-01"},{"lineNumber":495,"author":{"gitId":"xhphoong"},"content":"* 2a. The given id number is invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":496,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":497,"author":{"gitId":"xhphoong"},"content":"    * 2a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":498,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":499,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":500,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":501,"author":{"gitId":"xhphoong"},"content":"* 2b. The given index of the tag / tags is out of bound.","lastModifiedDate":"2022-10-01"},{"lineNumber":502,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":503,"author":{"gitId":"xhphoong"},"content":"    * 2b2. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":504,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":505,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":506,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":507,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator chooses to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":508,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":509,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":510,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":511,"author":{"gitId":"xhphoong"},"content":"**Use case: UC08 - Add a Home-Visit Date and Time to a Patient**","lastModifiedDate":"2022-10-01"},{"lineNumber":512,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":513,"author":{"gitId":"xhphoong"},"content":"**MSS**","lastModifiedDate":"2022-10-01"},{"lineNumber":514,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":515,"author":{"gitId":"xhphoong"},"content":"1.  Medical administrator requests to \u003cins\u003elist patients / nurses (UC01)\u003c/ins\u003e or \u003cins\u003efind a specific patient / nurse (UC02)\u003c/ins\u003e.","lastModifiedDate":"2022-10-01"},{"lineNumber":516,"author":{"gitId":"xhphoong"},"content":"2.  Medical administrator requests to add a date and time with or without recurring status to a patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":517,"author":{"gitId":"xhphoong"},"content":"3.  Healthcare Xpress add the date and time for home-visits to the patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":518,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":519,"author":{"gitId":"xhphoong"},"content":"    Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":520,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":521,"author":{"gitId":"xhphoong"},"content":"**Extensions**","lastModifiedDate":"2022-10-01"},{"lineNumber":522,"author":{"gitId":"xhphoong"},"content":"* 1a. Only nurse/nurses are shown.","lastModifiedDate":"2022-10-01"},{"lineNumber":523,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":524,"author":{"gitId":"xhphoong"},"content":"    * 1a1. Medical administrator request to add a date and time to the nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":525,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":526,"author":{"gitId":"xhphoong"},"content":"    * 1a2. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":527,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":528,"author":{"gitId":"xhphoong"},"content":"      Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":529,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":530,"author":{"gitId":"xhphoong"},"content":"* 2a. The given id number is invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":531,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":532,"author":{"gitId":"xhphoong"},"content":"    * 2a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":533,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":534,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":535,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":536,"author":{"gitId":"xhphoong"},"content":"* 2b. The given id number is not a patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":537,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":538,"author":{"gitId":"xhphoong"},"content":"    * 2b1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":539,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":540,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":541,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":542,"author":{"gitId":"xhphoong"},"content":"* 2c. The given date and time is invalid or in wrong format.","lastModifiedDate":"2022-10-01"},{"lineNumber":543,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":544,"author":{"gitId":"xhphoong"},"content":"    * 2c1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":545,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":546,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":547,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":548,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator chooses to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":549,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":550,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":551,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":552,"author":{"gitId":"xhphoong"},"content":"**Use case: UC09 - Delete a Home-Visit Date and Time from a Patient**","lastModifiedDate":"2022-10-01"},{"lineNumber":553,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":554,"author":{"gitId":"xhphoong"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":555,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":556,"author":{"gitId":"xhphoong"},"content":"1.  Medical administrator requests to \u003cins\u003elist patients / nurses (UC01)\u003c/ins\u003e or \u003cins\u003efind a specific patient / nurse (UC02)\u003c/ins\u003e.","lastModifiedDate":"2022-10-01"},{"lineNumber":557,"author":{"gitId":"xhphoong"},"content":"2.  Medical administrator requests to delete date and time from a patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":558,"author":{"gitId":"xhphoong"},"content":"3.  Healthcare Xpress deletes the date and time for home-visits from the patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":559,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":560,"author":{"gitId":"xhphoong"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":561,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":562,"author":{"gitId":"xhphoong"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":563,"author":{"gitId":"xhphoong"},"content":"* 1a. Only nurse/nurses are shown.","lastModifiedDate":"2022-10-01"},{"lineNumber":564,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":565,"author":{"gitId":"xhphoong"},"content":"    * 1a1. Medical administrator request to delete a date and time from the nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":566,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":567,"author":{"gitId":"xhphoong"},"content":"    * 1a2. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":568,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":569,"author":{"gitId":"xhphoong"},"content":"      Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":570,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":571,"author":{"gitId":"xhphoong"},"content":"* 2a. The given id number is invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":572,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":573,"author":{"gitId":"xhphoong"},"content":"    * 2a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":574,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":575,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":576,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":577,"author":{"gitId":"xhphoong"},"content":"* 2b. The given id number is not a patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":578,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":579,"author":{"gitId":"xhphoong"},"content":"    * 2b1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":580,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":581,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":582,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":583,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator chooses to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":584,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":585,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":586,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":587,"author":{"gitId":"xhphoong"},"content":"**Use case: UC10 - Update a Home-Visit Date and Time for a Patient**","lastModifiedDate":"2022-10-01"},{"lineNumber":588,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":589,"author":{"gitId":"xhphoong"},"content":"**MSS**","lastModifiedDate":"2022-10-01"},{"lineNumber":590,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":591,"author":{"gitId":"xhphoong"},"content":"1.  Medical administrator requests to \u003cins\u003elist patients / nurses (UC01)\u003c/ins\u003e or \u003cins\u003efind a specific patient / nurse (UC02)\u003c/ins\u003e.","lastModifiedDate":"2022-10-01"},{"lineNumber":592,"author":{"gitId":"xhphoong"},"content":"2.  Medical administrator requests to update date and time from a patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":593,"author":{"gitId":"xhphoong"},"content":"3.  Healthcare Xpress updates the date and time for home-visits from the patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":594,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":595,"author":{"gitId":"xhphoong"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":596,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":597,"author":{"gitId":"xhphoong"},"content":"**Extensions**","lastModifiedDate":"2022-10-01"},{"lineNumber":598,"author":{"gitId":"xhphoong"},"content":"* 1a. Only nurse/nurses are shown.","lastModifiedDate":"2022-10-01"},{"lineNumber":599,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":600,"author":{"gitId":"xhphoong"},"content":"    * 1a1. Medical administrator request to update a date and time from the nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":601,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":602,"author":{"gitId":"xhphoong"},"content":"    * 1a2. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":603,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":604,"author":{"gitId":"xhphoong"},"content":"      Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":605,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":606,"author":{"gitId":"xhphoong"},"content":"* 2a. The given id number is invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":607,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":608,"author":{"gitId":"xhphoong"},"content":"    * 2a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":609,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":610,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":611,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":612,"author":{"gitId":"xhphoong"},"content":"* 2b. The given id number is not a patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":613,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":614,"author":{"gitId":"xhphoong"},"content":"    * 2b1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":615,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":616,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":617,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":618,"author":{"gitId":"xhphoong"},"content":"* 2c. The new date and time given is invalid or in wrong format.","lastModifiedDate":"2022-10-01"},{"lineNumber":619,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":620,"author":{"gitId":"xhphoong"},"content":"    * 2c1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":621,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":622,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":623,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":624,"author":{"gitId":"xhphoong"},"content":"* 2d. The patient has been assigned to a nurse and the new updated date and time crashes with that nurse existing schedule.","lastModifiedDate":"2022-10-01"},{"lineNumber":625,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":626,"author":{"gitId":"xhphoong"},"content":"    * 2d2. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":627,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":628,"author":{"gitId":"xhphoong"},"content":"      Use case ends. ","lastModifiedDate":"2022-10-01"},{"lineNumber":629,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":630,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator choose to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":631,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":632,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":633,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":634,"author":{"gitId":"xhphoong"},"content":"**Use case: UC11 - Assign a patient to the nurse**","lastModifiedDate":"2022-10-01"},{"lineNumber":635,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":636,"author":{"gitId":"xhphoong"},"content":"**MSS**","lastModifiedDate":"2022-10-01"},{"lineNumber":637,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":638,"author":{"gitId":"xhphoong"},"content":"1.  Medical administrator requests to \u003cins\u003elist patients / nurses (UC01)\u003c/ins\u003e or \u003cins\u003efind a specific patient / nurse (UC02)\u003c/ins\u003e.","lastModifiedDate":"2022-10-01"},{"lineNumber":639,"author":{"gitId":"xhphoong"},"content":"2.  Medical administrator requests to assign a patient to a nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":640,"author":{"gitId":"xhphoong"},"content":"3.  Healthcare Xpress assigns the patient to the nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":641,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":642,"author":{"gitId":"xhphoong"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":643,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":644,"author":{"gitId":"xhphoong"},"content":"**Extensions**","lastModifiedDate":"2022-10-01"},{"lineNumber":645,"author":{"gitId":"xhphoong"},"content":"* 2a. Any given id number is invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":646,"author":{"gitId":"xhphoong"},"content":"    ","lastModifiedDate":"2022-09-29"},{"lineNumber":647,"author":{"gitId":"xhphoong"},"content":"    * 2a1. Healthcare Xpress shows an error message.                    ","lastModifiedDate":"2022-10-01"},{"lineNumber":648,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":649,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":650,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":651,"author":{"gitId":"xhphoong"},"content":"* 2b. The given id numbers are both patients or nurses. ","lastModifiedDate":"2022-10-01"},{"lineNumber":652,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":653,"author":{"gitId":"xhphoong"},"content":"    * 2b1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":654,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":655,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":656,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":657,"author":{"gitId":"xhphoong"},"content":"* 2c. The given id number\u0027s nurse has another home-visit at the same date and time.","lastModifiedDate":"2022-10-01"},{"lineNumber":658,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":659,"author":{"gitId":"xhphoong"},"content":"    * 2c1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":660,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":661,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":662,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":663,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, Medical administrator chooses to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":664,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":665,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":666,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":667,"author":{"gitId":"xhphoong"},"content":"**Use case: UC12 - Remove a patient / all patients from a nurse**","lastModifiedDate":"2022-10-01"},{"lineNumber":668,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":669,"author":{"gitId":"xhphoong"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":670,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":671,"author":{"gitId":"xhphoong"},"content":"1.  Medical administrator requests to \u003cins\u003elist patients / nurses (UC01)\u003c/ins\u003e or \u003cins\u003efind a specific patient / nurse (UC02)\u003c/ins\u003e.","lastModifiedDate":"2022-10-01"},{"lineNumber":672,"author":{"gitId":"xhphoong"},"content":"2.  Medical administrator requests to remove a patient or all patients from a nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":673,"author":{"gitId":"xhphoong"},"content":"3.  Healthcare Xpress removes the patient / all patients from the nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":674,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":675,"author":{"gitId":"xhphoong"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":676,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":677,"author":{"gitId":"xhphoong"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":678,"author":{"gitId":"xhphoong"},"content":"* 2a. Any given id number is invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":679,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":680,"author":{"gitId":"xhphoong"},"content":"    * 2a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":681,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":682,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":683,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":684,"author":{"gitId":"xhphoong"},"content":"* 2b. One given id number is not a nurse.","lastModifiedDate":"2022-10-01"},{"lineNumber":685,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":686,"author":{"gitId":"xhphoong"},"content":"    * 2b1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":687,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":688,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1. ","lastModifiedDate":"2022-10-01"},{"lineNumber":689,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":690,"author":{"gitId":"xhphoong"},"content":"* 2c. Two given id numbers is both patients or both nurses.","lastModifiedDate":"2022-10-01"},{"lineNumber":691,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":692,"author":{"gitId":"xhphoong"},"content":"    * 2c1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":693,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":694,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":695,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":696,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator choose to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":697,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":698,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":699,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":700,"author":{"gitId":"xhphoong"},"content":"**Use case: UC13 - Swap a patient\u0027s nurse**","lastModifiedDate":"2022-10-01"},{"lineNumber":701,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":702,"author":{"gitId":"xhphoong"},"content":"**MSS**","lastModifiedDate":"2022-10-01"},{"lineNumber":703,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":704,"author":{"gitId":"xhphoong"},"content":"1.  Medical administrator requests to \u003cins\u003elist patients / nurses (UC01)\u003c/ins\u003e or \u003cins\u003efind a specific patient / nurse (UC02)\u003c/ins\u003e.","lastModifiedDate":"2022-10-01"},{"lineNumber":705,"author":{"gitId":"xhphoong"},"content":"2.  Medical administrator requests to swap a patient\u0027s nurse. ","lastModifiedDate":"2022-10-01"},{"lineNumber":706,"author":{"gitId":"xhphoong"},"content":"3.  Healthcare Xpress swaps the patient\u0027s nurse to a new nurse. ","lastModifiedDate":"2022-10-01"},{"lineNumber":707,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":708,"author":{"gitId":"xhphoong"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":709,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":710,"author":{"gitId":"xhphoong"},"content":"**Extensions**","lastModifiedDate":"2022-10-01"},{"lineNumber":711,"author":{"gitId":"xhphoong"},"content":"* 2a. Any given id number is invalid.","lastModifiedDate":"2022-10-01"},{"lineNumber":712,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":713,"author":{"gitId":"xhphoong"},"content":"    * 2a1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":714,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":715,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":716,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":717,"author":{"gitId":"xhphoong"},"content":"* 2b. The three given id numbers do not belong to two nurses and one patient.","lastModifiedDate":"2022-10-01"},{"lineNumber":718,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":719,"author":{"gitId":"xhphoong"},"content":"    * 2b1. Healthcare Xpress shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":720,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":721,"author":{"gitId":"xhphoong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-01"},{"lineNumber":722,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":723,"author":{"gitId":"xhphoong"},"content":"* *a. At any time, medical administrator choose to exit the program.","lastModifiedDate":"2022-10-01"},{"lineNumber":724,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":725,"author":{"gitId":"xhphoong"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"mlzt2000"},"content":"1. Technical Requirements:","lastModifiedDate":"2022-09-30"},{"lineNumber":730,"author":{"gitId":"mlzt2000"},"content":"    1. The application should work on any _mainstream OS_, such as Windows, Linux, and macOS, as long as it has Java `11` or above installed.","lastModifiedDate":"2022-09-30"},{"lineNumber":731,"author":{"gitId":"mlzt2000"},"content":"    2. The application should be compatible with both _32-bit_ and _64-bit_ environments.","lastModifiedDate":"2022-09-30"},{"lineNumber":732,"author":{"gitId":"mlzt2000"},"content":"2. Performance Requirements:","lastModifiedDate":"2022-09-30"},{"lineNumber":733,"author":{"gitId":"mlzt2000"},"content":"    1. Should be able to hold up to _10000 patients and nurses_ without noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-10-03"},{"lineNumber":734,"author":{"gitId":"mlzt2000"},"content":"    2. The application should be able to launch within _5 seconds_.","lastModifiedDate":"2022-09-30"},{"lineNumber":735,"author":{"gitId":"mlzt2000"},"content":"    3. The application should be able to respond to each command within _1 second_.","lastModifiedDate":"2022-09-30"},{"lineNumber":736,"author":{"gitId":"mlzt2000"},"content":"3. Quality requirements:","lastModifiedDate":"2022-09-30"},{"lineNumber":737,"author":{"gitId":"mlzt2000"},"content":"    1. A user with above average typing speed for regular English text (i.e. not code, not system admin commands)","lastModifiedDate":"2022-09-30"},{"lineNumber":738,"author":{"gitId":"mlzt2000"},"content":"       should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-09-30"},{"lineNumber":739,"author":{"gitId":"mlzt2000"},"content":"    2. A user with minimal knowledge on how to operate text-based applications should be able to quickly learn how to use it.","lastModifiedDate":"2022-09-30"},{"lineNumber":740,"author":{"gitId":"mlzt2000"},"content":"4. Constraints:","lastModifiedDate":"2022-09-30"},{"lineNumber":741,"author":{"gitId":"mlzt2000"},"content":"    1. Each version of the application should be _backwards compatible_ with data produced by earlier versions.","lastModifiedDate":"2022-09-30"},{"lineNumber":742,"author":{"gitId":"mlzt2000"},"content":"    2. Specifications of dates and times should be compliant with ISO 8601 standard, and in the GMT+8 time zone.","lastModifiedDate":"2022-09-30"},{"lineNumber":743,"author":{"gitId":"mlzt2000"},"content":"5. Project Scope:","lastModifiedDate":"2022-09-30"},{"lineNumber":744,"author":{"gitId":"mlzt2000"},"content":"    1. The application is not required to handle the printing of the patient-nurse visitation schedule.","lastModifiedDate":"2022-09-30"},{"lineNumber":745,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"xhphoong"},"content":"* **Medical Administrator**: A person who oversees, plan, direct, and coordinate home-visits for patients.","lastModifiedDate":"2022-10-03"},{"lineNumber":750,"author":{"gitId":"xhphoong"},"content":"* **Patients**: A person receiving or registered to receive home visits due to special needs.","lastModifiedDate":"2022-10-03"},{"lineNumber":751,"author":{"gitId":"xhphoong"},"content":"* **Nurses**: A person trained to care for the sick or infirm, especially trained to do home-visiting.","lastModifiedDate":"2022-10-03"},{"lineNumber":752,"author":{"gitId":"xhphoong"},"content":"* **Healthcare Xpress**: A desktop app for managing patients that require home-visits.","lastModifiedDate":"2022-10-03"},{"lineNumber":753,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":774,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":775,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":777,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":778,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":779,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":781,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":782,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":783,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":784,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":785,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":788,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":789,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":790,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":791,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":792,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":793,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":797,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":798,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":799,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":800,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":801,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":802,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":803,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":804,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":805,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":806,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":807,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"xhphoong":386,"johnbenedictyan":39,"-":366,"mlzt2000":16}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"Healthcare Xpress is a **desktop app for managing patients that require home-visits and nurses, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Healthcare Xpress can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"1. Download the latest `healthcarexpress.jar` `[Coming soon]`.","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your Healthcare Xpress Book.","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"   * **`add`**`add c/N n/Jason p/98723432 e/jason@example.com g/M t/Asthma` : Adds a nurse named `Jason` to the Healthcare Xpress book.","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"   * **`add`** **`c/P n/John p/98765432 e/john@example.com g/M a/Bishan street, block","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"     123, #01-01 t/Asthma d/2022-12-12 1350`** : Adds a patient named **`John`** to Healthcare Xpress book.","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"   * **`delete`**`-id 3` : Deletes the nurse of patient with an id of 3.","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"### Adding a nurse or patient: `add`","lastModifiedDate":"2022-09-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"1. Adds a patient to the Healthcare Xpress book.","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"Format: `add c/P n/NAME p/PHONE_NUMBER e/EMAIL g/GENDER a/ADDRESS d/DATE_AND_TIME [t/TAG]…​`","lastModifiedDate":"2022-09-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e ","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":":bulb:**Tips:**","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"* A patient can have any number of tags (including 0).","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"xhphoong"},"content":"* Date and time need to be in the format of yyyy-MM-dd HHmm.","lastModifiedDate":"2022-09-29"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"* To add a patient, type c/P specifically.","lastModifiedDate":"2022-09-29"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Examples: ","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"* `add c/P n/John p/98765432 e/john@example.com g/M a/Bishan street, block 123, #01-01 t/Asthma d/2022-12-12 1350`","lastModifiedDate":"2022-09-29"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"* `add c/P n/Betsy t/VIP e/betsy@example.com g/F a/Bugis street d/2022-12-02 1400 p/98345432 t/Heart disease t/children`","lastModifiedDate":"2022-09-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"2. Adds a nurse to the Healthcare Xpress book","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"Format:`add c/N n/NAME p/PHONE_NUMBER e/EMAIL g/GENDER [t/TAG]…​`","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e ","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":":bulb:**Tips**: ","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"xhphoong"},"content":"* A nurse can have any number of tags (including 0).","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"xhphoong"},"content":"* You may type it in any order.","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"xhphoong"},"content":"* To add a nurse, type c/N specifically.","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"xhphoong"},"content":"* `add c/N n/Jason p/98723432 e/jason@example.com g/M t/Asthma`","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"xhphoong"},"content":"* `add c/N n/Betsy t/handle children well e/betsy@example.com g/F p/98345432 t/Heart disease`","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"yeehaoo"},"content":"### Listing nurses or patients : `list`","lastModifiedDate":"2022-10-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"yeehaoo"},"content":"Shows a list of specified nurses or patients, or all nurses and patients if no specifications were provided.","lastModifiedDate":"2022-10-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"yeehaoo"},"content":"Format: `list [c/CATEGORY] [t/TAG] [g/GENDER] [a/ADDRESS]`","lastModifiedDate":"2022-10-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"yeehaoo"},"content":"Examples:","lastModifiedDate":"2022-10-02"},{"lineNumber":125,"author":{"gitId":"yeehaoo"},"content":"* `list c/NURSE` - Lists all nurses enrolled in the database.","lastModifiedDate":"2022-10-02"},{"lineNumber":126,"author":{"gitId":"yeehaoo"},"content":"* `list c/PATIENT t/DIABETIC g/M` - Lists all male diabetic patients enrolled in the database.","lastModifiedDate":"2022-10-02"},{"lineNumber":127,"author":{"gitId":"yeehaoo"},"content":"* `list c/PATIENT a/Bugis t/Heart Disease` - List all patients tagged with heart disease in the Bugis region.","lastModifiedDate":"2022-10-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"xhphoong"},"content":"### Editing a person : `edit` `[Coming soon]`","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"xhphoong"},"content":"Edits an existing person in the Healthcare Xpress book.","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"xhphoong"},"content":"Format: `edit -id ID [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"xhphoong"},"content":"* Edits the person with the specified `ID`. ","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"xhphoong"},"content":"* The ID refers to the unique ID number shown in the displayed person list.","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"xhphoong"},"content":"* The ID **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"xhphoong"},"content":"*  `edit -id 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-10-03"},{"lineNumber":146,"author":{"gitId":"xhphoong"},"content":"*  `edit -id 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2022-10-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"xhphoong"},"content":"### Locating persons by name: `find` `[Coming Soon]`","lastModifiedDate":"2022-10-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"johnbenedictyan"},"content":"### Deleting a nurse or a patient : `delete`","lastModifiedDate":"2022-10-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"johnbenedictyan"},"content":"Deletes the specified nurse or patient from the records system.","lastModifiedDate":"2022-10-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"johnbenedictyan"},"content":"Format: `delete -id ID`","lastModifiedDate":"2022-10-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"johnbenedictyan"},"content":"* Deletes the nurse or patient with the specified `ID`.","lastModifiedDate":"2022-10-02"},{"lineNumber":172,"author":{"gitId":"johnbenedictyan"},"content":"* The ID refers to the unique ID number shown in the displayed person list.","lastModifiedDate":"2022-10-02"},{"lineNumber":173,"author":{"gitId":"johnbenedictyan"},"content":"* The ID **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-02"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"johnbenedictyan"},"content":"* `list` followed by `delete -id 2` deletes the nurse of patient with an id of 2.","lastModifiedDate":"2022-10-02"},{"lineNumber":177,"author":{"gitId":"johnbenedictyan"},"content":"* `find -n Betsy` followed by `delete -id 1` deletes the nurse of patient with an id of 1.","lastModifiedDate":"2022-10-02"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"mlzt2000"},"content":"### Marking a patient as visited : `mark`","lastModifiedDate":"2022-09-30"},{"lineNumber":180,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":181,"author":{"gitId":"mlzt2000"},"content":"Marks a specific patient in the records system as having been visited.","lastModifiedDate":"2022-10-03"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":183,"author":{"gitId":"mlzt2000"},"content":"Format: `mark -id ID`","lastModifiedDate":"2022-10-03"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":185,"author":{"gitId":"mlzt2000"},"content":"* Marks the patient with the specified \u0027ID\u0027 as having been visited.","lastModifiedDate":"2022-10-03"},{"lineNumber":186,"author":{"gitId":"mlzt2000"},"content":"* The ID refers to the unique ID shown in the displayed person list.","lastModifiedDate":"2022-10-03"},{"lineNumber":187,"author":{"gitId":"mlzt2000"},"content":"* The ID **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2022-10-03"},{"lineNumber":188,"author":{"gitId":"mlzt2000"},"content":"* `list` or `find` operations can be performed first to get the ID of the desired patient.","lastModifiedDate":"2022-10-03"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-09-30"},{"lineNumber":191,"author":{"gitId":"mlzt2000"},"content":"* `mark -id 1` marks the patient with ID of 1 as having been visited.","lastModifiedDate":"2022-10-03"},{"lineNumber":192,"author":{"gitId":"mlzt2000"},"content":"* `list c/P` followed by `mark -id 1` marks the patient with ID of 1 as having been visited.","lastModifiedDate":"2022-10-03"},{"lineNumber":193,"author":{"gitId":"mlzt2000"},"content":"* `find -n John` followed by `mark -id 1` marks the patient with ID of 1 as having been visited.","lastModifiedDate":"2022-10-03"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"xhphoong"},"content":"HealthcareXpress data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":213,"author":{"gitId":"xhphoong"},"content":"HealthcareXpress data are saved as a JSON file `[JAR file location]/data/healthcarexpress.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-10-03"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":216,"author":{"gitId":"xhphoong"},"content":"If your changes to the data file makes its format invalid, Healthcare Xpress book will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-10-03"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":237,"author":{"gitId":"xhphoong"},"content":"**Add** | `add c/N n/NAME p/PHONE_NUMBER e/EMAIL g/GENDER [t/TAG]…​` \u003cbr\u003e e.g., `add c/N n/Jason p/98723432 e/jason@example.com g/M t/Asthma ` ","lastModifiedDate":"2022-10-03"},{"lineNumber":238,"author":{"gitId":"xhphoong"},"content":"**Add** | `add c/P n/NAME p/PHONE_NUMBER e/EMAIL g/GENDER a/ADDRESS d/DATE_AND_TIME [t/TAG]…​` \u003cbr\u003e e.g., `add c/P n/John p/98765432 e/john@example.com g/M a/Bishan street, block 123, #01-01 t/Asthma d/2022-12-12 1350`","lastModifiedDate":"2022-10-03"},{"lineNumber":239,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"xhphoong"},"content":"**Edit** | `edit -id ID [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2022-10-03"},{"lineNumber":242,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"yeehaoo"},"content":"**List** | `list [c/CATEGORY] [t/TAG] [g/GENDER] [a/ADDRESS]`\u003cbr\u003e e.g., `list c/NURSE`","lastModifiedDate":"2022-10-02"},{"lineNumber":244,"author":{"gitId":"mlzt2000"},"content":"**Mark** | `mark -id ID` \u003cbr\u003e e.g., `mark -id 1`","lastModifiedDate":"2022-10-03"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":247,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"xhphoong":43,"johnbenedictyan":9,"yeehaoo":10,"-":173,"mlzt2000":12}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"xhphoong"},"content":"    content: \"Healthcare Xpress\";","lastModifiedDate":"2022-10-03"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"xhphoong":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: AddressBook Level-3","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103-F13-4/tp/branch/master/graph/badge.svg?token\u003dC354PCI8TZ)](https://codecov.io/gh/AY2223S1-CS2103-F13-4/tp)","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"**AddressBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"xhphoong":1,"-":18}},{"path":"docs/team/johnbenedictyan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"---","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"layout: page","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"title: John Benedict\u0027s Project Portfolio Page","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"---","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"### Project: HealthCare Xpress","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"HealthCare Xpress is a desktop application that is to be used by medical administrator for managing patients that require home-visits and nurses. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"* **New Feature**: to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    * What it does: to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    * Justification: to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    * Highlights: to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    * Credits: to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"* **New Feature**: to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003djohnbenedictyan\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"* **Project management**:","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"* **Documentation**:","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"    * User Guide:","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"        * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"        * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"    * Developer Guide:","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"        * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"* **Community**:","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"* **Tools**:","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"johnbenedictyan":46}},{"path":"docs/team/lolfoollors.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"---","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"layout: page","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"title: lolfoollors\u0027s Project Portfolio Page","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"---","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"### Project: HealthCare Xpress","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"HealthCare Xpress is a desktop application that is to be used by medical administrator for managing patients that require home-visits and nurses. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"* **New Feature**: to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"    * What it does: to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"    * Justification: to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"    * Highlights: to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"    * Credits: to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"* **New Feature**: to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003day2223s1-cs2103-f13-4\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dlolfoollors\u0026tabRepo\u003dAY2223S1-CS2103-F13-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"* **Project management**:","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"LolfoollorS"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"LolfoollorS"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"LolfoollorS"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"LolfoollorS"},"content":"* **Documentation**:","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"LolfoollorS"},"content":"    * User Guide:","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"LolfoollorS"},"content":"        * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"LolfoollorS"},"content":"        * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"LolfoollorS"},"content":"    * Developer Guide:","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"LolfoollorS"},"content":"        * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"LolfoollorS"},"content":"* **Community**:","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"LolfoollorS"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"LolfoollorS"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"LolfoollorS"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"LolfoollorS"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"LolfoollorS"},"content":"* **Tools**:","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"LolfoollorS"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"LolfoollorS"},"content":"    * to be added soon.","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"LolfoollorS":46}},{"path":"docs/team/mlzt2000.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mlzt2000"},"content":"### Project: Healthcare Xpress","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"mlzt2000"},"content":"Healthcare Xpress is a desktop medical address book application used by medical administrators, for managing medical staff and patients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about *to be added*.","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"mlzt2000"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"mlzt2000"},"content":"* **New Feature:**","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"mlzt2000"},"content":"  * What it does: To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"mlzt2000"},"content":"  * Justification: To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"mlzt2000"},"content":"  * Highlights: To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"mlzt2000"},"content":"  * Credits: To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"mlzt2000"},"content":"* **Code Contributed:** [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dlow\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dmlzt2000\u0026tabRepo\u003dAY2223S1-CS2103-F13-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"mlzt2000"},"content":"* **Project Management:**","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"mlzt2000"},"content":"  * To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"mlzt2000"},"content":"* **Enhancements to existing features:**","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"mlzt2000"},"content":"    * To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"mlzt2000"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"mlzt2000"},"content":"    * To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"mlzt2000"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"mlzt2000"},"content":"    * User Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"mlzt2000"},"content":"        * To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"mlzt2000"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"mlzt2000"},"content":"        * To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"mlzt2000"},"content":"* **Community**:","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"mlzt2000"},"content":"    * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"mlzt2000"},"content":"    * Contributed to forum discussions (examples: to be added soon)","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"mlzt2000"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: to be added soon)","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"mlzt2000"},"content":"* **Tools**:","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"mlzt2000"},"content":"    * to be added soon.","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"mlzt2000"},"content":"    * to be added soon.","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"mlzt2000":43}},{"path":"docs/team/xhphoong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"title: xhphoong\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"### Project: HealthCare Xpress","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"HealthCare Xpress is a desktop application that is to be used by medical administrator for managing patients that require home-visits and nurses. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"* **New Feature**: to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"    * What it does: to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"    * Justification: to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"    * Highlights: to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"    * Credits: to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"* **New Feature**: to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dxhphoong\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"* **Project management**:","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"    * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"    * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"    * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"    * User Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"        * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"        * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"        * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"* **Community**:","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"    * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"    * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"    * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"    * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"* **Tools**:","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"    * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"    * to be added soon.","lastModifiedDate":"2022-09-29"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"xhphoong":46}},{"path":"docs/team/yeehaoo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yeehaoo"},"content":"### Project: Healthcare Xpress","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"yeehaoo"},"content":"Healthcare Xpress is a desktop medical address book application used by medical administrators, for managing medical staff and patients. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about *to be added*.","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"yeehaoo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"yeehaoo"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"yeehaoo"},"content":"  * What it does: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"yeehaoo"},"content":"  * Justification: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"yeehaoo"},"content":"  * Highlights: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"yeehaoo"},"content":"  * Credits: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"yeehaoo"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003day2223s1-cs2103-f13-4\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dyeehaoo\u0026tabRepo\u003dAY2223S1-CS2103-F13-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"yeehaoo"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"yeehaoo"},"content":"  * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"yeehaoo"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"yeehaoo"},"content":"  * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"yeehaoo"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"yeehaoo"},"content":"  * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"yeehaoo"},"content":"    * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"yeehaoo"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"yeehaoo"},"content":"    * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"yeehaoo"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"yeehaoo"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"yeehaoo"},"content":"  * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"yeehaoo"},"content":"  * Contributed to forum discussions (examples: to be added soon)","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"yeehaoo"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: to be added soon)","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"yeehaoo":30}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The patient/nurse index provided is invalid\";","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_UID \u003d \"The patient/nurse uid provided is invalid\";","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d patients and nurses listed!\";","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xhphoong":3,"-":12}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText, model);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"xhphoong":1,"-":80}},{"path":"src/main/java/seedu/address/logic/UidManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package seedu.address.logic;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.PriorityQueue;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Queue;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":" * The main UidManager of the app.","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"public class UidManager {","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    private Queue\u003cUid\u003e records;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"     * Constructs a {@code UidManager} that has the record of the uids used in the addressbook.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"    public UidManager(ObservableList\u003cPerson\u003e currentPersonList) {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"        this.records \u003d new PriorityQueue\u003c\u003e(Collections.reverseOrder());","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"        initialize(currentPersonList);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"     * Constructs an empty record {@code UidManager}.","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"    public UidManager() {","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"        this.records \u003d new PriorityQueue\u003c\u003e(Collections.reverseOrder());","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"    private void initialize(ObservableList\u003cPerson\u003e currentPersonList) {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"        for (Person person: currentPersonList) {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"            addUid(person.getUid());","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"     * Adds a new Uid to the pool of Uids in use.","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"     * @param newEntry","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"    private void addUid(Uid newEntry) {","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"        this.records.add(newEntry);","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"     * Produces a new Uid that is ensured to not be duplicated in the system.","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"    public Uid produceUid() {","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"        Uid newUid \u003d new Uid(1L);","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"        if (this.records.peek() !\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"            newUid \u003d new Uid(this.records.peek().getUid() + 1L);","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"        this.addUid(newUid);","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"        return newUid;","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"xhphoong":18,"johnbenedictyan":40}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_TIME;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a patient/nurse to the address book. \"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"            + PREFIX_CATEGORY + \"CATEGORY \"","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"            + \"If add patient, you can choose to add details:  \"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"            + PREFIX_DATE_AND_TIME + \"HOME_VISIT_DATE_AND_TIME \\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"            + PREFIX_CATEGORY + \"P \"","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"            + PREFIX_GENDER + \"M \"","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"            + PREFIX_TAG + \"owesMoney \"","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"            + PREFIX_DATE_AND_TIME + \"2022-11-11T12:30 \";","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New %1$s added: %2$s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This %1$s already exists in the address book\";","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_PERSON, toAdd.getCategoryIndicator()));","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd.getCategoryIndicator(), toAdd));","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xhphoong":18,"-":60}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":" * Deletes a patient/nurse identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"            + \": Deletes the patient/nurse identified by the unique id number used in the displayed person list.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"            + \"Parameters: UID (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_UID + \" 1\";","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted %1$s: %2$s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"    private final Uid targetUid;","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"    public DeleteCommand(Uid targetUid) {","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"        this.targetUid \u003d targetUid;","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"        Optional\u003cPerson\u003e personToDelete \u003d lastShownList.stream().filter(p -\u003e p.getUid().equals(targetUid)).findFirst();","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"        if (!personToDelete.isPresent()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_UID);","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"        Person confirmedPersonToDelete \u003d personToDelete.get();","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"        model.deletePerson(confirmedPersonToDelete);","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"                confirmedPersonToDelete.getCategoryIndicator(), confirmedPersonToDelete));","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"                        \u0026\u0026 targetUid.equals(((DeleteCommand) other).targetUid)); // state check","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xhphoong":6,"johnbenedictyan":13,"-":37}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_TIME;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the patient/nurse identified \"","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"            + \"by the unique id number used in the displayed person list.\"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"            + \"Parameters: UID (must be a positive integer) \"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"            + \"[\" + PREFIX_CATEGORY + \"CATEGORY] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"            + \"[\" + PREFIX_GENDER + \"GENDER] \"","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"            + \"Date and Time are only applicable to patient.\\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"            + \"[\" + PREFIX_DATE_AND_TIME + \"DATE_AND_TIME] \\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"            + \"Example: \" + COMMAND_WORD + PREFIX_UID + \" 1 \"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited %1$s: %2$s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This %1$s already exists in the address book.\";","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"    private final Uid targetUid;","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"     * @param targetUid               of the person in the filtered person list to edit","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"    public EditCommand(Uid targetUid, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(targetUid);","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"        this.targetUid \u003d targetUid;","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"        Optional\u003cPerson\u003e personToEdit \u003d lastShownList.stream().filter(p -\u003e p.getUid().equals(targetUid)).findFirst();","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"        if (!personToEdit.isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_UID);","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"        Person confirmedPersonToEdit \u003d personToEdit.get();","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"        Person editedPerson \u003d createEditedPerson(confirmedPersonToEdit, editPersonDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"        if (!confirmedPersonToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"                    confirmedPersonToEdit.getCategoryIndicator()));","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"        model.setPerson(confirmedPersonToEdit, editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"                confirmedPersonToEdit.getCategoryIndicator(), editedPerson));","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"xhphoong"},"content":"        String updatedCategory \u003d editPersonDescriptor.getCategory().orElse(personToEdit.getCategory());","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"xhphoong"},"content":"        Uid uid \u003d editPersonDescriptor.getUid().orElse(personToEdit.getUid());","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":115,"author":{"gitId":"xhphoong"},"content":"        Gender updatedGender \u003d editPersonDescriptor.getGender().orElse(personToEdit.getGender());","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"xhphoong"},"content":"        if (personToEdit instanceof Patient \u0026\u0026 updatedCategory.equals(\"P\")) {","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"xhphoong"},"content":"            List\u003cDateTime\u003e updatedDateTime \u003d editPersonDescriptor.getDatesTimes()","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"xhphoong"},"content":"                    .orElse(((Patient) personToEdit).getDatesTimes());","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"xhphoong"},"content":"            return new Patient(uid, updatedName, updatedGender, updatedPhone, updatedEmail,","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"xhphoong"},"content":"                        updatedAddress, updatedTags, updatedDateTime);","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"xhphoong"},"content":"        return new Person(uid, updatedName, updatedGender, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"xhphoong"},"content":"        return targetUid.equals(e.targetUid)","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"johnbenedictyan"},"content":"     * Stores the details to edit the person with. Each non-empty field value will","lastModifiedDate":"2022-10-04"},{"lineNumber":151,"author":{"gitId":"johnbenedictyan"},"content":"     * replace the","lastModifiedDate":"2022-10-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"xhphoong"},"content":"        private Uid uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"xhphoong"},"content":"        private String category;","lastModifiedDate":"2022-10-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"xhphoong"},"content":"        private Gender gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"xhphoong"},"content":"        private List\u003cDateTime\u003e datesTimes;","lastModifiedDate":"2022-10-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"johnbenedictyan"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2022-10-04"},{"lineNumber":166,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"xhphoong"},"content":"            setCategory(toCopy.category);","lastModifiedDate":"2022-10-09"},{"lineNumber":174,"author":{"gitId":"xhphoong"},"content":"            setUid(toCopy.uid);","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":176,"author":{"gitId":"xhphoong"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2022-10-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":181,"author":{"gitId":"xhphoong"},"content":"            setDatesTimes(toCopy.datesTimes);","lastModifiedDate":"2022-10-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"xhphoong"},"content":"            if (category \u003d\u003d \"P\") {","lastModifiedDate":"2022-10-09"},{"lineNumber":189,"author":{"gitId":"xhphoong"},"content":"                return CollectionUtil.isAnyNonNull(category, name, gender, phone, email, address, tags, datesTimes);","lastModifiedDate":"2022-10-09"},{"lineNumber":190,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":191,"author":{"gitId":"xhphoong"},"content":"            return CollectionUtil.isAnyNonNull(category, name, gender, phone, email, address, tags);","lastModifiedDate":"2022-10-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"xhphoong"},"content":"        public void setCategory(String category) {","lastModifiedDate":"2022-10-09"},{"lineNumber":195,"author":{"gitId":"xhphoong"},"content":"            this.category \u003d category;","lastModifiedDate":"2022-10-09"},{"lineNumber":196,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":197,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":198,"author":{"gitId":"xhphoong"},"content":"        public Optional\u003cString\u003e getCategory() {","lastModifiedDate":"2022-10-09"},{"lineNumber":199,"author":{"gitId":"xhphoong"},"content":"            return Optional.ofNullable(category);","lastModifiedDate":"2022-10-09"},{"lineNumber":200,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"johnbenedictyan"},"content":"        /**","lastModifiedDate":"2022-10-04"},{"lineNumber":203,"author":{"gitId":"xhphoong"},"content":"         * @param uid the id to set","lastModifiedDate":"2022-10-10"},{"lineNumber":204,"author":{"gitId":"johnbenedictyan"},"content":"         */","lastModifiedDate":"2022-10-04"},{"lineNumber":205,"author":{"gitId":"xhphoong"},"content":"        public void setUid(Uid uid) {","lastModifiedDate":"2022-10-10"},{"lineNumber":206,"author":{"gitId":"xhphoong"},"content":"            this.uid \u003d uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":207,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":208,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":209,"author":{"gitId":"johnbenedictyan"},"content":"        /**","lastModifiedDate":"2022-10-04"},{"lineNumber":210,"author":{"gitId":"johnbenedictyan"},"content":"         * @return the id","lastModifiedDate":"2022-10-04"},{"lineNumber":211,"author":{"gitId":"johnbenedictyan"},"content":"         */","lastModifiedDate":"2022-10-04"},{"lineNumber":212,"author":{"gitId":"xhphoong"},"content":"        public Optional\u003cUid\u003e getUid() {","lastModifiedDate":"2022-10-10"},{"lineNumber":213,"author":{"gitId":"xhphoong"},"content":"            return Optional.ofNullable(uid);","lastModifiedDate":"2022-10-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"xhphoong"},"content":"        public void setGender(Gender gender) {","lastModifiedDate":"2022-10-06"},{"lineNumber":224,"author":{"gitId":"xhphoong"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":225,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":226,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":227,"author":{"gitId":"xhphoong"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2022-10-06"},{"lineNumber":228,"author":{"gitId":"xhphoong"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2022-10-06"},{"lineNumber":229,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":256,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":264,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":265,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":266,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":267,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"xhphoong"},"content":"        /**","lastModifiedDate":"2022-10-09"},{"lineNumber":273,"author":{"gitId":"xhphoong"},"content":"         * Sets {@code datesTimes} to this object\u0027s {@code datesTimes}.","lastModifiedDate":"2022-10-09"},{"lineNumber":274,"author":{"gitId":"xhphoong"},"content":"         * A defensive copy of {@code datesTimes} is used internally.","lastModifiedDate":"2022-10-09"},{"lineNumber":275,"author":{"gitId":"xhphoong"},"content":"         */","lastModifiedDate":"2022-10-09"},{"lineNumber":276,"author":{"gitId":"xhphoong"},"content":"        public void setDatesTimes(List\u003cDateTime\u003e datesTimes) {","lastModifiedDate":"2022-10-09"},{"lineNumber":277,"author":{"gitId":"xhphoong"},"content":"            this.datesTimes \u003d (datesTimes !\u003d null) ? new ArrayList\u003cDateTime\u003e(datesTimes) : null;","lastModifiedDate":"2022-10-10"},{"lineNumber":278,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":279,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":280,"author":{"gitId":"xhphoong"},"content":"        /**","lastModifiedDate":"2022-10-09"},{"lineNumber":281,"author":{"gitId":"xhphoong"},"content":"         * Returns a dateTime list","lastModifiedDate":"2022-10-09"},{"lineNumber":282,"author":{"gitId":"xhphoong"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-10-09"},{"lineNumber":283,"author":{"gitId":"xhphoong"},"content":"         */","lastModifiedDate":"2022-10-09"},{"lineNumber":284,"author":{"gitId":"xhphoong"},"content":"        public Optional\u003cList\u003cDateTime\u003e\u003e getDatesTimes() {","lastModifiedDate":"2022-10-09"},{"lineNumber":285,"author":{"gitId":"xhphoong"},"content":"            return (datesTimes !\u003d null) ? Optional.of(new ArrayList\u003cDateTime\u003e(datesTimes)) : Optional.empty();","lastModifiedDate":"2022-10-09"},{"lineNumber":286,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":287,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":297,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":303,"author":{"gitId":"xhphoong"},"content":"            return getUid().equals(e.getUid())","lastModifiedDate":"2022-10-10"},{"lineNumber":304,"author":{"gitId":"xhphoong"},"content":"                    \u0026\u0026 getName().equals(e.getName())","lastModifiedDate":"2022-10-09"},{"lineNumber":305,"author":{"gitId":"xhphoong"},"content":"                    \u0026\u0026 getCategory().equals(e.getCategory())","lastModifiedDate":"2022-10-10"},{"lineNumber":306,"author":{"gitId":"xhphoong"},"content":"                    \u0026\u0026 getGender().equals(e.getGender())","lastModifiedDate":"2022-10-06"},{"lineNumber":307,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":310,"author":{"gitId":"xhphoong"},"content":"                    \u0026\u0026 getDatesTimes().equals(e.getDatesTimes())","lastModifiedDate":"2022-10-09"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"xhphoong":100,"johnbenedictyan":12,"-":202}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Thank you for using Healthcare Xpress!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"johnbenedictyan":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all patients and nurses names contain any of \"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"xhphoong":1,"-":41}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all patients and nurses\";","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xhphoong":1,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_TIME;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_UID, PREFIX_CATEGORY, PREFIX_NAME,","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"                PREFIX_GENDER, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_DATE_AND_TIME);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_UID, PREFIX_CATEGORY, PREFIX_NAME, PREFIX_GENDER,","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"                PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"        String category \u003d ParserUtil.parseCategory(argMultimap.getValue(PREFIX_CATEGORY).get());","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"        Uid id \u003d ParserUtil.parseUid(argMultimap.getValue(PREFIX_UID).get());","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"        List\u003cDateTime\u003e dateTimeList \u003d ParserUtil.parseDatesTimes(argMultimap.getAllValues(PREFIX_DATE_AND_TIME));","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"        if (category.equals(\"P\")) {","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"            Person person \u003d new Patient(id, name, gender, phone, email, address, tagList, dateTimeList);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"            return new AddCommand(person);","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"        Person person \u003d new Person(id, name, gender, phone, email, address, tagList);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"xhphoong":20,"johnbenedictyan":3,"-":56}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"     * @param model model","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"    public Command parseCommand(String userInput, Model model) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"            String uidToBeUsed \u003d model.getNextUid().toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"            String newArguments \u003d \" \" + PREFIX_UID + uidToBeUsed + arguments;","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"            return new AddCommandParser().parse(newArguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xhphoong":7,"-":74}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"    public static final Prefix PREFIX_CATEGORY \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    public static final Prefix PREFIX_UID \u003d new Prefix(\"id/\");","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"g/\");","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"    public static final Prefix PREFIX_DATE_AND_TIME \u003d new Prefix(\"dt/\");","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"xhphoong":4,"johnbenedictyan":1,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_UID);","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_UID)","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"        Uid id \u003d ParserUtil.parseUid(argMultimap.getValue(PREFIX_UID).get());","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"        return new DeleteCommand(id);","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"     * in the given","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"johnbenedictyan":22,"-":22}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_TIME;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_UID, PREFIX_CATEGORY, PREFIX_NAME, PREFIX_GENDER,","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"                        PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_DATE_AND_TIME, PREFIX_TAG);","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"        Uid uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"        if (argMultimap.getValue(PREFIX_UID).isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"            uid \u003d ParserUtil.parseUid(argMultimap.getValue(PREFIX_UID).get());","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"        if (argMultimap.getValue(PREFIX_CATEGORY).isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"            editPersonDescriptor.setCategory(ParserUtil.parseCategory(argMultimap.getValue(PREFIX_CATEGORY).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"            editPersonDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"        parseDatesTimesForEdit(argMultimap.getAllValues(PREFIX_DATE_AND_TIME))","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"                .ifPresent(editPersonDescriptor::setDatesTimes);","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"        return new EditCommand(uid, editPersonDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code tags} is non-empty.","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"     * parsed into a","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"     * Parses {@code Collection\u003cString\u003e datesTimes} into a {@code List\u003cDateTime\u003e} if {@code dateTimes} is non-empty.","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"xhphoong"},"content":"     * {@code List\u003cDateTime\u003e} containing zero tags.","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"xhphoong"},"content":"    private Optional\u003cList\u003cDateTime\u003e\u003e parseDatesTimesForEdit(Collection\u003cString\u003e datesTimes) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"xhphoong"},"content":"        assert datesTimes !\u003d null;","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"xhphoong"},"content":"        if (datesTimes.isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"xhphoong"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"xhphoong"},"content":"        Collection\u003cString\u003e dateTimeList \u003d datesTimes.size() \u003d\u003d 1 \u0026\u0026 datesTimes.contains(\"\")","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"xhphoong"},"content":"                ? Collections.emptyList() : datesTimes;","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"xhphoong"},"content":"        return Optional.of(ParserUtil.parseDatesTimes(dateTimeList));","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"},{"lineNumber":119,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"xhphoong":41,"johnbenedictyan":6,"-":72}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":" * Contains utility methods used for parsing strings in the various *Parser","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":" * classes.","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"     * and trailing whitespaces will be","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"     *                        unsigned integer).","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"     * Parses a {@code String id} into a {@code Uid}.","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws ParseException if the given {@code id} is invalid.","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"    public static Uid parseUid(String id) throws ParseException {","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"        String trimmedId \u003d id.trim();","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"        if (!Uid.isValidUid(trimmedId)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"            throw new ParseException(Uid.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"        return new Uid(trimmedId);","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"     * Parses a {@code String category} into a {@code category}.","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"     * @throws ParseException if the given {@code category} is invalid.","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"    public static String parseCategory(String category) throws ParseException {","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(category);","lastModifiedDate":"2022-10-07"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"        String trimmedCategory \u003d category.trim();","lastModifiedDate":"2022-10-07"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"        if (!(category.equals(\"P\") || category.equals(\"N\"))) {","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"            throw new ParseException(\"Category can only be P or N. P for patient, N for nurse.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"        return trimmedCategory;","lastModifiedDate":"2022-10-07"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":91,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"     * Parses a {@code String dateTime} into a {@code DateTime}.","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"xhphoong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"     * @throws ParseException if the given {@code dateTime} is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"xhphoong"},"content":"    public static DateTime parseDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"        if (!DateTime.isValidDateTime(trimmedDateTime)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"            throw new ParseException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"        return new DateTime(trimmedDateTime);","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":108,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":109,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":110,"author":{"gitId":"xhphoong"},"content":"     * Parses {@code Collection\u003cString\u003e dateTime} into a {@code List\u003cDateTime\u003e}.","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":112,"author":{"gitId":"xhphoong"},"content":"    public static List\u003cDateTime\u003e parseDatesTimes(Collection\u003cString\u003e dateTimes) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(dateTimes);","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"xhphoong"},"content":"        List\u003cDateTime\u003e dateTimeList \u003d new ArrayList\u003cDateTime\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"xhphoong"},"content":"        for (String dateTime : dateTimes) {","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"xhphoong"},"content":"            dateTimeList.add(parseDateTime(dateTime));","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":118,"author":{"gitId":"xhphoong"},"content":"        return dateTimeList;","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":120,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":121,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"xhphoong"},"content":"     * Parses a {@code String gender} into a {@code Gender}.","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"xhphoong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"xhphoong"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"xhphoong"},"content":"     * @throws ParseException if the given {@code gender} is invalid.","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"xhphoong"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(gender);","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"xhphoong"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"xhphoong"},"content":"        if (!Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"xhphoong"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"xhphoong"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"xhphoong":63,"johnbenedictyan":23,"-":121}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"     * Get the next uid for the next person to be added.","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"    Uid getNextUid();","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"xhphoong":6,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"import seedu.address.logic.UidManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"    private final UidManager uidManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"        this.uidManager \u003d new UidManager(this.addressBook.getPersonList());","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"xhphoong"},"content":"    public Uid getNextUid() {","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"xhphoong"},"content":"        return uidManager.produceUid();","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xhphoong":9,"-":149}},{"path":"src/main/java/seedu/address/model/person/DateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":" * Represents a Patient\u0027s home-visit\u0027s date and time.","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDateTime(String)}","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"public class DateTime {","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date and time should be in yyyy-MM-ddTHH:mm.\\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"            + \"For example, 2022-11-11T17:35\";","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"     * The Date can only be in yyyy-mm-ddTHH:mm format without any space.","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // @@author xhphoong-reused","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Reused from https://mkyong.com/regular-expressions/how-to-validate-date-with-regular-expression/ and","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Reused from https://www.geeksforgeeks.org/how-to-validate-time-in-24-hour-format-using-regular-expression/","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"((?:19|20)[0-9][0-9])-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])\"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"T\" + \"([01]?[0-9]|2[0-3]):[0-5][0-9]\";","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // @@author","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"    public final LocalDateTime dateTime;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"    private final String dateTimeInString;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"     * Constructs a {@code DateTime}.","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"     * @param dateTime A valid datetime.","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"    public DateTime(String dateTime) {","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"        checkArgument(isValidDateTime(dateTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"        this.dateTime \u003d LocalDateTime.parse(dateTime + \":00\");","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"        this.dateTimeInString \u003d dateTime;","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"    public String getString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"        return this.dateTimeInString;","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"    public static boolean isValidDateTime(String test) {","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"                || (other instanceof DateTime // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"                \u0026\u0026 dateTime.equals(((DateTime) other).dateTime)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"        return dateTime.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"xhphoong":66,"-":6}},{"path":"src/main/java/seedu/address/model/person/DateTimeComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":" * Represents a comparator to compare date and time.","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"public class DateTimeComparator implements Comparator\u003cDateTime\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"     * Compare the home visits\u0027 date and time.","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"     * @param dateTime1 the first object to be compared.","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"     * @param dateTime2 the second object to be compared.","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"    public int compare(DateTime dateTime1, DateTime dateTime2) {","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"        LocalDateTime d1 \u003d dateTime1.dateTime;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"        LocalDateTime d2 \u003d dateTime2.dateTime;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"        if (d1.isBefore(d2)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"            return -1;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"        } else if (d1.isAfter(d2)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"            return 1;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"            return 0;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"xhphoong":30}},{"path":"src/main/java/seedu/address/model/person/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":" * Represents a Person\u0027s gender in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGender(String)}","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"public class Gender {","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Gender can only be F or M, F for female, M for male\";","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"    private static final String FEMALE_SYMBOL \u003d \"F\";","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"    private static final String MALE_SYMBOL \u003d \"M\";","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"     * The gender can only be F or M.","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\" + FEMALE_SYMBOL + \"|\" + MALE_SYMBOL + \"]\";","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"    public final String gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"     * Constructs a {@code Gender}.","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"     * @param gender A valid gender.","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"    public Gender(String gender) {","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"        requireNonNull(gender);","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"     * Returns true if a given string is a valid gender.","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"    public static boolean isValidGender(String test) {","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"        return this.gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"                || (other instanceof Gender // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"                \u0026\u0026 gender.equals(((Gender) other).gender)); // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"        return gender.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"xhphoong":60}},{"path":"src/main/java/seedu/address/model/person/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":" * Represents a patient that requires home-visit in Healthcare Xpress book.","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"public class Patient extends Person {","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"    private static final String MESSAGE_FOR_EMPTY_DATETIME \u003d \"Home Visit date and time has not been set yet.\";","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"    private final List\u003cDateTime\u003e dateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"    public Patient(Uid uid, Name name, Gender gender, Phone phone, Email email, Address address,","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"                   Set\u003cTag\u003e tags, List\u003cDateTime\u003e dateTime) {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"        super(uid, name, gender, phone, email, address, tags);","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"        requireAllNonNull(dateTime);","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"        this.dateTimes.addAll(dateTime);","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"    public String getCategory() {","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"        return \"P\";","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"    public String getCategoryIndicator() {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"        return \"patient\";","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"        return super.hashCode() + Objects.hash(dateTimes);","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"     * Returns a sorted date and time list","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"    public List\u003cDateTime\u003e getDatesTimes() {","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"        DateTimeComparator comp \u003d new DateTimeComparator();","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"        Collections.sort(this.dateTimes, comp);","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"        return this.dateTimes;","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"    public String getDatesTimesInString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"        String dateTimeList \u003d \"\";","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"        if (this.dateTimes.isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"            dateTimeList \u003d MESSAGE_FOR_EMPTY_DATETIME;","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"            return dateTimeList;","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"        DateTimeComparator comp \u003d new DateTimeComparator();","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"        Collections.sort(this.dateTimes, comp);","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"        for (DateTime datetime: this.dateTimes) {","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"            dateTimeList \u003d dateTimeList + datetime.toString() + \" , \";","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"        return dateTimeList;","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"    public String toString() {","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"        String dateTimeList \u003d getDatesTimesInString();","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"        return \"Category: P \" + super.toString()","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"                + \"; Home Visits Date and Time :\" + dateTimeList;","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"xhphoong":80}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":" * Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":" * immutable.","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"    private final Uid uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"    private final Gender gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"    public Person(Uid uid, Name name, Gender gender, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"        requireAllNonNull(uid, name, phone, email, address, tags);","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the id","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"    public Uid getUid() {","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"        return uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"    public Gender getGender() {","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"        return gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"    public String getCategory() {","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"        return null;","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"    public String getCategoryIndicator() {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"        return \"person\";","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns an immutable tag set, which throws","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"xhphoong"},"content":"        return otherPerson !\u003d null \u0026\u0026 otherPerson.getUid().equals(getUid());","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"xhphoong"},"content":"        return otherPerson.getUid().equals(getUid())","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"johnbenedictyan"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"xhphoong"},"content":"                \u0026\u0026 otherPerson.getGender().equals(getGender())","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"xhphoong"},"content":"        return Objects.hash(uid, name, gender, phone, email, address, tags);","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"xhphoong"},"content":"        builder.append(\"Uid: \")","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"xhphoong"},"content":"                .append(getUid())","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"johnbenedictyan"},"content":"                .append(\"; Name: \")","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"johnbenedictyan"},"content":"                .append(getName())","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"xhphoong"},"content":"                .append(\"; Gender: \")","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"xhphoong"},"content":"                .append(getGender())","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xhphoong":28,"johnbenedictyan":12,"-":114}},{"path":"src/main/java/seedu/address/model/person/Uid.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":" * Represents a Person\u0027s Uid in the records system.","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidUid(String)}","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"public class Uid implements Comparable\u003cUid\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Ids should only contain numeric characters,\"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"            + \" and it should not be blank\";","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    /*","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"     * The first character of the id must not be a whitespace,","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[0-9]*$\";","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"    public final Long uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"     * Constructs a {@code Uid}.","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     * @param inputId A valid id.","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    public Uid(Long inputId) {","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"        requireNonNull(inputId);","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"        uid \u003d inputId;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"     * Constructs a {@code Uid}.","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"     * @param stringId A valid id.","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"    public Uid(String stringId) {","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"        requireNonNull(stringId);","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"        uid \u003d Long.parseLong(stringId);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the id","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"    public Long getUid() {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"        return uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns true if a given string is a valid id.","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"    public static boolean isValidUid(String test) {","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"        return uid.toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"                || (other instanceof Uid // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"                        \u0026\u0026 uid.equals(((Uid) other).uid)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"        return uid.hashCode();","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"johnbenedictyan"},"content":"    public int compareTo(Uid o) {","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"        return uid.compareTo(o.getUid());","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"xhphoong":9,"johnbenedictyan":67}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"        System.out.println(editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xhphoong":2,"-":137}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"    public static Person[] getSamplePatients() {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"            new Patient(new Uid(\"1\"), new Name(\"Alex Yeoh\"), new Gender(\"M\"), new Phone(\"87438807\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"                    new Email(\"alexyeoh@example.com\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"                    getTagSet(\"friends\"), getDatesTimesList(\"2022-11-11T14:00\")),","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"            new Patient(new Uid(\"2\"), new Name(\"Bernice Yu\"), new Gender(\"F\"), new Phone(\"99272758\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"                    new Email(\"berniceyu@example.com\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"                    getTagSet(\"colleagues\", \"friends\"), getDatesTimesList(\"2022-12-12T20:00\")),","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"            new Patient(new Uid(\"3\"), new Name(\"Charlotte Oliveiro\"), new Gender(\"F\"), new Phone(\"93210283\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"                    new Email(\"charlotte@example.com\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"                    getTagSet(\"neighbours\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"                    getDatesTimesList(\"2022-10-10T09:00\", \"2022-09-24T08:00\")),","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"            new Patient(new Uid(\"4\"), new Name(\"David Li\"), new Gender(\"M\"), new Phone(\"91031282\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"                    new Email(\"lidavid@example.com\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"                    getTagSet(\"family\"), getDatesTimesList(\"2022-10-10T09:00\", \"2022-12-24T08:00\")),","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"            new Patient(new Uid(\"5\"), new Name(\"Irfan Ibrahim\"), new Gender(\"M\"), new Phone(\"92492021\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"                    new Email(\"irfan@example.com\"), new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"                    getTagSet(\"classmates\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"                    getDatesTimesList(\"2022-10-10T09:00\", \"2022-09-24T08:00\", \"2023-01-13T11:00\")),","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"            new Patient(new Uid(\"6\"), new Name(\"Roy Balakrishnan\"), new Gender(\"M\"), new Phone(\"92624417\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"                    new Email(\"royb@example.com\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"                    getTagSet(\"colleagues\"), getDatesTimesList(\"2022-12-12T13:00\"))","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"        for (Person samplePerson : getSamplePatients()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"     * Returns a datesTimes list containing the list of strings given.","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"    public static List\u003cDateTime\u003e getDatesTimesList(String...strings) {","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"                .map(DateTime::new)","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"xhphoong":35,"johnbenedictyan":1,"-":40}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedDateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":" * Jackson-friendly version of {@link DateTime}.","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"class JsonAdaptedDateTime {","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"    private final String dateTime;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"     * Constructs a {@code JsonAdaptedDateTime} with the given {@code DateTime}.","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"    public JsonAdaptedDateTime(String dateTime) {","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"     * Converts a given {@code Date} into this class for Jackson use.","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"    public JsonAdaptedDateTime(DateTime source) {","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"        dateTime \u003d source.getString();","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"    @JsonValue","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"    public String getDateTime() {","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"        return dateTime;","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"     * Converts this Jackson-friendly adapted date object into the model\u0027s {@code Date} object.","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted date.","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"    public DateTime toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"        if (!DateTime.isValidDateTime(dateTime)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"            throw new IllegalValueException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"        return new DateTime(dateTime);","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"xhphoong":51}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"import com.fasterxml.jackson.annotation.JsonTypeInfo.Id;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"    private final Long uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"    private final String category;","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"    private final String gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"    private final List\u003cJsonAdaptedDateTime\u003e dateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"uid\") Long uid, @JsonProperty(\"name\") String name,","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"            @JsonProperty(\"category\") String category,","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"            @JsonProperty(\"gender\") String gender, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"            @JsonProperty(\"dateTimes\") List\u003cJsonAdaptedDateTime\u003e dateTime,","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"        this.category \u003d category;","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"        if (dateTime !\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"            this.dateTimes.addAll(dateTime);","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"        category \u003d source.getCategory();","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"        boolean isPatient \u003d category.equals(\"P\");","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"        if (isPatient) {","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"            dateTimes.addAll(((Patient) source).getDatesTimes().stream()","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"                    .map(JsonAdaptedDateTime::new)","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"                    .collect(Collectors.toList()));","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"        uid \u003d source.getUid().uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"        gender \u003d source.getGender().gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"     * {@code Person} object.","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"johnbenedictyan"},"content":"     *                               the adapted person.","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"xhphoong"},"content":"        final List\u003cDateTime\u003e patientHomeVisitDatesTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"xhphoong"},"content":"        for (JsonAdaptedDateTime dateTime : dateTimes) {","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"xhphoong"},"content":"            patientHomeVisitDatesTimes.add(dateTime.toModelType());","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"xhphoong"},"content":"        if (uid \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"johnbenedictyan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Id.class.getSimpleName()));","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"xhphoong"},"content":"        final Uid modelUid \u003d new Uid(uid);","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"xhphoong"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"xhphoong"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"xhphoong"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"xhphoong"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"xhphoong"},"content":"        final Gender modelGender \u003d new Gender(gender);","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"xhphoong"},"content":"        final List\u003cDateTime\u003e modelDatesTimes \u003d patientHomeVisitDatesTimes;","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":162,"author":{"gitId":"xhphoong"},"content":"        if (category !\u003d null) {","lastModifiedDate":"2022-10-07"},{"lineNumber":163,"author":{"gitId":"xhphoong"},"content":"            if (!(category.equals(\"P\") | category.equals(\"N\"))) {","lastModifiedDate":"2022-10-07"},{"lineNumber":164,"author":{"gitId":"xhphoong"},"content":"                throw new IllegalValueException(\"Category can only be P or N. P for Patient, N for nurse\");","lastModifiedDate":"2022-10-07"},{"lineNumber":165,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-07"},{"lineNumber":166,"author":{"gitId":"xhphoong"},"content":"            return new Patient(modelUid, modelName, modelGender, modelPhone, modelEmail,","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"xhphoong"},"content":"                    modelAddress, modelTags, modelDatesTimes);","lastModifiedDate":"2022-10-09"},{"lineNumber":168,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":169,"author":{"gitId":"xhphoong"},"content":"        return new Person(modelUid, modelName, modelGender, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":172,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"xhphoong":59,"johnbenedictyan":9,"-":105}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"The list contains duplicate %1$s.\";","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"    public static final String PATIENT_IDENTIFIER \u003d \"patient(s)\";","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"    public static final String PERSON_IDENTIFIER \u003d \"person(s)\";","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"                if (person instanceof Patient) {","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"                    throw new IllegalValueException(String.format(MESSAGE_DUPLICATE_PERSON, PATIENT_IDENTIFIER));","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"                }","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"                throw new IllegalValueException(String.format(MESSAGE_DUPLICATE_PERSON, PERSON_IDENTIFIER));","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"xhphoong":8,"-":58}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"    private static final String NOT_APPLICABLE \u003d \"NA\";","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"    private FlowPane category;","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"    @FXML","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"    private Label uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"    @FXML","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"    private Label dateTimes;","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"    @FXML","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"    private Label gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"    @FXML","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"        if (person instanceof Patient) {","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"            dateTimes.setText(((Patient) person).getDatesTimesInString());","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"            dateTimes.setText(NOT_APPLICABLE);","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"        uid.setText(\"[\" + person.getUid().toString() + \"]\");","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"        gender.setText(person.getGender().gender);","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"        category.getChildren().add(new Label(person.getCategory()));","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"xhphoong":19,"-":77}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"        \u003cFlowPane fx:id\u003d\"category\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"      \u003cLabel fx:id\u003d\"uid\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$uid\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"      \u003cLabel fx:id\u003d\"gender\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gender\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"      \u003cLabel fx:id\u003d\"dateTimes\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xhphoong":4,"-":36}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_PATIENT;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UID_DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"    // @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"    // public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"    //     String deleteCommand \u003d \"delete id/9\";","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"    //     assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_UID);","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"    // }","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + UID_DESC_AMY + CATEGORY_DESC_PATIENT","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"                + NAME_DESC_AMY + GENDER_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"xhphoong":5,"johnbenedictyan":6,"-":154}},{"path":"src/test/java/seedu/address/logic/UidManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package seedu.address.logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"public class UidManagerTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    public void execute_produceUid_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"        UidManager manager \u003d new UidManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"        ArrayList\u003cUid\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"        for (int i \u003d 0; i \u003c 100; i++) {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"            arr.add(manager.produceUid());","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"        List\u003cUid\u003e arr2 \u003d arr.stream().distinct().collect(Collectors.toList());","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"        assertEquals(arr.size(), arr2.size());","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"johnbenedictyan":25}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, \"patient\" , validPerson), expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"        String personIdentifier \u003d \"\";","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"        if (personInList instanceof Patient) {","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"            personIdentifier \u003d \"patient\";","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"            personIdentifier \u003d \"person\";","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"        assertCommandFailure(new AddCommand(personInList), model, String.format(AddCommand.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"                personIdentifier));","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"xhphoong":10,"-":43}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"    public void constructor_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"    public void execute_patientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, \"patient\", validPerson),","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"    public void execute_duplicatePatient_throwsCommandException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"        assertThrows(CommandException.class, String.format(AddCommand.MESSAGE_DUPLICATE_PERSON, \"patient\"), () -\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"                addCommand.execute(modelStub));","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"xhphoong"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"xhphoong"},"content":"        public Uid getNextUid() {","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"xhphoong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"xhphoong":13,"-":189}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_TIME;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"    public static final String VALID_PATIENT_CATEGORY \u003d \"P\";","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"    public static final String VALID_NURSE_CATEGORY \u003d \"N\";","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String VALID_UID_AMY \u003d \"10\";","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String VALID_UID_BOB \u003d \"11\";","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"    public static final String VALID_GENDER_AMY \u003d \"F\";","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"    public static final String VALID_GENDER_BOB \u003d \"M\";","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"    public static final String VALID_DATETIME_AMY \u003d \"2022-11-11T15:30\";","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"    public static final String VALID_DATETIME_BOB \u003d \"2022-10-24T09:00\";","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"    public static final String CATEGORY_DESC_PATIENT \u003d \" \" + PREFIX_CATEGORY + VALID_PATIENT_CATEGORY;","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"    public static final String CATEGORY_DESC_NURSE \u003d \" \" + PREFIX_CATEGORY + VALID_NURSE_CATEGORY;","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String UID_DESC_AMY \u003d \" \" + PREFIX_UID + VALID_UID_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String UID_DESC_BOB \u003d \" \" + PREFIX_UID + VALID_UID_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"    public static final String GENDER_DESC_AMY \u003d \" \" + PREFIX_GENDER + VALID_GENDER_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"    public static final String GENDER_DESC_BOB \u003d \" \" + PREFIX_GENDER + VALID_GENDER_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"    public static final String DATETIME_DESC_AMY \u003d \" \" + PREFIX_DATE_AND_TIME + VALID_DATETIME_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"    public static final String DATETIME_DESC_BOB \u003d \" \" + PREFIX_DATE_AND_TIME + VALID_DATETIME_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"    public static final String INVALID_CATEGORY_DESC \u003d \" \" + PREFIX_CATEGORY + \"patient\"; // only allowed P or N","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String INVALID_UID_DESC \u003d \" \" + PREFIX_UID + \"1+\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"    public static final String INVALID_GENDER_DESC \u003d \" \" + PREFIX_GENDER + \"FM\"; // only allowed F or M, either one","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"    public static final String INVALID_DATETIME_DESC \u003d \" \" + PREFIX_DATE_AND_TIME","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"            + \"2022/11/11 12.00PM\"; // wrong format for date and time","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withCategory(VALID_PATIENT_CATEGORY).withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"                .withGender(VALID_GENDER_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"                .withAddress(VALID_ADDRESS_AMY).withDatesTimes(VALID_DATETIME_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withCategory(VALID_PATIENT_CATEGORY)","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"                .withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"                .withAddress(VALID_ADDRESS_BOB).withDatesTimes(VALID_DATETIME_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"xhphoong":28,"johnbenedictyan":6,"-":124}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"    public void execute_validUidUnfilteredList_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(personToDelete.getUid());","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"        String expectedMessage \u003d \"\";","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"        if (personToDelete instanceof Patient) {","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"            expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, \"patient\", personToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"            expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, \"person\", personToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"    public void execute_invalidUidUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"        Uid outOfBoundUid \u003d new Uid(99999L);","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundUid);","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_UID);","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"    public void execute_validUidFilteredList_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(personToDelete.getUid());","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"        String expectedMessage \u003d \"\";","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"        if (personToDelete instanceof Patient) {","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"            expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, \"patient\", personToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"            expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, \"person\", personToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"    public void execute_invalidUidFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"        Person onlyPerson \u003d model.getAddressBook().getPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new Uid(onlyPerson.getUid().uid + 1L));","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_UID);","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(new Uid(1L));","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(new Uid(2L));","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"johnbenedictyan"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(new Uid(1L));","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"xhphoong":16,"johnbenedictyan":13,"-":94}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"        Person editedPerson \u003d new PersonBuilder().withUid(firstPerson.getUid().toString()).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"        EditCommand editCommand \u003d new EditCommand(firstPerson.getUid(), descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"        String expectedMessage \u003d \"\";","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"        if (editedPerson instanceof Patient) {","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"            expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, \"patient\", editedPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"            expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, \"person\", editedPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"        EditCommand editCommand \u003d new EditCommand(lastPerson.getUid(), descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"        String expectedMessage \u003d \"\";","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"        if (editedPerson instanceof Patient) {","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"            expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, \"patient\", editedPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"            expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, \"person\", editedPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"        EditCommand editCommand \u003d new EditCommand(editedPerson.getUid(), new EditPersonDescriptor());","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"        String expectedMessage \u003d \"\";","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"        if (editedPerson instanceof Patient) {","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"            expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, \"patient\", editedPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"            expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, \"person\", editedPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"        EditCommand editCommand \u003d new EditCommand(personInFilteredList.getUid(),","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"xhphoong"},"content":"        String expectedMessage \u003d \"\";","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"xhphoong"},"content":"        if (editedPerson instanceof Patient) {","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"xhphoong"},"content":"            expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, \"patient\", editedPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"xhphoong"},"content":"            expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, \"person\", editedPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"xhphoong"},"content":"        Person secondPerson \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"xhphoong"},"content":"        EditCommand editCommand \u003d new EditCommand(secondPerson.getUid(), descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"xhphoong"},"content":"        String expectedMessage \u003d \"\";","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"xhphoong"},"content":"        if (firstPerson instanceof Patient) {","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"xhphoong"},"content":"            expectedMessage \u003d String.format(EditCommand.MESSAGE_DUPLICATE_PERSON, \"patient\");","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"xhphoong"},"content":"            expectedMessage \u003d String.format(EditCommand.MESSAGE_DUPLICATE_PERSON, \"person\");","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"xhphoong"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"xhphoong"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"xhphoong"},"content":"        EditCommand editCommand \u003d new EditCommand(firstPerson.getUid(),","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"xhphoong"},"content":"        String expectedMessage \u003d \"\";","lastModifiedDate":"2022-10-09"},{"lineNumber":149,"author":{"gitId":"xhphoong"},"content":"        if (personInList instanceof Patient) {","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"xhphoong"},"content":"            expectedMessage \u003d String.format(EditCommand.MESSAGE_DUPLICATE_PERSON, \"patient\");","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"xhphoong"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":152,"author":{"gitId":"xhphoong"},"content":"            expectedMessage \u003d String.format(EditCommand.MESSAGE_DUPLICATE_PERSON, \"person\");","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":154,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":155,"author":{"gitId":"xhphoong"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2022-10-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"xhphoong"},"content":"    /*public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":164,"author":{"gitId":"xhphoong"},"content":"    }*/","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"xhphoong"},"content":"    public void execute_invalidUidUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"xhphoong"},"content":"        Uid outOfBoundUid \u003d new Uid(99999L);","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"xhphoong"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"xhphoong"},"content":"        EditCommand deleteCommand \u003d new EditCommand(outOfBoundUid, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"xhphoong"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_UID);","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":180,"author":{"gitId":"xhphoong"},"content":"    /*public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":190,"author":{"gitId":"xhphoong"},"content":"    }*/","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"xhphoong"},"content":"    public void execute_invalidUidFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"xhphoong"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"xhphoong"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"xhphoong"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"xhphoong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":197,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"xhphoong"},"content":"        Person onlyPerson \u003d model.getAddressBook().getPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":199,"author":{"gitId":"xhphoong"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":200,"author":{"gitId":"xhphoong"},"content":"        EditCommand editCommand \u003d new EditCommand(new Uid(onlyPerson.getUid().uid + 1L), descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":201,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":202,"author":{"gitId":"xhphoong"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_UID);","lastModifiedDate":"2022-10-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":207,"author":{"gitId":"xhphoong"},"content":"        Person firstPerson \u003d model.getAddressBook().getPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":208,"author":{"gitId":"xhphoong"},"content":"        Person secondPerson \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":209,"author":{"gitId":"xhphoong"},"content":"        final EditCommand standardCommand \u003d new EditCommand(firstPerson.getUid(), DESC_AMY);","lastModifiedDate":"2022-10-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":213,"author":{"gitId":"xhphoong"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(firstPerson.getUid(), copyDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":226,"author":{"gitId":"xhphoong"},"content":"        assertFalse(standardCommand.equals(new EditCommand(secondPerson.getUid(), DESC_AMY)));","lastModifiedDate":"2022-10-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":229,"author":{"gitId":"xhphoong"},"content":"        assertFalse(standardCommand.equals(new EditCommand(firstPerson.getUid(), DESC_BOB)));","lastModifiedDate":"2022-10-10"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"xhphoong":82,"-":150}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_NURSE;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_PATIENT;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATETIME_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATETIME_DESC_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_CATEGORY_DESC;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATETIME_DESC;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_UID_DESC;","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UID_DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UID_DESC_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PATIENT_CATEGORY;","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UID_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + UID_DESC_BOB + CATEGORY_DESC_PATIENT + NAME_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"                + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"                + ADDRESS_DESC_BOB + DATETIME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"        // multiple categories - last category accepted","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"        assertParseSuccess(parser, CATEGORY_DESC_NURSE + UID_DESC_BOB + CATEGORY_DESC_PATIENT + NAME_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"                + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"                + ADDRESS_DESC_BOB + DATETIME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"        assertParseSuccess(parser, UID_DESC_BOB + CATEGORY_DESC_PATIENT + NAME_DESC_AMY + NAME_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"                + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"                + ADDRESS_DESC_BOB + DATETIME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"        // multiple genders - last gender accepted","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"        assertParseSuccess(parser, UID_DESC_BOB + CATEGORY_DESC_PATIENT + NAME_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"                + GENDER_DESC_AMY + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"                + ADDRESS_DESC_BOB + DATETIME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"xhphoong"},"content":"        assertParseSuccess(parser, UID_DESC_BOB + CATEGORY_DESC_PATIENT + NAME_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"                + GENDER_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"                + ADDRESS_DESC_BOB + DATETIME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"        assertParseSuccess(parser, UID_DESC_BOB + CATEGORY_DESC_PATIENT + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"                + ADDRESS_DESC_BOB + DATETIME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"        assertParseSuccess(parser, UID_DESC_BOB + CATEGORY_DESC_PATIENT + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"                + ADDRESS_DESC_BOB + DATETIME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"xhphoong"},"content":"        // multiple dateTimes - all accepted","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"        Person expectedPersonMultipleDatesTimes \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"xhphoong"},"content":"                .withDatesTimes(VALID_DATETIME_BOB, VALID_DATETIME_AMY).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"xhphoong"},"content":"        assertParseSuccess(parser, UID_DESC_BOB + CATEGORY_DESC_PATIENT + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"xhphoong"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATETIME_DESC_AMY + DATETIME_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"xhphoong"},"content":"                        + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleDatesTimes));","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":115,"author":{"gitId":"xhphoong"},"content":"        assertParseSuccess(parser, UID_DESC_BOB + CATEGORY_DESC_PATIENT + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"xhphoong"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATETIME_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"xhphoong"},"content":"                        + TAG_DESC_HUSBAND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"xhphoong"},"content":"        // zero dateTimes","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"xhphoong"},"content":"        Person expectedPersonNoDatesTimes \u003d new PersonBuilder(AMY).withDatesTimes().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"xhphoong"},"content":"        assertParseSuccess(parser, UID_DESC_AMY + CATEGORY_DESC_PATIENT + NAME_DESC_AMY + GENDER_DESC_AMY","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"xhphoong"},"content":"                new AddCommand(expectedPersonNoDatesTimes));","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"xhphoong"},"content":"        Person expectedPersonNoTag \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"xhphoong"},"content":"        assertParseSuccess(parser, UID_DESC_AMY + CATEGORY_DESC_PATIENT + NAME_DESC_AMY + GENDER_DESC_AMY","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + DATETIME_DESC_AMY,","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"xhphoong"},"content":"                new AddCommand(expectedPersonNoTag));","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"johnbenedictyan"},"content":"        // missing uid prefix","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, VALID_UID_BOB + NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"xhphoong"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"xhphoong"},"content":"        // missing category prefix","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, UID_DESC_BOB + VALID_PATIENT_CATEGORY + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, UID_DESC_BOB + CATEGORY_DESC_PATIENT + VALID_NAME_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":151,"author":{"gitId":"xhphoong"},"content":"        // missing gender prefix","lastModifiedDate":"2022-10-06"},{"lineNumber":152,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, UID_DESC_BOB + CATEGORY_DESC_PATIENT + NAME_DESC_BOB + VALID_GENDER_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, UID_DESC_BOB + CATEGORY_DESC_PATIENT + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"xhphoong"},"content":"                + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, UID_DESC_BOB + CATEGORY_DESC_PATIENT + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, UID_DESC_BOB + CATEGORY_DESC_PATIENT + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, VALID_UID_BOB + VALID_PATIENT_CATEGORY + VALID_NAME_BOB + VALID_GENDER_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"xhphoong"},"content":"                + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"johnbenedictyan"},"content":"        // invalid id","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, INVALID_UID_DESC + CATEGORY_DESC_PATIENT + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"xhphoong"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATETIME_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"johnbenedictyan"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Uid.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":180,"author":{"gitId":"xhphoong"},"content":"        // invalid category","lastModifiedDate":"2022-10-09"},{"lineNumber":181,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, UID_DESC_BOB + INVALID_CATEGORY_DESC + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"xhphoong"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATETIME_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"xhphoong"},"content":"                        + TAG_DESC_FRIEND, \"Category can only be P or N. P for patient, N for nurse.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, UID_DESC_BOB + CATEGORY_DESC_PATIENT + INVALID_NAME_DESC + GENDER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"xhphoong"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATETIME_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"xhphoong"},"content":"                        + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"xhphoong"},"content":"        // invalid gender","lastModifiedDate":"2022-10-06"},{"lineNumber":191,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, UID_DESC_BOB + CATEGORY_DESC_PATIENT + NAME_DESC_BOB + INVALID_GENDER_DESC","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"xhphoong"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATETIME_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"xhphoong"},"content":"                        + TAG_DESC_FRIEND, Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, UID_DESC_BOB + CATEGORY_DESC_PATIENT + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":197,"author":{"gitId":"xhphoong"},"content":"                        + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATETIME_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"xhphoong"},"content":"                        + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, UID_DESC_BOB + CATEGORY_DESC_PATIENT + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":202,"author":{"gitId":"xhphoong"},"content":"                        + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB + DATETIME_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-10"},{"lineNumber":203,"author":{"gitId":"xhphoong"},"content":"                        + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":206,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, UID_DESC_BOB + CATEGORY_DESC_PATIENT + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":207,"author":{"gitId":"xhphoong"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC + DATETIME_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-10"},{"lineNumber":208,"author":{"gitId":"xhphoong"},"content":"                        + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":209,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":210,"author":{"gitId":"xhphoong"},"content":"        // invalid datesTimes","lastModifiedDate":"2022-10-09"},{"lineNumber":211,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, UID_DESC_BOB + CATEGORY_DESC_PATIENT + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":212,"author":{"gitId":"xhphoong"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + INVALID_DATETIME_DESC + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-10"},{"lineNumber":213,"author":{"gitId":"xhphoong"},"content":"                        + TAG_DESC_FRIEND, DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":216,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, UID_DESC_BOB + CATEGORY_DESC_PATIENT + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":217,"author":{"gitId":"xhphoong"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATETIME_DESC_BOB + INVALID_TAG_DESC","lastModifiedDate":"2022-10-10"},{"lineNumber":218,"author":{"gitId":"xhphoong"},"content":"                        + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":221,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, UID_DESC_BOB + CATEGORY_DESC_PATIENT + INVALID_NAME_DESC + GENDER_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":222,"author":{"gitId":"xhphoong"},"content":"                 + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC + DATETIME_DESC_BOB,","lastModifiedDate":"2022-10-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":226,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + UID_DESC_BOB + CATEGORY_DESC_PATIENT + NAME_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":227,"author":{"gitId":"xhphoong"},"content":"                        + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATETIME_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":228,"author":{"gitId":"xhphoong"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-10"},{"lineNumber":229,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"xhphoong":120,"johnbenedictyan":8,"-":104}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UID_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"        ModelManager modelManager \u003d new ModelManager(); //to create uid for new person to be added","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"            modelManager.getNextUid();","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"        Person person \u003d new PersonBuilder().withUid(\"10\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person), modelManager);","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD, modelManager) instanceof ClearCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\", modelManager) instanceof ClearCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + PREFIX_UID + VALID_UID_AMY, modelManager);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"        assertEquals(new DeleteCommand(new Uid(VALID_UID_AMY)), command);","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"        descriptor.setPhone(new Phone(\"20039109\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \" + PREFIX_UID","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"                + VALID_UID_AMY + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor), modelManager);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"        assertEquals(new EditCommand(new Uid(VALID_UID_AMY), descriptor), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD, modelManager) instanceof ExitCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\", modelManager) instanceof ExitCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")),","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"                modelManager);","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"xhphoong"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD, modelManager) instanceof HelpCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\", modelManager) instanceof HelpCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD, modelManager) instanceof ListCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\", modelManager) instanceof ListCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"xhphoong"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"xhphoong"},"content":"            -\u003e parser.parseCommand(\"\", modelManager));","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"xhphoong"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"xhphoong"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\",","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"xhphoong"},"content":"                modelManager));","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"xhphoong":37,"johnbenedictyan":4,"-":79}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UID_DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UID_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"        assertParseSuccess(parser, UID_DESC_AMY, new DeleteCommand(new Uid(VALID_UID_AMY)));","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"johnbenedictyan":4,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UID_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UID_DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UID_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UID_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, UID_DESC_AMY, EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"-5\" + NAME_DESC_AMY, Uid.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"        //assertParseFailure(parser, \" \" + PREFIX_UID + \"0\" + NAME_DESC_AMY, Uid.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1 some random string\", Uid.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1 i/ string\", Uid.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + INVALID_NAME_DESC,","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"                Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + INVALID_GENDER_DESC,","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"xhphoong"},"content":"                Gender.MESSAGE_CONSTRAINTS); // invalid gender","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + INVALID_PHONE_DESC,","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"                Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + INVALID_EMAIL_DESC,","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"xhphoong"},"content":"                Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + INVALID_ADDRESS_DESC,","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"                Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + INVALID_TAG_DESC,","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"                Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY,","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"xhphoong"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC,","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"xhphoong"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY,","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"xhphoong"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND,","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"xhphoong"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"xhphoong"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"xhphoong"},"content":"        assertParseFailure(parser, \" \" + PREFIX_UID + \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"xhphoong"},"content":"                        + VALID_ADDRESS_AMY + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"xhphoong"},"content":"        String userInput \u003d UID_DESC_AMY + GENDER_DESC_AMY + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"xhphoong"},"content":"                .withGender(VALID_GENDER_AMY).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"xhphoong"},"content":"                .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"xhphoong"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Uid(VALID_UID_AMY), descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"xhphoong"},"content":"        String userInput \u003d UID_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"xhphoong"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Uid(VALID_UID_AMY), descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"xhphoong"},"content":"        String userInput \u003d UID_DESC_BOB + NAME_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"xhphoong"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Uid(VALID_UID_BOB), descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"xhphoong"},"content":"        // gender","lastModifiedDate":"2022-10-06"},{"lineNumber":161,"author":{"gitId":"xhphoong"},"content":"        userInput \u003d UID_DESC_BOB + GENDER_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"xhphoong"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withGender(VALID_GENDER_AMY).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":163,"author":{"gitId":"xhphoong"},"content":"        expectedCommand \u003d new EditCommand(new Uid(VALID_UID_BOB), descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"xhphoong"},"content":"        userInput \u003d UID_DESC_BOB + PHONE_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"xhphoong"},"content":"        expectedCommand \u003d new EditCommand(new Uid(VALID_UID_BOB), descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"xhphoong"},"content":"        userInput \u003d UID_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"xhphoong"},"content":"        expectedCommand \u003d new EditCommand(new Uid(VALID_UID_BOB), descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"xhphoong"},"content":"        userInput \u003d UID_DESC_BOB + ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"xhphoong"},"content":"        expectedCommand \u003d new EditCommand(new Uid(VALID_UID_BOB), descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"xhphoong"},"content":"        userInput \u003d UID_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"xhphoong"},"content":"        expectedCommand \u003d new EditCommand(new Uid(VALID_UID_BOB), descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"xhphoong"},"content":"        String userInput \u003d UID_DESC_AMY + PHONE_DESC_AMY + GENDER_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"xhphoong"},"content":"                + EMAIL_DESC_AMY + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-09"},{"lineNumber":196,"author":{"gitId":"xhphoong"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_BOB + ADDRESS_DESC_BOB + GENDER_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":197,"author":{"gitId":"xhphoong"},"content":"                + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"xhphoong"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withGender(VALID_GENDER_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":200,"author":{"gitId":"xhphoong"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":201,"author":{"gitId":"xhphoong"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"xhphoong"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Uid(VALID_UID_AMY), descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"xhphoong"},"content":"        String userInput \u003d UID_DESC_AMY + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"xhphoong"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Uid(VALID_UID_AMY), descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"xhphoong"},"content":"        userInput \u003d UID_DESC_AMY + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"xhphoong"},"content":"        expectedCommand \u003d new EditCommand(new Uid(VALID_UID_AMY), descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":227,"author":{"gitId":"xhphoong"},"content":"        String userInput \u003d UID_DESC_AMY + TAG_EMPTY;","lastModifiedDate":"2022-10-10"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"xhphoong"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Uid(VALID_UID_AMY), descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"xhphoong":75,"-":159}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"    private static final String INVALID_GENDER \u003d \"W\";","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"    private static final String VALID_GENDER \u003d \"F\";","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"    public void parseGender_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGender((String) null));","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"xhphoong"},"content":"    public void parseGender_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGender(INVALID_GENDER));","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"    public void parseGender_validValueWithoutWhitespace_returnsGender() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"        Gender expectedGender \u003d new Gender(VALID_GENDER);","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"        assertEquals(expectedGender, ParserUtil.parseGender(VALID_GENDER));","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"    public void parseGender_validValueWithWhitespace_returnsTrimmedGender() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"        String genderWithWhitespace \u003d WHITESPACE + VALID_GENDER + WHITESPACE;","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"        Gender expectedGender \u003d new Gender(VALID_GENDER);","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"xhphoong"},"content":"        assertEquals(expectedGender, ParserUtil.parseGender(genderWithWhitespace));","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"xhphoong":26,"-":196}},{"path":"src/test/java/seedu/address/model/person/GenderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"public class GenderTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Gender(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"    public void constructor_invalidGender_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"        String invalidGender \u003d \"\";","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Gender(invalidGender));","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"    public void isValidGender() {","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"        // null gender","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"        assertThrows(NullPointerException.class, () -\u003e Gender.isValidGender(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"        // invalid gender formats","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"        assertFalse(Gender.isValidGender(\"\")); // empty string","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"        assertFalse(Gender.isValidGender(\" \")); // spaces only","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"        assertFalse(Gender.isValidGender(\"m\")); // lowercase word","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"        assertFalse(Gender.isValidGender(\"Female\")); // whole word","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"        assertFalse(Gender.isValidGender(\"9\")); // digits only","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"        assertFalse(Gender.isValidGender(\"FM\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"        // valid gender formats","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"        assertTrue(Gender.isValidGender(\"F\")); // Female","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"        assertTrue(Gender.isValidGender(\"M\")); // Male","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"xhphoong":40}},{"path":"src/test/java/seedu/address/model/person/PatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UID_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"public class PatientTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"        Person person \u003d new PatientBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"    public void isSamePerson() {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"        // id different, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE)","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"                .withUid(VALID_UID_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"        // id same, name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"        Person editedBob \u003d new PatientBuilder(BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"                .withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"        // id same, name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"        editedBob \u003d new PatientBuilder(BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"                .withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"    public void equals() {","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"        Person editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"xhphoong":92}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UID_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"                .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"        editedAlice \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"                .withUid(VALID_UID_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"        // id same, name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"        Person editedBob \u003d new PersonBuilder(BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"                .withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"        // id same, name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"        editedBob \u003d new PersonBuilder(BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"                .withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"xhphoong":1,"johnbenedictyan":15,"-":82}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"    private static final String INVALID_CATEGORY \u003d \"n\";","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String INVALID_ID \u003d \" one\";","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"    private static final String INVALID_GENDER \u003d \"f\";","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"    private static final String INVALID_DATETIME \u003d \"2022.1.11 4.00PM\";","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"    private static final String VALID_CATEGORY \u003d BENSON.getCategory();","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"    private static final Long VALID_UID \u003d BENSON.getUid().getUid();","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"    private static final String VALID_GENDER \u003d BENSON.getGender().toString();","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"    private static final List\u003cJsonAdaptedDateTime\u003e VALID_DATETIME \u003d ((Patient) BENSON).getDatesTimes()","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"            .stream().map(JsonAdaptedDateTime::new).collect(Collectors.toList());","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"                new JsonAdaptedPerson(VALID_UID, INVALID_NAME, VALID_CATEGORY, VALID_GENDER, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"                        VALID_ADDRESS, VALID_DATETIME, VALID_TAGS);","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_UID, null, VALID_CATEGORY, VALID_GENDER, VALID_PHONE,","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_DATETIME, VALID_TAGS);","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"    public void toModelType_invalidGender_throwsIllegalValueException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"                new JsonAdaptedPerson(VALID_UID, VALID_NAME, VALID_CATEGORY, INVALID_GENDER, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"                        VALID_ADDRESS, VALID_DATETIME, VALID_TAGS);","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"        String expectedMessage \u003d Gender.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"    public void toModelType_nullGender_throwsIllegalValueException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_UID, VALID_NAME, VALID_CATEGORY, null, VALID_PHONE,","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_DATETIME, VALID_TAGS);","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName());","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"xhphoong"},"content":"                new JsonAdaptedPerson(VALID_UID, VALID_NAME, VALID_CATEGORY, VALID_GENDER, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"                        VALID_ADDRESS, VALID_DATETIME, VALID_TAGS);","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_UID, VALID_NAME, VALID_CATEGORY, VALID_GENDER, null,","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"xhphoong"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_DATETIME, VALID_TAGS);","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"xhphoong"},"content":"                new JsonAdaptedPerson(VALID_UID, VALID_NAME, VALID_CATEGORY, VALID_GENDER, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"xhphoong"},"content":"                        VALID_ADDRESS, VALID_DATETIME, VALID_TAGS);","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"xhphoong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_UID, VALID_NAME, VALID_CATEGORY,","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"xhphoong"},"content":"                VALID_GENDER, VALID_PHONE, null, VALID_ADDRESS, VALID_DATETIME, VALID_TAGS);","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"xhphoong"},"content":"                new JsonAdaptedPerson(VALID_UID, VALID_NAME, VALID_CATEGORY, VALID_GENDER, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"xhphoong"},"content":"                        INVALID_ADDRESS, VALID_DATETIME, VALID_TAGS);","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"xhphoong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_UID, VALID_NAME, VALID_CATEGORY, VALID_GENDER,","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"xhphoong"},"content":"                VALID_PHONE, VALID_EMAIL, null, VALID_DATETIME, VALID_TAGS);","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"xhphoong"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"xhphoong"},"content":"    public void toModelType_invalidDatesTimes_throwsIllegalValueException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"xhphoong"},"content":"        List\u003cJsonAdaptedDateTime\u003e invalidDatesTimes \u003d new ArrayList\u003c\u003e(VALID_DATETIME);","lastModifiedDate":"2022-10-09"},{"lineNumber":152,"author":{"gitId":"xhphoong"},"content":"        invalidDatesTimes.add(new JsonAdaptedDateTime(INVALID_DATETIME));","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"xhphoong"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":154,"author":{"gitId":"xhphoong"},"content":"                new JsonAdaptedPerson(VALID_UID, VALID_NAME, VALID_CATEGORY, VALID_GENDER, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"xhphoong"},"content":"                        VALID_ADDRESS, invalidDatesTimes, VALID_TAGS);","lastModifiedDate":"2022-10-09"},{"lineNumber":156,"author":{"gitId":"xhphoong"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2022-10-09"},{"lineNumber":157,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":158,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"xhphoong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_UID, VALID_NAME, VALID_CATEGORY,","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"xhphoong"},"content":"                VALID_GENDER, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_DATETIME, invalidTags);","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"xhphoong":67,"johnbenedictyan":1,"-":100}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"        assertThrows(IllegalValueException.class,","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"                String.format(JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON, \"patient(s)\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"xhphoong":2,"-":46}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"        descriptor.setUid(person.getUid());","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"        descriptor.setCategory(person.getCategory());","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"        descriptor.setGender(person.getGender());","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"        if (person.getCategory().equals(\"P\")) {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"            descriptor.setDatesTimes(((Patient) person).getDatesTimes());","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"     * Sets the {@code Category} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"    public EditPersonDescriptorBuilder withCategory(String category) {","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"        descriptor.setCategory(category);","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"     * Sets the {@code Gender} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"    public EditPersonDescriptorBuilder withGender(String gender) {","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"        descriptor.setGender(new Gender(gender));","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":110,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"xhphoong"},"content":"     * Parses the {@code dateTimes} into a {@code List\u003cDateTime\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"xhphoong"},"content":"     * that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"xhphoong"},"content":"    public EditPersonDescriptorBuilder withDatesTimes(String... datesTimes) {","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"xhphoong"},"content":"        List\u003cDateTime\u003e dateTimeList \u003d Stream.of(datesTimes).map(DateTime::new).collect(Collectors.toList());","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"xhphoong"},"content":"        descriptor.setDatesTimes(dateTimeList);","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"xhphoong":36,"-":87}},{"path":"src/test/java/seedu/address/testutil/PatientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xhphoong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"xhphoong"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"xhphoong"},"content":" * A utility class to help with building Patient objects.","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"xhphoong"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"xhphoong"},"content":"public class PatientBuilder {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"    public static final String DEFAULT_UID \u003d \"100\";","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"    public static final String DEFAULT_CATEGORY \u003d \"P\";","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"xhphoong"},"content":"    public static final String DEFAULT_GENDER \u003d \"F\";","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"xhphoong"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"xhphoong"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"    private Uid uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"    private String category;","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"    private Name name;","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"    private Gender gender;","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"    private Phone phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"    private Email email;","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"    private Address address;","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"    private List\u003cDateTime\u003e dateTimes;","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"xhphoong"},"content":"     * Creates a {@code PatientBuilder} with the default details.","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"    public PatientBuilder() {","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"        uid \u003d new Uid(DEFAULT_UID);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"        category \u003d DEFAULT_CATEGORY;","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"        dateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"     * Initializes the PatientBuilder with the data of {@code patientToCopy}.","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"    public PatientBuilder(Person patientToCopy) {","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"        category \u003d \"P\";","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"        uid \u003d patientToCopy.getUid();","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"        name \u003d patientToCopy.getName();","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"        gender \u003d patientToCopy.getGender();","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"        phone \u003d patientToCopy.getPhone();","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"        email \u003d patientToCopy.getEmail();","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"        address \u003d patientToCopy.getAddress();","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"        dateTimes \u003d new ArrayList\u003c\u003e(((Patient) patientToCopy).getDatesTimes());","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"        tags \u003d new HashSet\u003c\u003e(patientToCopy.getTags());","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"     * Sets the {@code Uid} of the {@code Patient} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"    public PatientBuilder withUid(String uid) {","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"        this.uid \u003d new Uid(uid);","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"     * Sets the {@code Name} of the {@code Patient} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"    public PatientBuilder withName(String name) {","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"     * Sets the {@code Gender} of the {@code Patient} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"    public PatientBuilder withGender(String gender) {","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Patient} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"    public PatientBuilder withTags(String ... tags) {","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"     * Sets the {@code Address} of the {@code Patient} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"xhphoong"},"content":"    public PatientBuilder withAddress(String address) {","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"xhphoong"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"xhphoong"},"content":"     * Sets the {@code Phone} of the {@code Patient} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"xhphoong"},"content":"    public PatientBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"xhphoong"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"xhphoong"},"content":"     * Sets the {@code Email} of the {@code Patient} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"xhphoong"},"content":"    public PatientBuilder withEmail(String email) {","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"xhphoong"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"xhphoong"},"content":"     * Parses the {@code datesTimes} into a {@code Set\u003cDateTime\u003e} and","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"xhphoong"},"content":"     * set it to the {@code Patient} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"xhphoong"},"content":"    public PatientBuilder withDatesTimes(String ... datesTimes) {","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"xhphoong"},"content":"        this.dateTimes \u003d SampleDataUtil.getDatesTimesList(datesTimes);","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"xhphoong"},"content":"     * Build a patient.","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"xhphoong"},"content":"    public Person build() {","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"xhphoong"},"content":"        Person testPatient \u003d new Patient(uid, name, gender, phone, email, address, tags, dateTimes);","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"xhphoong"},"content":"        return testPatient;","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"xhphoong"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"xhphoong":146}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"xhphoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"import seedu.address.model.person.Uid;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xhphoong"},"content":"    public static final String DEFAULT_CATEGORY \u003d \"P\";","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"xhphoong"},"content":"    public static final String DEFAULT_UID \u003d \"100\";","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":"    public static final String DEFAULT_GENDER \u003d \"F\";","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"    public static final String DEFAULT_DATE_AND_TIME \u003d \"2022-06-14T13:00\";","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"    private Uid uid;","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"    private String category;","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"xhphoong"},"content":"    private Gender gender;","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"    private List\u003cDateTime\u003e dateTimeList;","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"        category \u003d DEFAULT_CATEGORY;","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"        uid \u003d new Uid(DEFAULT_UID);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"        dateTimeList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"        dateTimeList.add(new DateTime(DEFAULT_DATE_AND_TIME));","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"        category \u003d personToCopy.getCategory();","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"        uid \u003d personToCopy.getUid();","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"        gender \u003d personToCopy.getGender();","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"        if (personToCopy.getCategory().equals(\"P\")) {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"            dateTimeList \u003d new ArrayList\u003c\u003e(((Patient) personToCopy).getDatesTimes());","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"     * Sets the {@code Id} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"    public PersonBuilder withUid(String id) {","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"        this.uid \u003d new Uid(id);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"        return this;","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"xhphoong"},"content":"     * Sets the {@code Gender} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"    public PersonBuilder withGender(String gender) {","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":134,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"xhphoong"},"content":"     * Sets the {@code Category} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"xhphoong"},"content":"    public PersonBuilder withCategory(String category) {","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"xhphoong"},"content":"        this.category \u003d category;","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"xhphoong"},"content":"     * Parses the {@code datesTimes} into a {@code Set\u003cDateTime\u003e} and","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"xhphoong"},"content":"     * set it to the {@code Person} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"xhphoong"},"content":"     * Applies only to Patient.","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"xhphoong"},"content":"    public PersonBuilder withDatesTimes(String ... datesTimes) {","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"xhphoong"},"content":"        this.dateTimeList \u003d SampleDataUtil.getDatesTimesList(datesTimes);","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"xhphoong"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"xhphoong"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"xhphoong"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"xhphoong"},"content":"     * Build a person for test.","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"xhphoong"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":156,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"xhphoong"},"content":"        if (this.category.equals(\"P\")) {","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"xhphoong"},"content":"            return new Patient(uid, name, gender, phone, email, address, tags, dateTimeList);","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"xhphoong"},"content":"        return new Person(uid, name, gender, phone, email, address, tags);","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"xhphoong":61,"johnbenedictyan":5,"-":97}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_AND_TIME;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UID;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.DateTime;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"xhphoong"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"xhphoong"},"content":"        sb.append(PREFIX_CATEGORY + person.getCategory() + \" \");","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"        sb.append(PREFIX_UID + person.getUid().uid.toString() + \" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"        sb.append(PREFIX_GENDER + person.getGender().gender + \" \");","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"xhphoong"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \"));","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"        if (person instanceof Patient) {","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"            Patient patient \u003d (Patient) person;","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"            patient.getDatesTimes().stream().forEach(","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"                    s -\u003e sb.append(PREFIX_DATE_AND_TIME + s.getString() + \" \"));","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"        descriptor.getCategory().ifPresent(category -\u003e sb.append(PREFIX_CATEGORY).append(category).append(\" \"));","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"        descriptor.getUid().ifPresent(uid -\u003e sb.append(PREFIX_UID).append(uid).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"        descriptor.getGender().ifPresent(gender -\u003e sb.append(PREFIX_GENDER).append(gender.gender).append(\" \"));","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"        if (descriptor.getDatesTimes().isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"            List\u003cDateTime\u003e dateTimeList \u003d descriptor.getDatesTimes().get();","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"            if (dateTimeList.isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"                sb.append(PREFIX_DATE_AND_TIME);","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"            } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"                dateTimeList.forEach(s -\u003e sb.append(PREFIX_DATE_AND_TIME).append(s.getString()).append(\" \"));","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"xhphoong":29,"johnbenedictyan":1,"-":59}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"xhphoong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PATIENT_CATEGORY;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UID_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UID_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"xhphoong"},"content":" * A utility class containing a list of {@code Patients / Nurses} objects to be used in tests.","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"xhphoong"},"content":"    public static final Person ALICE \u003d new PersonBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"xhphoong"},"content":"            .withUid(\"1\").withCategory(\"P\")","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"xhphoong"},"content":"            .withName(\"Alice Pauline\").withGender(\"M\")","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"xhphoong"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"xhphoong"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"xhphoong"},"content":"            .withDatesTimes(\"2022-11-11T12:00\")","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":41,"author":{"gitId":"xhphoong"},"content":"    public static final Person BENSON \u003d new PersonBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"xhphoong"},"content":"            .withUid(\"2\").withCategory(\"P\")","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"xhphoong"},"content":"            .withName(\"Benson Meier\").withGender(\"M\")","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"xhphoong"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"xhphoong"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"xhphoong"},"content":"            .withDatesTimes(\"2022-10-23T10:00\")","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":49,"author":{"gitId":"xhphoong"},"content":"    public static final Person CARL \u003d new PersonBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"xhphoong"},"content":"            .withUid(\"3\").withCategory(\"P\")","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"xhphoong"},"content":"            .withName(\"Carl Kurz\").withGender(\"M\")","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"xhphoong"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"xhphoong"},"content":"            .withDatesTimes(\"2022-11-10T15:00\", \"2022-12-10T14:00\")","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"xhphoong"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"xhphoong"},"content":"            .withAddress(\"wall street\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"xhphoong"},"content":"    public static final Person DANIEL \u003d new PersonBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"xhphoong"},"content":"            .withUid(\"4\").withCategory(\"P\")","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"xhphoong"},"content":"            .withName(\"Daniel Meier\")","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"xhphoong"},"content":"            .withGender(\"M\")","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"xhphoong"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"xhphoong"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"xhphoong"},"content":"            .withDatesTimes(\"2022-11-10T15:00\", \"2022-09-10T14:00\")","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"xhphoong"},"content":"            .withAddress(\"10th street\")","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"xhphoong"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"xhphoong"},"content":"    public static final Person ELLE \u003d new PersonBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"xhphoong"},"content":"            .withUid(\"5\").withCategory(\"P\")","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"xhphoong"},"content":"            .withName(\"Elle Meyer\").withGender(\"F\")","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"xhphoong"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"xhphoong"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"xhphoong"},"content":"            .withDatesTimes(\"2022-11-15T12:00\")","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"xhphoong"},"content":"            .withAddress(\"michegan ave\").build();","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"xhphoong"},"content":"    public static final Person FIONA \u003d new PersonBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"xhphoong"},"content":"            .withUid(\"6\").withCategory(\"P\")","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"xhphoong"},"content":"            .withName(\"Fiona Kunz\")","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"xhphoong"},"content":"            .withGender(\"F\")","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"xhphoong"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"xhphoong"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"xhphoong"},"content":"            .withDatesTimes(\"2022-10-15T12:00\")","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"xhphoong"},"content":"            .withAddress(\"little tokyo\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"xhphoong"},"content":"    public static final Person GEORGE \u003d new PersonBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"xhphoong"},"content":"            .withUid(\"7\")","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"xhphoong"},"content":"            .withCategory(\"P\")","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"xhphoong"},"content":"            .withName(\"George Best\")","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"xhphoong"},"content":"            .withGender(\"M\")","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"xhphoong"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"xhphoong"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"xhphoong"},"content":"            .withAddress(\"4th street\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":90,"author":{"gitId":"xhphoong"},"content":"    public static final Person HOON \u003d new PersonBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"xhphoong"},"content":"            .withUid(\"8\").withCategory(\"P\")","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"xhphoong"},"content":"            .withName(\"Hoon Meier\")","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"xhphoong"},"content":"            .withGender(\"M\")","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"xhphoong"},"content":"            .withPhone(\"8482424\")","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"xhphoong"},"content":"            .withDatesTimes(\"2023-01-11T18:00\")","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"xhphoong"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"xhphoong"},"content":"            .withAddress(\"little india\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"xhphoong"},"content":"    public static final Person IDA \u003d new PersonBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"xhphoong"},"content":"            .withUid(\"9\")","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"xhphoong"},"content":"            .withCategory(\"P\")","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"xhphoong"},"content":"            .withName(\"Ida Mueller\")","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"xhphoong"},"content":"            .withGender(\"F\")","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"xhphoong"},"content":"            .withPhone(\"8482131\")","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"xhphoong"},"content":"            .withDatesTimes(\"2022-11-11T17:00\")","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"xhphoong"},"content":"            .withEmail(\"hans@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"xhphoong"},"content":"            .withAddress(\"chicago ave\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":109,"author":{"gitId":"xhphoong"},"content":"    public static final Person AMY \u003d new PersonBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"xhphoong"},"content":"            .withUid(VALID_UID_AMY).withCategory(VALID_PATIENT_CATEGORY).withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"xhphoong"},"content":"            .withGender(VALID_GENDER_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"xhphoong"},"content":"            .withAddress(VALID_ADDRESS_AMY).withDatesTimes((VALID_DATETIME_AMY)).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"xhphoong"},"content":"    public static final Person BOB \u003d new PersonBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"xhphoong"},"content":"            .withUid(VALID_UID_BOB).withCategory(VALID_PATIENT_CATEGORY).withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"xhphoong"},"content":"            .withGender(VALID_GENDER_BOB).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"xhphoong"},"content":"            .withAddress(VALID_ADDRESS_BOB).withDatesTimes(VALID_DATETIME_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"xhphoong"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":122,"author":{"gitId":"johnbenedictyan"},"content":"    private TypicalPersons() {","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"johnbenedictyan"},"content":"    } // prevents instantiation","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"xhphoong":83,"johnbenedictyan":4,"-":52}}]
